

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Sep 20 11:47:59 2021

Microchip MPLAB XC8 C Compiler v2.31 (Pro license) build 20201012212115 Og9f 
     1                           	processor	16F18345
     2                           	pagewidth 120
     3                           	opt	plic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text13,local,class=CODE,merge=1,delta=2
    19                           	psect	text14,local,class=CODE,merge=1,delta=2
    20                           	psect	text17,local,class=CODE,merge=1,delta=2
    21                           	psect	swtext1,local,class=CONST,delta=2
    22                           	psect	swtext2,local,class=CONST,delta=2
    23                           	psect	swtext3,local,class=CONST,delta=2
    24                           	psect	text23,local,class=CODE,merge=1,delta=2
    25                           	psect	text24,local,class=CODE,merge=1,delta=2
    26                           	psect	text27,local,class=CODE,merge=1,delta=2
    27                           	psect	text32,local,class=CODE,merge=1,delta=2
    28                           	psect	text37,local,class=CODE,merge=1,delta=2
    29                           	psect	swtext4,local,class=CONST,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text45,local,class=CODE,merge=1,delta=2
    32                           	psect	text48,local,class=CODE,merge=1,delta=2
    33                           	psect	swtext5,local,class=CONST,delta=2
    34                           	psect	text50,local,class=CODE,merge=1,delta=2
    35                           	psect	swtext6,local,class=CONST,delta=2
    36                           	psect	text51,local,class=CODE,merge=1,delta=2
    37                           	psect	text52,local,class=CODE,merge=1,delta=2
    38                           	psect	text53,local,class=CODE,merge=1,delta=2
    39                           	psect	text54,local,class=CODE,merge=1,delta=2
    40                           	psect	text58,local,class=CODE,merge=1,delta=2
    41                           	psect	text59,local,class=CODE,merge=1,delta=2
    42                           	psect	text60,local,class=CODE,merge=1,delta=2
    43                           	psect	text63,local,class=CODE,merge=1,delta=2
    44                           	psect	swtext7,local,class=CONST,delta=2
    45                           	psect	text69,local,class=CODE,merge=1,delta=2
    46                           	psect	swtext8,local,class=CONST,delta=2
    47                           	psect	swtext9,local,class=CONST,delta=2
    48                           	psect	swtext10,local,class=CONST,delta=2
    49                           	psect	text78,local,class=CODE,merge=1,delta=2
    50                           	psect	text85,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	dabs	1,0x7E,2
    53  0000                     
    54                           ; Version 2.35
    55                           ; Generated 01/06/2021 GMT
    56                           ; 
    57                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    58                           ; All rights reserved.
    59                           ; 
    60                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    61                           ; 
    62                           ; Redistribution and use in source and binary forms, with or without modification, are
    63                           ; permitted provided that the following conditions are met:
    64                           ; 
    65                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    66                           ;        conditions and the following disclaimer.
    67                           ; 
    68                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    69                           ;        of conditions and the following disclaimer in the documentation and/or other
    70                           ;        materials provided with the distribution. Publication is not required when
    71                           ;        this file is used in an embedded application.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F18345 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001C                     	;# 
   120  001D                     	;# 
   121  001E                     	;# 
   122  001F                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0094                     	;# 
   131  0097                     	;# 
   132  009B                     	;# 
   133  009B                     	;# 
   134  009C                     	;# 
   135  009D                     	;# 
   136  009E                     	;# 
   137  009F                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  0111                     	;# 
   142  0112                     	;# 
   143  0113                     	;# 
   144  0114                     	;# 
   145  0115                     	;# 
   146  0116                     	;# 
   147  0117                     	;# 
   148  0118                     	;# 
   149  0119                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  018E                     	;# 
   153  0197                     	;# 
   154  0199                     	;# 
   155  0199                     	;# 
   156  0199                     	;# 
   157  019A                     	;# 
   158  019A                     	;# 
   159  019A                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019B                     	;# 
   164  019B                     	;# 
   165  019C                     	;# 
   166  019C                     	;# 
   167  019C                     	;# 
   168  019D                     	;# 
   169  019D                     	;# 
   170  019D                     	;# 
   171  019E                     	;# 
   172  019E                     	;# 
   173  019E                     	;# 
   174  019F                     	;# 
   175  019F                     	;# 
   176  019F                     	;# 
   177  019F                     	;# 
   178  019F                     	;# 
   179  020C                     	;# 
   180  020D                     	;# 
   181  020E                     	;# 
   182  0211                     	;# 
   183  0211                     	;# 
   184  0212                     	;# 
   185  0212                     	;# 
   186  0213                     	;# 
   187  0213                     	;# 
   188  0214                     	;# 
   189  0214                     	;# 
   190  0215                     	;# 
   191  0215                     	;# 
   192  0215                     	;# 
   193  0215                     	;# 
   194  0216                     	;# 
   195  0216                     	;# 
   196  0217                     	;# 
   197  0217                     	;# 
   198  0219                     	;# 
   199  021A                     	;# 
   200  021B                     	;# 
   201  021C                     	;# 
   202  021D                     	;# 
   203  021D                     	;# 
   204  021E                     	;# 
   205  021F                     	;# 
   206  028C                     	;# 
   207  028D                     	;# 
   208  028E                     	;# 
   209  0291                     	;# 
   210  0291                     	;# 
   211  0292                     	;# 
   212  0293                     	;# 
   213  0294                     	;# 
   214  0295                     	;# 
   215  0295                     	;# 
   216  0296                     	;# 
   217  0297                     	;# 
   218  0298                     	;# 
   219  029F                     	;# 
   220  030C                     	;# 
   221  030D                     	;# 
   222  030E                     	;# 
   223  0311                     	;# 
   224  0311                     	;# 
   225  0312                     	;# 
   226  0313                     	;# 
   227  0314                     	;# 
   228  0315                     	;# 
   229  0315                     	;# 
   230  0316                     	;# 
   231  0317                     	;# 
   232  0318                     	;# 
   233  038C                     	;# 
   234  038D                     	;# 
   235  038E                     	;# 
   236  0391                     	;# 
   237  0392                     	;# 
   238  0393                     	;# 
   239  0394                     	;# 
   240  0395                     	;# 
   241  0396                     	;# 
   242  0397                     	;# 
   243  0398                     	;# 
   244  0399                     	;# 
   245  039A                     	;# 
   246  039C                     	;# 
   247  039D                     	;# 
   248  039E                     	;# 
   249  039F                     	;# 
   250  0411                     	;# 
   251  0411                     	;# 
   252  0412                     	;# 
   253  0413                     	;# 
   254  0414                     	;# 
   255  0415                     	;# 
   256  0416                     	;# 
   257  0417                     	;# 
   258  0418                     	;# 
   259  0418                     	;# 
   260  0419                     	;# 
   261  041A                     	;# 
   262  041B                     	;# 
   263  041C                     	;# 
   264  041D                     	;# 
   265  041E                     	;# 
   266  041F                     	;# 
   267  0498                     	;# 
   268  0498                     	;# 
   269  0499                     	;# 
   270  049A                     	;# 
   271  049B                     	;# 
   272  049B                     	;# 
   273  049C                     	;# 
   274  049D                     	;# 
   275  049E                     	;# 
   276  049F                     	;# 
   277  0617                     	;# 
   278  0618                     	;# 
   279  0619                     	;# 
   280  0619                     	;# 
   281  061A                     	;# 
   282  061B                     	;# 
   283  061C                     	;# 
   284  061C                     	;# 
   285  061F                     	;# 
   286  0691                     	;# 
   287  0692                     	;# 
   288  0693                     	;# 
   289  0694                     	;# 
   290  0695                     	;# 
   291  0696                     	;# 
   292  0697                     	;# 
   293  0698                     	;# 
   294  0699                     	;# 
   295  0711                     	;# 
   296  0712                     	;# 
   297  0713                     	;# 
   298  0714                     	;# 
   299  0715                     	;# 
   300  0716                     	;# 
   301  0717                     	;# 
   302  0718                     	;# 
   303  0719                     	;# 
   304  0891                     	;# 
   305  0891                     	;# 
   306  0891                     	;# 
   307  0891                     	;# 
   308  0891                     	;# 
   309  0891                     	;# 
   310  0892                     	;# 
   311  0892                     	;# 
   312  0892                     	;# 
   313  0893                     	;# 
   314  0893                     	;# 
   315  0893                     	;# 
   316  0893                     	;# 
   317  0893                     	;# 
   318  0893                     	;# 
   319  0894                     	;# 
   320  0894                     	;# 
   321  0894                     	;# 
   322  0895                     	;# 
   323  0895                     	;# 
   324  0895                     	;# 
   325  0896                     	;# 
   326  0896                     	;# 
   327  0896                     	;# 
   328  089B                     	;# 
   329  0911                     	;# 
   330  0912                     	;# 
   331  0913                     	;# 
   332  0914                     	;# 
   333  0915                     	;# 
   334  0916                     	;# 
   335  0918                     	;# 
   336  0919                     	;# 
   337  091A                     	;# 
   338  091B                     	;# 
   339  091C                     	;# 
   340  091D                     	;# 
   341  091E                     	;# 
   342  091F                     	;# 
   343  0E0F                     	;# 
   344  0E10                     	;# 
   345  0E11                     	;# 
   346  0E12                     	;# 
   347  0E13                     	;# 
   348  0E14                     	;# 
   349  0E15                     	;# 
   350  0E16                     	;# 
   351  0E17                     	;# 
   352  0E18                     	;# 
   353  0E19                     	;# 
   354  0E1A                     	;# 
   355  0E1B                     	;# 
   356  0E1C                     	;# 
   357  0E1D                     	;# 
   358  0E1E                     	;# 
   359  0E1F                     	;# 
   360  0E20                     	;# 
   361  0E21                     	;# 
   362  0E22                     	;# 
   363  0E24                     	;# 
   364  0E25                     	;# 
   365  0E28                     	;# 
   366  0E29                     	;# 
   367  0E2A                     	;# 
   368  0E2B                     	;# 
   369  0E2C                     	;# 
   370  0E2D                     	;# 
   371  0E2E                     	;# 
   372  0E2F                     	;# 
   373  0E90                     	;# 
   374  0E91                     	;# 
   375  0E92                     	;# 
   376  0E94                     	;# 
   377  0E95                     	;# 
   378  0E9C                     	;# 
   379  0E9D                     	;# 
   380  0E9E                     	;# 
   381  0E9F                     	;# 
   382  0EA0                     	;# 
   383  0EA1                     	;# 
   384  0EA2                     	;# 
   385  0EA3                     	;# 
   386  0EA4                     	;# 
   387  0EA5                     	;# 
   388  0EA6                     	;# 
   389  0EA7                     	;# 
   390  0F0F                     	;# 
   391  0F10                     	;# 
   392  0F11                     	;# 
   393  0F12                     	;# 
   394  0F13                     	;# 
   395  0F14                     	;# 
   396  0F15                     	;# 
   397  0F16                     	;# 
   398  0F17                     	;# 
   399  0F18                     	;# 
   400  0F19                     	;# 
   401  0F1A                     	;# 
   402  0F1B                     	;# 
   403  0F1C                     	;# 
   404  0F1D                     	;# 
   405  0F1E                     	;# 
   406  0F1F                     	;# 
   407  0F20                     	;# 
   408  0F21                     	;# 
   409  0F22                     	;# 
   410  0F23                     	;# 
   411  0F24                     	;# 
   412  0F25                     	;# 
   413  0F26                     	;# 
   414  0F27                     	;# 
   415  0F28                     	;# 
   416  0F29                     	;# 
   417  0F2A                     	;# 
   418  0F2B                     	;# 
   419  0F2C                     	;# 
   420  0F2D                     	;# 
   421  0F2E                     	;# 
   422  0F2F                     	;# 
   423  0F30                     	;# 
   424  0F31                     	;# 
   425  0F32                     	;# 
   426  0F33                     	;# 
   427  0F34                     	;# 
   428  0F35                     	;# 
   429  0F36                     	;# 
   430  0F37                     	;# 
   431  0FE4                     	;# 
   432  0FE5                     	;# 
   433  0FE6                     	;# 
   434  0FE7                     	;# 
   435  0FE8                     	;# 
   436  0FE9                     	;# 
   437  0FEA                     	;# 
   438  0FEB                     	;# 
   439  0FED                     	;# 
   440  0FEE                     	;# 
   441  0FEF                     	;# 
   442  0000                     	;# 
   443  0001                     	;# 
   444  0002                     	;# 
   445  0003                     	;# 
   446  0004                     	;# 
   447  0005                     	;# 
   448  0006                     	;# 
   449  0007                     	;# 
   450  0008                     	;# 
   451  0009                     	;# 
   452  000A                     	;# 
   453  000B                     	;# 
   454  000C                     	;# 
   455  000D                     	;# 
   456  000E                     	;# 
   457  0010                     	;# 
   458  0011                     	;# 
   459  0012                     	;# 
   460  0013                     	;# 
   461  0014                     	;# 
   462  0015                     	;# 
   463  0015                     	;# 
   464  0016                     	;# 
   465  0016                     	;# 
   466  0017                     	;# 
   467  0018                     	;# 
   468  0019                     	;# 
   469  0019                     	;# 
   470  001A                     	;# 
   471  001B                     	;# 
   472  001C                     	;# 
   473  001D                     	;# 
   474  001E                     	;# 
   475  001F                     	;# 
   476  008C                     	;# 
   477  008D                     	;# 
   478  008E                     	;# 
   479  0090                     	;# 
   480  0091                     	;# 
   481  0092                     	;# 
   482  0093                     	;# 
   483  0094                     	;# 
   484  0097                     	;# 
   485  009B                     	;# 
   486  009B                     	;# 
   487  009C                     	;# 
   488  009D                     	;# 
   489  009E                     	;# 
   490  009F                     	;# 
   491  010C                     	;# 
   492  010D                     	;# 
   493  010E                     	;# 
   494  0111                     	;# 
   495  0112                     	;# 
   496  0113                     	;# 
   497  0114                     	;# 
   498  0115                     	;# 
   499  0116                     	;# 
   500  0117                     	;# 
   501  0118                     	;# 
   502  0119                     	;# 
   503  018C                     	;# 
   504  018D                     	;# 
   505  018E                     	;# 
   506  0197                     	;# 
   507  0199                     	;# 
   508  0199                     	;# 
   509  0199                     	;# 
   510  019A                     	;# 
   511  019A                     	;# 
   512  019A                     	;# 
   513  019B                     	;# 
   514  019B                     	;# 
   515  019B                     	;# 
   516  019B                     	;# 
   517  019B                     	;# 
   518  019C                     	;# 
   519  019C                     	;# 
   520  019C                     	;# 
   521  019D                     	;# 
   522  019D                     	;# 
   523  019D                     	;# 
   524  019E                     	;# 
   525  019E                     	;# 
   526  019E                     	;# 
   527  019F                     	;# 
   528  019F                     	;# 
   529  019F                     	;# 
   530  019F                     	;# 
   531  019F                     	;# 
   532  020C                     	;# 
   533  020D                     	;# 
   534  020E                     	;# 
   535  0211                     	;# 
   536  0211                     	;# 
   537  0212                     	;# 
   538  0212                     	;# 
   539  0213                     	;# 
   540  0213                     	;# 
   541  0214                     	;# 
   542  0214                     	;# 
   543  0215                     	;# 
   544  0215                     	;# 
   545  0215                     	;# 
   546  0215                     	;# 
   547  0216                     	;# 
   548  0216                     	;# 
   549  0217                     	;# 
   550  0217                     	;# 
   551  0219                     	;# 
   552  021A                     	;# 
   553  021B                     	;# 
   554  021C                     	;# 
   555  021D                     	;# 
   556  021D                     	;# 
   557  021E                     	;# 
   558  021F                     	;# 
   559  028C                     	;# 
   560  028D                     	;# 
   561  028E                     	;# 
   562  0291                     	;# 
   563  0291                     	;# 
   564  0292                     	;# 
   565  0293                     	;# 
   566  0294                     	;# 
   567  0295                     	;# 
   568  0295                     	;# 
   569  0296                     	;# 
   570  0297                     	;# 
   571  0298                     	;# 
   572  029F                     	;# 
   573  030C                     	;# 
   574  030D                     	;# 
   575  030E                     	;# 
   576  0311                     	;# 
   577  0311                     	;# 
   578  0312                     	;# 
   579  0313                     	;# 
   580  0314                     	;# 
   581  0315                     	;# 
   582  0315                     	;# 
   583  0316                     	;# 
   584  0317                     	;# 
   585  0318                     	;# 
   586  038C                     	;# 
   587  038D                     	;# 
   588  038E                     	;# 
   589  0391                     	;# 
   590  0392                     	;# 
   591  0393                     	;# 
   592  0394                     	;# 
   593  0395                     	;# 
   594  0396                     	;# 
   595  0397                     	;# 
   596  0398                     	;# 
   597  0399                     	;# 
   598  039A                     	;# 
   599  039C                     	;# 
   600  039D                     	;# 
   601  039E                     	;# 
   602  039F                     	;# 
   603  0411                     	;# 
   604  0411                     	;# 
   605  0412                     	;# 
   606  0413                     	;# 
   607  0414                     	;# 
   608  0415                     	;# 
   609  0416                     	;# 
   610  0417                     	;# 
   611  0418                     	;# 
   612  0418                     	;# 
   613  0419                     	;# 
   614  041A                     	;# 
   615  041B                     	;# 
   616  041C                     	;# 
   617  041D                     	;# 
   618  041E                     	;# 
   619  041F                     	;# 
   620  0498                     	;# 
   621  0498                     	;# 
   622  0499                     	;# 
   623  049A                     	;# 
   624  049B                     	;# 
   625  049B                     	;# 
   626  049C                     	;# 
   627  049D                     	;# 
   628  049E                     	;# 
   629  049F                     	;# 
   630  0617                     	;# 
   631  0618                     	;# 
   632  0619                     	;# 
   633  0619                     	;# 
   634  061A                     	;# 
   635  061B                     	;# 
   636  061C                     	;# 
   637  061C                     	;# 
   638  061F                     	;# 
   639  0691                     	;# 
   640  0692                     	;# 
   641  0693                     	;# 
   642  0694                     	;# 
   643  0695                     	;# 
   644  0696                     	;# 
   645  0697                     	;# 
   646  0698                     	;# 
   647  0699                     	;# 
   648  0711                     	;# 
   649  0712                     	;# 
   650  0713                     	;# 
   651  0714                     	;# 
   652  0715                     	;# 
   653  0716                     	;# 
   654  0717                     	;# 
   655  0718                     	;# 
   656  0719                     	;# 
   657  0891                     	;# 
   658  0891                     	;# 
   659  0891                     	;# 
   660  0891                     	;# 
   661  0891                     	;# 
   662  0891                     	;# 
   663  0892                     	;# 
   664  0892                     	;# 
   665  0892                     	;# 
   666  0893                     	;# 
   667  0893                     	;# 
   668  0893                     	;# 
   669  0893                     	;# 
   670  0893                     	;# 
   671  0893                     	;# 
   672  0894                     	;# 
   673  0894                     	;# 
   674  0894                     	;# 
   675  0895                     	;# 
   676  0895                     	;# 
   677  0895                     	;# 
   678  0896                     	;# 
   679  0896                     	;# 
   680  0896                     	;# 
   681  089B                     	;# 
   682  0911                     	;# 
   683  0912                     	;# 
   684  0913                     	;# 
   685  0914                     	;# 
   686  0915                     	;# 
   687  0916                     	;# 
   688  0918                     	;# 
   689  0919                     	;# 
   690  091A                     	;# 
   691  091B                     	;# 
   692  091C                     	;# 
   693  091D                     	;# 
   694  091E                     	;# 
   695  091F                     	;# 
   696  0E0F                     	;# 
   697  0E10                     	;# 
   698  0E11                     	;# 
   699  0E12                     	;# 
   700  0E13                     	;# 
   701  0E14                     	;# 
   702  0E15                     	;# 
   703  0E16                     	;# 
   704  0E17                     	;# 
   705  0E18                     	;# 
   706  0E19                     	;# 
   707  0E1A                     	;# 
   708  0E1B                     	;# 
   709  0E1C                     	;# 
   710  0E1D                     	;# 
   711  0E1E                     	;# 
   712  0E1F                     	;# 
   713  0E20                     	;# 
   714  0E21                     	;# 
   715  0E22                     	;# 
   716  0E24                     	;# 
   717  0E25                     	;# 
   718  0E28                     	;# 
   719  0E29                     	;# 
   720  0E2A                     	;# 
   721  0E2B                     	;# 
   722  0E2C                     	;# 
   723  0E2D                     	;# 
   724  0E2E                     	;# 
   725  0E2F                     	;# 
   726  0E90                     	;# 
   727  0E91                     	;# 
   728  0E92                     	;# 
   729  0E94                     	;# 
   730  0E95                     	;# 
   731  0E9C                     	;# 
   732  0E9D                     	;# 
   733  0E9E                     	;# 
   734  0E9F                     	;# 
   735  0EA0                     	;# 
   736  0EA1                     	;# 
   737  0EA2                     	;# 
   738  0EA3                     	;# 
   739  0EA4                     	;# 
   740  0EA5                     	;# 
   741  0EA6                     	;# 
   742  0EA7                     	;# 
   743  0F0F                     	;# 
   744  0F10                     	;# 
   745  0F11                     	;# 
   746  0F12                     	;# 
   747  0F13                     	;# 
   748  0F14                     	;# 
   749  0F15                     	;# 
   750  0F16                     	;# 
   751  0F17                     	;# 
   752  0F18                     	;# 
   753  0F19                     	;# 
   754  0F1A                     	;# 
   755  0F1B                     	;# 
   756  0F1C                     	;# 
   757  0F1D                     	;# 
   758  0F1E                     	;# 
   759  0F1F                     	;# 
   760  0F20                     	;# 
   761  0F21                     	;# 
   762  0F22                     	;# 
   763  0F23                     	;# 
   764  0F24                     	;# 
   765  0F25                     	;# 
   766  0F26                     	;# 
   767  0F27                     	;# 
   768  0F28                     	;# 
   769  0F29                     	;# 
   770  0F2A                     	;# 
   771  0F2B                     	;# 
   772  0F2C                     	;# 
   773  0F2D                     	;# 
   774  0F2E                     	;# 
   775  0F2F                     	;# 
   776  0F30                     	;# 
   777  0F31                     	;# 
   778  0F32                     	;# 
   779  0F33                     	;# 
   780  0F34                     	;# 
   781  0F35                     	;# 
   782  0F36                     	;# 
   783  0F37                     	;# 
   784  0FE4                     	;# 
   785  0FE5                     	;# 
   786  0FE6                     	;# 
   787  0FE7                     	;# 
   788  0FE8                     	;# 
   789  0FE9                     	;# 
   790  0FEA                     	;# 
   791  0FEB                     	;# 
   792  0FED                     	;# 
   793  0FEE                     	;# 
   794  0FEF                     	;# 
   795  0000                     	;# 
   796  0001                     	;# 
   797  0002                     	;# 
   798  0003                     	;# 
   799  0004                     	;# 
   800  0005                     	;# 
   801  0006                     	;# 
   802  0007                     	;# 
   803  0008                     	;# 
   804  0009                     	;# 
   805  000A                     	;# 
   806  000B                     	;# 
   807  000C                     	;# 
   808  000D                     	;# 
   809  000E                     	;# 
   810  0010                     	;# 
   811  0011                     	;# 
   812  0012                     	;# 
   813  0013                     	;# 
   814  0014                     	;# 
   815  0015                     	;# 
   816  0015                     	;# 
   817  0016                     	;# 
   818  0016                     	;# 
   819  0017                     	;# 
   820  0018                     	;# 
   821  0019                     	;# 
   822  0019                     	;# 
   823  001A                     	;# 
   824  001B                     	;# 
   825  001C                     	;# 
   826  001D                     	;# 
   827  001E                     	;# 
   828  001F                     	;# 
   829  008C                     	;# 
   830  008D                     	;# 
   831  008E                     	;# 
   832  0090                     	;# 
   833  0091                     	;# 
   834  0092                     	;# 
   835  0093                     	;# 
   836  0094                     	;# 
   837  0097                     	;# 
   838  009B                     	;# 
   839  009B                     	;# 
   840  009C                     	;# 
   841  009D                     	;# 
   842  009E                     	;# 
   843  009F                     	;# 
   844  010C                     	;# 
   845  010D                     	;# 
   846  010E                     	;# 
   847  0111                     	;# 
   848  0112                     	;# 
   849  0113                     	;# 
   850  0114                     	;# 
   851  0115                     	;# 
   852  0116                     	;# 
   853  0117                     	;# 
   854  0118                     	;# 
   855  0119                     	;# 
   856  018C                     	;# 
   857  018D                     	;# 
   858  018E                     	;# 
   859  0197                     	;# 
   860  0199                     	;# 
   861  0199                     	;# 
   862  0199                     	;# 
   863  019A                     	;# 
   864  019A                     	;# 
   865  019A                     	;# 
   866  019B                     	;# 
   867  019B                     	;# 
   868  019B                     	;# 
   869  019B                     	;# 
   870  019B                     	;# 
   871  019C                     	;# 
   872  019C                     	;# 
   873  019C                     	;# 
   874  019D                     	;# 
   875  019D                     	;# 
   876  019D                     	;# 
   877  019E                     	;# 
   878  019E                     	;# 
   879  019E                     	;# 
   880  019F                     	;# 
   881  019F                     	;# 
   882  019F                     	;# 
   883  019F                     	;# 
   884  019F                     	;# 
   885  020C                     	;# 
   886  020D                     	;# 
   887  020E                     	;# 
   888  0211                     	;# 
   889  0211                     	;# 
   890  0212                     	;# 
   891  0212                     	;# 
   892  0213                     	;# 
   893  0213                     	;# 
   894  0214                     	;# 
   895  0214                     	;# 
   896  0215                     	;# 
   897  0215                     	;# 
   898  0215                     	;# 
   899  0215                     	;# 
   900  0216                     	;# 
   901  0216                     	;# 
   902  0217                     	;# 
   903  0217                     	;# 
   904  0219                     	;# 
   905  021A                     	;# 
   906  021B                     	;# 
   907  021C                     	;# 
   908  021D                     	;# 
   909  021D                     	;# 
   910  021E                     	;# 
   911  021F                     	;# 
   912  028C                     	;# 
   913  028D                     	;# 
   914  028E                     	;# 
   915  0291                     	;# 
   916  0291                     	;# 
   917  0292                     	;# 
   918  0293                     	;# 
   919  0294                     	;# 
   920  0295                     	;# 
   921  0295                     	;# 
   922  0296                     	;# 
   923  0297                     	;# 
   924  0298                     	;# 
   925  029F                     	;# 
   926  030C                     	;# 
   927  030D                     	;# 
   928  030E                     	;# 
   929  0311                     	;# 
   930  0311                     	;# 
   931  0312                     	;# 
   932  0313                     	;# 
   933  0314                     	;# 
   934  0315                     	;# 
   935  0315                     	;# 
   936  0316                     	;# 
   937  0317                     	;# 
   938  0318                     	;# 
   939  038C                     	;# 
   940  038D                     	;# 
   941  038E                     	;# 
   942  0391                     	;# 
   943  0392                     	;# 
   944  0393                     	;# 
   945  0394                     	;# 
   946  0395                     	;# 
   947  0396                     	;# 
   948  0397                     	;# 
   949  0398                     	;# 
   950  0399                     	;# 
   951  039A                     	;# 
   952  039C                     	;# 
   953  039D                     	;# 
   954  039E                     	;# 
   955  039F                     	;# 
   956  0411                     	;# 
   957  0411                     	;# 
   958  0412                     	;# 
   959  0413                     	;# 
   960  0414                     	;# 
   961  0415                     	;# 
   962  0416                     	;# 
   963  0417                     	;# 
   964  0418                     	;# 
   965  0418                     	;# 
   966  0419                     	;# 
   967  041A                     	;# 
   968  041B                     	;# 
   969  041C                     	;# 
   970  041D                     	;# 
   971  041E                     	;# 
   972  041F                     	;# 
   973  0498                     	;# 
   974  0498                     	;# 
   975  0499                     	;# 
   976  049A                     	;# 
   977  049B                     	;# 
   978  049B                     	;# 
   979  049C                     	;# 
   980  049D                     	;# 
   981  049E                     	;# 
   982  049F                     	;# 
   983  0617                     	;# 
   984  0618                     	;# 
   985  0619                     	;# 
   986  0619                     	;# 
   987  061A                     	;# 
   988  061B                     	;# 
   989  061C                     	;# 
   990  061C                     	;# 
   991  061F                     	;# 
   992  0691                     	;# 
   993  0692                     	;# 
   994  0693                     	;# 
   995  0694                     	;# 
   996  0695                     	;# 
   997  0696                     	;# 
   998  0697                     	;# 
   999  0698                     	;# 
  1000  0699                     	;# 
  1001  0711                     	;# 
  1002  0712                     	;# 
  1003  0713                     	;# 
  1004  0714                     	;# 
  1005  0715                     	;# 
  1006  0716                     	;# 
  1007  0717                     	;# 
  1008  0718                     	;# 
  1009  0719                     	;# 
  1010  0891                     	;# 
  1011  0891                     	;# 
  1012  0891                     	;# 
  1013  0891                     	;# 
  1014  0891                     	;# 
  1015  0891                     	;# 
  1016  0892                     	;# 
  1017  0892                     	;# 
  1018  0892                     	;# 
  1019  0893                     	;# 
  1020  0893                     	;# 
  1021  0893                     	;# 
  1022  0893                     	;# 
  1023  0893                     	;# 
  1024  0893                     	;# 
  1025  0894                     	;# 
  1026  0894                     	;# 
  1027  0894                     	;# 
  1028  0895                     	;# 
  1029  0895                     	;# 
  1030  0895                     	;# 
  1031  0896                     	;# 
  1032  0896                     	;# 
  1033  0896                     	;# 
  1034  089B                     	;# 
  1035  0911                     	;# 
  1036  0912                     	;# 
  1037  0913                     	;# 
  1038  0914                     	;# 
  1039  0915                     	;# 
  1040  0916                     	;# 
  1041  0918                     	;# 
  1042  0919                     	;# 
  1043  091A                     	;# 
  1044  091B                     	;# 
  1045  091C                     	;# 
  1046  091D                     	;# 
  1047  091E                     	;# 
  1048  091F                     	;# 
  1049  0E0F                     	;# 
  1050  0E10                     	;# 
  1051  0E11                     	;# 
  1052  0E12                     	;# 
  1053  0E13                     	;# 
  1054  0E14                     	;# 
  1055  0E15                     	;# 
  1056  0E16                     	;# 
  1057  0E17                     	;# 
  1058  0E18                     	;# 
  1059  0E19                     	;# 
  1060  0E1A                     	;# 
  1061  0E1B                     	;# 
  1062  0E1C                     	;# 
  1063  0E1D                     	;# 
  1064  0E1E                     	;# 
  1065  0E1F                     	;# 
  1066  0E20                     	;# 
  1067  0E21                     	;# 
  1068  0E22                     	;# 
  1069  0E24                     	;# 
  1070  0E25                     	;# 
  1071  0E28                     	;# 
  1072  0E29                     	;# 
  1073  0E2A                     	;# 
  1074  0E2B                     	;# 
  1075  0E2C                     	;# 
  1076  0E2D                     	;# 
  1077  0E2E                     	;# 
  1078  0E2F                     	;# 
  1079  0E90                     	;# 
  1080  0E91                     	;# 
  1081  0E92                     	;# 
  1082  0E94                     	;# 
  1083  0E95                     	;# 
  1084  0E9C                     	;# 
  1085  0E9D                     	;# 
  1086  0E9E                     	;# 
  1087  0E9F                     	;# 
  1088  0EA0                     	;# 
  1089  0EA1                     	;# 
  1090  0EA2                     	;# 
  1091  0EA3                     	;# 
  1092  0EA4                     	;# 
  1093  0EA5                     	;# 
  1094  0EA6                     	;# 
  1095  0EA7                     	;# 
  1096  0F0F                     	;# 
  1097  0F10                     	;# 
  1098  0F11                     	;# 
  1099  0F12                     	;# 
  1100  0F13                     	;# 
  1101  0F14                     	;# 
  1102  0F15                     	;# 
  1103  0F16                     	;# 
  1104  0F17                     	;# 
  1105  0F18                     	;# 
  1106  0F19                     	;# 
  1107  0F1A                     	;# 
  1108  0F1B                     	;# 
  1109  0F1C                     	;# 
  1110  0F1D                     	;# 
  1111  0F1E                     	;# 
  1112  0F1F                     	;# 
  1113  0F20                     	;# 
  1114  0F21                     	;# 
  1115  0F22                     	;# 
  1116  0F23                     	;# 
  1117  0F24                     	;# 
  1118  0F25                     	;# 
  1119  0F26                     	;# 
  1120  0F27                     	;# 
  1121  0F28                     	;# 
  1122  0F29                     	;# 
  1123  0F2A                     	;# 
  1124  0F2B                     	;# 
  1125  0F2C                     	;# 
  1126  0F2D                     	;# 
  1127  0F2E                     	;# 
  1128  0F2F                     	;# 
  1129  0F30                     	;# 
  1130  0F31                     	;# 
  1131  0F32                     	;# 
  1132  0F33                     	;# 
  1133  0F34                     	;# 
  1134  0F35                     	;# 
  1135  0F36                     	;# 
  1136  0F37                     	;# 
  1137  0FE4                     	;# 
  1138  0FE5                     	;# 
  1139  0FE6                     	;# 
  1140  0FE7                     	;# 
  1141  0FE8                     	;# 
  1142  0FE9                     	;# 
  1143  0FEA                     	;# 
  1144  0FEB                     	;# 
  1145  0FED                     	;# 
  1146  0FEE                     	;# 
  1147  0FEF                     	;# 
  1148  0000                     	;# 
  1149  0001                     	;# 
  1150  0002                     	;# 
  1151  0003                     	;# 
  1152  0004                     	;# 
  1153  0005                     	;# 
  1154  0006                     	;# 
  1155  0007                     	;# 
  1156  0008                     	;# 
  1157  0009                     	;# 
  1158  000A                     	;# 
  1159  000B                     	;# 
  1160  000C                     	;# 
  1161  000D                     	;# 
  1162  000E                     	;# 
  1163  0010                     	;# 
  1164  0011                     	;# 
  1165  0012                     	;# 
  1166  0013                     	;# 
  1167  0014                     	;# 
  1168  0015                     	;# 
  1169  0015                     	;# 
  1170  0016                     	;# 
  1171  0016                     	;# 
  1172  0017                     	;# 
  1173  0018                     	;# 
  1174  0019                     	;# 
  1175  0019                     	;# 
  1176  001A                     	;# 
  1177  001B                     	;# 
  1178  001C                     	;# 
  1179  001D                     	;# 
  1180  001E                     	;# 
  1181  001F                     	;# 
  1182  008C                     	;# 
  1183  008D                     	;# 
  1184  008E                     	;# 
  1185  0090                     	;# 
  1186  0091                     	;# 
  1187  0092                     	;# 
  1188  0093                     	;# 
  1189  0094                     	;# 
  1190  0097                     	;# 
  1191  009B                     	;# 
  1192  009B                     	;# 
  1193  009C                     	;# 
  1194  009D                     	;# 
  1195  009E                     	;# 
  1196  009F                     	;# 
  1197  010C                     	;# 
  1198  010D                     	;# 
  1199  010E                     	;# 
  1200  0111                     	;# 
  1201  0112                     	;# 
  1202  0113                     	;# 
  1203  0114                     	;# 
  1204  0115                     	;# 
  1205  0116                     	;# 
  1206  0117                     	;# 
  1207  0118                     	;# 
  1208  0119                     	;# 
  1209  018C                     	;# 
  1210  018D                     	;# 
  1211  018E                     	;# 
  1212  0197                     	;# 
  1213  0199                     	;# 
  1214  0199                     	;# 
  1215  0199                     	;# 
  1216  019A                     	;# 
  1217  019A                     	;# 
  1218  019A                     	;# 
  1219  019B                     	;# 
  1220  019B                     	;# 
  1221  019B                     	;# 
  1222  019B                     	;# 
  1223  019B                     	;# 
  1224  019C                     	;# 
  1225  019C                     	;# 
  1226  019C                     	;# 
  1227  019D                     	;# 
  1228  019D                     	;# 
  1229  019D                     	;# 
  1230  019E                     	;# 
  1231  019E                     	;# 
  1232  019E                     	;# 
  1233  019F                     	;# 
  1234  019F                     	;# 
  1235  019F                     	;# 
  1236  019F                     	;# 
  1237  019F                     	;# 
  1238  020C                     	;# 
  1239  020D                     	;# 
  1240  020E                     	;# 
  1241  0211                     	;# 
  1242  0211                     	;# 
  1243  0212                     	;# 
  1244  0212                     	;# 
  1245  0213                     	;# 
  1246  0213                     	;# 
  1247  0214                     	;# 
  1248  0214                     	;# 
  1249  0215                     	;# 
  1250  0215                     	;# 
  1251  0215                     	;# 
  1252  0215                     	;# 
  1253  0216                     	;# 
  1254  0216                     	;# 
  1255  0217                     	;# 
  1256  0217                     	;# 
  1257  0219                     	;# 
  1258  021A                     	;# 
  1259  021B                     	;# 
  1260  021C                     	;# 
  1261  021D                     	;# 
  1262  021D                     	;# 
  1263  021E                     	;# 
  1264  021F                     	;# 
  1265  028C                     	;# 
  1266  028D                     	;# 
  1267  028E                     	;# 
  1268  0291                     	;# 
  1269  0291                     	;# 
  1270  0292                     	;# 
  1271  0293                     	;# 
  1272  0294                     	;# 
  1273  0295                     	;# 
  1274  0295                     	;# 
  1275  0296                     	;# 
  1276  0297                     	;# 
  1277  0298                     	;# 
  1278  029F                     	;# 
  1279  030C                     	;# 
  1280  030D                     	;# 
  1281  030E                     	;# 
  1282  0311                     	;# 
  1283  0311                     	;# 
  1284  0312                     	;# 
  1285  0313                     	;# 
  1286  0314                     	;# 
  1287  0315                     	;# 
  1288  0315                     	;# 
  1289  0316                     	;# 
  1290  0317                     	;# 
  1291  0318                     	;# 
  1292  038C                     	;# 
  1293  038D                     	;# 
  1294  038E                     	;# 
  1295  0391                     	;# 
  1296  0392                     	;# 
  1297  0393                     	;# 
  1298  0394                     	;# 
  1299  0395                     	;# 
  1300  0396                     	;# 
  1301  0397                     	;# 
  1302  0398                     	;# 
  1303  0399                     	;# 
  1304  039A                     	;# 
  1305  039C                     	;# 
  1306  039D                     	;# 
  1307  039E                     	;# 
  1308  039F                     	;# 
  1309  0411                     	;# 
  1310  0411                     	;# 
  1311  0412                     	;# 
  1312  0413                     	;# 
  1313  0414                     	;# 
  1314  0415                     	;# 
  1315  0416                     	;# 
  1316  0417                     	;# 
  1317  0418                     	;# 
  1318  0418                     	;# 
  1319  0419                     	;# 
  1320  041A                     	;# 
  1321  041B                     	;# 
  1322  041C                     	;# 
  1323  041D                     	;# 
  1324  041E                     	;# 
  1325  041F                     	;# 
  1326  0498                     	;# 
  1327  0498                     	;# 
  1328  0499                     	;# 
  1329  049A                     	;# 
  1330  049B                     	;# 
  1331  049B                     	;# 
  1332  049C                     	;# 
  1333  049D                     	;# 
  1334  049E                     	;# 
  1335  049F                     	;# 
  1336  0617                     	;# 
  1337  0618                     	;# 
  1338  0619                     	;# 
  1339  0619                     	;# 
  1340  061A                     	;# 
  1341  061B                     	;# 
  1342  061C                     	;# 
  1343  061C                     	;# 
  1344  061F                     	;# 
  1345  0691                     	;# 
  1346  0692                     	;# 
  1347  0693                     	;# 
  1348  0694                     	;# 
  1349  0695                     	;# 
  1350  0696                     	;# 
  1351  0697                     	;# 
  1352  0698                     	;# 
  1353  0699                     	;# 
  1354  0711                     	;# 
  1355  0712                     	;# 
  1356  0713                     	;# 
  1357  0714                     	;# 
  1358  0715                     	;# 
  1359  0716                     	;# 
  1360  0717                     	;# 
  1361  0718                     	;# 
  1362  0719                     	;# 
  1363  0891                     	;# 
  1364  0891                     	;# 
  1365  0891                     	;# 
  1366  0891                     	;# 
  1367  0891                     	;# 
  1368  0891                     	;# 
  1369  0892                     	;# 
  1370  0892                     	;# 
  1371  0892                     	;# 
  1372  0893                     	;# 
  1373  0893                     	;# 
  1374  0893                     	;# 
  1375  0893                     	;# 
  1376  0893                     	;# 
  1377  0893                     	;# 
  1378  0894                     	;# 
  1379  0894                     	;# 
  1380  0894                     	;# 
  1381  0895                     	;# 
  1382  0895                     	;# 
  1383  0895                     	;# 
  1384  0896                     	;# 
  1385  0896                     	;# 
  1386  0896                     	;# 
  1387  089B                     	;# 
  1388  0911                     	;# 
  1389  0912                     	;# 
  1390  0913                     	;# 
  1391  0914                     	;# 
  1392  0915                     	;# 
  1393  0916                     	;# 
  1394  0918                     	;# 
  1395  0919                     	;# 
  1396  091A                     	;# 
  1397  091B                     	;# 
  1398  091C                     	;# 
  1399  091D                     	;# 
  1400  091E                     	;# 
  1401  091F                     	;# 
  1402  0E0F                     	;# 
  1403  0E10                     	;# 
  1404  0E11                     	;# 
  1405  0E12                     	;# 
  1406  0E13                     	;# 
  1407  0E14                     	;# 
  1408  0E15                     	;# 
  1409  0E16                     	;# 
  1410  0E17                     	;# 
  1411  0E18                     	;# 
  1412  0E19                     	;# 
  1413  0E1A                     	;# 
  1414  0E1B                     	;# 
  1415  0E1C                     	;# 
  1416  0E1D                     	;# 
  1417  0E1E                     	;# 
  1418  0E1F                     	;# 
  1419  0E20                     	;# 
  1420  0E21                     	;# 
  1421  0E22                     	;# 
  1422  0E24                     	;# 
  1423  0E25                     	;# 
  1424  0E28                     	;# 
  1425  0E29                     	;# 
  1426  0E2A                     	;# 
  1427  0E2B                     	;# 
  1428  0E2C                     	;# 
  1429  0E2D                     	;# 
  1430  0E2E                     	;# 
  1431  0E2F                     	;# 
  1432  0E90                     	;# 
  1433  0E91                     	;# 
  1434  0E92                     	;# 
  1435  0E94                     	;# 
  1436  0E95                     	;# 
  1437  0E9C                     	;# 
  1438  0E9D                     	;# 
  1439  0E9E                     	;# 
  1440  0E9F                     	;# 
  1441  0EA0                     	;# 
  1442  0EA1                     	;# 
  1443  0EA2                     	;# 
  1444  0EA3                     	;# 
  1445  0EA4                     	;# 
  1446  0EA5                     	;# 
  1447  0EA6                     	;# 
  1448  0EA7                     	;# 
  1449  0F0F                     	;# 
  1450  0F10                     	;# 
  1451  0F11                     	;# 
  1452  0F12                     	;# 
  1453  0F13                     	;# 
  1454  0F14                     	;# 
  1455  0F15                     	;# 
  1456  0F16                     	;# 
  1457  0F17                     	;# 
  1458  0F18                     	;# 
  1459  0F19                     	;# 
  1460  0F1A                     	;# 
  1461  0F1B                     	;# 
  1462  0F1C                     	;# 
  1463  0F1D                     	;# 
  1464  0F1E                     	;# 
  1465  0F1F                     	;# 
  1466  0F20                     	;# 
  1467  0F21                     	;# 
  1468  0F22                     	;# 
  1469  0F23                     	;# 
  1470  0F24                     	;# 
  1471  0F25                     	;# 
  1472  0F26                     	;# 
  1473  0F27                     	;# 
  1474  0F28                     	;# 
  1475  0F29                     	;# 
  1476  0F2A                     	;# 
  1477  0F2B                     	;# 
  1478  0F2C                     	;# 
  1479  0F2D                     	;# 
  1480  0F2E                     	;# 
  1481  0F2F                     	;# 
  1482  0F30                     	;# 
  1483  0F31                     	;# 
  1484  0F32                     	;# 
  1485  0F33                     	;# 
  1486  0F34                     	;# 
  1487  0F35                     	;# 
  1488  0F36                     	;# 
  1489  0F37                     	;# 
  1490  0FE4                     	;# 
  1491  0FE5                     	;# 
  1492  0FE6                     	;# 
  1493  0FE7                     	;# 
  1494  0FE8                     	;# 
  1495  0FE9                     	;# 
  1496  0FEA                     	;# 
  1497  0FEB                     	;# 
  1498  0FED                     	;# 
  1499  0FEE                     	;# 
  1500  0FEF                     	;# 
  1501  0000                     	;# 
  1502  0001                     	;# 
  1503  0002                     	;# 
  1504  0003                     	;# 
  1505  0004                     	;# 
  1506  0005                     	;# 
  1507  0006                     	;# 
  1508  0007                     	;# 
  1509  0008                     	;# 
  1510  0009                     	;# 
  1511  000A                     	;# 
  1512  000B                     	;# 
  1513  000C                     	;# 
  1514  000D                     	;# 
  1515  000E                     	;# 
  1516  0010                     	;# 
  1517  0011                     	;# 
  1518  0012                     	;# 
  1519  0013                     	;# 
  1520  0014                     	;# 
  1521  0015                     	;# 
  1522  0015                     	;# 
  1523  0016                     	;# 
  1524  0016                     	;# 
  1525  0017                     	;# 
  1526  0018                     	;# 
  1527  0019                     	;# 
  1528  0019                     	;# 
  1529  001A                     	;# 
  1530  001B                     	;# 
  1531  001C                     	;# 
  1532  001D                     	;# 
  1533  001E                     	;# 
  1534  001F                     	;# 
  1535  008C                     	;# 
  1536  008D                     	;# 
  1537  008E                     	;# 
  1538  0090                     	;# 
  1539  0091                     	;# 
  1540  0092                     	;# 
  1541  0093                     	;# 
  1542  0094                     	;# 
  1543  0097                     	;# 
  1544  009B                     	;# 
  1545  009B                     	;# 
  1546  009C                     	;# 
  1547  009D                     	;# 
  1548  009E                     	;# 
  1549  009F                     	;# 
  1550  010C                     	;# 
  1551  010D                     	;# 
  1552  010E                     	;# 
  1553  0111                     	;# 
  1554  0112                     	;# 
  1555  0113                     	;# 
  1556  0114                     	;# 
  1557  0115                     	;# 
  1558  0116                     	;# 
  1559  0117                     	;# 
  1560  0118                     	;# 
  1561  0119                     	;# 
  1562  018C                     	;# 
  1563  018D                     	;# 
  1564  018E                     	;# 
  1565  0197                     	;# 
  1566  0199                     	;# 
  1567  0199                     	;# 
  1568  0199                     	;# 
  1569  019A                     	;# 
  1570  019A                     	;# 
  1571  019A                     	;# 
  1572  019B                     	;# 
  1573  019B                     	;# 
  1574  019B                     	;# 
  1575  019B                     	;# 
  1576  019B                     	;# 
  1577  019C                     	;# 
  1578  019C                     	;# 
  1579  019C                     	;# 
  1580  019D                     	;# 
  1581  019D                     	;# 
  1582  019D                     	;# 
  1583  019E                     	;# 
  1584  019E                     	;# 
  1585  019E                     	;# 
  1586  019F                     	;# 
  1587  019F                     	;# 
  1588  019F                     	;# 
  1589  019F                     	;# 
  1590  019F                     	;# 
  1591  020C                     	;# 
  1592  020D                     	;# 
  1593  020E                     	;# 
  1594  0211                     	;# 
  1595  0211                     	;# 
  1596  0212                     	;# 
  1597  0212                     	;# 
  1598  0213                     	;# 
  1599  0213                     	;# 
  1600  0214                     	;# 
  1601  0214                     	;# 
  1602  0215                     	;# 
  1603  0215                     	;# 
  1604  0215                     	;# 
  1605  0215                     	;# 
  1606  0216                     	;# 
  1607  0216                     	;# 
  1608  0217                     	;# 
  1609  0217                     	;# 
  1610  0219                     	;# 
  1611  021A                     	;# 
  1612  021B                     	;# 
  1613  021C                     	;# 
  1614  021D                     	;# 
  1615  021D                     	;# 
  1616  021E                     	;# 
  1617  021F                     	;# 
  1618  028C                     	;# 
  1619  028D                     	;# 
  1620  028E                     	;# 
  1621  0291                     	;# 
  1622  0291                     	;# 
  1623  0292                     	;# 
  1624  0293                     	;# 
  1625  0294                     	;# 
  1626  0295                     	;# 
  1627  0295                     	;# 
  1628  0296                     	;# 
  1629  0297                     	;# 
  1630  0298                     	;# 
  1631  029F                     	;# 
  1632  030C                     	;# 
  1633  030D                     	;# 
  1634  030E                     	;# 
  1635  0311                     	;# 
  1636  0311                     	;# 
  1637  0312                     	;# 
  1638  0313                     	;# 
  1639  0314                     	;# 
  1640  0315                     	;# 
  1641  0315                     	;# 
  1642  0316                     	;# 
  1643  0317                     	;# 
  1644  0318                     	;# 
  1645  038C                     	;# 
  1646  038D                     	;# 
  1647  038E                     	;# 
  1648  0391                     	;# 
  1649  0392                     	;# 
  1650  0393                     	;# 
  1651  0394                     	;# 
  1652  0395                     	;# 
  1653  0396                     	;# 
  1654  0397                     	;# 
  1655  0398                     	;# 
  1656  0399                     	;# 
  1657  039A                     	;# 
  1658  039C                     	;# 
  1659  039D                     	;# 
  1660  039E                     	;# 
  1661  039F                     	;# 
  1662  0411                     	;# 
  1663  0411                     	;# 
  1664  0412                     	;# 
  1665  0413                     	;# 
  1666  0414                     	;# 
  1667  0415                     	;# 
  1668  0416                     	;# 
  1669  0417                     	;# 
  1670  0418                     	;# 
  1671  0418                     	;# 
  1672  0419                     	;# 
  1673  041A                     	;# 
  1674  041B                     	;# 
  1675  041C                     	;# 
  1676  041D                     	;# 
  1677  041E                     	;# 
  1678  041F                     	;# 
  1679  0498                     	;# 
  1680  0498                     	;# 
  1681  0499                     	;# 
  1682  049A                     	;# 
  1683  049B                     	;# 
  1684  049B                     	;# 
  1685  049C                     	;# 
  1686  049D                     	;# 
  1687  049E                     	;# 
  1688  049F                     	;# 
  1689  0617                     	;# 
  1690  0618                     	;# 
  1691  0619                     	;# 
  1692  0619                     	;# 
  1693  061A                     	;# 
  1694  061B                     	;# 
  1695  061C                     	;# 
  1696  061C                     	;# 
  1697  061F                     	;# 
  1698  0691                     	;# 
  1699  0692                     	;# 
  1700  0693                     	;# 
  1701  0694                     	;# 
  1702  0695                     	;# 
  1703  0696                     	;# 
  1704  0697                     	;# 
  1705  0698                     	;# 
  1706  0699                     	;# 
  1707  0711                     	;# 
  1708  0712                     	;# 
  1709  0713                     	;# 
  1710  0714                     	;# 
  1711  0715                     	;# 
  1712  0716                     	;# 
  1713  0717                     	;# 
  1714  0718                     	;# 
  1715  0719                     	;# 
  1716  0891                     	;# 
  1717  0891                     	;# 
  1718  0891                     	;# 
  1719  0891                     	;# 
  1720  0891                     	;# 
  1721  0891                     	;# 
  1722  0892                     	;# 
  1723  0892                     	;# 
  1724  0892                     	;# 
  1725  0893                     	;# 
  1726  0893                     	;# 
  1727  0893                     	;# 
  1728  0893                     	;# 
  1729  0893                     	;# 
  1730  0893                     	;# 
  1731  0894                     	;# 
  1732  0894                     	;# 
  1733  0894                     	;# 
  1734  0895                     	;# 
  1735  0895                     	;# 
  1736  0895                     	;# 
  1737  0896                     	;# 
  1738  0896                     	;# 
  1739  0896                     	;# 
  1740  089B                     	;# 
  1741  0911                     	;# 
  1742  0912                     	;# 
  1743  0913                     	;# 
  1744  0914                     	;# 
  1745  0915                     	;# 
  1746  0916                     	;# 
  1747  0918                     	;# 
  1748  0919                     	;# 
  1749  091A                     	;# 
  1750  091B                     	;# 
  1751  091C                     	;# 
  1752  091D                     	;# 
  1753  091E                     	;# 
  1754  091F                     	;# 
  1755  0E0F                     	;# 
  1756  0E10                     	;# 
  1757  0E11                     	;# 
  1758  0E12                     	;# 
  1759  0E13                     	;# 
  1760  0E14                     	;# 
  1761  0E15                     	;# 
  1762  0E16                     	;# 
  1763  0E17                     	;# 
  1764  0E18                     	;# 
  1765  0E19                     	;# 
  1766  0E1A                     	;# 
  1767  0E1B                     	;# 
  1768  0E1C                     	;# 
  1769  0E1D                     	;# 
  1770  0E1E                     	;# 
  1771  0E1F                     	;# 
  1772  0E20                     	;# 
  1773  0E21                     	;# 
  1774  0E22                     	;# 
  1775  0E24                     	;# 
  1776  0E25                     	;# 
  1777  0E28                     	;# 
  1778  0E29                     	;# 
  1779  0E2A                     	;# 
  1780  0E2B                     	;# 
  1781  0E2C                     	;# 
  1782  0E2D                     	;# 
  1783  0E2E                     	;# 
  1784  0E2F                     	;# 
  1785  0E90                     	;# 
  1786  0E91                     	;# 
  1787  0E92                     	;# 
  1788  0E94                     	;# 
  1789  0E95                     	;# 
  1790  0E9C                     	;# 
  1791  0E9D                     	;# 
  1792  0E9E                     	;# 
  1793  0E9F                     	;# 
  1794  0EA0                     	;# 
  1795  0EA1                     	;# 
  1796  0EA2                     	;# 
  1797  0EA3                     	;# 
  1798  0EA4                     	;# 
  1799  0EA5                     	;# 
  1800  0EA6                     	;# 
  1801  0EA7                     	;# 
  1802  0F0F                     	;# 
  1803  0F10                     	;# 
  1804  0F11                     	;# 
  1805  0F12                     	;# 
  1806  0F13                     	;# 
  1807  0F14                     	;# 
  1808  0F15                     	;# 
  1809  0F16                     	;# 
  1810  0F17                     	;# 
  1811  0F18                     	;# 
  1812  0F19                     	;# 
  1813  0F1A                     	;# 
  1814  0F1B                     	;# 
  1815  0F1C                     	;# 
  1816  0F1D                     	;# 
  1817  0F1E                     	;# 
  1818  0F1F                     	;# 
  1819  0F20                     	;# 
  1820  0F21                     	;# 
  1821  0F22                     	;# 
  1822  0F23                     	;# 
  1823  0F24                     	;# 
  1824  0F25                     	;# 
  1825  0F26                     	;# 
  1826  0F27                     	;# 
  1827  0F28                     	;# 
  1828  0F29                     	;# 
  1829  0F2A                     	;# 
  1830  0F2B                     	;# 
  1831  0F2C                     	;# 
  1832  0F2D                     	;# 
  1833  0F2E                     	;# 
  1834  0F2F                     	;# 
  1835  0F30                     	;# 
  1836  0F31                     	;# 
  1837  0F32                     	;# 
  1838  0F33                     	;# 
  1839  0F34                     	;# 
  1840  0F35                     	;# 
  1841  0F36                     	;# 
  1842  0F37                     	;# 
  1843  0FE4                     	;# 
  1844  0FE5                     	;# 
  1845  0FE6                     	;# 
  1846  0FE7                     	;# 
  1847  0FE8                     	;# 
  1848  0FE9                     	;# 
  1849  0FEA                     	;# 
  1850  0FEB                     	;# 
  1851  0FED                     	;# 
  1852  0FEE                     	;# 
  1853  0FEF                     	;# 
  1854  0000                     	;# 
  1855  0001                     	;# 
  1856  0002                     	;# 
  1857  0003                     	;# 
  1858  0004                     	;# 
  1859  0005                     	;# 
  1860  0006                     	;# 
  1861  0007                     	;# 
  1862  0008                     	;# 
  1863  0009                     	;# 
  1864  000A                     	;# 
  1865  000B                     	;# 
  1866  000C                     	;# 
  1867  000D                     	;# 
  1868  000E                     	;# 
  1869  0010                     	;# 
  1870  0011                     	;# 
  1871  0012                     	;# 
  1872  0013                     	;# 
  1873  0014                     	;# 
  1874  0015                     	;# 
  1875  0015                     	;# 
  1876  0016                     	;# 
  1877  0016                     	;# 
  1878  0017                     	;# 
  1879  0018                     	;# 
  1880  0019                     	;# 
  1881  0019                     	;# 
  1882  001A                     	;# 
  1883  001B                     	;# 
  1884  001C                     	;# 
  1885  001D                     	;# 
  1886  001E                     	;# 
  1887  001F                     	;# 
  1888  008C                     	;# 
  1889  008D                     	;# 
  1890  008E                     	;# 
  1891  0090                     	;# 
  1892  0091                     	;# 
  1893  0092                     	;# 
  1894  0093                     	;# 
  1895  0094                     	;# 
  1896  0097                     	;# 
  1897  009B                     	;# 
  1898  009B                     	;# 
  1899  009C                     	;# 
  1900  009D                     	;# 
  1901  009E                     	;# 
  1902  009F                     	;# 
  1903  010C                     	;# 
  1904  010D                     	;# 
  1905  010E                     	;# 
  1906  0111                     	;# 
  1907  0112                     	;# 
  1908  0113                     	;# 
  1909  0114                     	;# 
  1910  0115                     	;# 
  1911  0116                     	;# 
  1912  0117                     	;# 
  1913  0118                     	;# 
  1914  0119                     	;# 
  1915  018C                     	;# 
  1916  018D                     	;# 
  1917  018E                     	;# 
  1918  0197                     	;# 
  1919  0199                     	;# 
  1920  0199                     	;# 
  1921  0199                     	;# 
  1922  019A                     	;# 
  1923  019A                     	;# 
  1924  019A                     	;# 
  1925  019B                     	;# 
  1926  019B                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019C                     	;# 
  1931  019C                     	;# 
  1932  019C                     	;# 
  1933  019D                     	;# 
  1934  019D                     	;# 
  1935  019D                     	;# 
  1936  019E                     	;# 
  1937  019E                     	;# 
  1938  019E                     	;# 
  1939  019F                     	;# 
  1940  019F                     	;# 
  1941  019F                     	;# 
  1942  019F                     	;# 
  1943  019F                     	;# 
  1944  020C                     	;# 
  1945  020D                     	;# 
  1946  020E                     	;# 
  1947  0211                     	;# 
  1948  0211                     	;# 
  1949  0212                     	;# 
  1950  0212                     	;# 
  1951  0213                     	;# 
  1952  0213                     	;# 
  1953  0214                     	;# 
  1954  0214                     	;# 
  1955  0215                     	;# 
  1956  0215                     	;# 
  1957  0215                     	;# 
  1958  0215                     	;# 
  1959  0216                     	;# 
  1960  0216                     	;# 
  1961  0217                     	;# 
  1962  0217                     	;# 
  1963  0219                     	;# 
  1964  021A                     	;# 
  1965  021B                     	;# 
  1966  021C                     	;# 
  1967  021D                     	;# 
  1968  021D                     	;# 
  1969  021E                     	;# 
  1970  021F                     	;# 
  1971  028C                     	;# 
  1972  028D                     	;# 
  1973  028E                     	;# 
  1974  0291                     	;# 
  1975  0291                     	;# 
  1976  0292                     	;# 
  1977  0293                     	;# 
  1978  0294                     	;# 
  1979  0295                     	;# 
  1980  0295                     	;# 
  1981  0296                     	;# 
  1982  0297                     	;# 
  1983  0298                     	;# 
  1984  029F                     	;# 
  1985  030C                     	;# 
  1986  030D                     	;# 
  1987  030E                     	;# 
  1988  0311                     	;# 
  1989  0311                     	;# 
  1990  0312                     	;# 
  1991  0313                     	;# 
  1992  0314                     	;# 
  1993  0315                     	;# 
  1994  0315                     	;# 
  1995  0316                     	;# 
  1996  0317                     	;# 
  1997  0318                     	;# 
  1998  038C                     	;# 
  1999  038D                     	;# 
  2000  038E                     	;# 
  2001  0391                     	;# 
  2002  0392                     	;# 
  2003  0393                     	;# 
  2004  0394                     	;# 
  2005  0395                     	;# 
  2006  0396                     	;# 
  2007  0397                     	;# 
  2008  0398                     	;# 
  2009  0399                     	;# 
  2010  039A                     	;# 
  2011  039C                     	;# 
  2012  039D                     	;# 
  2013  039E                     	;# 
  2014  039F                     	;# 
  2015  0411                     	;# 
  2016  0411                     	;# 
  2017  0412                     	;# 
  2018  0413                     	;# 
  2019  0414                     	;# 
  2020  0415                     	;# 
  2021  0416                     	;# 
  2022  0417                     	;# 
  2023  0418                     	;# 
  2024  0418                     	;# 
  2025  0419                     	;# 
  2026  041A                     	;# 
  2027  041B                     	;# 
  2028  041C                     	;# 
  2029  041D                     	;# 
  2030  041E                     	;# 
  2031  041F                     	;# 
  2032  0498                     	;# 
  2033  0498                     	;# 
  2034  0499                     	;# 
  2035  049A                     	;# 
  2036  049B                     	;# 
  2037  049B                     	;# 
  2038  049C                     	;# 
  2039  049D                     	;# 
  2040  049E                     	;# 
  2041  049F                     	;# 
  2042  0617                     	;# 
  2043  0618                     	;# 
  2044  0619                     	;# 
  2045  0619                     	;# 
  2046  061A                     	;# 
  2047  061B                     	;# 
  2048  061C                     	;# 
  2049  061C                     	;# 
  2050  061F                     	;# 
  2051  0691                     	;# 
  2052  0692                     	;# 
  2053  0693                     	;# 
  2054  0694                     	;# 
  2055  0695                     	;# 
  2056  0696                     	;# 
  2057  0697                     	;# 
  2058  0698                     	;# 
  2059  0699                     	;# 
  2060  0711                     	;# 
  2061  0712                     	;# 
  2062  0713                     	;# 
  2063  0714                     	;# 
  2064  0715                     	;# 
  2065  0716                     	;# 
  2066  0717                     	;# 
  2067  0718                     	;# 
  2068  0719                     	;# 
  2069  0891                     	;# 
  2070  0891                     	;# 
  2071  0891                     	;# 
  2072  0891                     	;# 
  2073  0891                     	;# 
  2074  0891                     	;# 
  2075  0892                     	;# 
  2076  0892                     	;# 
  2077  0892                     	;# 
  2078  0893                     	;# 
  2079  0893                     	;# 
  2080  0893                     	;# 
  2081  0893                     	;# 
  2082  0893                     	;# 
  2083  0893                     	;# 
  2084  0894                     	;# 
  2085  0894                     	;# 
  2086  0894                     	;# 
  2087  0895                     	;# 
  2088  0895                     	;# 
  2089  0895                     	;# 
  2090  0896                     	;# 
  2091  0896                     	;# 
  2092  0896                     	;# 
  2093  089B                     	;# 
  2094  0911                     	;# 
  2095  0912                     	;# 
  2096  0913                     	;# 
  2097  0914                     	;# 
  2098  0915                     	;# 
  2099  0916                     	;# 
  2100  0918                     	;# 
  2101  0919                     	;# 
  2102  091A                     	;# 
  2103  091B                     	;# 
  2104  091C                     	;# 
  2105  091D                     	;# 
  2106  091E                     	;# 
  2107  091F                     	;# 
  2108  0E0F                     	;# 
  2109  0E10                     	;# 
  2110  0E11                     	;# 
  2111  0E12                     	;# 
  2112  0E13                     	;# 
  2113  0E14                     	;# 
  2114  0E15                     	;# 
  2115  0E16                     	;# 
  2116  0E17                     	;# 
  2117  0E18                     	;# 
  2118  0E19                     	;# 
  2119  0E1A                     	;# 
  2120  0E1B                     	;# 
  2121  0E1C                     	;# 
  2122  0E1D                     	;# 
  2123  0E1E                     	;# 
  2124  0E1F                     	;# 
  2125  0E20                     	;# 
  2126  0E21                     	;# 
  2127  0E22                     	;# 
  2128  0E24                     	;# 
  2129  0E25                     	;# 
  2130  0E28                     	;# 
  2131  0E29                     	;# 
  2132  0E2A                     	;# 
  2133  0E2B                     	;# 
  2134  0E2C                     	;# 
  2135  0E2D                     	;# 
  2136  0E2E                     	;# 
  2137  0E2F                     	;# 
  2138  0E90                     	;# 
  2139  0E91                     	;# 
  2140  0E92                     	;# 
  2141  0E94                     	;# 
  2142  0E95                     	;# 
  2143  0E9C                     	;# 
  2144  0E9D                     	;# 
  2145  0E9E                     	;# 
  2146  0E9F                     	;# 
  2147  0EA0                     	;# 
  2148  0EA1                     	;# 
  2149  0EA2                     	;# 
  2150  0EA3                     	;# 
  2151  0EA4                     	;# 
  2152  0EA5                     	;# 
  2153  0EA6                     	;# 
  2154  0EA7                     	;# 
  2155  0F0F                     	;# 
  2156  0F10                     	;# 
  2157  0F11                     	;# 
  2158  0F12                     	;# 
  2159  0F13                     	;# 
  2160  0F14                     	;# 
  2161  0F15                     	;# 
  2162  0F16                     	;# 
  2163  0F17                     	;# 
  2164  0F18                     	;# 
  2165  0F19                     	;# 
  2166  0F1A                     	;# 
  2167  0F1B                     	;# 
  2168  0F1C                     	;# 
  2169  0F1D                     	;# 
  2170  0F1E                     	;# 
  2171  0F1F                     	;# 
  2172  0F20                     	;# 
  2173  0F21                     	;# 
  2174  0F22                     	;# 
  2175  0F23                     	;# 
  2176  0F24                     	;# 
  2177  0F25                     	;# 
  2178  0F26                     	;# 
  2179  0F27                     	;# 
  2180  0F28                     	;# 
  2181  0F29                     	;# 
  2182  0F2A                     	;# 
  2183  0F2B                     	;# 
  2184  0F2C                     	;# 
  2185  0F2D                     	;# 
  2186  0F2E                     	;# 
  2187  0F2F                     	;# 
  2188  0F30                     	;# 
  2189  0F31                     	;# 
  2190  0F32                     	;# 
  2191  0F33                     	;# 
  2192  0F34                     	;# 
  2193  0F35                     	;# 
  2194  0F36                     	;# 
  2195  0F37                     	;# 
  2196  0FE4                     	;# 
  2197  0FE5                     	;# 
  2198  0FE6                     	;# 
  2199  0FE7                     	;# 
  2200  0FE8                     	;# 
  2201  0FE9                     	;# 
  2202  0FEA                     	;# 
  2203  0FEB                     	;# 
  2204  0FED                     	;# 
  2205  0FEE                     	;# 
  2206  0FEF                     	;# 
  2207  0000                     	;# 
  2208  0001                     	;# 
  2209  0002                     	;# 
  2210  0003                     	;# 
  2211  0004                     	;# 
  2212  0005                     	;# 
  2213  0006                     	;# 
  2214  0007                     	;# 
  2215  0008                     	;# 
  2216  0009                     	;# 
  2217  000A                     	;# 
  2218  000B                     	;# 
  2219  000C                     	;# 
  2220  000D                     	;# 
  2221  000E                     	;# 
  2222  0010                     	;# 
  2223  0011                     	;# 
  2224  0012                     	;# 
  2225  0013                     	;# 
  2226  0014                     	;# 
  2227  0015                     	;# 
  2228  0015                     	;# 
  2229  0016                     	;# 
  2230  0016                     	;# 
  2231  0017                     	;# 
  2232  0018                     	;# 
  2233  0019                     	;# 
  2234  0019                     	;# 
  2235  001A                     	;# 
  2236  001B                     	;# 
  2237  001C                     	;# 
  2238  001D                     	;# 
  2239  001E                     	;# 
  2240  001F                     	;# 
  2241  008C                     	;# 
  2242  008D                     	;# 
  2243  008E                     	;# 
  2244  0090                     	;# 
  2245  0091                     	;# 
  2246  0092                     	;# 
  2247  0093                     	;# 
  2248  0094                     	;# 
  2249  0097                     	;# 
  2250  009B                     	;# 
  2251  009B                     	;# 
  2252  009C                     	;# 
  2253  009D                     	;# 
  2254  009E                     	;# 
  2255  009F                     	;# 
  2256  010C                     	;# 
  2257  010D                     	;# 
  2258  010E                     	;# 
  2259  0111                     	;# 
  2260  0112                     	;# 
  2261  0113                     	;# 
  2262  0114                     	;# 
  2263  0115                     	;# 
  2264  0116                     	;# 
  2265  0117                     	;# 
  2266  0118                     	;# 
  2267  0119                     	;# 
  2268  018C                     	;# 
  2269  018D                     	;# 
  2270  018E                     	;# 
  2271  0197                     	;# 
  2272  0199                     	;# 
  2273  0199                     	;# 
  2274  0199                     	;# 
  2275  019A                     	;# 
  2276  019A                     	;# 
  2277  019A                     	;# 
  2278  019B                     	;# 
  2279  019B                     	;# 
  2280  019B                     	;# 
  2281  019B                     	;# 
  2282  019B                     	;# 
  2283  019C                     	;# 
  2284  019C                     	;# 
  2285  019C                     	;# 
  2286  019D                     	;# 
  2287  019D                     	;# 
  2288  019D                     	;# 
  2289  019E                     	;# 
  2290  019E                     	;# 
  2291  019E                     	;# 
  2292  019F                     	;# 
  2293  019F                     	;# 
  2294  019F                     	;# 
  2295  019F                     	;# 
  2296  019F                     	;# 
  2297  020C                     	;# 
  2298  020D                     	;# 
  2299  020E                     	;# 
  2300  0211                     	;# 
  2301  0211                     	;# 
  2302  0212                     	;# 
  2303  0212                     	;# 
  2304  0213                     	;# 
  2305  0213                     	;# 
  2306  0214                     	;# 
  2307  0214                     	;# 
  2308  0215                     	;# 
  2309  0215                     	;# 
  2310  0215                     	;# 
  2311  0215                     	;# 
  2312  0216                     	;# 
  2313  0216                     	;# 
  2314  0217                     	;# 
  2315  0217                     	;# 
  2316  0219                     	;# 
  2317  021A                     	;# 
  2318  021B                     	;# 
  2319  021C                     	;# 
  2320  021D                     	;# 
  2321  021D                     	;# 
  2322  021E                     	;# 
  2323  021F                     	;# 
  2324  028C                     	;# 
  2325  028D                     	;# 
  2326  028E                     	;# 
  2327  0291                     	;# 
  2328  0291                     	;# 
  2329  0292                     	;# 
  2330  0293                     	;# 
  2331  0294                     	;# 
  2332  0295                     	;# 
  2333  0295                     	;# 
  2334  0296                     	;# 
  2335  0297                     	;# 
  2336  0298                     	;# 
  2337  029F                     	;# 
  2338  030C                     	;# 
  2339  030D                     	;# 
  2340  030E                     	;# 
  2341  0311                     	;# 
  2342  0311                     	;# 
  2343  0312                     	;# 
  2344  0313                     	;# 
  2345  0314                     	;# 
  2346  0315                     	;# 
  2347  0315                     	;# 
  2348  0316                     	;# 
  2349  0317                     	;# 
  2350  0318                     	;# 
  2351  038C                     	;# 
  2352  038D                     	;# 
  2353  038E                     	;# 
  2354  0391                     	;# 
  2355  0392                     	;# 
  2356  0393                     	;# 
  2357  0394                     	;# 
  2358  0395                     	;# 
  2359  0396                     	;# 
  2360  0397                     	;# 
  2361  0398                     	;# 
  2362  0399                     	;# 
  2363  039A                     	;# 
  2364  039C                     	;# 
  2365  039D                     	;# 
  2366  039E                     	;# 
  2367  039F                     	;# 
  2368  0411                     	;# 
  2369  0411                     	;# 
  2370  0412                     	;# 
  2371  0413                     	;# 
  2372  0414                     	;# 
  2373  0415                     	;# 
  2374  0416                     	;# 
  2375  0417                     	;# 
  2376  0418                     	;# 
  2377  0418                     	;# 
  2378  0419                     	;# 
  2379  041A                     	;# 
  2380  041B                     	;# 
  2381  041C                     	;# 
  2382  041D                     	;# 
  2383  041E                     	;# 
  2384  041F                     	;# 
  2385  0498                     	;# 
  2386  0498                     	;# 
  2387  0499                     	;# 
  2388  049A                     	;# 
  2389  049B                     	;# 
  2390  049B                     	;# 
  2391  049C                     	;# 
  2392  049D                     	;# 
  2393  049E                     	;# 
  2394  049F                     	;# 
  2395  0617                     	;# 
  2396  0618                     	;# 
  2397  0619                     	;# 
  2398  0619                     	;# 
  2399  061A                     	;# 
  2400  061B                     	;# 
  2401  061C                     	;# 
  2402  061C                     	;# 
  2403  061F                     	;# 
  2404  0691                     	;# 
  2405  0692                     	;# 
  2406  0693                     	;# 
  2407  0694                     	;# 
  2408  0695                     	;# 
  2409  0696                     	;# 
  2410  0697                     	;# 
  2411  0698                     	;# 
  2412  0699                     	;# 
  2413  0711                     	;# 
  2414  0712                     	;# 
  2415  0713                     	;# 
  2416  0714                     	;# 
  2417  0715                     	;# 
  2418  0716                     	;# 
  2419  0717                     	;# 
  2420  0718                     	;# 
  2421  0719                     	;# 
  2422  0891                     	;# 
  2423  0891                     	;# 
  2424  0891                     	;# 
  2425  0891                     	;# 
  2426  0891                     	;# 
  2427  0891                     	;# 
  2428  0892                     	;# 
  2429  0892                     	;# 
  2430  0892                     	;# 
  2431  0893                     	;# 
  2432  0893                     	;# 
  2433  0893                     	;# 
  2434  0893                     	;# 
  2435  0893                     	;# 
  2436  0893                     	;# 
  2437  0894                     	;# 
  2438  0894                     	;# 
  2439  0894                     	;# 
  2440  0895                     	;# 
  2441  0895                     	;# 
  2442  0895                     	;# 
  2443  0896                     	;# 
  2444  0896                     	;# 
  2445  0896                     	;# 
  2446  089B                     	;# 
  2447  0911                     	;# 
  2448  0912                     	;# 
  2449  0913                     	;# 
  2450  0914                     	;# 
  2451  0915                     	;# 
  2452  0916                     	;# 
  2453  0918                     	;# 
  2454  0919                     	;# 
  2455  091A                     	;# 
  2456  091B                     	;# 
  2457  091C                     	;# 
  2458  091D                     	;# 
  2459  091E                     	;# 
  2460  091F                     	;# 
  2461  0E0F                     	;# 
  2462  0E10                     	;# 
  2463  0E11                     	;# 
  2464  0E12                     	;# 
  2465  0E13                     	;# 
  2466  0E14                     	;# 
  2467  0E15                     	;# 
  2468  0E16                     	;# 
  2469  0E17                     	;# 
  2470  0E18                     	;# 
  2471  0E19                     	;# 
  2472  0E1A                     	;# 
  2473  0E1B                     	;# 
  2474  0E1C                     	;# 
  2475  0E1D                     	;# 
  2476  0E1E                     	;# 
  2477  0E1F                     	;# 
  2478  0E20                     	;# 
  2479  0E21                     	;# 
  2480  0E22                     	;# 
  2481  0E24                     	;# 
  2482  0E25                     	;# 
  2483  0E28                     	;# 
  2484  0E29                     	;# 
  2485  0E2A                     	;# 
  2486  0E2B                     	;# 
  2487  0E2C                     	;# 
  2488  0E2D                     	;# 
  2489  0E2E                     	;# 
  2490  0E2F                     	;# 
  2491  0E90                     	;# 
  2492  0E91                     	;# 
  2493  0E92                     	;# 
  2494  0E94                     	;# 
  2495  0E95                     	;# 
  2496  0E9C                     	;# 
  2497  0E9D                     	;# 
  2498  0E9E                     	;# 
  2499  0E9F                     	;# 
  2500  0EA0                     	;# 
  2501  0EA1                     	;# 
  2502  0EA2                     	;# 
  2503  0EA3                     	;# 
  2504  0EA4                     	;# 
  2505  0EA5                     	;# 
  2506  0EA6                     	;# 
  2507  0EA7                     	;# 
  2508  0F0F                     	;# 
  2509  0F10                     	;# 
  2510  0F11                     	;# 
  2511  0F12                     	;# 
  2512  0F13                     	;# 
  2513  0F14                     	;# 
  2514  0F15                     	;# 
  2515  0F16                     	;# 
  2516  0F17                     	;# 
  2517  0F18                     	;# 
  2518  0F19                     	;# 
  2519  0F1A                     	;# 
  2520  0F1B                     	;# 
  2521  0F1C                     	;# 
  2522  0F1D                     	;# 
  2523  0F1E                     	;# 
  2524  0F1F                     	;# 
  2525  0F20                     	;# 
  2526  0F21                     	;# 
  2527  0F22                     	;# 
  2528  0F23                     	;# 
  2529  0F24                     	;# 
  2530  0F25                     	;# 
  2531  0F26                     	;# 
  2532  0F27                     	;# 
  2533  0F28                     	;# 
  2534  0F29                     	;# 
  2535  0F2A                     	;# 
  2536  0F2B                     	;# 
  2537  0F2C                     	;# 
  2538  0F2D                     	;# 
  2539  0F2E                     	;# 
  2540  0F2F                     	;# 
  2541  0F30                     	;# 
  2542  0F31                     	;# 
  2543  0F32                     	;# 
  2544  0F33                     	;# 
  2545  0F34                     	;# 
  2546  0F35                     	;# 
  2547  0F36                     	;# 
  2548  0F37                     	;# 
  2549  0FE4                     	;# 
  2550  0FE5                     	;# 
  2551  0FE6                     	;# 
  2552  0FE7                     	;# 
  2553  0FE8                     	;# 
  2554  0FE9                     	;# 
  2555  0FEA                     	;# 
  2556  0FEB                     	;# 
  2557  0FED                     	;# 
  2558  0FEE                     	;# 
  2559  0FEF                     	;# 
  2560  0000                     	;# 
  2561  0001                     	;# 
  2562  0002                     	;# 
  2563  0003                     	;# 
  2564  0004                     	;# 
  2565  0005                     	;# 
  2566  0006                     	;# 
  2567  0007                     	;# 
  2568  0008                     	;# 
  2569  0009                     	;# 
  2570  000A                     	;# 
  2571  000B                     	;# 
  2572  000C                     	;# 
  2573  000D                     	;# 
  2574  000E                     	;# 
  2575  0010                     	;# 
  2576  0011                     	;# 
  2577  0012                     	;# 
  2578  0013                     	;# 
  2579  0014                     	;# 
  2580  0015                     	;# 
  2581  0015                     	;# 
  2582  0016                     	;# 
  2583  0016                     	;# 
  2584  0017                     	;# 
  2585  0018                     	;# 
  2586  0019                     	;# 
  2587  0019                     	;# 
  2588  001A                     	;# 
  2589  001B                     	;# 
  2590  001C                     	;# 
  2591  001D                     	;# 
  2592  001E                     	;# 
  2593  001F                     	;# 
  2594  008C                     	;# 
  2595  008D                     	;# 
  2596  008E                     	;# 
  2597  0090                     	;# 
  2598  0091                     	;# 
  2599  0092                     	;# 
  2600  0093                     	;# 
  2601  0094                     	;# 
  2602  0097                     	;# 
  2603  009B                     	;# 
  2604  009B                     	;# 
  2605  009C                     	;# 
  2606  009D                     	;# 
  2607  009E                     	;# 
  2608  009F                     	;# 
  2609  010C                     	;# 
  2610  010D                     	;# 
  2611  010E                     	;# 
  2612  0111                     	;# 
  2613  0112                     	;# 
  2614  0113                     	;# 
  2615  0114                     	;# 
  2616  0115                     	;# 
  2617  0116                     	;# 
  2618  0117                     	;# 
  2619  0118                     	;# 
  2620  0119                     	;# 
  2621  018C                     	;# 
  2622  018D                     	;# 
  2623  018E                     	;# 
  2624  0197                     	;# 
  2625  0199                     	;# 
  2626  0199                     	;# 
  2627  0199                     	;# 
  2628  019A                     	;# 
  2629  019A                     	;# 
  2630  019A                     	;# 
  2631  019B                     	;# 
  2632  019B                     	;# 
  2633  019B                     	;# 
  2634  019B                     	;# 
  2635  019B                     	;# 
  2636  019C                     	;# 
  2637  019C                     	;# 
  2638  019C                     	;# 
  2639  019D                     	;# 
  2640  019D                     	;# 
  2641  019D                     	;# 
  2642  019E                     	;# 
  2643  019E                     	;# 
  2644  019E                     	;# 
  2645  019F                     	;# 
  2646  019F                     	;# 
  2647  019F                     	;# 
  2648  019F                     	;# 
  2649  019F                     	;# 
  2650  020C                     	;# 
  2651  020D                     	;# 
  2652  020E                     	;# 
  2653  0211                     	;# 
  2654  0211                     	;# 
  2655  0212                     	;# 
  2656  0212                     	;# 
  2657  0213                     	;# 
  2658  0213                     	;# 
  2659  0214                     	;# 
  2660  0214                     	;# 
  2661  0215                     	;# 
  2662  0215                     	;# 
  2663  0215                     	;# 
  2664  0215                     	;# 
  2665  0216                     	;# 
  2666  0216                     	;# 
  2667  0217                     	;# 
  2668  0217                     	;# 
  2669  0219                     	;# 
  2670  021A                     	;# 
  2671  021B                     	;# 
  2672  021C                     	;# 
  2673  021D                     	;# 
  2674  021D                     	;# 
  2675  021E                     	;# 
  2676  021F                     	;# 
  2677  028C                     	;# 
  2678  028D                     	;# 
  2679  028E                     	;# 
  2680  0291                     	;# 
  2681  0291                     	;# 
  2682  0292                     	;# 
  2683  0293                     	;# 
  2684  0294                     	;# 
  2685  0295                     	;# 
  2686  0295                     	;# 
  2687  0296                     	;# 
  2688  0297                     	;# 
  2689  0298                     	;# 
  2690  029F                     	;# 
  2691  030C                     	;# 
  2692  030D                     	;# 
  2693  030E                     	;# 
  2694  0311                     	;# 
  2695  0311                     	;# 
  2696  0312                     	;# 
  2697  0313                     	;# 
  2698  0314                     	;# 
  2699  0315                     	;# 
  2700  0315                     	;# 
  2701  0316                     	;# 
  2702  0317                     	;# 
  2703  0318                     	;# 
  2704  038C                     	;# 
  2705  038D                     	;# 
  2706  038E                     	;# 
  2707  0391                     	;# 
  2708  0392                     	;# 
  2709  0393                     	;# 
  2710  0394                     	;# 
  2711  0395                     	;# 
  2712  0396                     	;# 
  2713  0397                     	;# 
  2714  0398                     	;# 
  2715  0399                     	;# 
  2716  039A                     	;# 
  2717  039C                     	;# 
  2718  039D                     	;# 
  2719  039E                     	;# 
  2720  039F                     	;# 
  2721  0411                     	;# 
  2722  0411                     	;# 
  2723  0412                     	;# 
  2724  0413                     	;# 
  2725  0414                     	;# 
  2726  0415                     	;# 
  2727  0416                     	;# 
  2728  0417                     	;# 
  2729  0418                     	;# 
  2730  0418                     	;# 
  2731  0419                     	;# 
  2732  041A                     	;# 
  2733  041B                     	;# 
  2734  041C                     	;# 
  2735  041D                     	;# 
  2736  041E                     	;# 
  2737  041F                     	;# 
  2738  0498                     	;# 
  2739  0498                     	;# 
  2740  0499                     	;# 
  2741  049A                     	;# 
  2742  049B                     	;# 
  2743  049B                     	;# 
  2744  049C                     	;# 
  2745  049D                     	;# 
  2746  049E                     	;# 
  2747  049F                     	;# 
  2748  0617                     	;# 
  2749  0618                     	;# 
  2750  0619                     	;# 
  2751  0619                     	;# 
  2752  061A                     	;# 
  2753  061B                     	;# 
  2754  061C                     	;# 
  2755  061C                     	;# 
  2756  061F                     	;# 
  2757  0691                     	;# 
  2758  0692                     	;# 
  2759  0693                     	;# 
  2760  0694                     	;# 
  2761  0695                     	;# 
  2762  0696                     	;# 
  2763  0697                     	;# 
  2764  0698                     	;# 
  2765  0699                     	;# 
  2766  0711                     	;# 
  2767  0712                     	;# 
  2768  0713                     	;# 
  2769  0714                     	;# 
  2770  0715                     	;# 
  2771  0716                     	;# 
  2772  0717                     	;# 
  2773  0718                     	;# 
  2774  0719                     	;# 
  2775  0891                     	;# 
  2776  0891                     	;# 
  2777  0891                     	;# 
  2778  0891                     	;# 
  2779  0891                     	;# 
  2780  0891                     	;# 
  2781  0892                     	;# 
  2782  0892                     	;# 
  2783  0892                     	;# 
  2784  0893                     	;# 
  2785  0893                     	;# 
  2786  0893                     	;# 
  2787  0893                     	;# 
  2788  0893                     	;# 
  2789  0893                     	;# 
  2790  0894                     	;# 
  2791  0894                     	;# 
  2792  0894                     	;# 
  2793  0895                     	;# 
  2794  0895                     	;# 
  2795  0895                     	;# 
  2796  0896                     	;# 
  2797  0896                     	;# 
  2798  0896                     	;# 
  2799  089B                     	;# 
  2800  0911                     	;# 
  2801  0912                     	;# 
  2802  0913                     	;# 
  2803  0914                     	;# 
  2804  0915                     	;# 
  2805  0916                     	;# 
  2806  0918                     	;# 
  2807  0919                     	;# 
  2808  091A                     	;# 
  2809  091B                     	;# 
  2810  091C                     	;# 
  2811  091D                     	;# 
  2812  091E                     	;# 
  2813  091F                     	;# 
  2814  0E0F                     	;# 
  2815  0E10                     	;# 
  2816  0E11                     	;# 
  2817  0E12                     	;# 
  2818  0E13                     	;# 
  2819  0E14                     	;# 
  2820  0E15                     	;# 
  2821  0E16                     	;# 
  2822  0E17                     	;# 
  2823  0E18                     	;# 
  2824  0E19                     	;# 
  2825  0E1A                     	;# 
  2826  0E1B                     	;# 
  2827  0E1C                     	;# 
  2828  0E1D                     	;# 
  2829  0E1E                     	;# 
  2830  0E1F                     	;# 
  2831  0E20                     	;# 
  2832  0E21                     	;# 
  2833  0E22                     	;# 
  2834  0E24                     	;# 
  2835  0E25                     	;# 
  2836  0E28                     	;# 
  2837  0E29                     	;# 
  2838  0E2A                     	;# 
  2839  0E2B                     	;# 
  2840  0E2C                     	;# 
  2841  0E2D                     	;# 
  2842  0E2E                     	;# 
  2843  0E2F                     	;# 
  2844  0E90                     	;# 
  2845  0E91                     	;# 
  2846  0E92                     	;# 
  2847  0E94                     	;# 
  2848  0E95                     	;# 
  2849  0E9C                     	;# 
  2850  0E9D                     	;# 
  2851  0E9E                     	;# 
  2852  0E9F                     	;# 
  2853  0EA0                     	;# 
  2854  0EA1                     	;# 
  2855  0EA2                     	;# 
  2856  0EA3                     	;# 
  2857  0EA4                     	;# 
  2858  0EA5                     	;# 
  2859  0EA6                     	;# 
  2860  0EA7                     	;# 
  2861  0F0F                     	;# 
  2862  0F10                     	;# 
  2863  0F11                     	;# 
  2864  0F12                     	;# 
  2865  0F13                     	;# 
  2866  0F14                     	;# 
  2867  0F15                     	;# 
  2868  0F16                     	;# 
  2869  0F17                     	;# 
  2870  0F18                     	;# 
  2871  0F19                     	;# 
  2872  0F1A                     	;# 
  2873  0F1B                     	;# 
  2874  0F1C                     	;# 
  2875  0F1D                     	;# 
  2876  0F1E                     	;# 
  2877  0F1F                     	;# 
  2878  0F20                     	;# 
  2879  0F21                     	;# 
  2880  0F22                     	;# 
  2881  0F23                     	;# 
  2882  0F24                     	;# 
  2883  0F25                     	;# 
  2884  0F26                     	;# 
  2885  0F27                     	;# 
  2886  0F28                     	;# 
  2887  0F29                     	;# 
  2888  0F2A                     	;# 
  2889  0F2B                     	;# 
  2890  0F2C                     	;# 
  2891  0F2D                     	;# 
  2892  0F2E                     	;# 
  2893  0F2F                     	;# 
  2894  0F30                     	;# 
  2895  0F31                     	;# 
  2896  0F32                     	;# 
  2897  0F33                     	;# 
  2898  0F34                     	;# 
  2899  0F35                     	;# 
  2900  0F36                     	;# 
  2901  0F37                     	;# 
  2902  0FE4                     	;# 
  2903  0FE5                     	;# 
  2904  0FE6                     	;# 
  2905  0FE7                     	;# 
  2906  0FE8                     	;# 
  2907  0FE9                     	;# 
  2908  0FEA                     	;# 
  2909  0FEB                     	;# 
  2910  0FED                     	;# 
  2911  0FEE                     	;# 
  2912  0FEF                     	;# 
  2913  0000                     	;# 
  2914  0001                     	;# 
  2915  0002                     	;# 
  2916  0003                     	;# 
  2917  0004                     	;# 
  2918  0005                     	;# 
  2919  0006                     	;# 
  2920  0007                     	;# 
  2921  0008                     	;# 
  2922  0009                     	;# 
  2923  000A                     	;# 
  2924  000B                     	;# 
  2925  000C                     	;# 
  2926  000D                     	;# 
  2927  000E                     	;# 
  2928  0010                     	;# 
  2929  0011                     	;# 
  2930  0012                     	;# 
  2931  0013                     	;# 
  2932  0014                     	;# 
  2933  0015                     	;# 
  2934  0015                     	;# 
  2935  0016                     	;# 
  2936  0016                     	;# 
  2937  0017                     	;# 
  2938  0018                     	;# 
  2939  0019                     	;# 
  2940  0019                     	;# 
  2941  001A                     	;# 
  2942  001B                     	;# 
  2943  001C                     	;# 
  2944  001D                     	;# 
  2945  001E                     	;# 
  2946  001F                     	;# 
  2947  008C                     	;# 
  2948  008D                     	;# 
  2949  008E                     	;# 
  2950  0090                     	;# 
  2951  0091                     	;# 
  2952  0092                     	;# 
  2953  0093                     	;# 
  2954  0094                     	;# 
  2955  0097                     	;# 
  2956  009B                     	;# 
  2957  009B                     	;# 
  2958  009C                     	;# 
  2959  009D                     	;# 
  2960  009E                     	;# 
  2961  009F                     	;# 
  2962  010C                     	;# 
  2963  010D                     	;# 
  2964  010E                     	;# 
  2965  0111                     	;# 
  2966  0112                     	;# 
  2967  0113                     	;# 
  2968  0114                     	;# 
  2969  0115                     	;# 
  2970  0116                     	;# 
  2971  0117                     	;# 
  2972  0118                     	;# 
  2973  0119                     	;# 
  2974  018C                     	;# 
  2975  018D                     	;# 
  2976  018E                     	;# 
  2977  0197                     	;# 
  2978  0199                     	;# 
  2979  0199                     	;# 
  2980  0199                     	;# 
  2981  019A                     	;# 
  2982  019A                     	;# 
  2983  019A                     	;# 
  2984  019B                     	;# 
  2985  019B                     	;# 
  2986  019B                     	;# 
  2987  019B                     	;# 
  2988  019B                     	;# 
  2989  019C                     	;# 
  2990  019C                     	;# 
  2991  019C                     	;# 
  2992  019D                     	;# 
  2993  019D                     	;# 
  2994  019D                     	;# 
  2995  019E                     	;# 
  2996  019E                     	;# 
  2997  019E                     	;# 
  2998  019F                     	;# 
  2999  019F                     	;# 
  3000  019F                     	;# 
  3001  019F                     	;# 
  3002  019F                     	;# 
  3003  020C                     	;# 
  3004  020D                     	;# 
  3005  020E                     	;# 
  3006  0211                     	;# 
  3007  0211                     	;# 
  3008  0212                     	;# 
  3009  0212                     	;# 
  3010  0213                     	;# 
  3011  0213                     	;# 
  3012  0214                     	;# 
  3013  0214                     	;# 
  3014  0215                     	;# 
  3015  0215                     	;# 
  3016  0215                     	;# 
  3017  0215                     	;# 
  3018  0216                     	;# 
  3019  0216                     	;# 
  3020  0217                     	;# 
  3021  0217                     	;# 
  3022  0219                     	;# 
  3023  021A                     	;# 
  3024  021B                     	;# 
  3025  021C                     	;# 
  3026  021D                     	;# 
  3027  021D                     	;# 
  3028  021E                     	;# 
  3029  021F                     	;# 
  3030  028C                     	;# 
  3031  028D                     	;# 
  3032  028E                     	;# 
  3033  0291                     	;# 
  3034  0291                     	;# 
  3035  0292                     	;# 
  3036  0293                     	;# 
  3037  0294                     	;# 
  3038  0295                     	;# 
  3039  0295                     	;# 
  3040  0296                     	;# 
  3041  0297                     	;# 
  3042  0298                     	;# 
  3043  029F                     	;# 
  3044  030C                     	;# 
  3045  030D                     	;# 
  3046  030E                     	;# 
  3047  0311                     	;# 
  3048  0311                     	;# 
  3049  0312                     	;# 
  3050  0313                     	;# 
  3051  0314                     	;# 
  3052  0315                     	;# 
  3053  0315                     	;# 
  3054  0316                     	;# 
  3055  0317                     	;# 
  3056  0318                     	;# 
  3057  038C                     	;# 
  3058  038D                     	;# 
  3059  038E                     	;# 
  3060  0391                     	;# 
  3061  0392                     	;# 
  3062  0393                     	;# 
  3063  0394                     	;# 
  3064  0395                     	;# 
  3065  0396                     	;# 
  3066  0397                     	;# 
  3067  0398                     	;# 
  3068  0399                     	;# 
  3069  039A                     	;# 
  3070  039C                     	;# 
  3071  039D                     	;# 
  3072  039E                     	;# 
  3073  039F                     	;# 
  3074  0411                     	;# 
  3075  0411                     	;# 
  3076  0412                     	;# 
  3077  0413                     	;# 
  3078  0414                     	;# 
  3079  0415                     	;# 
  3080  0416                     	;# 
  3081  0417                     	;# 
  3082  0418                     	;# 
  3083  0418                     	;# 
  3084  0419                     	;# 
  3085  041A                     	;# 
  3086  041B                     	;# 
  3087  041C                     	;# 
  3088  041D                     	;# 
  3089  041E                     	;# 
  3090  041F                     	;# 
  3091  0498                     	;# 
  3092  0498                     	;# 
  3093  0499                     	;# 
  3094  049A                     	;# 
  3095  049B                     	;# 
  3096  049B                     	;# 
  3097  049C                     	;# 
  3098  049D                     	;# 
  3099  049E                     	;# 
  3100  049F                     	;# 
  3101  0617                     	;# 
  3102  0618                     	;# 
  3103  0619                     	;# 
  3104  0619                     	;# 
  3105  061A                     	;# 
  3106  061B                     	;# 
  3107  061C                     	;# 
  3108  061C                     	;# 
  3109  061F                     	;# 
  3110  0691                     	;# 
  3111  0692                     	;# 
  3112  0693                     	;# 
  3113  0694                     	;# 
  3114  0695                     	;# 
  3115  0696                     	;# 
  3116  0697                     	;# 
  3117  0698                     	;# 
  3118  0699                     	;# 
  3119  0711                     	;# 
  3120  0712                     	;# 
  3121  0713                     	;# 
  3122  0714                     	;# 
  3123  0715                     	;# 
  3124  0716                     	;# 
  3125  0717                     	;# 
  3126  0718                     	;# 
  3127  0719                     	;# 
  3128  0891                     	;# 
  3129  0891                     	;# 
  3130  0891                     	;# 
  3131  0891                     	;# 
  3132  0891                     	;# 
  3133  0891                     	;# 
  3134  0892                     	;# 
  3135  0892                     	;# 
  3136  0892                     	;# 
  3137  0893                     	;# 
  3138  0893                     	;# 
  3139  0893                     	;# 
  3140  0893                     	;# 
  3141  0893                     	;# 
  3142  0893                     	;# 
  3143  0894                     	;# 
  3144  0894                     	;# 
  3145  0894                     	;# 
  3146  0895                     	;# 
  3147  0895                     	;# 
  3148  0895                     	;# 
  3149  0896                     	;# 
  3150  0896                     	;# 
  3151  0896                     	;# 
  3152  089B                     	;# 
  3153  0911                     	;# 
  3154  0912                     	;# 
  3155  0913                     	;# 
  3156  0914                     	;# 
  3157  0915                     	;# 
  3158  0916                     	;# 
  3159  0918                     	;# 
  3160  0919                     	;# 
  3161  091A                     	;# 
  3162  091B                     	;# 
  3163  091C                     	;# 
  3164  091D                     	;# 
  3165  091E                     	;# 
  3166  091F                     	;# 
  3167  0E0F                     	;# 
  3168  0E10                     	;# 
  3169  0E11                     	;# 
  3170  0E12                     	;# 
  3171  0E13                     	;# 
  3172  0E14                     	;# 
  3173  0E15                     	;# 
  3174  0E16                     	;# 
  3175  0E17                     	;# 
  3176  0E18                     	;# 
  3177  0E19                     	;# 
  3178  0E1A                     	;# 
  3179  0E1B                     	;# 
  3180  0E1C                     	;# 
  3181  0E1D                     	;# 
  3182  0E1E                     	;# 
  3183  0E1F                     	;# 
  3184  0E20                     	;# 
  3185  0E21                     	;# 
  3186  0E22                     	;# 
  3187  0E24                     	;# 
  3188  0E25                     	;# 
  3189  0E28                     	;# 
  3190  0E29                     	;# 
  3191  0E2A                     	;# 
  3192  0E2B                     	;# 
  3193  0E2C                     	;# 
  3194  0E2D                     	;# 
  3195  0E2E                     	;# 
  3196  0E2F                     	;# 
  3197  0E90                     	;# 
  3198  0E91                     	;# 
  3199  0E92                     	;# 
  3200  0E94                     	;# 
  3201  0E95                     	;# 
  3202  0E9C                     	;# 
  3203  0E9D                     	;# 
  3204  0E9E                     	;# 
  3205  0E9F                     	;# 
  3206  0EA0                     	;# 
  3207  0EA1                     	;# 
  3208  0EA2                     	;# 
  3209  0EA3                     	;# 
  3210  0EA4                     	;# 
  3211  0EA5                     	;# 
  3212  0EA6                     	;# 
  3213  0EA7                     	;# 
  3214  0F0F                     	;# 
  3215  0F10                     	;# 
  3216  0F11                     	;# 
  3217  0F12                     	;# 
  3218  0F13                     	;# 
  3219  0F14                     	;# 
  3220  0F15                     	;# 
  3221  0F16                     	;# 
  3222  0F17                     	;# 
  3223  0F18                     	;# 
  3224  0F19                     	;# 
  3225  0F1A                     	;# 
  3226  0F1B                     	;# 
  3227  0F1C                     	;# 
  3228  0F1D                     	;# 
  3229  0F1E                     	;# 
  3230  0F1F                     	;# 
  3231  0F20                     	;# 
  3232  0F21                     	;# 
  3233  0F22                     	;# 
  3234  0F23                     	;# 
  3235  0F24                     	;# 
  3236  0F25                     	;# 
  3237  0F26                     	;# 
  3238  0F27                     	;# 
  3239  0F28                     	;# 
  3240  0F29                     	;# 
  3241  0F2A                     	;# 
  3242  0F2B                     	;# 
  3243  0F2C                     	;# 
  3244  0F2D                     	;# 
  3245  0F2E                     	;# 
  3246  0F2F                     	;# 
  3247  0F30                     	;# 
  3248  0F31                     	;# 
  3249  0F32                     	;# 
  3250  0F33                     	;# 
  3251  0F34                     	;# 
  3252  0F35                     	;# 
  3253  0F36                     	;# 
  3254  0F37                     	;# 
  3255  0FE4                     	;# 
  3256  0FE5                     	;# 
  3257  0FE6                     	;# 
  3258  0FE7                     	;# 
  3259  0FE8                     	;# 
  3260  0FE9                     	;# 
  3261  0FEA                     	;# 
  3262  0FEB                     	;# 
  3263  0FED                     	;# 
  3264  0FEE                     	;# 
  3265  0FEF                     	;# 
  3266  0000                     	;# 
  3267  0001                     	;# 
  3268  0002                     	;# 
  3269  0003                     	;# 
  3270  0004                     	;# 
  3271  0005                     	;# 
  3272  0006                     	;# 
  3273  0007                     	;# 
  3274  0008                     	;# 
  3275  0009                     	;# 
  3276  000A                     	;# 
  3277  000B                     	;# 
  3278  000C                     	;# 
  3279  000D                     	;# 
  3280  000E                     	;# 
  3281  0010                     	;# 
  3282  0011                     	;# 
  3283  0012                     	;# 
  3284  0013                     	;# 
  3285  0014                     	;# 
  3286  0015                     	;# 
  3287  0015                     	;# 
  3288  0016                     	;# 
  3289  0016                     	;# 
  3290  0017                     	;# 
  3291  0018                     	;# 
  3292  0019                     	;# 
  3293  0019                     	;# 
  3294  001A                     	;# 
  3295  001B                     	;# 
  3296  001C                     	;# 
  3297  001D                     	;# 
  3298  001E                     	;# 
  3299  001F                     	;# 
  3300  008C                     	;# 
  3301  008D                     	;# 
  3302  008E                     	;# 
  3303  0090                     	;# 
  3304  0091                     	;# 
  3305  0092                     	;# 
  3306  0093                     	;# 
  3307  0094                     	;# 
  3308  0097                     	;# 
  3309  009B                     	;# 
  3310  009B                     	;# 
  3311  009C                     	;# 
  3312  009D                     	;# 
  3313  009E                     	;# 
  3314  009F                     	;# 
  3315  010C                     	;# 
  3316  010D                     	;# 
  3317  010E                     	;# 
  3318  0111                     	;# 
  3319  0112                     	;# 
  3320  0113                     	;# 
  3321  0114                     	;# 
  3322  0115                     	;# 
  3323  0116                     	;# 
  3324  0117                     	;# 
  3325  0118                     	;# 
  3326  0119                     	;# 
  3327  018C                     	;# 
  3328  018D                     	;# 
  3329  018E                     	;# 
  3330  0197                     	;# 
  3331  0199                     	;# 
  3332  0199                     	;# 
  3333  0199                     	;# 
  3334  019A                     	;# 
  3335  019A                     	;# 
  3336  019A                     	;# 
  3337  019B                     	;# 
  3338  019B                     	;# 
  3339  019B                     	;# 
  3340  019B                     	;# 
  3341  019B                     	;# 
  3342  019C                     	;# 
  3343  019C                     	;# 
  3344  019C                     	;# 
  3345  019D                     	;# 
  3346  019D                     	;# 
  3347  019D                     	;# 
  3348  019E                     	;# 
  3349  019E                     	;# 
  3350  019E                     	;# 
  3351  019F                     	;# 
  3352  019F                     	;# 
  3353  019F                     	;# 
  3354  019F                     	;# 
  3355  019F                     	;# 
  3356  020C                     	;# 
  3357  020D                     	;# 
  3358  020E                     	;# 
  3359  0211                     	;# 
  3360  0211                     	;# 
  3361  0212                     	;# 
  3362  0212                     	;# 
  3363  0213                     	;# 
  3364  0213                     	;# 
  3365  0214                     	;# 
  3366  0214                     	;# 
  3367  0215                     	;# 
  3368  0215                     	;# 
  3369  0215                     	;# 
  3370  0215                     	;# 
  3371  0216                     	;# 
  3372  0216                     	;# 
  3373  0217                     	;# 
  3374  0217                     	;# 
  3375  0219                     	;# 
  3376  021A                     	;# 
  3377  021B                     	;# 
  3378  021C                     	;# 
  3379  021D                     	;# 
  3380  021D                     	;# 
  3381  021E                     	;# 
  3382  021F                     	;# 
  3383  028C                     	;# 
  3384  028D                     	;# 
  3385  028E                     	;# 
  3386  0291                     	;# 
  3387  0291                     	;# 
  3388  0292                     	;# 
  3389  0293                     	;# 
  3390  0294                     	;# 
  3391  0295                     	;# 
  3392  0295                     	;# 
  3393  0296                     	;# 
  3394  0297                     	;# 
  3395  0298                     	;# 
  3396  029F                     	;# 
  3397  030C                     	;# 
  3398  030D                     	;# 
  3399  030E                     	;# 
  3400  0311                     	;# 
  3401  0311                     	;# 
  3402  0312                     	;# 
  3403  0313                     	;# 
  3404  0314                     	;# 
  3405  0315                     	;# 
  3406  0315                     	;# 
  3407  0316                     	;# 
  3408  0317                     	;# 
  3409  0318                     	;# 
  3410  038C                     	;# 
  3411  038D                     	;# 
  3412  038E                     	;# 
  3413  0391                     	;# 
  3414  0392                     	;# 
  3415  0393                     	;# 
  3416  0394                     	;# 
  3417  0395                     	;# 
  3418  0396                     	;# 
  3419  0397                     	;# 
  3420  0398                     	;# 
  3421  0399                     	;# 
  3422  039A                     	;# 
  3423  039C                     	;# 
  3424  039D                     	;# 
  3425  039E                     	;# 
  3426  039F                     	;# 
  3427  0411                     	;# 
  3428  0411                     	;# 
  3429  0412                     	;# 
  3430  0413                     	;# 
  3431  0414                     	;# 
  3432  0415                     	;# 
  3433  0416                     	;# 
  3434  0417                     	;# 
  3435  0418                     	;# 
  3436  0418                     	;# 
  3437  0419                     	;# 
  3438  041A                     	;# 
  3439  041B                     	;# 
  3440  041C                     	;# 
  3441  041D                     	;# 
  3442  041E                     	;# 
  3443  041F                     	;# 
  3444  0498                     	;# 
  3445  0498                     	;# 
  3446  0499                     	;# 
  3447  049A                     	;# 
  3448  049B                     	;# 
  3449  049B                     	;# 
  3450  049C                     	;# 
  3451  049D                     	;# 
  3452  049E                     	;# 
  3453  049F                     	;# 
  3454  0617                     	;# 
  3455  0618                     	;# 
  3456  0619                     	;# 
  3457  0619                     	;# 
  3458  061A                     	;# 
  3459  061B                     	;# 
  3460  061C                     	;# 
  3461  061C                     	;# 
  3462  061F                     	;# 
  3463  0691                     	;# 
  3464  0692                     	;# 
  3465  0693                     	;# 
  3466  0694                     	;# 
  3467  0695                     	;# 
  3468  0696                     	;# 
  3469  0697                     	;# 
  3470  0698                     	;# 
  3471  0699                     	;# 
  3472  0711                     	;# 
  3473  0712                     	;# 
  3474  0713                     	;# 
  3475  0714                     	;# 
  3476  0715                     	;# 
  3477  0716                     	;# 
  3478  0717                     	;# 
  3479  0718                     	;# 
  3480  0719                     	;# 
  3481  0891                     	;# 
  3482  0891                     	;# 
  3483  0891                     	;# 
  3484  0891                     	;# 
  3485  0891                     	;# 
  3486  0891                     	;# 
  3487  0892                     	;# 
  3488  0892                     	;# 
  3489  0892                     	;# 
  3490  0893                     	;# 
  3491  0893                     	;# 
  3492  0893                     	;# 
  3493  0893                     	;# 
  3494  0893                     	;# 
  3495  0893                     	;# 
  3496  0894                     	;# 
  3497  0894                     	;# 
  3498  0894                     	;# 
  3499  0895                     	;# 
  3500  0895                     	;# 
  3501  0895                     	;# 
  3502  0896                     	;# 
  3503  0896                     	;# 
  3504  0896                     	;# 
  3505  089B                     	;# 
  3506  0911                     	;# 
  3507  0912                     	;# 
  3508  0913                     	;# 
  3509  0914                     	;# 
  3510  0915                     	;# 
  3511  0916                     	;# 
  3512  0918                     	;# 
  3513  0919                     	;# 
  3514  091A                     	;# 
  3515  091B                     	;# 
  3516  091C                     	;# 
  3517  091D                     	;# 
  3518  091E                     	;# 
  3519  091F                     	;# 
  3520  0E0F                     	;# 
  3521  0E10                     	;# 
  3522  0E11                     	;# 
  3523  0E12                     	;# 
  3524  0E13                     	;# 
  3525  0E14                     	;# 
  3526  0E15                     	;# 
  3527  0E16                     	;# 
  3528  0E17                     	;# 
  3529  0E18                     	;# 
  3530  0E19                     	;# 
  3531  0E1A                     	;# 
  3532  0E1B                     	;# 
  3533  0E1C                     	;# 
  3534  0E1D                     	;# 
  3535  0E1E                     	;# 
  3536  0E1F                     	;# 
  3537  0E20                     	;# 
  3538  0E21                     	;# 
  3539  0E22                     	;# 
  3540  0E24                     	;# 
  3541  0E25                     	;# 
  3542  0E28                     	;# 
  3543  0E29                     	;# 
  3544  0E2A                     	;# 
  3545  0E2B                     	;# 
  3546  0E2C                     	;# 
  3547  0E2D                     	;# 
  3548  0E2E                     	;# 
  3549  0E2F                     	;# 
  3550  0E90                     	;# 
  3551  0E91                     	;# 
  3552  0E92                     	;# 
  3553  0E94                     	;# 
  3554  0E95                     	;# 
  3555  0E9C                     	;# 
  3556  0E9D                     	;# 
  3557  0E9E                     	;# 
  3558  0E9F                     	;# 
  3559  0EA0                     	;# 
  3560  0EA1                     	;# 
  3561  0EA2                     	;# 
  3562  0EA3                     	;# 
  3563  0EA4                     	;# 
  3564  0EA5                     	;# 
  3565  0EA6                     	;# 
  3566  0EA7                     	;# 
  3567  0F0F                     	;# 
  3568  0F10                     	;# 
  3569  0F11                     	;# 
  3570  0F12                     	;# 
  3571  0F13                     	;# 
  3572  0F14                     	;# 
  3573  0F15                     	;# 
  3574  0F16                     	;# 
  3575  0F17                     	;# 
  3576  0F18                     	;# 
  3577  0F19                     	;# 
  3578  0F1A                     	;# 
  3579  0F1B                     	;# 
  3580  0F1C                     	;# 
  3581  0F1D                     	;# 
  3582  0F1E                     	;# 
  3583  0F1F                     	;# 
  3584  0F20                     	;# 
  3585  0F21                     	;# 
  3586  0F22                     	;# 
  3587  0F23                     	;# 
  3588  0F24                     	;# 
  3589  0F25                     	;# 
  3590  0F26                     	;# 
  3591  0F27                     	;# 
  3592  0F28                     	;# 
  3593  0F29                     	;# 
  3594  0F2A                     	;# 
  3595  0F2B                     	;# 
  3596  0F2C                     	;# 
  3597  0F2D                     	;# 
  3598  0F2E                     	;# 
  3599  0F2F                     	;# 
  3600  0F30                     	;# 
  3601  0F31                     	;# 
  3602  0F32                     	;# 
  3603  0F33                     	;# 
  3604  0F34                     	;# 
  3605  0F35                     	;# 
  3606  0F36                     	;# 
  3607  0F37                     	;# 
  3608  0FE4                     	;# 
  3609  0FE5                     	;# 
  3610  0FE6                     	;# 
  3611  0FE7                     	;# 
  3612  0FE8                     	;# 
  3613  0FE9                     	;# 
  3614  0FEA                     	;# 
  3615  0FEB                     	;# 
  3616  0FED                     	;# 
  3617  0FEE                     	;# 
  3618  0FEF                     	;# 
  3619  0000                     	;# 
  3620  0001                     	;# 
  3621  0002                     	;# 
  3622  0003                     	;# 
  3623  0004                     	;# 
  3624  0005                     	;# 
  3625  0006                     	;# 
  3626  0007                     	;# 
  3627  0008                     	;# 
  3628  0009                     	;# 
  3629  000A                     	;# 
  3630  000B                     	;# 
  3631  000C                     	;# 
  3632  000D                     	;# 
  3633  000E                     	;# 
  3634  0010                     	;# 
  3635  0011                     	;# 
  3636  0012                     	;# 
  3637  0013                     	;# 
  3638  0014                     	;# 
  3639  0015                     	;# 
  3640  0015                     	;# 
  3641  0016                     	;# 
  3642  0016                     	;# 
  3643  0017                     	;# 
  3644  0018                     	;# 
  3645  0019                     	;# 
  3646  0019                     	;# 
  3647  001A                     	;# 
  3648  001B                     	;# 
  3649  001C                     	;# 
  3650  001D                     	;# 
  3651  001E                     	;# 
  3652  001F                     	;# 
  3653  008C                     	;# 
  3654  008D                     	;# 
  3655  008E                     	;# 
  3656  0090                     	;# 
  3657  0091                     	;# 
  3658  0092                     	;# 
  3659  0093                     	;# 
  3660  0094                     	;# 
  3661  0097                     	;# 
  3662  009B                     	;# 
  3663  009B                     	;# 
  3664  009C                     	;# 
  3665  009D                     	;# 
  3666  009E                     	;# 
  3667  009F                     	;# 
  3668  010C                     	;# 
  3669  010D                     	;# 
  3670  010E                     	;# 
  3671  0111                     	;# 
  3672  0112                     	;# 
  3673  0113                     	;# 
  3674  0114                     	;# 
  3675  0115                     	;# 
  3676  0116                     	;# 
  3677  0117                     	;# 
  3678  0118                     	;# 
  3679  0119                     	;# 
  3680  018C                     	;# 
  3681  018D                     	;# 
  3682  018E                     	;# 
  3683  0197                     	;# 
  3684  0199                     	;# 
  3685  0199                     	;# 
  3686  0199                     	;# 
  3687  019A                     	;# 
  3688  019A                     	;# 
  3689  019A                     	;# 
  3690  019B                     	;# 
  3691  019B                     	;# 
  3692  019B                     	;# 
  3693  019B                     	;# 
  3694  019B                     	;# 
  3695  019C                     	;# 
  3696  019C                     	;# 
  3697  019C                     	;# 
  3698  019D                     	;# 
  3699  019D                     	;# 
  3700  019D                     	;# 
  3701  019E                     	;# 
  3702  019E                     	;# 
  3703  019E                     	;# 
  3704  019F                     	;# 
  3705  019F                     	;# 
  3706  019F                     	;# 
  3707  019F                     	;# 
  3708  019F                     	;# 
  3709  020C                     	;# 
  3710  020D                     	;# 
  3711  020E                     	;# 
  3712  0211                     	;# 
  3713  0211                     	;# 
  3714  0212                     	;# 
  3715  0212                     	;# 
  3716  0213                     	;# 
  3717  0213                     	;# 
  3718  0214                     	;# 
  3719  0214                     	;# 
  3720  0215                     	;# 
  3721  0215                     	;# 
  3722  0215                     	;# 
  3723  0215                     	;# 
  3724  0216                     	;# 
  3725  0216                     	;# 
  3726  0217                     	;# 
  3727  0217                     	;# 
  3728  0219                     	;# 
  3729  021A                     	;# 
  3730  021B                     	;# 
  3731  021C                     	;# 
  3732  021D                     	;# 
  3733  021D                     	;# 
  3734  021E                     	;# 
  3735  021F                     	;# 
  3736  028C                     	;# 
  3737  028D                     	;# 
  3738  028E                     	;# 
  3739  0291                     	;# 
  3740  0291                     	;# 
  3741  0292                     	;# 
  3742  0293                     	;# 
  3743  0294                     	;# 
  3744  0295                     	;# 
  3745  0295                     	;# 
  3746  0296                     	;# 
  3747  0297                     	;# 
  3748  0298                     	;# 
  3749  029F                     	;# 
  3750  030C                     	;# 
  3751  030D                     	;# 
  3752  030E                     	;# 
  3753  0311                     	;# 
  3754  0311                     	;# 
  3755  0312                     	;# 
  3756  0313                     	;# 
  3757  0314                     	;# 
  3758  0315                     	;# 
  3759  0315                     	;# 
  3760  0316                     	;# 
  3761  0317                     	;# 
  3762  0318                     	;# 
  3763  038C                     	;# 
  3764  038D                     	;# 
  3765  038E                     	;# 
  3766  0391                     	;# 
  3767  0392                     	;# 
  3768  0393                     	;# 
  3769  0394                     	;# 
  3770  0395                     	;# 
  3771  0396                     	;# 
  3772  0397                     	;# 
  3773  0398                     	;# 
  3774  0399                     	;# 
  3775  039A                     	;# 
  3776  039C                     	;# 
  3777  039D                     	;# 
  3778  039E                     	;# 
  3779  039F                     	;# 
  3780  0411                     	;# 
  3781  0411                     	;# 
  3782  0412                     	;# 
  3783  0413                     	;# 
  3784  0414                     	;# 
  3785  0415                     	;# 
  3786  0416                     	;# 
  3787  0417                     	;# 
  3788  0418                     	;# 
  3789  0418                     	;# 
  3790  0419                     	;# 
  3791  041A                     	;# 
  3792  041B                     	;# 
  3793  041C                     	;# 
  3794  041D                     	;# 
  3795  041E                     	;# 
  3796  041F                     	;# 
  3797  0498                     	;# 
  3798  0498                     	;# 
  3799  0499                     	;# 
  3800  049A                     	;# 
  3801  049B                     	;# 
  3802  049B                     	;# 
  3803  049C                     	;# 
  3804  049D                     	;# 
  3805  049E                     	;# 
  3806  049F                     	;# 
  3807  0617                     	;# 
  3808  0618                     	;# 
  3809  0619                     	;# 
  3810  0619                     	;# 
  3811  061A                     	;# 
  3812  061B                     	;# 
  3813  061C                     	;# 
  3814  061C                     	;# 
  3815  061F                     	;# 
  3816  0691                     	;# 
  3817  0692                     	;# 
  3818  0693                     	;# 
  3819  0694                     	;# 
  3820  0695                     	;# 
  3821  0696                     	;# 
  3822  0697                     	;# 
  3823  0698                     	;# 
  3824  0699                     	;# 
  3825  0711                     	;# 
  3826  0712                     	;# 
  3827  0713                     	;# 
  3828  0714                     	;# 
  3829  0715                     	;# 
  3830  0716                     	;# 
  3831  0717                     	;# 
  3832  0718                     	;# 
  3833  0719                     	;# 
  3834  0891                     	;# 
  3835  0891                     	;# 
  3836  0891                     	;# 
  3837  0891                     	;# 
  3838  0891                     	;# 
  3839  0891                     	;# 
  3840  0892                     	;# 
  3841  0892                     	;# 
  3842  0892                     	;# 
  3843  0893                     	;# 
  3844  0893                     	;# 
  3845  0893                     	;# 
  3846  0893                     	;# 
  3847  0893                     	;# 
  3848  0893                     	;# 
  3849  0894                     	;# 
  3850  0894                     	;# 
  3851  0894                     	;# 
  3852  0895                     	;# 
  3853  0895                     	;# 
  3854  0895                     	;# 
  3855  0896                     	;# 
  3856  0896                     	;# 
  3857  0896                     	;# 
  3858  089B                     	;# 
  3859  0911                     	;# 
  3860  0912                     	;# 
  3861  0913                     	;# 
  3862  0914                     	;# 
  3863  0915                     	;# 
  3864  0916                     	;# 
  3865  0918                     	;# 
  3866  0919                     	;# 
  3867  091A                     	;# 
  3868  091B                     	;# 
  3869  091C                     	;# 
  3870  091D                     	;# 
  3871  091E                     	;# 
  3872  091F                     	;# 
  3873  0E0F                     	;# 
  3874  0E10                     	;# 
  3875  0E11                     	;# 
  3876  0E12                     	;# 
  3877  0E13                     	;# 
  3878  0E14                     	;# 
  3879  0E15                     	;# 
  3880  0E16                     	;# 
  3881  0E17                     	;# 
  3882  0E18                     	;# 
  3883  0E19                     	;# 
  3884  0E1A                     	;# 
  3885  0E1B                     	;# 
  3886  0E1C                     	;# 
  3887  0E1D                     	;# 
  3888  0E1E                     	;# 
  3889  0E1F                     	;# 
  3890  0E20                     	;# 
  3891  0E21                     	;# 
  3892  0E22                     	;# 
  3893  0E24                     	;# 
  3894  0E25                     	;# 
  3895  0E28                     	;# 
  3896  0E29                     	;# 
  3897  0E2A                     	;# 
  3898  0E2B                     	;# 
  3899  0E2C                     	;# 
  3900  0E2D                     	;# 
  3901  0E2E                     	;# 
  3902  0E2F                     	;# 
  3903  0E90                     	;# 
  3904  0E91                     	;# 
  3905  0E92                     	;# 
  3906  0E94                     	;# 
  3907  0E95                     	;# 
  3908  0E9C                     	;# 
  3909  0E9D                     	;# 
  3910  0E9E                     	;# 
  3911  0E9F                     	;# 
  3912  0EA0                     	;# 
  3913  0EA1                     	;# 
  3914  0EA2                     	;# 
  3915  0EA3                     	;# 
  3916  0EA4                     	;# 
  3917  0EA5                     	;# 
  3918  0EA6                     	;# 
  3919  0EA7                     	;# 
  3920  0F0F                     	;# 
  3921  0F10                     	;# 
  3922  0F11                     	;# 
  3923  0F12                     	;# 
  3924  0F13                     	;# 
  3925  0F14                     	;# 
  3926  0F15                     	;# 
  3927  0F16                     	;# 
  3928  0F17                     	;# 
  3929  0F18                     	;# 
  3930  0F19                     	;# 
  3931  0F1A                     	;# 
  3932  0F1B                     	;# 
  3933  0F1C                     	;# 
  3934  0F1D                     	;# 
  3935  0F1E                     	;# 
  3936  0F1F                     	;# 
  3937  0F20                     	;# 
  3938  0F21                     	;# 
  3939  0F22                     	;# 
  3940  0F23                     	;# 
  3941  0F24                     	;# 
  3942  0F25                     	;# 
  3943  0F26                     	;# 
  3944  0F27                     	;# 
  3945  0F28                     	;# 
  3946  0F29                     	;# 
  3947  0F2A                     	;# 
  3948  0F2B                     	;# 
  3949  0F2C                     	;# 
  3950  0F2D                     	;# 
  3951  0F2E                     	;# 
  3952  0F2F                     	;# 
  3953  0F30                     	;# 
  3954  0F31                     	;# 
  3955  0F32                     	;# 
  3956  0F33                     	;# 
  3957  0F34                     	;# 
  3958  0F35                     	;# 
  3959  0F36                     	;# 
  3960  0F37                     	;# 
  3961  0FE4                     	;# 
  3962  0FE5                     	;# 
  3963  0FE6                     	;# 
  3964  0FE7                     	;# 
  3965  0FE8                     	;# 
  3966  0FE9                     	;# 
  3967  0FEA                     	;# 
  3968  0FEB                     	;# 
  3969  0FED                     	;# 
  3970  0FEE                     	;# 
  3971  0FEF                     	;# 
  3972  0000                     	;# 
  3973  0001                     	;# 
  3974  0002                     	;# 
  3975  0003                     	;# 
  3976  0004                     	;# 
  3977  0005                     	;# 
  3978  0006                     	;# 
  3979  0007                     	;# 
  3980  0008                     	;# 
  3981  0009                     	;# 
  3982  000A                     	;# 
  3983  000B                     	;# 
  3984  000C                     	;# 
  3985  000D                     	;# 
  3986  000E                     	;# 
  3987  0010                     	;# 
  3988  0011                     	;# 
  3989  0012                     	;# 
  3990  0013                     	;# 
  3991  0014                     	;# 
  3992  0015                     	;# 
  3993  0015                     	;# 
  3994  0016                     	;# 
  3995  0016                     	;# 
  3996  0017                     	;# 
  3997  0018                     	;# 
  3998  0019                     	;# 
  3999  0019                     	;# 
  4000  001A                     	;# 
  4001  001B                     	;# 
  4002  001C                     	;# 
  4003  001D                     	;# 
  4004  001E                     	;# 
  4005  001F                     	;# 
  4006  008C                     	;# 
  4007  008D                     	;# 
  4008  008E                     	;# 
  4009  0090                     	;# 
  4010  0091                     	;# 
  4011  0092                     	;# 
  4012  0093                     	;# 
  4013  0094                     	;# 
  4014  0097                     	;# 
  4015  009B                     	;# 
  4016  009B                     	;# 
  4017  009C                     	;# 
  4018  009D                     	;# 
  4019  009E                     	;# 
  4020  009F                     	;# 
  4021  010C                     	;# 
  4022  010D                     	;# 
  4023  010E                     	;# 
  4024  0111                     	;# 
  4025  0112                     	;# 
  4026  0113                     	;# 
  4027  0114                     	;# 
  4028  0115                     	;# 
  4029  0116                     	;# 
  4030  0117                     	;# 
  4031  0118                     	;# 
  4032  0119                     	;# 
  4033  018C                     	;# 
  4034  018D                     	;# 
  4035  018E                     	;# 
  4036  0197                     	;# 
  4037  0199                     	;# 
  4038  0199                     	;# 
  4039  0199                     	;# 
  4040  019A                     	;# 
  4041  019A                     	;# 
  4042  019A                     	;# 
  4043  019B                     	;# 
  4044  019B                     	;# 
  4045  019B                     	;# 
  4046  019B                     	;# 
  4047  019B                     	;# 
  4048  019C                     	;# 
  4049  019C                     	;# 
  4050  019C                     	;# 
  4051  019D                     	;# 
  4052  019D                     	;# 
  4053  019D                     	;# 
  4054  019E                     	;# 
  4055  019E                     	;# 
  4056  019E                     	;# 
  4057  019F                     	;# 
  4058  019F                     	;# 
  4059  019F                     	;# 
  4060  019F                     	;# 
  4061  019F                     	;# 
  4062  020C                     	;# 
  4063  020D                     	;# 
  4064  020E                     	;# 
  4065  0211                     	;# 
  4066  0211                     	;# 
  4067  0212                     	;# 
  4068  0212                     	;# 
  4069  0213                     	;# 
  4070  0213                     	;# 
  4071  0214                     	;# 
  4072  0214                     	;# 
  4073  0215                     	;# 
  4074  0215                     	;# 
  4075  0215                     	;# 
  4076  0215                     	;# 
  4077  0216                     	;# 
  4078  0216                     	;# 
  4079  0217                     	;# 
  4080  0217                     	;# 
  4081  0219                     	;# 
  4082  021A                     	;# 
  4083  021B                     	;# 
  4084  021C                     	;# 
  4085  021D                     	;# 
  4086  021D                     	;# 
  4087  021E                     	;# 
  4088  021F                     	;# 
  4089  028C                     	;# 
  4090  028D                     	;# 
  4091  028E                     	;# 
  4092  0291                     	;# 
  4093  0291                     	;# 
  4094  0292                     	;# 
  4095  0293                     	;# 
  4096  0294                     	;# 
  4097  0295                     	;# 
  4098  0295                     	;# 
  4099  0296                     	;# 
  4100  0297                     	;# 
  4101  0298                     	;# 
  4102  029F                     	;# 
  4103  030C                     	;# 
  4104  030D                     	;# 
  4105  030E                     	;# 
  4106  0311                     	;# 
  4107  0311                     	;# 
  4108  0312                     	;# 
  4109  0313                     	;# 
  4110  0314                     	;# 
  4111  0315                     	;# 
  4112  0315                     	;# 
  4113  0316                     	;# 
  4114  0317                     	;# 
  4115  0318                     	;# 
  4116  038C                     	;# 
  4117  038D                     	;# 
  4118  038E                     	;# 
  4119  0391                     	;# 
  4120  0392                     	;# 
  4121  0393                     	;# 
  4122  0394                     	;# 
  4123  0395                     	;# 
  4124  0396                     	;# 
  4125  0397                     	;# 
  4126  0398                     	;# 
  4127  0399                     	;# 
  4128  039A                     	;# 
  4129  039C                     	;# 
  4130  039D                     	;# 
  4131  039E                     	;# 
  4132  039F                     	;# 
  4133  0411                     	;# 
  4134  0411                     	;# 
  4135  0412                     	;# 
  4136  0413                     	;# 
  4137  0414                     	;# 
  4138  0415                     	;# 
  4139  0416                     	;# 
  4140  0417                     	;# 
  4141  0418                     	;# 
  4142  0418                     	;# 
  4143  0419                     	;# 
  4144  041A                     	;# 
  4145  041B                     	;# 
  4146  041C                     	;# 
  4147  041D                     	;# 
  4148  041E                     	;# 
  4149  041F                     	;# 
  4150  0498                     	;# 
  4151  0498                     	;# 
  4152  0499                     	;# 
  4153  049A                     	;# 
  4154  049B                     	;# 
  4155  049B                     	;# 
  4156  049C                     	;# 
  4157  049D                     	;# 
  4158  049E                     	;# 
  4159  049F                     	;# 
  4160  0617                     	;# 
  4161  0618                     	;# 
  4162  0619                     	;# 
  4163  0619                     	;# 
  4164  061A                     	;# 
  4165  061B                     	;# 
  4166  061C                     	;# 
  4167  061C                     	;# 
  4168  061F                     	;# 
  4169  0691                     	;# 
  4170  0692                     	;# 
  4171  0693                     	;# 
  4172  0694                     	;# 
  4173  0695                     	;# 
  4174  0696                     	;# 
  4175  0697                     	;# 
  4176  0698                     	;# 
  4177  0699                     	;# 
  4178  0711                     	;# 
  4179  0712                     	;# 
  4180  0713                     	;# 
  4181  0714                     	;# 
  4182  0715                     	;# 
  4183  0716                     	;# 
  4184  0717                     	;# 
  4185  0718                     	;# 
  4186  0719                     	;# 
  4187  0891                     	;# 
  4188  0891                     	;# 
  4189  0891                     	;# 
  4190  0891                     	;# 
  4191  0891                     	;# 
  4192  0891                     	;# 
  4193  0892                     	;# 
  4194  0892                     	;# 
  4195  0892                     	;# 
  4196  0893                     	;# 
  4197  0893                     	;# 
  4198  0893                     	;# 
  4199  0893                     	;# 
  4200  0893                     	;# 
  4201  0893                     	;# 
  4202  0894                     	;# 
  4203  0894                     	;# 
  4204  0894                     	;# 
  4205  0895                     	;# 
  4206  0895                     	;# 
  4207  0895                     	;# 
  4208  0896                     	;# 
  4209  0896                     	;# 
  4210  0896                     	;# 
  4211  089B                     	;# 
  4212  0911                     	;# 
  4213  0912                     	;# 
  4214  0913                     	;# 
  4215  0914                     	;# 
  4216  0915                     	;# 
  4217  0916                     	;# 
  4218  0918                     	;# 
  4219  0919                     	;# 
  4220  091A                     	;# 
  4221  091B                     	;# 
  4222  091C                     	;# 
  4223  091D                     	;# 
  4224  091E                     	;# 
  4225  091F                     	;# 
  4226  0E0F                     	;# 
  4227  0E10                     	;# 
  4228  0E11                     	;# 
  4229  0E12                     	;# 
  4230  0E13                     	;# 
  4231  0E14                     	;# 
  4232  0E15                     	;# 
  4233  0E16                     	;# 
  4234  0E17                     	;# 
  4235  0E18                     	;# 
  4236  0E19                     	;# 
  4237  0E1A                     	;# 
  4238  0E1B                     	;# 
  4239  0E1C                     	;# 
  4240  0E1D                     	;# 
  4241  0E1E                     	;# 
  4242  0E1F                     	;# 
  4243  0E20                     	;# 
  4244  0E21                     	;# 
  4245  0E22                     	;# 
  4246  0E24                     	;# 
  4247  0E25                     	;# 
  4248  0E28                     	;# 
  4249  0E29                     	;# 
  4250  0E2A                     	;# 
  4251  0E2B                     	;# 
  4252  0E2C                     	;# 
  4253  0E2D                     	;# 
  4254  0E2E                     	;# 
  4255  0E2F                     	;# 
  4256  0E90                     	;# 
  4257  0E91                     	;# 
  4258  0E92                     	;# 
  4259  0E94                     	;# 
  4260  0E95                     	;# 
  4261  0E9C                     	;# 
  4262  0E9D                     	;# 
  4263  0E9E                     	;# 
  4264  0E9F                     	;# 
  4265  0EA0                     	;# 
  4266  0EA1                     	;# 
  4267  0EA2                     	;# 
  4268  0EA3                     	;# 
  4269  0EA4                     	;# 
  4270  0EA5                     	;# 
  4271  0EA6                     	;# 
  4272  0EA7                     	;# 
  4273  0F0F                     	;# 
  4274  0F10                     	;# 
  4275  0F11                     	;# 
  4276  0F12                     	;# 
  4277  0F13                     	;# 
  4278  0F14                     	;# 
  4279  0F15                     	;# 
  4280  0F16                     	;# 
  4281  0F17                     	;# 
  4282  0F18                     	;# 
  4283  0F19                     	;# 
  4284  0F1A                     	;# 
  4285  0F1B                     	;# 
  4286  0F1C                     	;# 
  4287  0F1D                     	;# 
  4288  0F1E                     	;# 
  4289  0F1F                     	;# 
  4290  0F20                     	;# 
  4291  0F21                     	;# 
  4292  0F22                     	;# 
  4293  0F23                     	;# 
  4294  0F24                     	;# 
  4295  0F25                     	;# 
  4296  0F26                     	;# 
  4297  0F27                     	;# 
  4298  0F28                     	;# 
  4299  0F29                     	;# 
  4300  0F2A                     	;# 
  4301  0F2B                     	;# 
  4302  0F2C                     	;# 
  4303  0F2D                     	;# 
  4304  0F2E                     	;# 
  4305  0F2F                     	;# 
  4306  0F30                     	;# 
  4307  0F31                     	;# 
  4308  0F32                     	;# 
  4309  0F33                     	;# 
  4310  0F34                     	;# 
  4311  0F35                     	;# 
  4312  0F36                     	;# 
  4313  0F37                     	;# 
  4314  0FE4                     	;# 
  4315  0FE5                     	;# 
  4316  0FE6                     	;# 
  4317  0FE7                     	;# 
  4318  0FE8                     	;# 
  4319  0FE9                     	;# 
  4320  0FEA                     	;# 
  4321  0FEB                     	;# 
  4322  0FED                     	;# 
  4323  0FEE                     	;# 
  4324  0FEF                     	;# 
  4325  0000                     	;# 
  4326  0001                     	;# 
  4327  0002                     	;# 
  4328  0003                     	;# 
  4329  0004                     	;# 
  4330  0005                     	;# 
  4331  0006                     	;# 
  4332  0007                     	;# 
  4333  0008                     	;# 
  4334  0009                     	;# 
  4335  000A                     	;# 
  4336  000B                     	;# 
  4337  000C                     	;# 
  4338  000D                     	;# 
  4339  000E                     	;# 
  4340  0010                     	;# 
  4341  0011                     	;# 
  4342  0012                     	;# 
  4343  0013                     	;# 
  4344  0014                     	;# 
  4345  0015                     	;# 
  4346  0015                     	;# 
  4347  0016                     	;# 
  4348  0016                     	;# 
  4349  0017                     	;# 
  4350  0018                     	;# 
  4351  0019                     	;# 
  4352  0019                     	;# 
  4353  001A                     	;# 
  4354  001B                     	;# 
  4355  001C                     	;# 
  4356  001D                     	;# 
  4357  001E                     	;# 
  4358  001F                     	;# 
  4359  008C                     	;# 
  4360  008D                     	;# 
  4361  008E                     	;# 
  4362  0090                     	;# 
  4363  0091                     	;# 
  4364  0092                     	;# 
  4365  0093                     	;# 
  4366  0094                     	;# 
  4367  0097                     	;# 
  4368  009B                     	;# 
  4369  009B                     	;# 
  4370  009C                     	;# 
  4371  009D                     	;# 
  4372  009E                     	;# 
  4373  009F                     	;# 
  4374  010C                     	;# 
  4375  010D                     	;# 
  4376  010E                     	;# 
  4377  0111                     	;# 
  4378  0112                     	;# 
  4379  0113                     	;# 
  4380  0114                     	;# 
  4381  0115                     	;# 
  4382  0116                     	;# 
  4383  0117                     	;# 
  4384  0118                     	;# 
  4385  0119                     	;# 
  4386  018C                     	;# 
  4387  018D                     	;# 
  4388  018E                     	;# 
  4389  0197                     	;# 
  4390  0199                     	;# 
  4391  0199                     	;# 
  4392  0199                     	;# 
  4393  019A                     	;# 
  4394  019A                     	;# 
  4395  019A                     	;# 
  4396  019B                     	;# 
  4397  019B                     	;# 
  4398  019B                     	;# 
  4399  019B                     	;# 
  4400  019B                     	;# 
  4401  019C                     	;# 
  4402  019C                     	;# 
  4403  019C                     	;# 
  4404  019D                     	;# 
  4405  019D                     	;# 
  4406  019D                     	;# 
  4407  019E                     	;# 
  4408  019E                     	;# 
  4409  019E                     	;# 
  4410  019F                     	;# 
  4411  019F                     	;# 
  4412  019F                     	;# 
  4413  019F                     	;# 
  4414  019F                     	;# 
  4415  020C                     	;# 
  4416  020D                     	;# 
  4417  020E                     	;# 
  4418  0211                     	;# 
  4419  0211                     	;# 
  4420  0212                     	;# 
  4421  0212                     	;# 
  4422  0213                     	;# 
  4423  0213                     	;# 
  4424  0214                     	;# 
  4425  0214                     	;# 
  4426  0215                     	;# 
  4427  0215                     	;# 
  4428  0215                     	;# 
  4429  0215                     	;# 
  4430  0216                     	;# 
  4431  0216                     	;# 
  4432  0217                     	;# 
  4433  0217                     	;# 
  4434  0219                     	;# 
  4435  021A                     	;# 
  4436  021B                     	;# 
  4437  021C                     	;# 
  4438  021D                     	;# 
  4439  021D                     	;# 
  4440  021E                     	;# 
  4441  021F                     	;# 
  4442  028C                     	;# 
  4443  028D                     	;# 
  4444  028E                     	;# 
  4445  0291                     	;# 
  4446  0291                     	;# 
  4447  0292                     	;# 
  4448  0293                     	;# 
  4449  0294                     	;# 
  4450  0295                     	;# 
  4451  0295                     	;# 
  4452  0296                     	;# 
  4453  0297                     	;# 
  4454  0298                     	;# 
  4455  029F                     	;# 
  4456  030C                     	;# 
  4457  030D                     	;# 
  4458  030E                     	;# 
  4459  0311                     	;# 
  4460  0311                     	;# 
  4461  0312                     	;# 
  4462  0313                     	;# 
  4463  0314                     	;# 
  4464  0315                     	;# 
  4465  0315                     	;# 
  4466  0316                     	;# 
  4467  0317                     	;# 
  4468  0318                     	;# 
  4469  038C                     	;# 
  4470  038D                     	;# 
  4471  038E                     	;# 
  4472  0391                     	;# 
  4473  0392                     	;# 
  4474  0393                     	;# 
  4475  0394                     	;# 
  4476  0395                     	;# 
  4477  0396                     	;# 
  4478  0397                     	;# 
  4479  0398                     	;# 
  4480  0399                     	;# 
  4481  039A                     	;# 
  4482  039C                     	;# 
  4483  039D                     	;# 
  4484  039E                     	;# 
  4485  039F                     	;# 
  4486  0411                     	;# 
  4487  0411                     	;# 
  4488  0412                     	;# 
  4489  0413                     	;# 
  4490  0414                     	;# 
  4491  0415                     	;# 
  4492  0416                     	;# 
  4493  0417                     	;# 
  4494  0418                     	;# 
  4495  0418                     	;# 
  4496  0419                     	;# 
  4497  041A                     	;# 
  4498  041B                     	;# 
  4499  041C                     	;# 
  4500  041D                     	;# 
  4501  041E                     	;# 
  4502  041F                     	;# 
  4503  0498                     	;# 
  4504  0498                     	;# 
  4505  0499                     	;# 
  4506  049A                     	;# 
  4507  049B                     	;# 
  4508  049B                     	;# 
  4509  049C                     	;# 
  4510  049D                     	;# 
  4511  049E                     	;# 
  4512  049F                     	;# 
  4513  0617                     	;# 
  4514  0618                     	;# 
  4515  0619                     	;# 
  4516  0619                     	;# 
  4517  061A                     	;# 
  4518  061B                     	;# 
  4519  061C                     	;# 
  4520  061C                     	;# 
  4521  061F                     	;# 
  4522  0691                     	;# 
  4523  0692                     	;# 
  4524  0693                     	;# 
  4525  0694                     	;# 
  4526  0695                     	;# 
  4527  0696                     	;# 
  4528  0697                     	;# 
  4529  0698                     	;# 
  4530  0699                     	;# 
  4531  0711                     	;# 
  4532  0712                     	;# 
  4533  0713                     	;# 
  4534  0714                     	;# 
  4535  0715                     	;# 
  4536  0716                     	;# 
  4537  0717                     	;# 
  4538  0718                     	;# 
  4539  0719                     	;# 
  4540  0891                     	;# 
  4541  0891                     	;# 
  4542  0891                     	;# 
  4543  0891                     	;# 
  4544  0891                     	;# 
  4545  0891                     	;# 
  4546  0892                     	;# 
  4547  0892                     	;# 
  4548  0892                     	;# 
  4549  0893                     	;# 
  4550  0893                     	;# 
  4551  0893                     	;# 
  4552  0893                     	;# 
  4553  0893                     	;# 
  4554  0893                     	;# 
  4555  0894                     	;# 
  4556  0894                     	;# 
  4557  0894                     	;# 
  4558  0895                     	;# 
  4559  0895                     	;# 
  4560  0895                     	;# 
  4561  0896                     	;# 
  4562  0896                     	;# 
  4563  0896                     	;# 
  4564  089B                     	;# 
  4565  0911                     	;# 
  4566  0912                     	;# 
  4567  0913                     	;# 
  4568  0914                     	;# 
  4569  0915                     	;# 
  4570  0916                     	;# 
  4571  0918                     	;# 
  4572  0919                     	;# 
  4573  091A                     	;# 
  4574  091B                     	;# 
  4575  091C                     	;# 
  4576  091D                     	;# 
  4577  091E                     	;# 
  4578  091F                     	;# 
  4579  0E0F                     	;# 
  4580  0E10                     	;# 
  4581  0E11                     	;# 
  4582  0E12                     	;# 
  4583  0E13                     	;# 
  4584  0E14                     	;# 
  4585  0E15                     	;# 
  4586  0E16                     	;# 
  4587  0E17                     	;# 
  4588  0E18                     	;# 
  4589  0E19                     	;# 
  4590  0E1A                     	;# 
  4591  0E1B                     	;# 
  4592  0E1C                     	;# 
  4593  0E1D                     	;# 
  4594  0E1E                     	;# 
  4595  0E1F                     	;# 
  4596  0E20                     	;# 
  4597  0E21                     	;# 
  4598  0E22                     	;# 
  4599  0E24                     	;# 
  4600  0E25                     	;# 
  4601  0E28                     	;# 
  4602  0E29                     	;# 
  4603  0E2A                     	;# 
  4604  0E2B                     	;# 
  4605  0E2C                     	;# 
  4606  0E2D                     	;# 
  4607  0E2E                     	;# 
  4608  0E2F                     	;# 
  4609  0E90                     	;# 
  4610  0E91                     	;# 
  4611  0E92                     	;# 
  4612  0E94                     	;# 
  4613  0E95                     	;# 
  4614  0E9C                     	;# 
  4615  0E9D                     	;# 
  4616  0E9E                     	;# 
  4617  0E9F                     	;# 
  4618  0EA0                     	;# 
  4619  0EA1                     	;# 
  4620  0EA2                     	;# 
  4621  0EA3                     	;# 
  4622  0EA4                     	;# 
  4623  0EA5                     	;# 
  4624  0EA6                     	;# 
  4625  0EA7                     	;# 
  4626  0F0F                     	;# 
  4627  0F10                     	;# 
  4628  0F11                     	;# 
  4629  0F12                     	;# 
  4630  0F13                     	;# 
  4631  0F14                     	;# 
  4632  0F15                     	;# 
  4633  0F16                     	;# 
  4634  0F17                     	;# 
  4635  0F18                     	;# 
  4636  0F19                     	;# 
  4637  0F1A                     	;# 
  4638  0F1B                     	;# 
  4639  0F1C                     	;# 
  4640  0F1D                     	;# 
  4641  0F1E                     	;# 
  4642  0F1F                     	;# 
  4643  0F20                     	;# 
  4644  0F21                     	;# 
  4645  0F22                     	;# 
  4646  0F23                     	;# 
  4647  0F24                     	;# 
  4648  0F25                     	;# 
  4649  0F26                     	;# 
  4650  0F27                     	;# 
  4651  0F28                     	;# 
  4652  0F29                     	;# 
  4653  0F2A                     	;# 
  4654  0F2B                     	;# 
  4655  0F2C                     	;# 
  4656  0F2D                     	;# 
  4657  0F2E                     	;# 
  4658  0F2F                     	;# 
  4659  0F30                     	;# 
  4660  0F31                     	;# 
  4661  0F32                     	;# 
  4662  0F33                     	;# 
  4663  0F34                     	;# 
  4664  0F35                     	;# 
  4665  0F36                     	;# 
  4666  0F37                     	;# 
  4667  0FE4                     	;# 
  4668  0FE5                     	;# 
  4669  0FE6                     	;# 
  4670  0FE7                     	;# 
  4671  0FE8                     	;# 
  4672  0FE9                     	;# 
  4673  0FEA                     	;# 
  4674  0FEB                     	;# 
  4675  0FED                     	;# 
  4676  0FEE                     	;# 
  4677  0FEF                     	;# 
  4678  0000                     	;# 
  4679  0001                     	;# 
  4680  0002                     	;# 
  4681  0003                     	;# 
  4682  0004                     	;# 
  4683  0005                     	;# 
  4684  0006                     	;# 
  4685  0007                     	;# 
  4686  0008                     	;# 
  4687  0009                     	;# 
  4688  000A                     	;# 
  4689  000B                     	;# 
  4690  000C                     	;# 
  4691  000D                     	;# 
  4692  000E                     	;# 
  4693  0010                     	;# 
  4694  0011                     	;# 
  4695  0012                     	;# 
  4696  0013                     	;# 
  4697  0014                     	;# 
  4698  0015                     	;# 
  4699  0015                     	;# 
  4700  0016                     	;# 
  4701  0016                     	;# 
  4702  0017                     	;# 
  4703  0018                     	;# 
  4704  0019                     	;# 
  4705  0019                     	;# 
  4706  001A                     	;# 
  4707  001B                     	;# 
  4708  001C                     	;# 
  4709  001D                     	;# 
  4710  001E                     	;# 
  4711  001F                     	;# 
  4712  008C                     	;# 
  4713  008D                     	;# 
  4714  008E                     	;# 
  4715  0090                     	;# 
  4716  0091                     	;# 
  4717  0092                     	;# 
  4718  0093                     	;# 
  4719  0094                     	;# 
  4720  0097                     	;# 
  4721  009B                     	;# 
  4722  009B                     	;# 
  4723  009C                     	;# 
  4724  009D                     	;# 
  4725  009E                     	;# 
  4726  009F                     	;# 
  4727  010C                     	;# 
  4728  010D                     	;# 
  4729  010E                     	;# 
  4730  0111                     	;# 
  4731  0112                     	;# 
  4732  0113                     	;# 
  4733  0114                     	;# 
  4734  0115                     	;# 
  4735  0116                     	;# 
  4736  0117                     	;# 
  4737  0118                     	;# 
  4738  0119                     	;# 
  4739  018C                     	;# 
  4740  018D                     	;# 
  4741  018E                     	;# 
  4742  0197                     	;# 
  4743  0199                     	;# 
  4744  0199                     	;# 
  4745  0199                     	;# 
  4746  019A                     	;# 
  4747  019A                     	;# 
  4748  019A                     	;# 
  4749  019B                     	;# 
  4750  019B                     	;# 
  4751  019B                     	;# 
  4752  019B                     	;# 
  4753  019B                     	;# 
  4754  019C                     	;# 
  4755  019C                     	;# 
  4756  019C                     	;# 
  4757  019D                     	;# 
  4758  019D                     	;# 
  4759  019D                     	;# 
  4760  019E                     	;# 
  4761  019E                     	;# 
  4762  019E                     	;# 
  4763  019F                     	;# 
  4764  019F                     	;# 
  4765  019F                     	;# 
  4766  019F                     	;# 
  4767  019F                     	;# 
  4768  020C                     	;# 
  4769  020D                     	;# 
  4770  020E                     	;# 
  4771  0211                     	;# 
  4772  0211                     	;# 
  4773  0212                     	;# 
  4774  0212                     	;# 
  4775  0213                     	;# 
  4776  0213                     	;# 
  4777  0214                     	;# 
  4778  0214                     	;# 
  4779  0215                     	;# 
  4780  0215                     	;# 
  4781  0215                     	;# 
  4782  0215                     	;# 
  4783  0216                     	;# 
  4784  0216                     	;# 
  4785  0217                     	;# 
  4786  0217                     	;# 
  4787  0219                     	;# 
  4788  021A                     	;# 
  4789  021B                     	;# 
  4790  021C                     	;# 
  4791  021D                     	;# 
  4792  021D                     	;# 
  4793  021E                     	;# 
  4794  021F                     	;# 
  4795  028C                     	;# 
  4796  028D                     	;# 
  4797  028E                     	;# 
  4798  0291                     	;# 
  4799  0291                     	;# 
  4800  0292                     	;# 
  4801  0293                     	;# 
  4802  0294                     	;# 
  4803  0295                     	;# 
  4804  0295                     	;# 
  4805  0296                     	;# 
  4806  0297                     	;# 
  4807  0298                     	;# 
  4808  029F                     	;# 
  4809  030C                     	;# 
  4810  030D                     	;# 
  4811  030E                     	;# 
  4812  0311                     	;# 
  4813  0311                     	;# 
  4814  0312                     	;# 
  4815  0313                     	;# 
  4816  0314                     	;# 
  4817  0315                     	;# 
  4818  0315                     	;# 
  4819  0316                     	;# 
  4820  0317                     	;# 
  4821  0318                     	;# 
  4822  038C                     	;# 
  4823  038D                     	;# 
  4824  038E                     	;# 
  4825  0391                     	;# 
  4826  0392                     	;# 
  4827  0393                     	;# 
  4828  0394                     	;# 
  4829  0395                     	;# 
  4830  0396                     	;# 
  4831  0397                     	;# 
  4832  0398                     	;# 
  4833  0399                     	;# 
  4834  039A                     	;# 
  4835  039C                     	;# 
  4836  039D                     	;# 
  4837  039E                     	;# 
  4838  039F                     	;# 
  4839  0411                     	;# 
  4840  0411                     	;# 
  4841  0412                     	;# 
  4842  0413                     	;# 
  4843  0414                     	;# 
  4844  0415                     	;# 
  4845  0416                     	;# 
  4846  0417                     	;# 
  4847  0418                     	;# 
  4848  0418                     	;# 
  4849  0419                     	;# 
  4850  041A                     	;# 
  4851  041B                     	;# 
  4852  041C                     	;# 
  4853  041D                     	;# 
  4854  041E                     	;# 
  4855  041F                     	;# 
  4856  0498                     	;# 
  4857  0498                     	;# 
  4858  0499                     	;# 
  4859  049A                     	;# 
  4860  049B                     	;# 
  4861  049B                     	;# 
  4862  049C                     	;# 
  4863  049D                     	;# 
  4864  049E                     	;# 
  4865  049F                     	;# 
  4866  0617                     	;# 
  4867  0618                     	;# 
  4868  0619                     	;# 
  4869  0619                     	;# 
  4870  061A                     	;# 
  4871  061B                     	;# 
  4872  061C                     	;# 
  4873  061C                     	;# 
  4874  061F                     	;# 
  4875  0691                     	;# 
  4876  0692                     	;# 
  4877  0693                     	;# 
  4878  0694                     	;# 
  4879  0695                     	;# 
  4880  0696                     	;# 
  4881  0697                     	;# 
  4882  0698                     	;# 
  4883  0699                     	;# 
  4884  0711                     	;# 
  4885  0712                     	;# 
  4886  0713                     	;# 
  4887  0714                     	;# 
  4888  0715                     	;# 
  4889  0716                     	;# 
  4890  0717                     	;# 
  4891  0718                     	;# 
  4892  0719                     	;# 
  4893  0891                     	;# 
  4894  0891                     	;# 
  4895  0891                     	;# 
  4896  0891                     	;# 
  4897  0891                     	;# 
  4898  0891                     	;# 
  4899  0892                     	;# 
  4900  0892                     	;# 
  4901  0892                     	;# 
  4902  0893                     	;# 
  4903  0893                     	;# 
  4904  0893                     	;# 
  4905  0893                     	;# 
  4906  0893                     	;# 
  4907  0893                     	;# 
  4908  0894                     	;# 
  4909  0894                     	;# 
  4910  0894                     	;# 
  4911  0895                     	;# 
  4912  0895                     	;# 
  4913  0895                     	;# 
  4914  0896                     	;# 
  4915  0896                     	;# 
  4916  0896                     	;# 
  4917  089B                     	;# 
  4918  0911                     	;# 
  4919  0912                     	;# 
  4920  0913                     	;# 
  4921  0914                     	;# 
  4922  0915                     	;# 
  4923  0916                     	;# 
  4924  0918                     	;# 
  4925  0919                     	;# 
  4926  091A                     	;# 
  4927  091B                     	;# 
  4928  091C                     	;# 
  4929  091D                     	;# 
  4930  091E                     	;# 
  4931  091F                     	;# 
  4932  0E0F                     	;# 
  4933  0E10                     	;# 
  4934  0E11                     	;# 
  4935  0E12                     	;# 
  4936  0E13                     	;# 
  4937  0E14                     	;# 
  4938  0E15                     	;# 
  4939  0E16                     	;# 
  4940  0E17                     	;# 
  4941  0E18                     	;# 
  4942  0E19                     	;# 
  4943  0E1A                     	;# 
  4944  0E1B                     	;# 
  4945  0E1C                     	;# 
  4946  0E1D                     	;# 
  4947  0E1E                     	;# 
  4948  0E1F                     	;# 
  4949  0E20                     	;# 
  4950  0E21                     	;# 
  4951  0E22                     	;# 
  4952  0E24                     	;# 
  4953  0E25                     	;# 
  4954  0E28                     	;# 
  4955  0E29                     	;# 
  4956  0E2A                     	;# 
  4957  0E2B                     	;# 
  4958  0E2C                     	;# 
  4959  0E2D                     	;# 
  4960  0E2E                     	;# 
  4961  0E2F                     	;# 
  4962  0E90                     	;# 
  4963  0E91                     	;# 
  4964  0E92                     	;# 
  4965  0E94                     	;# 
  4966  0E95                     	;# 
  4967  0E9C                     	;# 
  4968  0E9D                     	;# 
  4969  0E9E                     	;# 
  4970  0E9F                     	;# 
  4971  0EA0                     	;# 
  4972  0EA1                     	;# 
  4973  0EA2                     	;# 
  4974  0EA3                     	;# 
  4975  0EA4                     	;# 
  4976  0EA5                     	;# 
  4977  0EA6                     	;# 
  4978  0EA7                     	;# 
  4979  0F0F                     	;# 
  4980  0F10                     	;# 
  4981  0F11                     	;# 
  4982  0F12                     	;# 
  4983  0F13                     	;# 
  4984  0F14                     	;# 
  4985  0F15                     	;# 
  4986  0F16                     	;# 
  4987  0F17                     	;# 
  4988  0F18                     	;# 
  4989  0F19                     	;# 
  4990  0F1A                     	;# 
  4991  0F1B                     	;# 
  4992  0F1C                     	;# 
  4993  0F1D                     	;# 
  4994  0F1E                     	;# 
  4995  0F1F                     	;# 
  4996  0F20                     	;# 
  4997  0F21                     	;# 
  4998  0F22                     	;# 
  4999  0F23                     	;# 
  5000  0F24                     	;# 
  5001  0F25                     	;# 
  5002  0F26                     	;# 
  5003  0F27                     	;# 
  5004  0F28                     	;# 
  5005  0F29                     	;# 
  5006  0F2A                     	;# 
  5007  0F2B                     	;# 
  5008  0F2C                     	;# 
  5009  0F2D                     	;# 
  5010  0F2E                     	;# 
  5011  0F2F                     	;# 
  5012  0F30                     	;# 
  5013  0F31                     	;# 
  5014  0F32                     	;# 
  5015  0F33                     	;# 
  5016  0F34                     	;# 
  5017  0F35                     	;# 
  5018  0F36                     	;# 
  5019  0F37                     	;# 
  5020  0FE4                     	;# 
  5021  0FE5                     	;# 
  5022  0FE6                     	;# 
  5023  0FE7                     	;# 
  5024  0FE8                     	;# 
  5025  0FE9                     	;# 
  5026  0FEA                     	;# 
  5027  0FEB                     	;# 
  5028  0FED                     	;# 
  5029  0FEE                     	;# 
  5030  0FEF                     	;# 
  5031  0000                     	;# 
  5032  0001                     	;# 
  5033  0002                     	;# 
  5034  0003                     	;# 
  5035  0004                     	;# 
  5036  0005                     	;# 
  5037  0006                     	;# 
  5038  0007                     	;# 
  5039  0008                     	;# 
  5040  0009                     	;# 
  5041  000A                     	;# 
  5042  000B                     	;# 
  5043  000C                     	;# 
  5044  000D                     	;# 
  5045  000E                     	;# 
  5046  0010                     	;# 
  5047  0011                     	;# 
  5048  0012                     	;# 
  5049  0013                     	;# 
  5050  0014                     	;# 
  5051  0015                     	;# 
  5052  0015                     	;# 
  5053  0016                     	;# 
  5054  0016                     	;# 
  5055  0017                     	;# 
  5056  0018                     	;# 
  5057  0019                     	;# 
  5058  0019                     	;# 
  5059  001A                     	;# 
  5060  001B                     	;# 
  5061  001C                     	;# 
  5062  001D                     	;# 
  5063  001E                     	;# 
  5064  001F                     	;# 
  5065  008C                     	;# 
  5066  008D                     	;# 
  5067  008E                     	;# 
  5068  0090                     	;# 
  5069  0091                     	;# 
  5070  0092                     	;# 
  5071  0093                     	;# 
  5072  0094                     	;# 
  5073  0097                     	;# 
  5074  009B                     	;# 
  5075  009B                     	;# 
  5076  009C                     	;# 
  5077  009D                     	;# 
  5078  009E                     	;# 
  5079  009F                     	;# 
  5080  010C                     	;# 
  5081  010D                     	;# 
  5082  010E                     	;# 
  5083  0111                     	;# 
  5084  0112                     	;# 
  5085  0113                     	;# 
  5086  0114                     	;# 
  5087  0115                     	;# 
  5088  0116                     	;# 
  5089  0117                     	;# 
  5090  0118                     	;# 
  5091  0119                     	;# 
  5092  018C                     	;# 
  5093  018D                     	;# 
  5094  018E                     	;# 
  5095  0197                     	;# 
  5096  0199                     	;# 
  5097  0199                     	;# 
  5098  0199                     	;# 
  5099  019A                     	;# 
  5100  019A                     	;# 
  5101  019A                     	;# 
  5102  019B                     	;# 
  5103  019B                     	;# 
  5104  019B                     	;# 
  5105  019B                     	;# 
  5106  019B                     	;# 
  5107  019C                     	;# 
  5108  019C                     	;# 
  5109  019C                     	;# 
  5110  019D                     	;# 
  5111  019D                     	;# 
  5112  019D                     	;# 
  5113  019E                     	;# 
  5114  019E                     	;# 
  5115  019E                     	;# 
  5116  019F                     	;# 
  5117  019F                     	;# 
  5118  019F                     	;# 
  5119  019F                     	;# 
  5120  019F                     	;# 
  5121  020C                     	;# 
  5122  020D                     	;# 
  5123  020E                     	;# 
  5124  0211                     	;# 
  5125  0211                     	;# 
  5126  0212                     	;# 
  5127  0212                     	;# 
  5128  0213                     	;# 
  5129  0213                     	;# 
  5130  0214                     	;# 
  5131  0214                     	;# 
  5132  0215                     	;# 
  5133  0215                     	;# 
  5134  0215                     	;# 
  5135  0215                     	;# 
  5136  0216                     	;# 
  5137  0216                     	;# 
  5138  0217                     	;# 
  5139  0217                     	;# 
  5140  0219                     	;# 
  5141  021A                     	;# 
  5142  021B                     	;# 
  5143  021C                     	;# 
  5144  021D                     	;# 
  5145  021D                     	;# 
  5146  021E                     	;# 
  5147  021F                     	;# 
  5148  028C                     	;# 
  5149  028D                     	;# 
  5150  028E                     	;# 
  5151  0291                     	;# 
  5152  0291                     	;# 
  5153  0292                     	;# 
  5154  0293                     	;# 
  5155  0294                     	;# 
  5156  0295                     	;# 
  5157  0295                     	;# 
  5158  0296                     	;# 
  5159  0297                     	;# 
  5160  0298                     	;# 
  5161  029F                     	;# 
  5162  030C                     	;# 
  5163  030D                     	;# 
  5164  030E                     	;# 
  5165  0311                     	;# 
  5166  0311                     	;# 
  5167  0312                     	;# 
  5168  0313                     	;# 
  5169  0314                     	;# 
  5170  0315                     	;# 
  5171  0315                     	;# 
  5172  0316                     	;# 
  5173  0317                     	;# 
  5174  0318                     	;# 
  5175  038C                     	;# 
  5176  038D                     	;# 
  5177  038E                     	;# 
  5178  0391                     	;# 
  5179  0392                     	;# 
  5180  0393                     	;# 
  5181  0394                     	;# 
  5182  0395                     	;# 
  5183  0396                     	;# 
  5184  0397                     	;# 
  5185  0398                     	;# 
  5186  0399                     	;# 
  5187  039A                     	;# 
  5188  039C                     	;# 
  5189  039D                     	;# 
  5190  039E                     	;# 
  5191  039F                     	;# 
  5192  0411                     	;# 
  5193  0411                     	;# 
  5194  0412                     	;# 
  5195  0413                     	;# 
  5196  0414                     	;# 
  5197  0415                     	;# 
  5198  0416                     	;# 
  5199  0417                     	;# 
  5200  0418                     	;# 
  5201  0418                     	;# 
  5202  0419                     	;# 
  5203  041A                     	;# 
  5204  041B                     	;# 
  5205  041C                     	;# 
  5206  041D                     	;# 
  5207  041E                     	;# 
  5208  041F                     	;# 
  5209  0498                     	;# 
  5210  0498                     	;# 
  5211  0499                     	;# 
  5212  049A                     	;# 
  5213  049B                     	;# 
  5214  049B                     	;# 
  5215  049C                     	;# 
  5216  049D                     	;# 
  5217  049E                     	;# 
  5218  049F                     	;# 
  5219  0617                     	;# 
  5220  0618                     	;# 
  5221  0619                     	;# 
  5222  0619                     	;# 
  5223  061A                     	;# 
  5224  061B                     	;# 
  5225  061C                     	;# 
  5226  061C                     	;# 
  5227  061F                     	;# 
  5228  0691                     	;# 
  5229  0692                     	;# 
  5230  0693                     	;# 
  5231  0694                     	;# 
  5232  0695                     	;# 
  5233  0696                     	;# 
  5234  0697                     	;# 
  5235  0698                     	;# 
  5236  0699                     	;# 
  5237  0711                     	;# 
  5238  0712                     	;# 
  5239  0713                     	;# 
  5240  0714                     	;# 
  5241  0715                     	;# 
  5242  0716                     	;# 
  5243  0717                     	;# 
  5244  0718                     	;# 
  5245  0719                     	;# 
  5246  0891                     	;# 
  5247  0891                     	;# 
  5248  0891                     	;# 
  5249  0891                     	;# 
  5250  0891                     	;# 
  5251  0891                     	;# 
  5252  0892                     	;# 
  5253  0892                     	;# 
  5254  0892                     	;# 
  5255  0893                     	;# 
  5256  0893                     	;# 
  5257  0893                     	;# 
  5258  0893                     	;# 
  5259  0893                     	;# 
  5260  0893                     	;# 
  5261  0894                     	;# 
  5262  0894                     	;# 
  5263  0894                     	;# 
  5264  0895                     	;# 
  5265  0895                     	;# 
  5266  0895                     	;# 
  5267  0896                     	;# 
  5268  0896                     	;# 
  5269  0896                     	;# 
  5270  089B                     	;# 
  5271  0911                     	;# 
  5272  0912                     	;# 
  5273  0913                     	;# 
  5274  0914                     	;# 
  5275  0915                     	;# 
  5276  0916                     	;# 
  5277  0918                     	;# 
  5278  0919                     	;# 
  5279  091A                     	;# 
  5280  091B                     	;# 
  5281  091C                     	;# 
  5282  091D                     	;# 
  5283  091E                     	;# 
  5284  091F                     	;# 
  5285  0E0F                     	;# 
  5286  0E10                     	;# 
  5287  0E11                     	;# 
  5288  0E12                     	;# 
  5289  0E13                     	;# 
  5290  0E14                     	;# 
  5291  0E15                     	;# 
  5292  0E16                     	;# 
  5293  0E17                     	;# 
  5294  0E18                     	;# 
  5295  0E19                     	;# 
  5296  0E1A                     	;# 
  5297  0E1B                     	;# 
  5298  0E1C                     	;# 
  5299  0E1D                     	;# 
  5300  0E1E                     	;# 
  5301  0E1F                     	;# 
  5302  0E20                     	;# 
  5303  0E21                     	;# 
  5304  0E22                     	;# 
  5305  0E24                     	;# 
  5306  0E25                     	;# 
  5307  0E28                     	;# 
  5308  0E29                     	;# 
  5309  0E2A                     	;# 
  5310  0E2B                     	;# 
  5311  0E2C                     	;# 
  5312  0E2D                     	;# 
  5313  0E2E                     	;# 
  5314  0E2F                     	;# 
  5315  0E90                     	;# 
  5316  0E91                     	;# 
  5317  0E92                     	;# 
  5318  0E94                     	;# 
  5319  0E95                     	;# 
  5320  0E9C                     	;# 
  5321  0E9D                     	;# 
  5322  0E9E                     	;# 
  5323  0E9F                     	;# 
  5324  0EA0                     	;# 
  5325  0EA1                     	;# 
  5326  0EA2                     	;# 
  5327  0EA3                     	;# 
  5328  0EA4                     	;# 
  5329  0EA5                     	;# 
  5330  0EA6                     	;# 
  5331  0EA7                     	;# 
  5332  0F0F                     	;# 
  5333  0F10                     	;# 
  5334  0F11                     	;# 
  5335  0F12                     	;# 
  5336  0F13                     	;# 
  5337  0F14                     	;# 
  5338  0F15                     	;# 
  5339  0F16                     	;# 
  5340  0F17                     	;# 
  5341  0F18                     	;# 
  5342  0F19                     	;# 
  5343  0F1A                     	;# 
  5344  0F1B                     	;# 
  5345  0F1C                     	;# 
  5346  0F1D                     	;# 
  5347  0F1E                     	;# 
  5348  0F1F                     	;# 
  5349  0F20                     	;# 
  5350  0F21                     	;# 
  5351  0F22                     	;# 
  5352  0F23                     	;# 
  5353  0F24                     	;# 
  5354  0F25                     	;# 
  5355  0F26                     	;# 
  5356  0F27                     	;# 
  5357  0F28                     	;# 
  5358  0F29                     	;# 
  5359  0F2A                     	;# 
  5360  0F2B                     	;# 
  5361  0F2C                     	;# 
  5362  0F2D                     	;# 
  5363  0F2E                     	;# 
  5364  0F2F                     	;# 
  5365  0F30                     	;# 
  5366  0F31                     	;# 
  5367  0F32                     	;# 
  5368  0F33                     	;# 
  5369  0F34                     	;# 
  5370  0F35                     	;# 
  5371  0F36                     	;# 
  5372  0F37                     	;# 
  5373  0FE4                     	;# 
  5374  0FE5                     	;# 
  5375  0FE6                     	;# 
  5376  0FE7                     	;# 
  5377  0FE8                     	;# 
  5378  0FE9                     	;# 
  5379  0FEA                     	;# 
  5380  0FEB                     	;# 
  5381  0FED                     	;# 
  5382  0FEE                     	;# 
  5383  0FEF                     	;# 
  5384  0000                     	;# 
  5385  0001                     	;# 
  5386  0002                     	;# 
  5387  0003                     	;# 
  5388  0004                     	;# 
  5389  0005                     	;# 
  5390  0006                     	;# 
  5391  0007                     	;# 
  5392  0008                     	;# 
  5393  0009                     	;# 
  5394  000A                     	;# 
  5395  000B                     	;# 
  5396  000C                     	;# 
  5397  000D                     	;# 
  5398  000E                     	;# 
  5399  0010                     	;# 
  5400  0011                     	;# 
  5401  0012                     	;# 
  5402  0013                     	;# 
  5403  0014                     	;# 
  5404  0015                     	;# 
  5405  0015                     	;# 
  5406  0016                     	;# 
  5407  0016                     	;# 
  5408  0017                     	;# 
  5409  0018                     	;# 
  5410  0019                     	;# 
  5411  0019                     	;# 
  5412  001A                     	;# 
  5413  001B                     	;# 
  5414  001C                     	;# 
  5415  001D                     	;# 
  5416  001E                     	;# 
  5417  001F                     	;# 
  5418  008C                     	;# 
  5419  008D                     	;# 
  5420  008E                     	;# 
  5421  0090                     	;# 
  5422  0091                     	;# 
  5423  0092                     	;# 
  5424  0093                     	;# 
  5425  0094                     	;# 
  5426  0097                     	;# 
  5427  009B                     	;# 
  5428  009B                     	;# 
  5429  009C                     	;# 
  5430  009D                     	;# 
  5431  009E                     	;# 
  5432  009F                     	;# 
  5433  010C                     	;# 
  5434  010D                     	;# 
  5435  010E                     	;# 
  5436  0111                     	;# 
  5437  0112                     	;# 
  5438  0113                     	;# 
  5439  0114                     	;# 
  5440  0115                     	;# 
  5441  0116                     	;# 
  5442  0117                     	;# 
  5443  0118                     	;# 
  5444  0119                     	;# 
  5445  018C                     	;# 
  5446  018D                     	;# 
  5447  018E                     	;# 
  5448  0197                     	;# 
  5449  0199                     	;# 
  5450  0199                     	;# 
  5451  0199                     	;# 
  5452  019A                     	;# 
  5453  019A                     	;# 
  5454  019A                     	;# 
  5455  019B                     	;# 
  5456  019B                     	;# 
  5457  019B                     	;# 
  5458  019B                     	;# 
  5459  019B                     	;# 
  5460  019C                     	;# 
  5461  019C                     	;# 
  5462  019C                     	;# 
  5463  019D                     	;# 
  5464  019D                     	;# 
  5465  019D                     	;# 
  5466  019E                     	;# 
  5467  019E                     	;# 
  5468  019E                     	;# 
  5469  019F                     	;# 
  5470  019F                     	;# 
  5471  019F                     	;# 
  5472  019F                     	;# 
  5473  019F                     	;# 
  5474  020C                     	;# 
  5475  020D                     	;# 
  5476  020E                     	;# 
  5477  0211                     	;# 
  5478  0211                     	;# 
  5479  0212                     	;# 
  5480  0212                     	;# 
  5481  0213                     	;# 
  5482  0213                     	;# 
  5483  0214                     	;# 
  5484  0214                     	;# 
  5485  0215                     	;# 
  5486  0215                     	;# 
  5487  0215                     	;# 
  5488  0215                     	;# 
  5489  0216                     	;# 
  5490  0216                     	;# 
  5491  0217                     	;# 
  5492  0217                     	;# 
  5493  0219                     	;# 
  5494  021A                     	;# 
  5495  021B                     	;# 
  5496  021C                     	;# 
  5497  021D                     	;# 
  5498  021D                     	;# 
  5499  021E                     	;# 
  5500  021F                     	;# 
  5501  028C                     	;# 
  5502  028D                     	;# 
  5503  028E                     	;# 
  5504  0291                     	;# 
  5505  0291                     	;# 
  5506  0292                     	;# 
  5507  0293                     	;# 
  5508  0294                     	;# 
  5509  0295                     	;# 
  5510  0295                     	;# 
  5511  0296                     	;# 
  5512  0297                     	;# 
  5513  0298                     	;# 
  5514  029F                     	;# 
  5515  030C                     	;# 
  5516  030D                     	;# 
  5517  030E                     	;# 
  5518  0311                     	;# 
  5519  0311                     	;# 
  5520  0312                     	;# 
  5521  0313                     	;# 
  5522  0314                     	;# 
  5523  0315                     	;# 
  5524  0315                     	;# 
  5525  0316                     	;# 
  5526  0317                     	;# 
  5527  0318                     	;# 
  5528  038C                     	;# 
  5529  038D                     	;# 
  5530  038E                     	;# 
  5531  0391                     	;# 
  5532  0392                     	;# 
  5533  0393                     	;# 
  5534  0394                     	;# 
  5535  0395                     	;# 
  5536  0396                     	;# 
  5537  0397                     	;# 
  5538  0398                     	;# 
  5539  0399                     	;# 
  5540  039A                     	;# 
  5541  039C                     	;# 
  5542  039D                     	;# 
  5543  039E                     	;# 
  5544  039F                     	;# 
  5545  0411                     	;# 
  5546  0411                     	;# 
  5547  0412                     	;# 
  5548  0413                     	;# 
  5549  0414                     	;# 
  5550  0415                     	;# 
  5551  0416                     	;# 
  5552  0417                     	;# 
  5553  0418                     	;# 
  5554  0418                     	;# 
  5555  0419                     	;# 
  5556  041A                     	;# 
  5557  041B                     	;# 
  5558  041C                     	;# 
  5559  041D                     	;# 
  5560  041E                     	;# 
  5561  041F                     	;# 
  5562  0498                     	;# 
  5563  0498                     	;# 
  5564  0499                     	;# 
  5565  049A                     	;# 
  5566  049B                     	;# 
  5567  049B                     	;# 
  5568  049C                     	;# 
  5569  049D                     	;# 
  5570  049E                     	;# 
  5571  049F                     	;# 
  5572  0617                     	;# 
  5573  0618                     	;# 
  5574  0619                     	;# 
  5575  0619                     	;# 
  5576  061A                     	;# 
  5577  061B                     	;# 
  5578  061C                     	;# 
  5579  061C                     	;# 
  5580  061F                     	;# 
  5581  0691                     	;# 
  5582  0692                     	;# 
  5583  0693                     	;# 
  5584  0694                     	;# 
  5585  0695                     	;# 
  5586  0696                     	;# 
  5587  0697                     	;# 
  5588  0698                     	;# 
  5589  0699                     	;# 
  5590  0711                     	;# 
  5591  0712                     	;# 
  5592  0713                     	;# 
  5593  0714                     	;# 
  5594  0715                     	;# 
  5595  0716                     	;# 
  5596  0717                     	;# 
  5597  0718                     	;# 
  5598  0719                     	;# 
  5599  0891                     	;# 
  5600  0891                     	;# 
  5601  0891                     	;# 
  5602  0891                     	;# 
  5603  0891                     	;# 
  5604  0891                     	;# 
  5605  0892                     	;# 
  5606  0892                     	;# 
  5607  0892                     	;# 
  5608  0893                     	;# 
  5609  0893                     	;# 
  5610  0893                     	;# 
  5611  0893                     	;# 
  5612  0893                     	;# 
  5613  0893                     	;# 
  5614  0894                     	;# 
  5615  0894                     	;# 
  5616  0894                     	;# 
  5617  0895                     	;# 
  5618  0895                     	;# 
  5619  0895                     	;# 
  5620  0896                     	;# 
  5621  0896                     	;# 
  5622  0896                     	;# 
  5623  089B                     	;# 
  5624  0911                     	;# 
  5625  0912                     	;# 
  5626  0913                     	;# 
  5627  0914                     	;# 
  5628  0915                     	;# 
  5629  0916                     	;# 
  5630  0918                     	;# 
  5631  0919                     	;# 
  5632  091A                     	;# 
  5633  091B                     	;# 
  5634  091C                     	;# 
  5635  091D                     	;# 
  5636  091E                     	;# 
  5637  091F                     	;# 
  5638  0E0F                     	;# 
  5639  0E10                     	;# 
  5640  0E11                     	;# 
  5641  0E12                     	;# 
  5642  0E13                     	;# 
  5643  0E14                     	;# 
  5644  0E15                     	;# 
  5645  0E16                     	;# 
  5646  0E17                     	;# 
  5647  0E18                     	;# 
  5648  0E19                     	;# 
  5649  0E1A                     	;# 
  5650  0E1B                     	;# 
  5651  0E1C                     	;# 
  5652  0E1D                     	;# 
  5653  0E1E                     	;# 
  5654  0E1F                     	;# 
  5655  0E20                     	;# 
  5656  0E21                     	;# 
  5657  0E22                     	;# 
  5658  0E24                     	;# 
  5659  0E25                     	;# 
  5660  0E28                     	;# 
  5661  0E29                     	;# 
  5662  0E2A                     	;# 
  5663  0E2B                     	;# 
  5664  0E2C                     	;# 
  5665  0E2D                     	;# 
  5666  0E2E                     	;# 
  5667  0E2F                     	;# 
  5668  0E90                     	;# 
  5669  0E91                     	;# 
  5670  0E92                     	;# 
  5671  0E94                     	;# 
  5672  0E95                     	;# 
  5673  0E9C                     	;# 
  5674  0E9D                     	;# 
  5675  0E9E                     	;# 
  5676  0E9F                     	;# 
  5677  0EA0                     	;# 
  5678  0EA1                     	;# 
  5679  0EA2                     	;# 
  5680  0EA3                     	;# 
  5681  0EA4                     	;# 
  5682  0EA5                     	;# 
  5683  0EA6                     	;# 
  5684  0EA7                     	;# 
  5685  0F0F                     	;# 
  5686  0F10                     	;# 
  5687  0F11                     	;# 
  5688  0F12                     	;# 
  5689  0F13                     	;# 
  5690  0F14                     	;# 
  5691  0F15                     	;# 
  5692  0F16                     	;# 
  5693  0F17                     	;# 
  5694  0F18                     	;# 
  5695  0F19                     	;# 
  5696  0F1A                     	;# 
  5697  0F1B                     	;# 
  5698  0F1C                     	;# 
  5699  0F1D                     	;# 
  5700  0F1E                     	;# 
  5701  0F1F                     	;# 
  5702  0F20                     	;# 
  5703  0F21                     	;# 
  5704  0F22                     	;# 
  5705  0F23                     	;# 
  5706  0F24                     	;# 
  5707  0F25                     	;# 
  5708  0F26                     	;# 
  5709  0F27                     	;# 
  5710  0F28                     	;# 
  5711  0F29                     	;# 
  5712  0F2A                     	;# 
  5713  0F2B                     	;# 
  5714  0F2C                     	;# 
  5715  0F2D                     	;# 
  5716  0F2E                     	;# 
  5717  0F2F                     	;# 
  5718  0F30                     	;# 
  5719  0F31                     	;# 
  5720  0F32                     	;# 
  5721  0F33                     	;# 
  5722  0F34                     	;# 
  5723  0F35                     	;# 
  5724  0F36                     	;# 
  5725  0F37                     	;# 
  5726  0FE4                     	;# 
  5727  0FE5                     	;# 
  5728  0FE6                     	;# 
  5729  0FE7                     	;# 
  5730  0FE8                     	;# 
  5731  0FE9                     	;# 
  5732  0FEA                     	;# 
  5733  0FEB                     	;# 
  5734  0FED                     	;# 
  5735  0FEE                     	;# 
  5736  0FEF                     	;# 
  5737  0000                     	;# 
  5738  0001                     	;# 
  5739  0002                     	;# 
  5740  0003                     	;# 
  5741  0004                     	;# 
  5742  0005                     	;# 
  5743  0006                     	;# 
  5744  0007                     	;# 
  5745  0008                     	;# 
  5746  0009                     	;# 
  5747  000A                     	;# 
  5748  000B                     	;# 
  5749  000C                     	;# 
  5750  000D                     	;# 
  5751  000E                     	;# 
  5752  0010                     	;# 
  5753  0011                     	;# 
  5754  0012                     	;# 
  5755  0013                     	;# 
  5756  0014                     	;# 
  5757  0015                     	;# 
  5758  0015                     	;# 
  5759  0016                     	;# 
  5760  0016                     	;# 
  5761  0017                     	;# 
  5762  0018                     	;# 
  5763  0019                     	;# 
  5764  0019                     	;# 
  5765  001A                     	;# 
  5766  001B                     	;# 
  5767  001C                     	;# 
  5768  001D                     	;# 
  5769  001E                     	;# 
  5770  001F                     	;# 
  5771  008C                     	;# 
  5772  008D                     	;# 
  5773  008E                     	;# 
  5774  0090                     	;# 
  5775  0091                     	;# 
  5776  0092                     	;# 
  5777  0093                     	;# 
  5778  0094                     	;# 
  5779  0097                     	;# 
  5780  009B                     	;# 
  5781  009B                     	;# 
  5782  009C                     	;# 
  5783  009D                     	;# 
  5784  009E                     	;# 
  5785  009F                     	;# 
  5786  010C                     	;# 
  5787  010D                     	;# 
  5788  010E                     	;# 
  5789  0111                     	;# 
  5790  0112                     	;# 
  5791  0113                     	;# 
  5792  0114                     	;# 
  5793  0115                     	;# 
  5794  0116                     	;# 
  5795  0117                     	;# 
  5796  0118                     	;# 
  5797  0119                     	;# 
  5798  018C                     	;# 
  5799  018D                     	;# 
  5800  018E                     	;# 
  5801  0197                     	;# 
  5802  0199                     	;# 
  5803  0199                     	;# 
  5804  0199                     	;# 
  5805  019A                     	;# 
  5806  019A                     	;# 
  5807  019A                     	;# 
  5808  019B                     	;# 
  5809  019B                     	;# 
  5810  019B                     	;# 
  5811  019B                     	;# 
  5812  019B                     	;# 
  5813  019C                     	;# 
  5814  019C                     	;# 
  5815  019C                     	;# 
  5816  019D                     	;# 
  5817  019D                     	;# 
  5818  019D                     	;# 
  5819  019E                     	;# 
  5820  019E                     	;# 
  5821  019E                     	;# 
  5822  019F                     	;# 
  5823  019F                     	;# 
  5824  019F                     	;# 
  5825  019F                     	;# 
  5826  019F                     	;# 
  5827  020C                     	;# 
  5828  020D                     	;# 
  5829  020E                     	;# 
  5830  0211                     	;# 
  5831  0211                     	;# 
  5832  0212                     	;# 
  5833  0212                     	;# 
  5834  0213                     	;# 
  5835  0213                     	;# 
  5836  0214                     	;# 
  5837  0214                     	;# 
  5838  0215                     	;# 
  5839  0215                     	;# 
  5840  0215                     	;# 
  5841  0215                     	;# 
  5842  0216                     	;# 
  5843  0216                     	;# 
  5844  0217                     	;# 
  5845  0217                     	;# 
  5846  0219                     	;# 
  5847  021A                     	;# 
  5848  021B                     	;# 
  5849  021C                     	;# 
  5850  021D                     	;# 
  5851  021D                     	;# 
  5852  021E                     	;# 
  5853  021F                     	;# 
  5854  028C                     	;# 
  5855  028D                     	;# 
  5856  028E                     	;# 
  5857  0291                     	;# 
  5858  0291                     	;# 
  5859  0292                     	;# 
  5860  0293                     	;# 
  5861  0294                     	;# 
  5862  0295                     	;# 
  5863  0295                     	;# 
  5864  0296                     	;# 
  5865  0297                     	;# 
  5866  0298                     	;# 
  5867  029F                     	;# 
  5868  030C                     	;# 
  5869  030D                     	;# 
  5870  030E                     	;# 
  5871  0311                     	;# 
  5872  0311                     	;# 
  5873  0312                     	;# 
  5874  0313                     	;# 
  5875  0314                     	;# 
  5876  0315                     	;# 
  5877  0315                     	;# 
  5878  0316                     	;# 
  5879  0317                     	;# 
  5880  0318                     	;# 
  5881  038C                     	;# 
  5882  038D                     	;# 
  5883  038E                     	;# 
  5884  0391                     	;# 
  5885  0392                     	;# 
  5886  0393                     	;# 
  5887  0394                     	;# 
  5888  0395                     	;# 
  5889  0396                     	;# 
  5890  0397                     	;# 
  5891  0398                     	;# 
  5892  0399                     	;# 
  5893  039A                     	;# 
  5894  039C                     	;# 
  5895  039D                     	;# 
  5896  039E                     	;# 
  5897  039F                     	;# 
  5898  0411                     	;# 
  5899  0411                     	;# 
  5900  0412                     	;# 
  5901  0413                     	;# 
  5902  0414                     	;# 
  5903  0415                     	;# 
  5904  0416                     	;# 
  5905  0417                     	;# 
  5906  0418                     	;# 
  5907  0418                     	;# 
  5908  0419                     	;# 
  5909  041A                     	;# 
  5910  041B                     	;# 
  5911  041C                     	;# 
  5912  041D                     	;# 
  5913  041E                     	;# 
  5914  041F                     	;# 
  5915  0498                     	;# 
  5916  0498                     	;# 
  5917  0499                     	;# 
  5918  049A                     	;# 
  5919  049B                     	;# 
  5920  049B                     	;# 
  5921  049C                     	;# 
  5922  049D                     	;# 
  5923  049E                     	;# 
  5924  049F                     	;# 
  5925  0617                     	;# 
  5926  0618                     	;# 
  5927  0619                     	;# 
  5928  0619                     	;# 
  5929  061A                     	;# 
  5930  061B                     	;# 
  5931  061C                     	;# 
  5932  061C                     	;# 
  5933  061F                     	;# 
  5934  0691                     	;# 
  5935  0692                     	;# 
  5936  0693                     	;# 
  5937  0694                     	;# 
  5938  0695                     	;# 
  5939  0696                     	;# 
  5940  0697                     	;# 
  5941  0698                     	;# 
  5942  0699                     	;# 
  5943  0711                     	;# 
  5944  0712                     	;# 
  5945  0713                     	;# 
  5946  0714                     	;# 
  5947  0715                     	;# 
  5948  0716                     	;# 
  5949  0717                     	;# 
  5950  0718                     	;# 
  5951  0719                     	;# 
  5952  0891                     	;# 
  5953  0891                     	;# 
  5954  0891                     	;# 
  5955  0891                     	;# 
  5956  0891                     	;# 
  5957  0891                     	;# 
  5958  0892                     	;# 
  5959  0892                     	;# 
  5960  0892                     	;# 
  5961  0893                     	;# 
  5962  0893                     	;# 
  5963  0893                     	;# 
  5964  0893                     	;# 
  5965  0893                     	;# 
  5966  0893                     	;# 
  5967  0894                     	;# 
  5968  0894                     	;# 
  5969  0894                     	;# 
  5970  0895                     	;# 
  5971  0895                     	;# 
  5972  0895                     	;# 
  5973  0896                     	;# 
  5974  0896                     	;# 
  5975  0896                     	;# 
  5976  089B                     	;# 
  5977  0911                     	;# 
  5978  0912                     	;# 
  5979  0913                     	;# 
  5980  0914                     	;# 
  5981  0915                     	;# 
  5982  0916                     	;# 
  5983  0918                     	;# 
  5984  0919                     	;# 
  5985  091A                     	;# 
  5986  091B                     	;# 
  5987  091C                     	;# 
  5988  091D                     	;# 
  5989  091E                     	;# 
  5990  091F                     	;# 
  5991  0E0F                     	;# 
  5992  0E10                     	;# 
  5993  0E11                     	;# 
  5994  0E12                     	;# 
  5995  0E13                     	;# 
  5996  0E14                     	;# 
  5997  0E15                     	;# 
  5998  0E16                     	;# 
  5999  0E17                     	;# 
  6000  0E18                     	;# 
  6001  0E19                     	;# 
  6002  0E1A                     	;# 
  6003  0E1B                     	;# 
  6004  0E1C                     	;# 
  6005  0E1D                     	;# 
  6006  0E1E                     	;# 
  6007  0E1F                     	;# 
  6008  0E20                     	;# 
  6009  0E21                     	;# 
  6010  0E22                     	;# 
  6011  0E24                     	;# 
  6012  0E25                     	;# 
  6013  0E28                     	;# 
  6014  0E29                     	;# 
  6015  0E2A                     	;# 
  6016  0E2B                     	;# 
  6017  0E2C                     	;# 
  6018  0E2D                     	;# 
  6019  0E2E                     	;# 
  6020  0E2F                     	;# 
  6021  0E90                     	;# 
  6022  0E91                     	;# 
  6023  0E92                     	;# 
  6024  0E94                     	;# 
  6025  0E95                     	;# 
  6026  0E9C                     	;# 
  6027  0E9D                     	;# 
  6028  0E9E                     	;# 
  6029  0E9F                     	;# 
  6030  0EA0                     	;# 
  6031  0EA1                     	;# 
  6032  0EA2                     	;# 
  6033  0EA3                     	;# 
  6034  0EA4                     	;# 
  6035  0EA5                     	;# 
  6036  0EA6                     	;# 
  6037  0EA7                     	;# 
  6038  0F0F                     	;# 
  6039  0F10                     	;# 
  6040  0F11                     	;# 
  6041  0F12                     	;# 
  6042  0F13                     	;# 
  6043  0F14                     	;# 
  6044  0F15                     	;# 
  6045  0F16                     	;# 
  6046  0F17                     	;# 
  6047  0F18                     	;# 
  6048  0F19                     	;# 
  6049  0F1A                     	;# 
  6050  0F1B                     	;# 
  6051  0F1C                     	;# 
  6052  0F1D                     	;# 
  6053  0F1E                     	;# 
  6054  0F1F                     	;# 
  6055  0F20                     	;# 
  6056  0F21                     	;# 
  6057  0F22                     	;# 
  6058  0F23                     	;# 
  6059  0F24                     	;# 
  6060  0F25                     	;# 
  6061  0F26                     	;# 
  6062  0F27                     	;# 
  6063  0F28                     	;# 
  6064  0F29                     	;# 
  6065  0F2A                     	;# 
  6066  0F2B                     	;# 
  6067  0F2C                     	;# 
  6068  0F2D                     	;# 
  6069  0F2E                     	;# 
  6070  0F2F                     	;# 
  6071  0F30                     	;# 
  6072  0F31                     	;# 
  6073  0F32                     	;# 
  6074  0F33                     	;# 
  6075  0F34                     	;# 
  6076  0F35                     	;# 
  6077  0F36                     	;# 
  6078  0F37                     	;# 
  6079  0FE4                     	;# 
  6080  0FE5                     	;# 
  6081  0FE6                     	;# 
  6082  0FE7                     	;# 
  6083  0FE8                     	;# 
  6084  0FE9                     	;# 
  6085  0FEA                     	;# 
  6086  0FEB                     	;# 
  6087  0FED                     	;# 
  6088  0FEE                     	;# 
  6089  0FEF                     	;# 
  6090  0000                     	;# 
  6091  0001                     	;# 
  6092  0002                     	;# 
  6093  0003                     	;# 
  6094  0004                     	;# 
  6095  0005                     	;# 
  6096  0006                     	;# 
  6097  0007                     	;# 
  6098  0008                     	;# 
  6099  0009                     	;# 
  6100  000A                     	;# 
  6101  000B                     	;# 
  6102  000C                     	;# 
  6103  000D                     	;# 
  6104  000E                     	;# 
  6105  0010                     	;# 
  6106  0011                     	;# 
  6107  0012                     	;# 
  6108  0013                     	;# 
  6109  0014                     	;# 
  6110  0015                     	;# 
  6111  0015                     	;# 
  6112  0016                     	;# 
  6113  0016                     	;# 
  6114  0017                     	;# 
  6115  0018                     	;# 
  6116  0019                     	;# 
  6117  0019                     	;# 
  6118  001A                     	;# 
  6119  001B                     	;# 
  6120  001C                     	;# 
  6121  001D                     	;# 
  6122  001E                     	;# 
  6123  001F                     	;# 
  6124  008C                     	;# 
  6125  008D                     	;# 
  6126  008E                     	;# 
  6127  0090                     	;# 
  6128  0091                     	;# 
  6129  0092                     	;# 
  6130  0093                     	;# 
  6131  0094                     	;# 
  6132  0097                     	;# 
  6133  009B                     	;# 
  6134  009B                     	;# 
  6135  009C                     	;# 
  6136  009D                     	;# 
  6137  009E                     	;# 
  6138  009F                     	;# 
  6139  010C                     	;# 
  6140  010D                     	;# 
  6141  010E                     	;# 
  6142  0111                     	;# 
  6143  0112                     	;# 
  6144  0113                     	;# 
  6145  0114                     	;# 
  6146  0115                     	;# 
  6147  0116                     	;# 
  6148  0117                     	;# 
  6149  0118                     	;# 
  6150  0119                     	;# 
  6151  018C                     	;# 
  6152  018D                     	;# 
  6153  018E                     	;# 
  6154  0197                     	;# 
  6155  0199                     	;# 
  6156  0199                     	;# 
  6157  0199                     	;# 
  6158  019A                     	;# 
  6159  019A                     	;# 
  6160  019A                     	;# 
  6161  019B                     	;# 
  6162  019B                     	;# 
  6163  019B                     	;# 
  6164  019B                     	;# 
  6165  019B                     	;# 
  6166  019C                     	;# 
  6167  019C                     	;# 
  6168  019C                     	;# 
  6169  019D                     	;# 
  6170  019D                     	;# 
  6171  019D                     	;# 
  6172  019E                     	;# 
  6173  019E                     	;# 
  6174  019E                     	;# 
  6175  019F                     	;# 
  6176  019F                     	;# 
  6177  019F                     	;# 
  6178  019F                     	;# 
  6179  019F                     	;# 
  6180  020C                     	;# 
  6181  020D                     	;# 
  6182  020E                     	;# 
  6183  0211                     	;# 
  6184  0211                     	;# 
  6185  0212                     	;# 
  6186  0212                     	;# 
  6187  0213                     	;# 
  6188  0213                     	;# 
  6189  0214                     	;# 
  6190  0214                     	;# 
  6191  0215                     	;# 
  6192  0215                     	;# 
  6193  0215                     	;# 
  6194  0215                     	;# 
  6195  0216                     	;# 
  6196  0216                     	;# 
  6197  0217                     	;# 
  6198  0217                     	;# 
  6199  0219                     	;# 
  6200  021A                     	;# 
  6201  021B                     	;# 
  6202  021C                     	;# 
  6203  021D                     	;# 
  6204  021D                     	;# 
  6205  021E                     	;# 
  6206  021F                     	;# 
  6207  028C                     	;# 
  6208  028D                     	;# 
  6209  028E                     	;# 
  6210  0291                     	;# 
  6211  0291                     	;# 
  6212  0292                     	;# 
  6213  0293                     	;# 
  6214  0294                     	;# 
  6215  0295                     	;# 
  6216  0295                     	;# 
  6217  0296                     	;# 
  6218  0297                     	;# 
  6219  0298                     	;# 
  6220  029F                     	;# 
  6221  030C                     	;# 
  6222  030D                     	;# 
  6223  030E                     	;# 
  6224  0311                     	;# 
  6225  0311                     	;# 
  6226  0312                     	;# 
  6227  0313                     	;# 
  6228  0314                     	;# 
  6229  0315                     	;# 
  6230  0315                     	;# 
  6231  0316                     	;# 
  6232  0317                     	;# 
  6233  0318                     	;# 
  6234  038C                     	;# 
  6235  038D                     	;# 
  6236  038E                     	;# 
  6237  0391                     	;# 
  6238  0392                     	;# 
  6239  0393                     	;# 
  6240  0394                     	;# 
  6241  0395                     	;# 
  6242  0396                     	;# 
  6243  0397                     	;# 
  6244  0398                     	;# 
  6245  0399                     	;# 
  6246  039A                     	;# 
  6247  039C                     	;# 
  6248  039D                     	;# 
  6249  039E                     	;# 
  6250  039F                     	;# 
  6251  0411                     	;# 
  6252  0411                     	;# 
  6253  0412                     	;# 
  6254  0413                     	;# 
  6255  0414                     	;# 
  6256  0415                     	;# 
  6257  0416                     	;# 
  6258  0417                     	;# 
  6259  0418                     	;# 
  6260  0418                     	;# 
  6261  0419                     	;# 
  6262  041A                     	;# 
  6263  041B                     	;# 
  6264  041C                     	;# 
  6265  041D                     	;# 
  6266  041E                     	;# 
  6267  041F                     	;# 
  6268  0498                     	;# 
  6269  0498                     	;# 
  6270  0499                     	;# 
  6271  049A                     	;# 
  6272  049B                     	;# 
  6273  049B                     	;# 
  6274  049C                     	;# 
  6275  049D                     	;# 
  6276  049E                     	;# 
  6277  049F                     	;# 
  6278  0617                     	;# 
  6279  0618                     	;# 
  6280  0619                     	;# 
  6281  0619                     	;# 
  6282  061A                     	;# 
  6283  061B                     	;# 
  6284  061C                     	;# 
  6285  061C                     	;# 
  6286  061F                     	;# 
  6287  0691                     	;# 
  6288  0692                     	;# 
  6289  0693                     	;# 
  6290  0694                     	;# 
  6291  0695                     	;# 
  6292  0696                     	;# 
  6293  0697                     	;# 
  6294  0698                     	;# 
  6295  0699                     	;# 
  6296  0711                     	;# 
  6297  0712                     	;# 
  6298  0713                     	;# 
  6299  0714                     	;# 
  6300  0715                     	;# 
  6301  0716                     	;# 
  6302  0717                     	;# 
  6303  0718                     	;# 
  6304  0719                     	;# 
  6305  0891                     	;# 
  6306  0891                     	;# 
  6307  0891                     	;# 
  6308  0891                     	;# 
  6309  0891                     	;# 
  6310  0891                     	;# 
  6311  0892                     	;# 
  6312  0892                     	;# 
  6313  0892                     	;# 
  6314  0893                     	;# 
  6315  0893                     	;# 
  6316  0893                     	;# 
  6317  0893                     	;# 
  6318  0893                     	;# 
  6319  0893                     	;# 
  6320  0894                     	;# 
  6321  0894                     	;# 
  6322  0894                     	;# 
  6323  0895                     	;# 
  6324  0895                     	;# 
  6325  0895                     	;# 
  6326  0896                     	;# 
  6327  0896                     	;# 
  6328  0896                     	;# 
  6329  089B                     	;# 
  6330  0911                     	;# 
  6331  0912                     	;# 
  6332  0913                     	;# 
  6333  0914                     	;# 
  6334  0915                     	;# 
  6335  0916                     	;# 
  6336  0918                     	;# 
  6337  0919                     	;# 
  6338  091A                     	;# 
  6339  091B                     	;# 
  6340  091C                     	;# 
  6341  091D                     	;# 
  6342  091E                     	;# 
  6343  091F                     	;# 
  6344  0E0F                     	;# 
  6345  0E10                     	;# 
  6346  0E11                     	;# 
  6347  0E12                     	;# 
  6348  0E13                     	;# 
  6349  0E14                     	;# 
  6350  0E15                     	;# 
  6351  0E16                     	;# 
  6352  0E17                     	;# 
  6353  0E18                     	;# 
  6354  0E19                     	;# 
  6355  0E1A                     	;# 
  6356  0E1B                     	;# 
  6357  0E1C                     	;# 
  6358  0E1D                     	;# 
  6359  0E1E                     	;# 
  6360  0E1F                     	;# 
  6361  0E20                     	;# 
  6362  0E21                     	;# 
  6363  0E22                     	;# 
  6364  0E24                     	;# 
  6365  0E25                     	;# 
  6366  0E28                     	;# 
  6367  0E29                     	;# 
  6368  0E2A                     	;# 
  6369  0E2B                     	;# 
  6370  0E2C                     	;# 
  6371  0E2D                     	;# 
  6372  0E2E                     	;# 
  6373  0E2F                     	;# 
  6374  0E90                     	;# 
  6375  0E91                     	;# 
  6376  0E92                     	;# 
  6377  0E94                     	;# 
  6378  0E95                     	;# 
  6379  0E9C                     	;# 
  6380  0E9D                     	;# 
  6381  0E9E                     	;# 
  6382  0E9F                     	;# 
  6383  0EA0                     	;# 
  6384  0EA1                     	;# 
  6385  0EA2                     	;# 
  6386  0EA3                     	;# 
  6387  0EA4                     	;# 
  6388  0EA5                     	;# 
  6389  0EA6                     	;# 
  6390  0EA7                     	;# 
  6391  0F0F                     	;# 
  6392  0F10                     	;# 
  6393  0F11                     	;# 
  6394  0F12                     	;# 
  6395  0F13                     	;# 
  6396  0F14                     	;# 
  6397  0F15                     	;# 
  6398  0F16                     	;# 
  6399  0F17                     	;# 
  6400  0F18                     	;# 
  6401  0F19                     	;# 
  6402  0F1A                     	;# 
  6403  0F1B                     	;# 
  6404  0F1C                     	;# 
  6405  0F1D                     	;# 
  6406  0F1E                     	;# 
  6407  0F1F                     	;# 
  6408  0F20                     	;# 
  6409  0F21                     	;# 
  6410  0F22                     	;# 
  6411  0F23                     	;# 
  6412  0F24                     	;# 
  6413  0F25                     	;# 
  6414  0F26                     	;# 
  6415  0F27                     	;# 
  6416  0F28                     	;# 
  6417  0F29                     	;# 
  6418  0F2A                     	;# 
  6419  0F2B                     	;# 
  6420  0F2C                     	;# 
  6421  0F2D                     	;# 
  6422  0F2E                     	;# 
  6423  0F2F                     	;# 
  6424  0F30                     	;# 
  6425  0F31                     	;# 
  6426  0F32                     	;# 
  6427  0F33                     	;# 
  6428  0F34                     	;# 
  6429  0F35                     	;# 
  6430  0F36                     	;# 
  6431  0F37                     	;# 
  6432  0FE4                     	;# 
  6433  0FE5                     	;# 
  6434  0FE6                     	;# 
  6435  0FE7                     	;# 
  6436  0FE8                     	;# 
  6437  0FE9                     	;# 
  6438  0FEA                     	;# 
  6439  0FEB                     	;# 
  6440  0FED                     	;# 
  6441  0FEE                     	;# 
  6442  0FEF                     	;# 
  6443  0000                     	;# 
  6444  0001                     	;# 
  6445  0002                     	;# 
  6446  0003                     	;# 
  6447  0004                     	;# 
  6448  0005                     	;# 
  6449  0006                     	;# 
  6450  0007                     	;# 
  6451  0008                     	;# 
  6452  0009                     	;# 
  6453  000A                     	;# 
  6454  000B                     	;# 
  6455  000C                     	;# 
  6456  000D                     	;# 
  6457  000E                     	;# 
  6458  0010                     	;# 
  6459  0011                     	;# 
  6460  0012                     	;# 
  6461  0013                     	;# 
  6462  0014                     	;# 
  6463  0015                     	;# 
  6464  0015                     	;# 
  6465  0016                     	;# 
  6466  0016                     	;# 
  6467  0017                     	;# 
  6468  0018                     	;# 
  6469  0019                     	;# 
  6470  0019                     	;# 
  6471  001A                     	;# 
  6472  001B                     	;# 
  6473  001C                     	;# 
  6474  001D                     	;# 
  6475  001E                     	;# 
  6476  001F                     	;# 
  6477  008C                     	;# 
  6478  008D                     	;# 
  6479  008E                     	;# 
  6480  0090                     	;# 
  6481  0091                     	;# 
  6482  0092                     	;# 
  6483  0093                     	;# 
  6484  0094                     	;# 
  6485  0097                     	;# 
  6486  009B                     	;# 
  6487  009B                     	;# 
  6488  009C                     	;# 
  6489  009D                     	;# 
  6490  009E                     	;# 
  6491  009F                     	;# 
  6492  010C                     	;# 
  6493  010D                     	;# 
  6494  010E                     	;# 
  6495  0111                     	;# 
  6496  0112                     	;# 
  6497  0113                     	;# 
  6498  0114                     	;# 
  6499  0115                     	;# 
  6500  0116                     	;# 
  6501  0117                     	;# 
  6502  0118                     	;# 
  6503  0119                     	;# 
  6504  018C                     	;# 
  6505  018D                     	;# 
  6506  018E                     	;# 
  6507  0197                     	;# 
  6508  0199                     	;# 
  6509  0199                     	;# 
  6510  0199                     	;# 
  6511  019A                     	;# 
  6512  019A                     	;# 
  6513  019A                     	;# 
  6514  019B                     	;# 
  6515  019B                     	;# 
  6516  019B                     	;# 
  6517  019B                     	;# 
  6518  019B                     	;# 
  6519  019C                     	;# 
  6520  019C                     	;# 
  6521  019C                     	;# 
  6522  019D                     	;# 
  6523  019D                     	;# 
  6524  019D                     	;# 
  6525  019E                     	;# 
  6526  019E                     	;# 
  6527  019E                     	;# 
  6528  019F                     	;# 
  6529  019F                     	;# 
  6530  019F                     	;# 
  6531  019F                     	;# 
  6532  019F                     	;# 
  6533  020C                     	;# 
  6534  020D                     	;# 
  6535  020E                     	;# 
  6536  0211                     	;# 
  6537  0211                     	;# 
  6538  0212                     	;# 
  6539  0212                     	;# 
  6540  0213                     	;# 
  6541  0213                     	;# 
  6542  0214                     	;# 
  6543  0214                     	;# 
  6544  0215                     	;# 
  6545  0215                     	;# 
  6546  0215                     	;# 
  6547  0215                     	;# 
  6548  0216                     	;# 
  6549  0216                     	;# 
  6550  0217                     	;# 
  6551  0217                     	;# 
  6552  0219                     	;# 
  6553  021A                     	;# 
  6554  021B                     	;# 
  6555  021C                     	;# 
  6556  021D                     	;# 
  6557  021D                     	;# 
  6558  021E                     	;# 
  6559  021F                     	;# 
  6560  028C                     	;# 
  6561  028D                     	;# 
  6562  028E                     	;# 
  6563  0291                     	;# 
  6564  0291                     	;# 
  6565  0292                     	;# 
  6566  0293                     	;# 
  6567  0294                     	;# 
  6568  0295                     	;# 
  6569  0295                     	;# 
  6570  0296                     	;# 
  6571  0297                     	;# 
  6572  0298                     	;# 
  6573  029F                     	;# 
  6574  030C                     	;# 
  6575  030D                     	;# 
  6576  030E                     	;# 
  6577  0311                     	;# 
  6578  0311                     	;# 
  6579  0312                     	;# 
  6580  0313                     	;# 
  6581  0314                     	;# 
  6582  0315                     	;# 
  6583  0315                     	;# 
  6584  0316                     	;# 
  6585  0317                     	;# 
  6586  0318                     	;# 
  6587  038C                     	;# 
  6588  038D                     	;# 
  6589  038E                     	;# 
  6590  0391                     	;# 
  6591  0392                     	;# 
  6592  0393                     	;# 
  6593  0394                     	;# 
  6594  0395                     	;# 
  6595  0396                     	;# 
  6596  0397                     	;# 
  6597  0398                     	;# 
  6598  0399                     	;# 
  6599  039A                     	;# 
  6600  039C                     	;# 
  6601  039D                     	;# 
  6602  039E                     	;# 
  6603  039F                     	;# 
  6604  0411                     	;# 
  6605  0411                     	;# 
  6606  0412                     	;# 
  6607  0413                     	;# 
  6608  0414                     	;# 
  6609  0415                     	;# 
  6610  0416                     	;# 
  6611  0417                     	;# 
  6612  0418                     	;# 
  6613  0418                     	;# 
  6614  0419                     	;# 
  6615  041A                     	;# 
  6616  041B                     	;# 
  6617  041C                     	;# 
  6618  041D                     	;# 
  6619  041E                     	;# 
  6620  041F                     	;# 
  6621  0498                     	;# 
  6622  0498                     	;# 
  6623  0499                     	;# 
  6624  049A                     	;# 
  6625  049B                     	;# 
  6626  049B                     	;# 
  6627  049C                     	;# 
  6628  049D                     	;# 
  6629  049E                     	;# 
  6630  049F                     	;# 
  6631  0617                     	;# 
  6632  0618                     	;# 
  6633  0619                     	;# 
  6634  0619                     	;# 
  6635  061A                     	;# 
  6636  061B                     	;# 
  6637  061C                     	;# 
  6638  061C                     	;# 
  6639  061F                     	;# 
  6640  0691                     	;# 
  6641  0692                     	;# 
  6642  0693                     	;# 
  6643  0694                     	;# 
  6644  0695                     	;# 
  6645  0696                     	;# 
  6646  0697                     	;# 
  6647  0698                     	;# 
  6648  0699                     	;# 
  6649  0711                     	;# 
  6650  0712                     	;# 
  6651  0713                     	;# 
  6652  0714                     	;# 
  6653  0715                     	;# 
  6654  0716                     	;# 
  6655  0717                     	;# 
  6656  0718                     	;# 
  6657  0719                     	;# 
  6658  0891                     	;# 
  6659  0891                     	;# 
  6660  0891                     	;# 
  6661  0891                     	;# 
  6662  0891                     	;# 
  6663  0891                     	;# 
  6664  0892                     	;# 
  6665  0892                     	;# 
  6666  0892                     	;# 
  6667  0893                     	;# 
  6668  0893                     	;# 
  6669  0893                     	;# 
  6670  0893                     	;# 
  6671  0893                     	;# 
  6672  0893                     	;# 
  6673  0894                     	;# 
  6674  0894                     	;# 
  6675  0894                     	;# 
  6676  0895                     	;# 
  6677  0895                     	;# 
  6678  0895                     	;# 
  6679  0896                     	;# 
  6680  0896                     	;# 
  6681  0896                     	;# 
  6682  089B                     	;# 
  6683  0911                     	;# 
  6684  0912                     	;# 
  6685  0913                     	;# 
  6686  0914                     	;# 
  6687  0915                     	;# 
  6688  0916                     	;# 
  6689  0918                     	;# 
  6690  0919                     	;# 
  6691  091A                     	;# 
  6692  091B                     	;# 
  6693  091C                     	;# 
  6694  091D                     	;# 
  6695  091E                     	;# 
  6696  091F                     	;# 
  6697  0E0F                     	;# 
  6698  0E10                     	;# 
  6699  0E11                     	;# 
  6700  0E12                     	;# 
  6701  0E13                     	;# 
  6702  0E14                     	;# 
  6703  0E15                     	;# 
  6704  0E16                     	;# 
  6705  0E17                     	;# 
  6706  0E18                     	;# 
  6707  0E19                     	;# 
  6708  0E1A                     	;# 
  6709  0E1B                     	;# 
  6710  0E1C                     	;# 
  6711  0E1D                     	;# 
  6712  0E1E                     	;# 
  6713  0E1F                     	;# 
  6714  0E20                     	;# 
  6715  0E21                     	;# 
  6716  0E22                     	;# 
  6717  0E24                     	;# 
  6718  0E25                     	;# 
  6719  0E28                     	;# 
  6720  0E29                     	;# 
  6721  0E2A                     	;# 
  6722  0E2B                     	;# 
  6723  0E2C                     	;# 
  6724  0E2D                     	;# 
  6725  0E2E                     	;# 
  6726  0E2F                     	;# 
  6727  0E90                     	;# 
  6728  0E91                     	;# 
  6729  0E92                     	;# 
  6730  0E94                     	;# 
  6731  0E95                     	;# 
  6732  0E9C                     	;# 
  6733  0E9D                     	;# 
  6734  0E9E                     	;# 
  6735  0E9F                     	;# 
  6736  0EA0                     	;# 
  6737  0EA1                     	;# 
  6738  0EA2                     	;# 
  6739  0EA3                     	;# 
  6740  0EA4                     	;# 
  6741  0EA5                     	;# 
  6742  0EA6                     	;# 
  6743  0EA7                     	;# 
  6744  0F0F                     	;# 
  6745  0F10                     	;# 
  6746  0F11                     	;# 
  6747  0F12                     	;# 
  6748  0F13                     	;# 
  6749  0F14                     	;# 
  6750  0F15                     	;# 
  6751  0F16                     	;# 
  6752  0F17                     	;# 
  6753  0F18                     	;# 
  6754  0F19                     	;# 
  6755  0F1A                     	;# 
  6756  0F1B                     	;# 
  6757  0F1C                     	;# 
  6758  0F1D                     	;# 
  6759  0F1E                     	;# 
  6760  0F1F                     	;# 
  6761  0F20                     	;# 
  6762  0F21                     	;# 
  6763  0F22                     	;# 
  6764  0F23                     	;# 
  6765  0F24                     	;# 
  6766  0F25                     	;# 
  6767  0F26                     	;# 
  6768  0F27                     	;# 
  6769  0F28                     	;# 
  6770  0F29                     	;# 
  6771  0F2A                     	;# 
  6772  0F2B                     	;# 
  6773  0F2C                     	;# 
  6774  0F2D                     	;# 
  6775  0F2E                     	;# 
  6776  0F2F                     	;# 
  6777  0F30                     	;# 
  6778  0F31                     	;# 
  6779  0F32                     	;# 
  6780  0F33                     	;# 
  6781  0F34                     	;# 
  6782  0F35                     	;# 
  6783  0F36                     	;# 
  6784  0F37                     	;# 
  6785  0FE4                     	;# 
  6786  0FE5                     	;# 
  6787  0FE6                     	;# 
  6788  0FE7                     	;# 
  6789  0FE8                     	;# 
  6790  0FE9                     	;# 
  6791  0FEA                     	;# 
  6792  0FEB                     	;# 
  6793  0FED                     	;# 
  6794  0FEE                     	;# 
  6795  0FEF                     	;# 
  6796  0000                     	;# 
  6797  0001                     	;# 
  6798  0002                     	;# 
  6799  0003                     	;# 
  6800  0004                     	;# 
  6801  0005                     	;# 
  6802  0006                     	;# 
  6803  0007                     	;# 
  6804  0008                     	;# 
  6805  0009                     	;# 
  6806  000A                     	;# 
  6807  000B                     	;# 
  6808  000C                     	;# 
  6809  000D                     	;# 
  6810  000E                     	;# 
  6811  0010                     	;# 
  6812  0011                     	;# 
  6813  0012                     	;# 
  6814  0013                     	;# 
  6815  0014                     	;# 
  6816  0015                     	;# 
  6817  0015                     	;# 
  6818  0016                     	;# 
  6819  0016                     	;# 
  6820  0017                     	;# 
  6821  0018                     	;# 
  6822  0019                     	;# 
  6823  0019                     	;# 
  6824  001A                     	;# 
  6825  001B                     	;# 
  6826  001C                     	;# 
  6827  001D                     	;# 
  6828  001E                     	;# 
  6829  001F                     	;# 
  6830  008C                     	;# 
  6831  008D                     	;# 
  6832  008E                     	;# 
  6833  0090                     	;# 
  6834  0091                     	;# 
  6835  0092                     	;# 
  6836  0093                     	;# 
  6837  0094                     	;# 
  6838  0097                     	;# 
  6839  009B                     	;# 
  6840  009B                     	;# 
  6841  009C                     	;# 
  6842  009D                     	;# 
  6843  009E                     	;# 
  6844  009F                     	;# 
  6845  010C                     	;# 
  6846  010D                     	;# 
  6847  010E                     	;# 
  6848  0111                     	;# 
  6849  0112                     	;# 
  6850  0113                     	;# 
  6851  0114                     	;# 
  6852  0115                     	;# 
  6853  0116                     	;# 
  6854  0117                     	;# 
  6855  0118                     	;# 
  6856  0119                     	;# 
  6857  018C                     	;# 
  6858  018D                     	;# 
  6859  018E                     	;# 
  6860  0197                     	;# 
  6861  0199                     	;# 
  6862  0199                     	;# 
  6863  0199                     	;# 
  6864  019A                     	;# 
  6865  019A                     	;# 
  6866  019A                     	;# 
  6867  019B                     	;# 
  6868  019B                     	;# 
  6869  019B                     	;# 
  6870  019B                     	;# 
  6871  019B                     	;# 
  6872  019C                     	;# 
  6873  019C                     	;# 
  6874  019C                     	;# 
  6875  019D                     	;# 
  6876  019D                     	;# 
  6877  019D                     	;# 
  6878  019E                     	;# 
  6879  019E                     	;# 
  6880  019E                     	;# 
  6881  019F                     	;# 
  6882  019F                     	;# 
  6883  019F                     	;# 
  6884  019F                     	;# 
  6885  019F                     	;# 
  6886  020C                     	;# 
  6887  020D                     	;# 
  6888  020E                     	;# 
  6889  0211                     	;# 
  6890  0211                     	;# 
  6891  0212                     	;# 
  6892  0212                     	;# 
  6893  0213                     	;# 
  6894  0213                     	;# 
  6895  0214                     	;# 
  6896  0214                     	;# 
  6897  0215                     	;# 
  6898  0215                     	;# 
  6899  0215                     	;# 
  6900  0215                     	;# 
  6901  0216                     	;# 
  6902  0216                     	;# 
  6903  0217                     	;# 
  6904  0217                     	;# 
  6905  0219                     	;# 
  6906  021A                     	;# 
  6907  021B                     	;# 
  6908  021C                     	;# 
  6909  021D                     	;# 
  6910  021D                     	;# 
  6911  021E                     	;# 
  6912  021F                     	;# 
  6913  028C                     	;# 
  6914  028D                     	;# 
  6915  028E                     	;# 
  6916  0291                     	;# 
  6917  0291                     	;# 
  6918  0292                     	;# 
  6919  0293                     	;# 
  6920  0294                     	;# 
  6921  0295                     	;# 
  6922  0295                     	;# 
  6923  0296                     	;# 
  6924  0297                     	;# 
  6925  0298                     	;# 
  6926  029F                     	;# 
  6927  030C                     	;# 
  6928  030D                     	;# 
  6929  030E                     	;# 
  6930  0311                     	;# 
  6931  0311                     	;# 
  6932  0312                     	;# 
  6933  0313                     	;# 
  6934  0314                     	;# 
  6935  0315                     	;# 
  6936  0315                     	;# 
  6937  0316                     	;# 
  6938  0317                     	;# 
  6939  0318                     	;# 
  6940  038C                     	;# 
  6941  038D                     	;# 
  6942  038E                     	;# 
  6943  0391                     	;# 
  6944  0392                     	;# 
  6945  0393                     	;# 
  6946  0394                     	;# 
  6947  0395                     	;# 
  6948  0396                     	;# 
  6949  0397                     	;# 
  6950  0398                     	;# 
  6951  0399                     	;# 
  6952  039A                     	;# 
  6953  039C                     	;# 
  6954  039D                     	;# 
  6955  039E                     	;# 
  6956  039F                     	;# 
  6957  0411                     	;# 
  6958  0411                     	;# 
  6959  0412                     	;# 
  6960  0413                     	;# 
  6961  0414                     	;# 
  6962  0415                     	;# 
  6963  0416                     	;# 
  6964  0417                     	;# 
  6965  0418                     	;# 
  6966  0418                     	;# 
  6967  0419                     	;# 
  6968  041A                     	;# 
  6969  041B                     	;# 
  6970  041C                     	;# 
  6971  041D                     	;# 
  6972  041E                     	;# 
  6973  041F                     	;# 
  6974  0498                     	;# 
  6975  0498                     	;# 
  6976  0499                     	;# 
  6977  049A                     	;# 
  6978  049B                     	;# 
  6979  049B                     	;# 
  6980  049C                     	;# 
  6981  049D                     	;# 
  6982  049E                     	;# 
  6983  049F                     	;# 
  6984  0617                     	;# 
  6985  0618                     	;# 
  6986  0619                     	;# 
  6987  0619                     	;# 
  6988  061A                     	;# 
  6989  061B                     	;# 
  6990  061C                     	;# 
  6991  061C                     	;# 
  6992  061F                     	;# 
  6993  0691                     	;# 
  6994  0692                     	;# 
  6995  0693                     	;# 
  6996  0694                     	;# 
  6997  0695                     	;# 
  6998  0696                     	;# 
  6999  0697                     	;# 
  7000  0698                     	;# 
  7001  0699                     	;# 
  7002  0711                     	;# 
  7003  0712                     	;# 
  7004  0713                     	;# 
  7005  0714                     	;# 
  7006  0715                     	;# 
  7007  0716                     	;# 
  7008  0717                     	;# 
  7009  0718                     	;# 
  7010  0719                     	;# 
  7011  0891                     	;# 
  7012  0891                     	;# 
  7013  0891                     	;# 
  7014  0891                     	;# 
  7015  0891                     	;# 
  7016  0891                     	;# 
  7017  0892                     	;# 
  7018  0892                     	;# 
  7019  0892                     	;# 
  7020  0893                     	;# 
  7021  0893                     	;# 
  7022  0893                     	;# 
  7023  0893                     	;# 
  7024  0893                     	;# 
  7025  0893                     	;# 
  7026  0894                     	;# 
  7027  0894                     	;# 
  7028  0894                     	;# 
  7029  0895                     	;# 
  7030  0895                     	;# 
  7031  0895                     	;# 
  7032  0896                     	;# 
  7033  0896                     	;# 
  7034  0896                     	;# 
  7035  089B                     	;# 
  7036  0911                     	;# 
  7037  0912                     	;# 
  7038  0913                     	;# 
  7039  0914                     	;# 
  7040  0915                     	;# 
  7041  0916                     	;# 
  7042  0918                     	;# 
  7043  0919                     	;# 
  7044  091A                     	;# 
  7045  091B                     	;# 
  7046  091C                     	;# 
  7047  091D                     	;# 
  7048  091E                     	;# 
  7049  091F                     	;# 
  7050  0E0F                     	;# 
  7051  0E10                     	;# 
  7052  0E11                     	;# 
  7053  0E12                     	;# 
  7054  0E13                     	;# 
  7055  0E14                     	;# 
  7056  0E15                     	;# 
  7057  0E16                     	;# 
  7058  0E17                     	;# 
  7059  0E18                     	;# 
  7060  0E19                     	;# 
  7061  0E1A                     	;# 
  7062  0E1B                     	;# 
  7063  0E1C                     	;# 
  7064  0E1D                     	;# 
  7065  0E1E                     	;# 
  7066  0E1F                     	;# 
  7067  0E20                     	;# 
  7068  0E21                     	;# 
  7069  0E22                     	;# 
  7070  0E24                     	;# 
  7071  0E25                     	;# 
  7072  0E28                     	;# 
  7073  0E29                     	;# 
  7074  0E2A                     	;# 
  7075  0E2B                     	;# 
  7076  0E2C                     	;# 
  7077  0E2D                     	;# 
  7078  0E2E                     	;# 
  7079  0E2F                     	;# 
  7080  0E90                     	;# 
  7081  0E91                     	;# 
  7082  0E92                     	;# 
  7083  0E94                     	;# 
  7084  0E95                     	;# 
  7085  0E9C                     	;# 
  7086  0E9D                     	;# 
  7087  0E9E                     	;# 
  7088  0E9F                     	;# 
  7089  0EA0                     	;# 
  7090  0EA1                     	;# 
  7091  0EA2                     	;# 
  7092  0EA3                     	;# 
  7093  0EA4                     	;# 
  7094  0EA5                     	;# 
  7095  0EA6                     	;# 
  7096  0EA7                     	;# 
  7097  0F0F                     	;# 
  7098  0F10                     	;# 
  7099  0F11                     	;# 
  7100  0F12                     	;# 
  7101  0F13                     	;# 
  7102  0F14                     	;# 
  7103  0F15                     	;# 
  7104  0F16                     	;# 
  7105  0F17                     	;# 
  7106  0F18                     	;# 
  7107  0F19                     	;# 
  7108  0F1A                     	;# 
  7109  0F1B                     	;# 
  7110  0F1C                     	;# 
  7111  0F1D                     	;# 
  7112  0F1E                     	;# 
  7113  0F1F                     	;# 
  7114  0F20                     	;# 
  7115  0F21                     	;# 
  7116  0F22                     	;# 
  7117  0F23                     	;# 
  7118  0F24                     	;# 
  7119  0F25                     	;# 
  7120  0F26                     	;# 
  7121  0F27                     	;# 
  7122  0F28                     	;# 
  7123  0F29                     	;# 
  7124  0F2A                     	;# 
  7125  0F2B                     	;# 
  7126  0F2C                     	;# 
  7127  0F2D                     	;# 
  7128  0F2E                     	;# 
  7129  0F2F                     	;# 
  7130  0F30                     	;# 
  7131  0F31                     	;# 
  7132  0F32                     	;# 
  7133  0F33                     	;# 
  7134  0F34                     	;# 
  7135  0F35                     	;# 
  7136  0F36                     	;# 
  7137  0F37                     	;# 
  7138  0FE4                     	;# 
  7139  0FE5                     	;# 
  7140  0FE6                     	;# 
  7141  0FE7                     	;# 
  7142  0FE8                     	;# 
  7143  0FE9                     	;# 
  7144  0FEA                     	;# 
  7145  0FEB                     	;# 
  7146  0FED                     	;# 
  7147  0FEE                     	;# 
  7148  0FEF                     	;# 
  7149  0000                     	;# 
  7150  0001                     	;# 
  7151  0002                     	;# 
  7152  0003                     	;# 
  7153  0004                     	;# 
  7154  0005                     	;# 
  7155  0006                     	;# 
  7156  0007                     	;# 
  7157  0008                     	;# 
  7158  0009                     	;# 
  7159  000A                     	;# 
  7160  000B                     	;# 
  7161  000C                     	;# 
  7162  000D                     	;# 
  7163  000E                     	;# 
  7164  0010                     	;# 
  7165  0011                     	;# 
  7166  0012                     	;# 
  7167  0013                     	;# 
  7168  0014                     	;# 
  7169  0015                     	;# 
  7170  0015                     	;# 
  7171  0016                     	;# 
  7172  0016                     	;# 
  7173  0017                     	;# 
  7174  0018                     	;# 
  7175  0019                     	;# 
  7176  0019                     	;# 
  7177  001A                     	;# 
  7178  001B                     	;# 
  7179  001C                     	;# 
  7180  001D                     	;# 
  7181  001E                     	;# 
  7182  001F                     	;# 
  7183  008C                     	;# 
  7184  008D                     	;# 
  7185  008E                     	;# 
  7186  0090                     	;# 
  7187  0091                     	;# 
  7188  0092                     	;# 
  7189  0093                     	;# 
  7190  0094                     	;# 
  7191  0097                     	;# 
  7192  009B                     	;# 
  7193  009B                     	;# 
  7194  009C                     	;# 
  7195  009D                     	;# 
  7196  009E                     	;# 
  7197  009F                     	;# 
  7198  010C                     	;# 
  7199  010D                     	;# 
  7200  010E                     	;# 
  7201  0111                     	;# 
  7202  0112                     	;# 
  7203  0113                     	;# 
  7204  0114                     	;# 
  7205  0115                     	;# 
  7206  0116                     	;# 
  7207  0117                     	;# 
  7208  0118                     	;# 
  7209  0119                     	;# 
  7210  018C                     	;# 
  7211  018D                     	;# 
  7212  018E                     	;# 
  7213  0197                     	;# 
  7214  0199                     	;# 
  7215  0199                     	;# 
  7216  0199                     	;# 
  7217  019A                     	;# 
  7218  019A                     	;# 
  7219  019A                     	;# 
  7220  019B                     	;# 
  7221  019B                     	;# 
  7222  019B                     	;# 
  7223  019B                     	;# 
  7224  019B                     	;# 
  7225  019C                     	;# 
  7226  019C                     	;# 
  7227  019C                     	;# 
  7228  019D                     	;# 
  7229  019D                     	;# 
  7230  019D                     	;# 
  7231  019E                     	;# 
  7232  019E                     	;# 
  7233  019E                     	;# 
  7234  019F                     	;# 
  7235  019F                     	;# 
  7236  019F                     	;# 
  7237  019F                     	;# 
  7238  019F                     	;# 
  7239  020C                     	;# 
  7240  020D                     	;# 
  7241  020E                     	;# 
  7242  0211                     	;# 
  7243  0211                     	;# 
  7244  0212                     	;# 
  7245  0212                     	;# 
  7246  0213                     	;# 
  7247  0213                     	;# 
  7248  0214                     	;# 
  7249  0214                     	;# 
  7250  0215                     	;# 
  7251  0215                     	;# 
  7252  0215                     	;# 
  7253  0215                     	;# 
  7254  0216                     	;# 
  7255  0216                     	;# 
  7256  0217                     	;# 
  7257  0217                     	;# 
  7258  0219                     	;# 
  7259  021A                     	;# 
  7260  021B                     	;# 
  7261  021C                     	;# 
  7262  021D                     	;# 
  7263  021D                     	;# 
  7264  021E                     	;# 
  7265  021F                     	;# 
  7266  028C                     	;# 
  7267  028D                     	;# 
  7268  028E                     	;# 
  7269  0291                     	;# 
  7270  0291                     	;# 
  7271  0292                     	;# 
  7272  0293                     	;# 
  7273  0294                     	;# 
  7274  0295                     	;# 
  7275  0295                     	;# 
  7276  0296                     	;# 
  7277  0297                     	;# 
  7278  0298                     	;# 
  7279  029F                     	;# 
  7280  030C                     	;# 
  7281  030D                     	;# 
  7282  030E                     	;# 
  7283  0311                     	;# 
  7284  0311                     	;# 
  7285  0312                     	;# 
  7286  0313                     	;# 
  7287  0314                     	;# 
  7288  0315                     	;# 
  7289  0315                     	;# 
  7290  0316                     	;# 
  7291  0317                     	;# 
  7292  0318                     	;# 
  7293  038C                     	;# 
  7294  038D                     	;# 
  7295  038E                     	;# 
  7296  0391                     	;# 
  7297  0392                     	;# 
  7298  0393                     	;# 
  7299  0394                     	;# 
  7300  0395                     	;# 
  7301  0396                     	;# 
  7302  0397                     	;# 
  7303  0398                     	;# 
  7304  0399                     	;# 
  7305  039A                     	;# 
  7306  039C                     	;# 
  7307  039D                     	;# 
  7308  039E                     	;# 
  7309  039F                     	;# 
  7310  0411                     	;# 
  7311  0411                     	;# 
  7312  0412                     	;# 
  7313  0413                     	;# 
  7314  0414                     	;# 
  7315  0415                     	;# 
  7316  0416                     	;# 
  7317  0417                     	;# 
  7318  0418                     	;# 
  7319  0418                     	;# 
  7320  0419                     	;# 
  7321  041A                     	;# 
  7322  041B                     	;# 
  7323  041C                     	;# 
  7324  041D                     	;# 
  7325  041E                     	;# 
  7326  041F                     	;# 
  7327  0498                     	;# 
  7328  0498                     	;# 
  7329  0499                     	;# 
  7330  049A                     	;# 
  7331  049B                     	;# 
  7332  049B                     	;# 
  7333  049C                     	;# 
  7334  049D                     	;# 
  7335  049E                     	;# 
  7336  049F                     	;# 
  7337  0617                     	;# 
  7338  0618                     	;# 
  7339  0619                     	;# 
  7340  0619                     	;# 
  7341  061A                     	;# 
  7342  061B                     	;# 
  7343  061C                     	;# 
  7344  061C                     	;# 
  7345  061F                     	;# 
  7346  0691                     	;# 
  7347  0692                     	;# 
  7348  0693                     	;# 
  7349  0694                     	;# 
  7350  0695                     	;# 
  7351  0696                     	;# 
  7352  0697                     	;# 
  7353  0698                     	;# 
  7354  0699                     	;# 
  7355  0711                     	;# 
  7356  0712                     	;# 
  7357  0713                     	;# 
  7358  0714                     	;# 
  7359  0715                     	;# 
  7360  0716                     	;# 
  7361  0717                     	;# 
  7362  0718                     	;# 
  7363  0719                     	;# 
  7364  0891                     	;# 
  7365  0891                     	;# 
  7366  0891                     	;# 
  7367  0891                     	;# 
  7368  0891                     	;# 
  7369  0891                     	;# 
  7370  0892                     	;# 
  7371  0892                     	;# 
  7372  0892                     	;# 
  7373  0893                     	;# 
  7374  0893                     	;# 
  7375  0893                     	;# 
  7376  0893                     	;# 
  7377  0893                     	;# 
  7378  0893                     	;# 
  7379  0894                     	;# 
  7380  0894                     	;# 
  7381  0894                     	;# 
  7382  0895                     	;# 
  7383  0895                     	;# 
  7384  0895                     	;# 
  7385  0896                     	;# 
  7386  0896                     	;# 
  7387  0896                     	;# 
  7388  089B                     	;# 
  7389  0911                     	;# 
  7390  0912                     	;# 
  7391  0913                     	;# 
  7392  0914                     	;# 
  7393  0915                     	;# 
  7394  0916                     	;# 
  7395  0918                     	;# 
  7396  0919                     	;# 
  7397  091A                     	;# 
  7398  091B                     	;# 
  7399  091C                     	;# 
  7400  091D                     	;# 
  7401  091E                     	;# 
  7402  091F                     	;# 
  7403  0E0F                     	;# 
  7404  0E10                     	;# 
  7405  0E11                     	;# 
  7406  0E12                     	;# 
  7407  0E13                     	;# 
  7408  0E14                     	;# 
  7409  0E15                     	;# 
  7410  0E16                     	;# 
  7411  0E17                     	;# 
  7412  0E18                     	;# 
  7413  0E19                     	;# 
  7414  0E1A                     	;# 
  7415  0E1B                     	;# 
  7416  0E1C                     	;# 
  7417  0E1D                     	;# 
  7418  0E1E                     	;# 
  7419  0E1F                     	;# 
  7420  0E20                     	;# 
  7421  0E21                     	;# 
  7422  0E22                     	;# 
  7423  0E24                     	;# 
  7424  0E25                     	;# 
  7425  0E28                     	;# 
  7426  0E29                     	;# 
  7427  0E2A                     	;# 
  7428  0E2B                     	;# 
  7429  0E2C                     	;# 
  7430  0E2D                     	;# 
  7431  0E2E                     	;# 
  7432  0E2F                     	;# 
  7433  0E90                     	;# 
  7434  0E91                     	;# 
  7435  0E92                     	;# 
  7436  0E94                     	;# 
  7437  0E95                     	;# 
  7438  0E9C                     	;# 
  7439  0E9D                     	;# 
  7440  0E9E                     	;# 
  7441  0E9F                     	;# 
  7442  0EA0                     	;# 
  7443  0EA1                     	;# 
  7444  0EA2                     	;# 
  7445  0EA3                     	;# 
  7446  0EA4                     	;# 
  7447  0EA5                     	;# 
  7448  0EA6                     	;# 
  7449  0EA7                     	;# 
  7450  0F0F                     	;# 
  7451  0F10                     	;# 
  7452  0F11                     	;# 
  7453  0F12                     	;# 
  7454  0F13                     	;# 
  7455  0F14                     	;# 
  7456  0F15                     	;# 
  7457  0F16                     	;# 
  7458  0F17                     	;# 
  7459  0F18                     	;# 
  7460  0F19                     	;# 
  7461  0F1A                     	;# 
  7462  0F1B                     	;# 
  7463  0F1C                     	;# 
  7464  0F1D                     	;# 
  7465  0F1E                     	;# 
  7466  0F1F                     	;# 
  7467  0F20                     	;# 
  7468  0F21                     	;# 
  7469  0F22                     	;# 
  7470  0F23                     	;# 
  7471  0F24                     	;# 
  7472  0F25                     	;# 
  7473  0F26                     	;# 
  7474  0F27                     	;# 
  7475  0F28                     	;# 
  7476  0F29                     	;# 
  7477  0F2A                     	;# 
  7478  0F2B                     	;# 
  7479  0F2C                     	;# 
  7480  0F2D                     	;# 
  7481  0F2E                     	;# 
  7482  0F2F                     	;# 
  7483  0F30                     	;# 
  7484  0F31                     	;# 
  7485  0F32                     	;# 
  7486  0F33                     	;# 
  7487  0F34                     	;# 
  7488  0F35                     	;# 
  7489  0F36                     	;# 
  7490  0F37                     	;# 
  7491  0FE4                     	;# 
  7492  0FE5                     	;# 
  7493  0FE6                     	;# 
  7494  0FE7                     	;# 
  7495  0FE8                     	;# 
  7496  0FE9                     	;# 
  7497  0FEA                     	;# 
  7498  0FEB                     	;# 
  7499  0FED                     	;# 
  7500  0FEE                     	;# 
  7501  0FEF                     	;# 
  7502  0000                     	;# 
  7503  0001                     	;# 
  7504  0002                     	;# 
  7505  0003                     	;# 
  7506  0004                     	;# 
  7507  0005                     	;# 
  7508  0006                     	;# 
  7509  0007                     	;# 
  7510  0008                     	;# 
  7511  0009                     	;# 
  7512  000A                     	;# 
  7513  000B                     	;# 
  7514  000C                     	;# 
  7515  000D                     	;# 
  7516  000E                     	;# 
  7517  0010                     	;# 
  7518  0011                     	;# 
  7519  0012                     	;# 
  7520  0013                     	;# 
  7521  0014                     	;# 
  7522  0015                     	;# 
  7523  0015                     	;# 
  7524  0016                     	;# 
  7525  0016                     	;# 
  7526  0017                     	;# 
  7527  0018                     	;# 
  7528  0019                     	;# 
  7529  0019                     	;# 
  7530  001A                     	;# 
  7531  001B                     	;# 
  7532  001C                     	;# 
  7533  001D                     	;# 
  7534  001E                     	;# 
  7535  001F                     	;# 
  7536  008C                     	;# 
  7537  008D                     	;# 
  7538  008E                     	;# 
  7539  0090                     	;# 
  7540  0091                     	;# 
  7541  0092                     	;# 
  7542  0093                     	;# 
  7543  0094                     	;# 
  7544  0097                     	;# 
  7545  009B                     	;# 
  7546  009B                     	;# 
  7547  009C                     	;# 
  7548  009D                     	;# 
  7549  009E                     	;# 
  7550  009F                     	;# 
  7551  010C                     	;# 
  7552  010D                     	;# 
  7553  010E                     	;# 
  7554  0111                     	;# 
  7555  0112                     	;# 
  7556  0113                     	;# 
  7557  0114                     	;# 
  7558  0115                     	;# 
  7559  0116                     	;# 
  7560  0117                     	;# 
  7561  0118                     	;# 
  7562  0119                     	;# 
  7563  018C                     	;# 
  7564  018D                     	;# 
  7565  018E                     	;# 
  7566  0197                     	;# 
  7567  0199                     	;# 
  7568  0199                     	;# 
  7569  0199                     	;# 
  7570  019A                     	;# 
  7571  019A                     	;# 
  7572  019A                     	;# 
  7573  019B                     	;# 
  7574  019B                     	;# 
  7575  019B                     	;# 
  7576  019B                     	;# 
  7577  019B                     	;# 
  7578  019C                     	;# 
  7579  019C                     	;# 
  7580  019C                     	;# 
  7581  019D                     	;# 
  7582  019D                     	;# 
  7583  019D                     	;# 
  7584  019E                     	;# 
  7585  019E                     	;# 
  7586  019E                     	;# 
  7587  019F                     	;# 
  7588  019F                     	;# 
  7589  019F                     	;# 
  7590  019F                     	;# 
  7591  019F                     	;# 
  7592  020C                     	;# 
  7593  020D                     	;# 
  7594  020E                     	;# 
  7595  0211                     	;# 
  7596  0211                     	;# 
  7597  0212                     	;# 
  7598  0212                     	;# 
  7599  0213                     	;# 
  7600  0213                     	;# 
  7601  0214                     	;# 
  7602  0214                     	;# 
  7603  0215                     	;# 
  7604  0215                     	;# 
  7605  0215                     	;# 
  7606  0215                     	;# 
  7607  0216                     	;# 
  7608  0216                     	;# 
  7609  0217                     	;# 
  7610  0217                     	;# 
  7611  0219                     	;# 
  7612  021A                     	;# 
  7613  021B                     	;# 
  7614  021C                     	;# 
  7615  021D                     	;# 
  7616  021D                     	;# 
  7617  021E                     	;# 
  7618  021F                     	;# 
  7619  028C                     	;# 
  7620  028D                     	;# 
  7621  028E                     	;# 
  7622  0291                     	;# 
  7623  0291                     	;# 
  7624  0292                     	;# 
  7625  0293                     	;# 
  7626  0294                     	;# 
  7627  0295                     	;# 
  7628  0295                     	;# 
  7629  0296                     	;# 
  7630  0297                     	;# 
  7631  0298                     	;# 
  7632  029F                     	;# 
  7633  030C                     	;# 
  7634  030D                     	;# 
  7635  030E                     	;# 
  7636  0311                     	;# 
  7637  0311                     	;# 
  7638  0312                     	;# 
  7639  0313                     	;# 
  7640  0314                     	;# 
  7641  0315                     	;# 
  7642  0315                     	;# 
  7643  0316                     	;# 
  7644  0317                     	;# 
  7645  0318                     	;# 
  7646  038C                     	;# 
  7647  038D                     	;# 
  7648  038E                     	;# 
  7649  0391                     	;# 
  7650  0392                     	;# 
  7651  0393                     	;# 
  7652  0394                     	;# 
  7653  0395                     	;# 
  7654  0396                     	;# 
  7655  0397                     	;# 
  7656  0398                     	;# 
  7657  0399                     	;# 
  7658  039A                     	;# 
  7659  039C                     	;# 
  7660  039D                     	;# 
  7661  039E                     	;# 
  7662  039F                     	;# 
  7663  0411                     	;# 
  7664  0411                     	;# 
  7665  0412                     	;# 
  7666  0413                     	;# 
  7667  0414                     	;# 
  7668  0415                     	;# 
  7669  0416                     	;# 
  7670  0417                     	;# 
  7671  0418                     	;# 
  7672  0418                     	;# 
  7673  0419                     	;# 
  7674  041A                     	;# 
  7675  041B                     	;# 
  7676  041C                     	;# 
  7677  041D                     	;# 
  7678  041E                     	;# 
  7679  041F                     	;# 
  7680  0498                     	;# 
  7681  0498                     	;# 
  7682  0499                     	;# 
  7683  049A                     	;# 
  7684  049B                     	;# 
  7685  049B                     	;# 
  7686  049C                     	;# 
  7687  049D                     	;# 
  7688  049E                     	;# 
  7689  049F                     	;# 
  7690  0617                     	;# 
  7691  0618                     	;# 
  7692  0619                     	;# 
  7693  0619                     	;# 
  7694  061A                     	;# 
  7695  061B                     	;# 
  7696  061C                     	;# 
  7697  061C                     	;# 
  7698  061F                     	;# 
  7699  0691                     	;# 
  7700  0692                     	;# 
  7701  0693                     	;# 
  7702  0694                     	;# 
  7703  0695                     	;# 
  7704  0696                     	;# 
  7705  0697                     	;# 
  7706  0698                     	;# 
  7707  0699                     	;# 
  7708  0711                     	;# 
  7709  0712                     	;# 
  7710  0713                     	;# 
  7711  0714                     	;# 
  7712  0715                     	;# 
  7713  0716                     	;# 
  7714  0717                     	;# 
  7715  0718                     	;# 
  7716  0719                     	;# 
  7717  0891                     	;# 
  7718  0891                     	;# 
  7719  0891                     	;# 
  7720  0891                     	;# 
  7721  0891                     	;# 
  7722  0891                     	;# 
  7723  0892                     	;# 
  7724  0892                     	;# 
  7725  0892                     	;# 
  7726  0893                     	;# 
  7727  0893                     	;# 
  7728  0893                     	;# 
  7729  0893                     	;# 
  7730  0893                     	;# 
  7731  0893                     	;# 
  7732  0894                     	;# 
  7733  0894                     	;# 
  7734  0894                     	;# 
  7735  0895                     	;# 
  7736  0895                     	;# 
  7737  0895                     	;# 
  7738  0896                     	;# 
  7739  0896                     	;# 
  7740  0896                     	;# 
  7741  089B                     	;# 
  7742  0911                     	;# 
  7743  0912                     	;# 
  7744  0913                     	;# 
  7745  0914                     	;# 
  7746  0915                     	;# 
  7747  0916                     	;# 
  7748  0918                     	;# 
  7749  0919                     	;# 
  7750  091A                     	;# 
  7751  091B                     	;# 
  7752  091C                     	;# 
  7753  091D                     	;# 
  7754  091E                     	;# 
  7755  091F                     	;# 
  7756  0E0F                     	;# 
  7757  0E10                     	;# 
  7758  0E11                     	;# 
  7759  0E12                     	;# 
  7760  0E13                     	;# 
  7761  0E14                     	;# 
  7762  0E15                     	;# 
  7763  0E16                     	;# 
  7764  0E17                     	;# 
  7765  0E18                     	;# 
  7766  0E19                     	;# 
  7767  0E1A                     	;# 
  7768  0E1B                     	;# 
  7769  0E1C                     	;# 
  7770  0E1D                     	;# 
  7771  0E1E                     	;# 
  7772  0E1F                     	;# 
  7773  0E20                     	;# 
  7774  0E21                     	;# 
  7775  0E22                     	;# 
  7776  0E24                     	;# 
  7777  0E25                     	;# 
  7778  0E28                     	;# 
  7779  0E29                     	;# 
  7780  0E2A                     	;# 
  7781  0E2B                     	;# 
  7782  0E2C                     	;# 
  7783  0E2D                     	;# 
  7784  0E2E                     	;# 
  7785  0E2F                     	;# 
  7786  0E90                     	;# 
  7787  0E91                     	;# 
  7788  0E92                     	;# 
  7789  0E94                     	;# 
  7790  0E95                     	;# 
  7791  0E9C                     	;# 
  7792  0E9D                     	;# 
  7793  0E9E                     	;# 
  7794  0E9F                     	;# 
  7795  0EA0                     	;# 
  7796  0EA1                     	;# 
  7797  0EA2                     	;# 
  7798  0EA3                     	;# 
  7799  0EA4                     	;# 
  7800  0EA5                     	;# 
  7801  0EA6                     	;# 
  7802  0EA7                     	;# 
  7803  0F0F                     	;# 
  7804  0F10                     	;# 
  7805  0F11                     	;# 
  7806  0F12                     	;# 
  7807  0F13                     	;# 
  7808  0F14                     	;# 
  7809  0F15                     	;# 
  7810  0F16                     	;# 
  7811  0F17                     	;# 
  7812  0F18                     	;# 
  7813  0F19                     	;# 
  7814  0F1A                     	;# 
  7815  0F1B                     	;# 
  7816  0F1C                     	;# 
  7817  0F1D                     	;# 
  7818  0F1E                     	;# 
  7819  0F1F                     	;# 
  7820  0F20                     	;# 
  7821  0F21                     	;# 
  7822  0F22                     	;# 
  7823  0F23                     	;# 
  7824  0F24                     	;# 
  7825  0F25                     	;# 
  7826  0F26                     	;# 
  7827  0F27                     	;# 
  7828  0F28                     	;# 
  7829  0F29                     	;# 
  7830  0F2A                     	;# 
  7831  0F2B                     	;# 
  7832  0F2C                     	;# 
  7833  0F2D                     	;# 
  7834  0F2E                     	;# 
  7835  0F2F                     	;# 
  7836  0F30                     	;# 
  7837  0F31                     	;# 
  7838  0F32                     	;# 
  7839  0F33                     	;# 
  7840  0F34                     	;# 
  7841  0F35                     	;# 
  7842  0F36                     	;# 
  7843  0F37                     	;# 
  7844  0FE4                     	;# 
  7845  0FE5                     	;# 
  7846  0FE6                     	;# 
  7847  0FE7                     	;# 
  7848  0FE8                     	;# 
  7849  0FE9                     	;# 
  7850  0FEA                     	;# 
  7851  0FEB                     	;# 
  7852  0FED                     	;# 
  7853  0FEE                     	;# 
  7854  0FEF                     	;# 
  7855  0000                     	;# 
  7856  0001                     	;# 
  7857  0002                     	;# 
  7858  0003                     	;# 
  7859  0004                     	;# 
  7860  0005                     	;# 
  7861  0006                     	;# 
  7862  0007                     	;# 
  7863  0008                     	;# 
  7864  0009                     	;# 
  7865  000A                     	;# 
  7866  000B                     	;# 
  7867  000C                     	;# 
  7868  000D                     	;# 
  7869  000E                     	;# 
  7870  0010                     	;# 
  7871  0011                     	;# 
  7872  0012                     	;# 
  7873  0013                     	;# 
  7874  0014                     	;# 
  7875  0015                     	;# 
  7876  0015                     	;# 
  7877  0016                     	;# 
  7878  0016                     	;# 
  7879  0017                     	;# 
  7880  0018                     	;# 
  7881  0019                     	;# 
  7882  0019                     	;# 
  7883  001A                     	;# 
  7884  001B                     	;# 
  7885  001C                     	;# 
  7886  001D                     	;# 
  7887  001E                     	;# 
  7888  001F                     	;# 
  7889  008C                     	;# 
  7890  008D                     	;# 
  7891  008E                     	;# 
  7892  0090                     	;# 
  7893  0091                     	;# 
  7894  0092                     	;# 
  7895  0093                     	;# 
  7896  0094                     	;# 
  7897  0097                     	;# 
  7898  009B                     	;# 
  7899  009B                     	;# 
  7900  009C                     	;# 
  7901  009D                     	;# 
  7902  009E                     	;# 
  7903  009F                     	;# 
  7904  010C                     	;# 
  7905  010D                     	;# 
  7906  010E                     	;# 
  7907  0111                     	;# 
  7908  0112                     	;# 
  7909  0113                     	;# 
  7910  0114                     	;# 
  7911  0115                     	;# 
  7912  0116                     	;# 
  7913  0117                     	;# 
  7914  0118                     	;# 
  7915  0119                     	;# 
  7916  018C                     	;# 
  7917  018D                     	;# 
  7918  018E                     	;# 
  7919  0197                     	;# 
  7920  0199                     	;# 
  7921  0199                     	;# 
  7922  0199                     	;# 
  7923  019A                     	;# 
  7924  019A                     	;# 
  7925  019A                     	;# 
  7926  019B                     	;# 
  7927  019B                     	;# 
  7928  019B                     	;# 
  7929  019B                     	;# 
  7930  019B                     	;# 
  7931  019C                     	;# 
  7932  019C                     	;# 
  7933  019C                     	;# 
  7934  019D                     	;# 
  7935  019D                     	;# 
  7936  019D                     	;# 
  7937  019E                     	;# 
  7938  019E                     	;# 
  7939  019E                     	;# 
  7940  019F                     	;# 
  7941  019F                     	;# 
  7942  019F                     	;# 
  7943  019F                     	;# 
  7944  019F                     	;# 
  7945  020C                     	;# 
  7946  020D                     	;# 
  7947  020E                     	;# 
  7948  0211                     	;# 
  7949  0211                     	;# 
  7950  0212                     	;# 
  7951  0212                     	;# 
  7952  0213                     	;# 
  7953  0213                     	;# 
  7954  0214                     	;# 
  7955  0214                     	;# 
  7956  0215                     	;# 
  7957  0215                     	;# 
  7958  0215                     	;# 
  7959  0215                     	;# 
  7960  0216                     	;# 
  7961  0216                     	;# 
  7962  0217                     	;# 
  7963  0217                     	;# 
  7964  0219                     	;# 
  7965  021A                     	;# 
  7966  021B                     	;# 
  7967  021C                     	;# 
  7968  021D                     	;# 
  7969  021D                     	;# 
  7970  021E                     	;# 
  7971  021F                     	;# 
  7972  028C                     	;# 
  7973  028D                     	;# 
  7974  028E                     	;# 
  7975  0291                     	;# 
  7976  0291                     	;# 
  7977  0292                     	;# 
  7978  0293                     	;# 
  7979  0294                     	;# 
  7980  0295                     	;# 
  7981  0295                     	;# 
  7982  0296                     	;# 
  7983  0297                     	;# 
  7984  0298                     	;# 
  7985  029F                     	;# 
  7986  030C                     	;# 
  7987  030D                     	;# 
  7988  030E                     	;# 
  7989  0311                     	;# 
  7990  0311                     	;# 
  7991  0312                     	;# 
  7992  0313                     	;# 
  7993  0314                     	;# 
  7994  0315                     	;# 
  7995  0315                     	;# 
  7996  0316                     	;# 
  7997  0317                     	;# 
  7998  0318                     	;# 
  7999  038C                     	;# 
  8000  038D                     	;# 
  8001  038E                     	;# 
  8002  0391                     	;# 
  8003  0392                     	;# 
  8004  0393                     	;# 
  8005  0394                     	;# 
  8006  0395                     	;# 
  8007  0396                     	;# 
  8008  0397                     	;# 
  8009  0398                     	;# 
  8010  0399                     	;# 
  8011  039A                     	;# 
  8012  039C                     	;# 
  8013  039D                     	;# 
  8014  039E                     	;# 
  8015  039F                     	;# 
  8016  0411                     	;# 
  8017  0411                     	;# 
  8018  0412                     	;# 
  8019  0413                     	;# 
  8020  0414                     	;# 
  8021  0415                     	;# 
  8022  0416                     	;# 
  8023  0417                     	;# 
  8024  0418                     	;# 
  8025  0418                     	;# 
  8026  0419                     	;# 
  8027  041A                     	;# 
  8028  041B                     	;# 
  8029  041C                     	;# 
  8030  041D                     	;# 
  8031  041E                     	;# 
  8032  041F                     	;# 
  8033  0498                     	;# 
  8034  0498                     	;# 
  8035  0499                     	;# 
  8036  049A                     	;# 
  8037  049B                     	;# 
  8038  049B                     	;# 
  8039  049C                     	;# 
  8040  049D                     	;# 
  8041  049E                     	;# 
  8042  049F                     	;# 
  8043  0617                     	;# 
  8044  0618                     	;# 
  8045  0619                     	;# 
  8046  0619                     	;# 
  8047  061A                     	;# 
  8048  061B                     	;# 
  8049  061C                     	;# 
  8050  061C                     	;# 
  8051  061F                     	;# 
  8052  0691                     	;# 
  8053  0692                     	;# 
  8054  0693                     	;# 
  8055  0694                     	;# 
  8056  0695                     	;# 
  8057  0696                     	;# 
  8058  0697                     	;# 
  8059  0698                     	;# 
  8060  0699                     	;# 
  8061  0711                     	;# 
  8062  0712                     	;# 
  8063  0713                     	;# 
  8064  0714                     	;# 
  8065  0715                     	;# 
  8066  0716                     	;# 
  8067  0717                     	;# 
  8068  0718                     	;# 
  8069  0719                     	;# 
  8070  0891                     	;# 
  8071  0891                     	;# 
  8072  0891                     	;# 
  8073  0891                     	;# 
  8074  0891                     	;# 
  8075  0891                     	;# 
  8076  0892                     	;# 
  8077  0892                     	;# 
  8078  0892                     	;# 
  8079  0893                     	;# 
  8080  0893                     	;# 
  8081  0893                     	;# 
  8082  0893                     	;# 
  8083  0893                     	;# 
  8084  0893                     	;# 
  8085  0894                     	;# 
  8086  0894                     	;# 
  8087  0894                     	;# 
  8088  0895                     	;# 
  8089  0895                     	;# 
  8090  0895                     	;# 
  8091  0896                     	;# 
  8092  0896                     	;# 
  8093  0896                     	;# 
  8094  089B                     	;# 
  8095  0911                     	;# 
  8096  0912                     	;# 
  8097  0913                     	;# 
  8098  0914                     	;# 
  8099  0915                     	;# 
  8100  0916                     	;# 
  8101  0918                     	;# 
  8102  0919                     	;# 
  8103  091A                     	;# 
  8104  091B                     	;# 
  8105  091C                     	;# 
  8106  091D                     	;# 
  8107  091E                     	;# 
  8108  091F                     	;# 
  8109  0E0F                     	;# 
  8110  0E10                     	;# 
  8111  0E11                     	;# 
  8112  0E12                     	;# 
  8113  0E13                     	;# 
  8114  0E14                     	;# 
  8115  0E15                     	;# 
  8116  0E16                     	;# 
  8117  0E17                     	;# 
  8118  0E18                     	;# 
  8119  0E19                     	;# 
  8120  0E1A                     	;# 
  8121  0E1B                     	;# 
  8122  0E1C                     	;# 
  8123  0E1D                     	;# 
  8124  0E1E                     	;# 
  8125  0E1F                     	;# 
  8126  0E20                     	;# 
  8127  0E21                     	;# 
  8128  0E22                     	;# 
  8129  0E24                     	;# 
  8130  0E25                     	;# 
  8131  0E28                     	;# 
  8132  0E29                     	;# 
  8133  0E2A                     	;# 
  8134  0E2B                     	;# 
  8135  0E2C                     	;# 
  8136  0E2D                     	;# 
  8137  0E2E                     	;# 
  8138  0E2F                     	;# 
  8139  0E90                     	;# 
  8140  0E91                     	;# 
  8141  0E92                     	;# 
  8142  0E94                     	;# 
  8143  0E95                     	;# 
  8144  0E9C                     	;# 
  8145  0E9D                     	;# 
  8146  0E9E                     	;# 
  8147  0E9F                     	;# 
  8148  0EA0                     	;# 
  8149  0EA1                     	;# 
  8150  0EA2                     	;# 
  8151  0EA3                     	;# 
  8152  0EA4                     	;# 
  8153  0EA5                     	;# 
  8154  0EA6                     	;# 
  8155  0EA7                     	;# 
  8156  0F0F                     	;# 
  8157  0F10                     	;# 
  8158  0F11                     	;# 
  8159  0F12                     	;# 
  8160  0F13                     	;# 
  8161  0F14                     	;# 
  8162  0F15                     	;# 
  8163  0F16                     	;# 
  8164  0F17                     	;# 
  8165  0F18                     	;# 
  8166  0F19                     	;# 
  8167  0F1A                     	;# 
  8168  0F1B                     	;# 
  8169  0F1C                     	;# 
  8170  0F1D                     	;# 
  8171  0F1E                     	;# 
  8172  0F1F                     	;# 
  8173  0F20                     	;# 
  8174  0F21                     	;# 
  8175  0F22                     	;# 
  8176  0F23                     	;# 
  8177  0F24                     	;# 
  8178  0F25                     	;# 
  8179  0F26                     	;# 
  8180  0F27                     	;# 
  8181  0F28                     	;# 
  8182  0F29                     	;# 
  8183  0F2A                     	;# 
  8184  0F2B                     	;# 
  8185  0F2C                     	;# 
  8186  0F2D                     	;# 
  8187  0F2E                     	;# 
  8188  0F2F                     	;# 
  8189  0F30                     	;# 
  8190  0F31                     	;# 
  8191  0F32                     	;# 
  8192  0F33                     	;# 
  8193  0F34                     	;# 
  8194  0F35                     	;# 
  8195  0F36                     	;# 
  8196  0F37                     	;# 
  8197  0FE4                     	;# 
  8198  0FE5                     	;# 
  8199  0FE6                     	;# 
  8200  0FE7                     	;# 
  8201  0FE8                     	;# 
  8202  0FE9                     	;# 
  8203  0FEA                     	;# 
  8204  0FEB                     	;# 
  8205  0FED                     	;# 
  8206  0FEE                     	;# 
  8207  0FEF                     	;# 
  8208  0000                     	;# 
  8209  0001                     	;# 
  8210  0002                     	;# 
  8211  0003                     	;# 
  8212  0004                     	;# 
  8213  0005                     	;# 
  8214  0006                     	;# 
  8215  0007                     	;# 
  8216  0008                     	;# 
  8217  0009                     	;# 
  8218  000A                     	;# 
  8219  000B                     	;# 
  8220  000C                     	;# 
  8221  000D                     	;# 
  8222  000E                     	;# 
  8223  0010                     	;# 
  8224  0011                     	;# 
  8225  0012                     	;# 
  8226  0013                     	;# 
  8227  0014                     	;# 
  8228  0015                     	;# 
  8229  0015                     	;# 
  8230  0016                     	;# 
  8231  0016                     	;# 
  8232  0017                     	;# 
  8233  0018                     	;# 
  8234  0019                     	;# 
  8235  0019                     	;# 
  8236  001A                     	;# 
  8237  001B                     	;# 
  8238  001C                     	;# 
  8239  001D                     	;# 
  8240  001E                     	;# 
  8241  001F                     	;# 
  8242  008C                     	;# 
  8243  008D                     	;# 
  8244  008E                     	;# 
  8245  0090                     	;# 
  8246  0091                     	;# 
  8247  0092                     	;# 
  8248  0093                     	;# 
  8249  0094                     	;# 
  8250  0097                     	;# 
  8251  009B                     	;# 
  8252  009B                     	;# 
  8253  009C                     	;# 
  8254  009D                     	;# 
  8255  009E                     	;# 
  8256  009F                     	;# 
  8257  010C                     	;# 
  8258  010D                     	;# 
  8259  010E                     	;# 
  8260  0111                     	;# 
  8261  0112                     	;# 
  8262  0113                     	;# 
  8263  0114                     	;# 
  8264  0115                     	;# 
  8265  0116                     	;# 
  8266  0117                     	;# 
  8267  0118                     	;# 
  8268  0119                     	;# 
  8269  018C                     	;# 
  8270  018D                     	;# 
  8271  018E                     	;# 
  8272  0197                     	;# 
  8273  0199                     	;# 
  8274  0199                     	;# 
  8275  0199                     	;# 
  8276  019A                     	;# 
  8277  019A                     	;# 
  8278  019A                     	;# 
  8279  019B                     	;# 
  8280  019B                     	;# 
  8281  019B                     	;# 
  8282  019B                     	;# 
  8283  019B                     	;# 
  8284  019C                     	;# 
  8285  019C                     	;# 
  8286  019C                     	;# 
  8287  019D                     	;# 
  8288  019D                     	;# 
  8289  019D                     	;# 
  8290  019E                     	;# 
  8291  019E                     	;# 
  8292  019E                     	;# 
  8293  019F                     	;# 
  8294  019F                     	;# 
  8295  019F                     	;# 
  8296  019F                     	;# 
  8297  019F                     	;# 
  8298  020C                     	;# 
  8299  020D                     	;# 
  8300  020E                     	;# 
  8301  0211                     	;# 
  8302  0211                     	;# 
  8303  0212                     	;# 
  8304  0212                     	;# 
  8305  0213                     	;# 
  8306  0213                     	;# 
  8307  0214                     	;# 
  8308  0214                     	;# 
  8309  0215                     	;# 
  8310  0215                     	;# 
  8311  0215                     	;# 
  8312  0215                     	;# 
  8313  0216                     	;# 
  8314  0216                     	;# 
  8315  0217                     	;# 
  8316  0217                     	;# 
  8317  0219                     	;# 
  8318  021A                     	;# 
  8319  021B                     	;# 
  8320  021C                     	;# 
  8321  021D                     	;# 
  8322  021D                     	;# 
  8323  021E                     	;# 
  8324  021F                     	;# 
  8325  028C                     	;# 
  8326  028D                     	;# 
  8327  028E                     	;# 
  8328  0291                     	;# 
  8329  0291                     	;# 
  8330  0292                     	;# 
  8331  0293                     	;# 
  8332  0294                     	;# 
  8333  0295                     	;# 
  8334  0295                     	;# 
  8335  0296                     	;# 
  8336  0297                     	;# 
  8337  0298                     	;# 
  8338  029F                     	;# 
  8339  030C                     	;# 
  8340  030D                     	;# 
  8341  030E                     	;# 
  8342  0311                     	;# 
  8343  0311                     	;# 
  8344  0312                     	;# 
  8345  0313                     	;# 
  8346  0314                     	;# 
  8347  0315                     	;# 
  8348  0315                     	;# 
  8349  0316                     	;# 
  8350  0317                     	;# 
  8351  0318                     	;# 
  8352  038C                     	;# 
  8353  038D                     	;# 
  8354  038E                     	;# 
  8355  0391                     	;# 
  8356  0392                     	;# 
  8357  0393                     	;# 
  8358  0394                     	;# 
  8359  0395                     	;# 
  8360  0396                     	;# 
  8361  0397                     	;# 
  8362  0398                     	;# 
  8363  0399                     	;# 
  8364  039A                     	;# 
  8365  039C                     	;# 
  8366  039D                     	;# 
  8367  039E                     	;# 
  8368  039F                     	;# 
  8369  0411                     	;# 
  8370  0411                     	;# 
  8371  0412                     	;# 
  8372  0413                     	;# 
  8373  0414                     	;# 
  8374  0415                     	;# 
  8375  0416                     	;# 
  8376  0417                     	;# 
  8377  0418                     	;# 
  8378  0418                     	;# 
  8379  0419                     	;# 
  8380  041A                     	;# 
  8381  041B                     	;# 
  8382  041C                     	;# 
  8383  041D                     	;# 
  8384  041E                     	;# 
  8385  041F                     	;# 
  8386  0498                     	;# 
  8387  0498                     	;# 
  8388  0499                     	;# 
  8389  049A                     	;# 
  8390  049B                     	;# 
  8391  049B                     	;# 
  8392  049C                     	;# 
  8393  049D                     	;# 
  8394  049E                     	;# 
  8395  049F                     	;# 
  8396  0617                     	;# 
  8397  0618                     	;# 
  8398  0619                     	;# 
  8399  0619                     	;# 
  8400  061A                     	;# 
  8401  061B                     	;# 
  8402  061C                     	;# 
  8403  061C                     	;# 
  8404  061F                     	;# 
  8405  0691                     	;# 
  8406  0692                     	;# 
  8407  0693                     	;# 
  8408  0694                     	;# 
  8409  0695                     	;# 
  8410  0696                     	;# 
  8411  0697                     	;# 
  8412  0698                     	;# 
  8413  0699                     	;# 
  8414  0711                     	;# 
  8415  0712                     	;# 
  8416  0713                     	;# 
  8417  0714                     	;# 
  8418  0715                     	;# 
  8419  0716                     	;# 
  8420  0717                     	;# 
  8421  0718                     	;# 
  8422  0719                     	;# 
  8423  0891                     	;# 
  8424  0891                     	;# 
  8425  0891                     	;# 
  8426  0891                     	;# 
  8427  0891                     	;# 
  8428  0891                     	;# 
  8429  0892                     	;# 
  8430  0892                     	;# 
  8431  0892                     	;# 
  8432  0893                     	;# 
  8433  0893                     	;# 
  8434  0893                     	;# 
  8435  0893                     	;# 
  8436  0893                     	;# 
  8437  0893                     	;# 
  8438  0894                     	;# 
  8439  0894                     	;# 
  8440  0894                     	;# 
  8441  0895                     	;# 
  8442  0895                     	;# 
  8443  0895                     	;# 
  8444  0896                     	;# 
  8445  0896                     	;# 
  8446  0896                     	;# 
  8447  089B                     	;# 
  8448  0911                     	;# 
  8449  0912                     	;# 
  8450  0913                     	;# 
  8451  0914                     	;# 
  8452  0915                     	;# 
  8453  0916                     	;# 
  8454  0918                     	;# 
  8455  0919                     	;# 
  8456  091A                     	;# 
  8457  091B                     	;# 
  8458  091C                     	;# 
  8459  091D                     	;# 
  8460  091E                     	;# 
  8461  091F                     	;# 
  8462  0E0F                     	;# 
  8463  0E10                     	;# 
  8464  0E11                     	;# 
  8465  0E12                     	;# 
  8466  0E13                     	;# 
  8467  0E14                     	;# 
  8468  0E15                     	;# 
  8469  0E16                     	;# 
  8470  0E17                     	;# 
  8471  0E18                     	;# 
  8472  0E19                     	;# 
  8473  0E1A                     	;# 
  8474  0E1B                     	;# 
  8475  0E1C                     	;# 
  8476  0E1D                     	;# 
  8477  0E1E                     	;# 
  8478  0E1F                     	;# 
  8479  0E20                     	;# 
  8480  0E21                     	;# 
  8481  0E22                     	;# 
  8482  0E24                     	;# 
  8483  0E25                     	;# 
  8484  0E28                     	;# 
  8485  0E29                     	;# 
  8486  0E2A                     	;# 
  8487  0E2B                     	;# 
  8488  0E2C                     	;# 
  8489  0E2D                     	;# 
  8490  0E2E                     	;# 
  8491  0E2F                     	;# 
  8492  0E90                     	;# 
  8493  0E91                     	;# 
  8494  0E92                     	;# 
  8495  0E94                     	;# 
  8496  0E95                     	;# 
  8497  0E9C                     	;# 
  8498  0E9D                     	;# 
  8499  0E9E                     	;# 
  8500  0E9F                     	;# 
  8501  0EA0                     	;# 
  8502  0EA1                     	;# 
  8503  0EA2                     	;# 
  8504  0EA3                     	;# 
  8505  0EA4                     	;# 
  8506  0EA5                     	;# 
  8507  0EA6                     	;# 
  8508  0EA7                     	;# 
  8509  0F0F                     	;# 
  8510  0F10                     	;# 
  8511  0F11                     	;# 
  8512  0F12                     	;# 
  8513  0F13                     	;# 
  8514  0F14                     	;# 
  8515  0F15                     	;# 
  8516  0F16                     	;# 
  8517  0F17                     	;# 
  8518  0F18                     	;# 
  8519  0F19                     	;# 
  8520  0F1A                     	;# 
  8521  0F1B                     	;# 
  8522  0F1C                     	;# 
  8523  0F1D                     	;# 
  8524  0F1E                     	;# 
  8525  0F1F                     	;# 
  8526  0F20                     	;# 
  8527  0F21                     	;# 
  8528  0F22                     	;# 
  8529  0F23                     	;# 
  8530  0F24                     	;# 
  8531  0F25                     	;# 
  8532  0F26                     	;# 
  8533  0F27                     	;# 
  8534  0F28                     	;# 
  8535  0F29                     	;# 
  8536  0F2A                     	;# 
  8537  0F2B                     	;# 
  8538  0F2C                     	;# 
  8539  0F2D                     	;# 
  8540  0F2E                     	;# 
  8541  0F2F                     	;# 
  8542  0F30                     	;# 
  8543  0F31                     	;# 
  8544  0F32                     	;# 
  8545  0F33                     	;# 
  8546  0F34                     	;# 
  8547  0F35                     	;# 
  8548  0F36                     	;# 
  8549  0F37                     	;# 
  8550  0FE4                     	;# 
  8551  0FE5                     	;# 
  8552  0FE6                     	;# 
  8553  0FE7                     	;# 
  8554  0FE8                     	;# 
  8555  0FE9                     	;# 
  8556  0FEA                     	;# 
  8557  0FEB                     	;# 
  8558  0FED                     	;# 
  8559  0FEE                     	;# 
  8560  0FEF                     	;# 
  8561  0000                     	;# 
  8562  0001                     	;# 
  8563  0002                     	;# 
  8564  0003                     	;# 
  8565  0004                     	;# 
  8566  0005                     	;# 
  8567  0006                     	;# 
  8568  0007                     	;# 
  8569  0008                     	;# 
  8570  0009                     	;# 
  8571  000A                     	;# 
  8572  000B                     	;# 
  8573  000C                     	;# 
  8574  000D                     	;# 
  8575  000E                     	;# 
  8576  0010                     	;# 
  8577  0011                     	;# 
  8578  0012                     	;# 
  8579  0013                     	;# 
  8580  0014                     	;# 
  8581  0015                     	;# 
  8582  0015                     	;# 
  8583  0016                     	;# 
  8584  0016                     	;# 
  8585  0017                     	;# 
  8586  0018                     	;# 
  8587  0019                     	;# 
  8588  0019                     	;# 
  8589  001A                     	;# 
  8590  001B                     	;# 
  8591  001C                     	;# 
  8592  001D                     	;# 
  8593  001E                     	;# 
  8594  001F                     	;# 
  8595  008C                     	;# 
  8596  008D                     	;# 
  8597  008E                     	;# 
  8598  0090                     	;# 
  8599  0091                     	;# 
  8600  0092                     	;# 
  8601  0093                     	;# 
  8602  0094                     	;# 
  8603  0097                     	;# 
  8604  009B                     	;# 
  8605  009B                     	;# 
  8606  009C                     	;# 
  8607  009D                     	;# 
  8608  009E                     	;# 
  8609  009F                     	;# 
  8610  010C                     	;# 
  8611  010D                     	;# 
  8612  010E                     	;# 
  8613  0111                     	;# 
  8614  0112                     	;# 
  8615  0113                     	;# 
  8616  0114                     	;# 
  8617  0115                     	;# 
  8618  0116                     	;# 
  8619  0117                     	;# 
  8620  0118                     	;# 
  8621  0119                     	;# 
  8622  018C                     	;# 
  8623  018D                     	;# 
  8624  018E                     	;# 
  8625  0197                     	;# 
  8626  0199                     	;# 
  8627  0199                     	;# 
  8628  0199                     	;# 
  8629  019A                     	;# 
  8630  019A                     	;# 
  8631  019A                     	;# 
  8632  019B                     	;# 
  8633  019B                     	;# 
  8634  019B                     	;# 
  8635  019B                     	;# 
  8636  019B                     	;# 
  8637  019C                     	;# 
  8638  019C                     	;# 
  8639  019C                     	;# 
  8640  019D                     	;# 
  8641  019D                     	;# 
  8642  019D                     	;# 
  8643  019E                     	;# 
  8644  019E                     	;# 
  8645  019E                     	;# 
  8646  019F                     	;# 
  8647  019F                     	;# 
  8648  019F                     	;# 
  8649  019F                     	;# 
  8650  019F                     	;# 
  8651  020C                     	;# 
  8652  020D                     	;# 
  8653  020E                     	;# 
  8654  0211                     	;# 
  8655  0211                     	;# 
  8656  0212                     	;# 
  8657  0212                     	;# 
  8658  0213                     	;# 
  8659  0213                     	;# 
  8660  0214                     	;# 
  8661  0214                     	;# 
  8662  0215                     	;# 
  8663  0215                     	;# 
  8664  0215                     	;# 
  8665  0215                     	;# 
  8666  0216                     	;# 
  8667  0216                     	;# 
  8668  0217                     	;# 
  8669  0217                     	;# 
  8670  0219                     	;# 
  8671  021A                     	;# 
  8672  021B                     	;# 
  8673  021C                     	;# 
  8674  021D                     	;# 
  8675  021D                     	;# 
  8676  021E                     	;# 
  8677  021F                     	;# 
  8678  028C                     	;# 
  8679  028D                     	;# 
  8680  028E                     	;# 
  8681  0291                     	;# 
  8682  0291                     	;# 
  8683  0292                     	;# 
  8684  0293                     	;# 
  8685  0294                     	;# 
  8686  0295                     	;# 
  8687  0295                     	;# 
  8688  0296                     	;# 
  8689  0297                     	;# 
  8690  0298                     	;# 
  8691  029F                     	;# 
  8692  030C                     	;# 
  8693  030D                     	;# 
  8694  030E                     	;# 
  8695  0311                     	;# 
  8696  0311                     	;# 
  8697  0312                     	;# 
  8698  0313                     	;# 
  8699  0314                     	;# 
  8700  0315                     	;# 
  8701  0315                     	;# 
  8702  0316                     	;# 
  8703  0317                     	;# 
  8704  0318                     	;# 
  8705  038C                     	;# 
  8706  038D                     	;# 
  8707  038E                     	;# 
  8708  0391                     	;# 
  8709  0392                     	;# 
  8710  0393                     	;# 
  8711  0394                     	;# 
  8712  0395                     	;# 
  8713  0396                     	;# 
  8714  0397                     	;# 
  8715  0398                     	;# 
  8716  0399                     	;# 
  8717  039A                     	;# 
  8718  039C                     	;# 
  8719  039D                     	;# 
  8720  039E                     	;# 
  8721  039F                     	;# 
  8722  0411                     	;# 
  8723  0411                     	;# 
  8724  0412                     	;# 
  8725  0413                     	;# 
  8726  0414                     	;# 
  8727  0415                     	;# 
  8728  0416                     	;# 
  8729  0417                     	;# 
  8730  0418                     	;# 
  8731  0418                     	;# 
  8732  0419                     	;# 
  8733  041A                     	;# 
  8734  041B                     	;# 
  8735  041C                     	;# 
  8736  041D                     	;# 
  8737  041E                     	;# 
  8738  041F                     	;# 
  8739  0498                     	;# 
  8740  0498                     	;# 
  8741  0499                     	;# 
  8742  049A                     	;# 
  8743  049B                     	;# 
  8744  049B                     	;# 
  8745  049C                     	;# 
  8746  049D                     	;# 
  8747  049E                     	;# 
  8748  049F                     	;# 
  8749  0617                     	;# 
  8750  0618                     	;# 
  8751  0619                     	;# 
  8752  0619                     	;# 
  8753  061A                     	;# 
  8754  061B                     	;# 
  8755  061C                     	;# 
  8756  061C                     	;# 
  8757  061F                     	;# 
  8758  0691                     	;# 
  8759  0692                     	;# 
  8760  0693                     	;# 
  8761  0694                     	;# 
  8762  0695                     	;# 
  8763  0696                     	;# 
  8764  0697                     	;# 
  8765  0698                     	;# 
  8766  0699                     	;# 
  8767  0711                     	;# 
  8768  0712                     	;# 
  8769  0713                     	;# 
  8770  0714                     	;# 
  8771  0715                     	;# 
  8772  0716                     	;# 
  8773  0717                     	;# 
  8774  0718                     	;# 
  8775  0719                     	;# 
  8776  0891                     	;# 
  8777  0891                     	;# 
  8778  0891                     	;# 
  8779  0891                     	;# 
  8780  0891                     	;# 
  8781  0891                     	;# 
  8782  0892                     	;# 
  8783  0892                     	;# 
  8784  0892                     	;# 
  8785  0893                     	;# 
  8786  0893                     	;# 
  8787  0893                     	;# 
  8788  0893                     	;# 
  8789  0893                     	;# 
  8790  0893                     	;# 
  8791  0894                     	;# 
  8792  0894                     	;# 
  8793  0894                     	;# 
  8794  0895                     	;# 
  8795  0895                     	;# 
  8796  0895                     	;# 
  8797  0896                     	;# 
  8798  0896                     	;# 
  8799  0896                     	;# 
  8800  089B                     	;# 
  8801  0911                     	;# 
  8802  0912                     	;# 
  8803  0913                     	;# 
  8804  0914                     	;# 
  8805  0915                     	;# 
  8806  0916                     	;# 
  8807  0918                     	;# 
  8808  0919                     	;# 
  8809  091A                     	;# 
  8810  091B                     	;# 
  8811  091C                     	;# 
  8812  091D                     	;# 
  8813  091E                     	;# 
  8814  091F                     	;# 
  8815  0E0F                     	;# 
  8816  0E10                     	;# 
  8817  0E11                     	;# 
  8818  0E12                     	;# 
  8819  0E13                     	;# 
  8820  0E14                     	;# 
  8821  0E15                     	;# 
  8822  0E16                     	;# 
  8823  0E17                     	;# 
  8824  0E18                     	;# 
  8825  0E19                     	;# 
  8826  0E1A                     	;# 
  8827  0E1B                     	;# 
  8828  0E1C                     	;# 
  8829  0E1D                     	;# 
  8830  0E1E                     	;# 
  8831  0E1F                     	;# 
  8832  0E20                     	;# 
  8833  0E21                     	;# 
  8834  0E22                     	;# 
  8835  0E24                     	;# 
  8836  0E25                     	;# 
  8837  0E28                     	;# 
  8838  0E29                     	;# 
  8839  0E2A                     	;# 
  8840  0E2B                     	;# 
  8841  0E2C                     	;# 
  8842  0E2D                     	;# 
  8843  0E2E                     	;# 
  8844  0E2F                     	;# 
  8845  0E90                     	;# 
  8846  0E91                     	;# 
  8847  0E92                     	;# 
  8848  0E94                     	;# 
  8849  0E95                     	;# 
  8850  0E9C                     	;# 
  8851  0E9D                     	;# 
  8852  0E9E                     	;# 
  8853  0E9F                     	;# 
  8854  0EA0                     	;# 
  8855  0EA1                     	;# 
  8856  0EA2                     	;# 
  8857  0EA3                     	;# 
  8858  0EA4                     	;# 
  8859  0EA5                     	;# 
  8860  0EA6                     	;# 
  8861  0EA7                     	;# 
  8862  0F0F                     	;# 
  8863  0F10                     	;# 
  8864  0F11                     	;# 
  8865  0F12                     	;# 
  8866  0F13                     	;# 
  8867  0F14                     	;# 
  8868  0F15                     	;# 
  8869  0F16                     	;# 
  8870  0F17                     	;# 
  8871  0F18                     	;# 
  8872  0F19                     	;# 
  8873  0F1A                     	;# 
  8874  0F1B                     	;# 
  8875  0F1C                     	;# 
  8876  0F1D                     	;# 
  8877  0F1E                     	;# 
  8878  0F1F                     	;# 
  8879  0F20                     	;# 
  8880  0F21                     	;# 
  8881  0F22                     	;# 
  8882  0F23                     	;# 
  8883  0F24                     	;# 
  8884  0F25                     	;# 
  8885  0F26                     	;# 
  8886  0F27                     	;# 
  8887  0F28                     	;# 
  8888  0F29                     	;# 
  8889  0F2A                     	;# 
  8890  0F2B                     	;# 
  8891  0F2C                     	;# 
  8892  0F2D                     	;# 
  8893  0F2E                     	;# 
  8894  0F2F                     	;# 
  8895  0F30                     	;# 
  8896  0F31                     	;# 
  8897  0F32                     	;# 
  8898  0F33                     	;# 
  8899  0F34                     	;# 
  8900  0F35                     	;# 
  8901  0F36                     	;# 
  8902  0F37                     	;# 
  8903  0FE4                     	;# 
  8904  0FE5                     	;# 
  8905  0FE6                     	;# 
  8906  0FE7                     	;# 
  8907  0FE8                     	;# 
  8908  0FE9                     	;# 
  8909  0FEA                     	;# 
  8910  0FEB                     	;# 
  8911  0FED                     	;# 
  8912  0FEE                     	;# 
  8913  0FEF                     	;# 
  8914  0000                     	;# 
  8915  0001                     	;# 
  8916  0002                     	;# 
  8917  0003                     	;# 
  8918  0004                     	;# 
  8919  0005                     	;# 
  8920  0006                     	;# 
  8921  0007                     	;# 
  8922  0008                     	;# 
  8923  0009                     	;# 
  8924  000A                     	;# 
  8925  000B                     	;# 
  8926  000C                     	;# 
  8927  000D                     	;# 
  8928  000E                     	;# 
  8929  0010                     	;# 
  8930  0011                     	;# 
  8931  0012                     	;# 
  8932  0013                     	;# 
  8933  0014                     	;# 
  8934  0015                     	;# 
  8935  0015                     	;# 
  8936  0016                     	;# 
  8937  0016                     	;# 
  8938  0017                     	;# 
  8939  0018                     	;# 
  8940  0019                     	;# 
  8941  0019                     	;# 
  8942  001A                     	;# 
  8943  001B                     	;# 
  8944  001C                     	;# 
  8945  001D                     	;# 
  8946  001E                     	;# 
  8947  001F                     	;# 
  8948  008C                     	;# 
  8949  008D                     	;# 
  8950  008E                     	;# 
  8951  0090                     	;# 
  8952  0091                     	;# 
  8953  0092                     	;# 
  8954  0093                     	;# 
  8955  0094                     	;# 
  8956  0097                     	;# 
  8957  009B                     	;# 
  8958  009B                     	;# 
  8959  009C                     	;# 
  8960  009D                     	;# 
  8961  009E                     	;# 
  8962  009F                     	;# 
  8963  010C                     	;# 
  8964  010D                     	;# 
  8965  010E                     	;# 
  8966  0111                     	;# 
  8967  0112                     	;# 
  8968  0113                     	;# 
  8969  0114                     	;# 
  8970  0115                     	;# 
  8971  0116                     	;# 
  8972  0117                     	;# 
  8973  0118                     	;# 
  8974  0119                     	;# 
  8975  018C                     	;# 
  8976  018D                     	;# 
  8977  018E                     	;# 
  8978  0197                     	;# 
  8979  0199                     	;# 
  8980  0199                     	;# 
  8981  0199                     	;# 
  8982  019A                     	;# 
  8983  019A                     	;# 
  8984  019A                     	;# 
  8985  019B                     	;# 
  8986  019B                     	;# 
  8987  019B                     	;# 
  8988  019B                     	;# 
  8989  019B                     	;# 
  8990  019C                     	;# 
  8991  019C                     	;# 
  8992  019C                     	;# 
  8993  019D                     	;# 
  8994  019D                     	;# 
  8995  019D                     	;# 
  8996  019E                     	;# 
  8997  019E                     	;# 
  8998  019E                     	;# 
  8999  019F                     	;# 
  9000  019F                     	;# 
  9001  019F                     	;# 
  9002  019F                     	;# 
  9003  019F                     	;# 
  9004  020C                     	;# 
  9005  020D                     	;# 
  9006  020E                     	;# 
  9007  0211                     	;# 
  9008  0211                     	;# 
  9009  0212                     	;# 
  9010  0212                     	;# 
  9011  0213                     	;# 
  9012  0213                     	;# 
  9013  0214                     	;# 
  9014  0214                     	;# 
  9015  0215                     	;# 
  9016  0215                     	;# 
  9017  0215                     	;# 
  9018  0215                     	;# 
  9019  0216                     	;# 
  9020  0216                     	;# 
  9021  0217                     	;# 
  9022  0217                     	;# 
  9023  0219                     	;# 
  9024  021A                     	;# 
  9025  021B                     	;# 
  9026  021C                     	;# 
  9027  021D                     	;# 
  9028  021D                     	;# 
  9029  021E                     	;# 
  9030  021F                     	;# 
  9031  028C                     	;# 
  9032  028D                     	;# 
  9033  028E                     	;# 
  9034  0291                     	;# 
  9035  0291                     	;# 
  9036  0292                     	;# 
  9037  0293                     	;# 
  9038  0294                     	;# 
  9039  0295                     	;# 
  9040  0295                     	;# 
  9041  0296                     	;# 
  9042  0297                     	;# 
  9043  0298                     	;# 
  9044  029F                     	;# 
  9045  030C                     	;# 
  9046  030D                     	;# 
  9047  030E                     	;# 
  9048  0311                     	;# 
  9049  0311                     	;# 
  9050  0312                     	;# 
  9051  0313                     	;# 
  9052  0314                     	;# 
  9053  0315                     	;# 
  9054  0315                     	;# 
  9055  0316                     	;# 
  9056  0317                     	;# 
  9057  0318                     	;# 
  9058  038C                     	;# 
  9059  038D                     	;# 
  9060  038E                     	;# 
  9061  0391                     	;# 
  9062  0392                     	;# 
  9063  0393                     	;# 
  9064  0394                     	;# 
  9065  0395                     	;# 
  9066  0396                     	;# 
  9067  0397                     	;# 
  9068  0398                     	;# 
  9069  0399                     	;# 
  9070  039A                     	;# 
  9071  039C                     	;# 
  9072  039D                     	;# 
  9073  039E                     	;# 
  9074  039F                     	;# 
  9075  0411                     	;# 
  9076  0411                     	;# 
  9077  0412                     	;# 
  9078  0413                     	;# 
  9079  0414                     	;# 
  9080  0415                     	;# 
  9081  0416                     	;# 
  9082  0417                     	;# 
  9083  0418                     	;# 
  9084  0418                     	;# 
  9085  0419                     	;# 
  9086  041A                     	;# 
  9087  041B                     	;# 
  9088  041C                     	;# 
  9089  041D                     	;# 
  9090  041E                     	;# 
  9091  041F                     	;# 
  9092  0498                     	;# 
  9093  0498                     	;# 
  9094  0499                     	;# 
  9095  049A                     	;# 
  9096  049B                     	;# 
  9097  049B                     	;# 
  9098  049C                     	;# 
  9099  049D                     	;# 
  9100  049E                     	;# 
  9101  049F                     	;# 
  9102  0617                     	;# 
  9103  0618                     	;# 
  9104  0619                     	;# 
  9105  0619                     	;# 
  9106  061A                     	;# 
  9107  061B                     	;# 
  9108  061C                     	;# 
  9109  061C                     	;# 
  9110  061F                     	;# 
  9111  0691                     	;# 
  9112  0692                     	;# 
  9113  0693                     	;# 
  9114  0694                     	;# 
  9115  0695                     	;# 
  9116  0696                     	;# 
  9117  0697                     	;# 
  9118  0698                     	;# 
  9119  0699                     	;# 
  9120  0711                     	;# 
  9121  0712                     	;# 
  9122  0713                     	;# 
  9123  0714                     	;# 
  9124  0715                     	;# 
  9125  0716                     	;# 
  9126  0717                     	;# 
  9127  0718                     	;# 
  9128  0719                     	;# 
  9129  0891                     	;# 
  9130  0891                     	;# 
  9131  0891                     	;# 
  9132  0891                     	;# 
  9133  0891                     	;# 
  9134  0891                     	;# 
  9135  0892                     	;# 
  9136  0892                     	;# 
  9137  0892                     	;# 
  9138  0893                     	;# 
  9139  0893                     	;# 
  9140  0893                     	;# 
  9141  0893                     	;# 
  9142  0893                     	;# 
  9143  0893                     	;# 
  9144  0894                     	;# 
  9145  0894                     	;# 
  9146  0894                     	;# 
  9147  0895                     	;# 
  9148  0895                     	;# 
  9149  0895                     	;# 
  9150  0896                     	;# 
  9151  0896                     	;# 
  9152  0896                     	;# 
  9153  089B                     	;# 
  9154  0911                     	;# 
  9155  0912                     	;# 
  9156  0913                     	;# 
  9157  0914                     	;# 
  9158  0915                     	;# 
  9159  0916                     	;# 
  9160  0918                     	;# 
  9161  0919                     	;# 
  9162  091A                     	;# 
  9163  091B                     	;# 
  9164  091C                     	;# 
  9165  091D                     	;# 
  9166  091E                     	;# 
  9167  091F                     	;# 
  9168  0E0F                     	;# 
  9169  0E10                     	;# 
  9170  0E11                     	;# 
  9171  0E12                     	;# 
  9172  0E13                     	;# 
  9173  0E14                     	;# 
  9174  0E15                     	;# 
  9175  0E16                     	;# 
  9176  0E17                     	;# 
  9177  0E18                     	;# 
  9178  0E19                     	;# 
  9179  0E1A                     	;# 
  9180  0E1B                     	;# 
  9181  0E1C                     	;# 
  9182  0E1D                     	;# 
  9183  0E1E                     	;# 
  9184  0E1F                     	;# 
  9185  0E20                     	;# 
  9186  0E21                     	;# 
  9187  0E22                     	;# 
  9188  0E24                     	;# 
  9189  0E25                     	;# 
  9190  0E28                     	;# 
  9191  0E29                     	;# 
  9192  0E2A                     	;# 
  9193  0E2B                     	;# 
  9194  0E2C                     	;# 
  9195  0E2D                     	;# 
  9196  0E2E                     	;# 
  9197  0E2F                     	;# 
  9198  0E90                     	;# 
  9199  0E91                     	;# 
  9200  0E92                     	;# 
  9201  0E94                     	;# 
  9202  0E95                     	;# 
  9203  0E9C                     	;# 
  9204  0E9D                     	;# 
  9205  0E9E                     	;# 
  9206  0E9F                     	;# 
  9207  0EA0                     	;# 
  9208  0EA1                     	;# 
  9209  0EA2                     	;# 
  9210  0EA3                     	;# 
  9211  0EA4                     	;# 
  9212  0EA5                     	;# 
  9213  0EA6                     	;# 
  9214  0EA7                     	;# 
  9215  0F0F                     	;# 
  9216  0F10                     	;# 
  9217  0F11                     	;# 
  9218  0F12                     	;# 
  9219  0F13                     	;# 
  9220  0F14                     	;# 
  9221  0F15                     	;# 
  9222  0F16                     	;# 
  9223  0F17                     	;# 
  9224  0F18                     	;# 
  9225  0F19                     	;# 
  9226  0F1A                     	;# 
  9227  0F1B                     	;# 
  9228  0F1C                     	;# 
  9229  0F1D                     	;# 
  9230  0F1E                     	;# 
  9231  0F1F                     	;# 
  9232  0F20                     	;# 
  9233  0F21                     	;# 
  9234  0F22                     	;# 
  9235  0F23                     	;# 
  9236  0F24                     	;# 
  9237  0F25                     	;# 
  9238  0F26                     	;# 
  9239  0F27                     	;# 
  9240  0F28                     	;# 
  9241  0F29                     	;# 
  9242  0F2A                     	;# 
  9243  0F2B                     	;# 
  9244  0F2C                     	;# 
  9245  0F2D                     	;# 
  9246  0F2E                     	;# 
  9247  0F2F                     	;# 
  9248  0F30                     	;# 
  9249  0F31                     	;# 
  9250  0F32                     	;# 
  9251  0F33                     	;# 
  9252  0F34                     	;# 
  9253  0F35                     	;# 
  9254  0F36                     	;# 
  9255  0F37                     	;# 
  9256  0FE4                     	;# 
  9257  0FE5                     	;# 
  9258  0FE6                     	;# 
  9259  0FE7                     	;# 
  9260  0FE8                     	;# 
  9261  0FE9                     	;# 
  9262  0FEA                     	;# 
  9263  0FEB                     	;# 
  9264  0FED                     	;# 
  9265  0FEE                     	;# 
  9266  0FEF                     	;# 
  9267                           
  9268                           	psect	idataBANK1
  9269  0000                     __pidataBANK1:
  9270                           
  9271                           	psect	stringtext1
  9272  0176                     __pstringtext1:
  9273  0176                     _gamma_table:
  9274  0176  34F4               	retlw	244
  9275  0177  3403               	retlw	3
  9276  0178  34EA               	retlw	234
  9277  0179  3403               	retlw	3
  9278  017A  34DF               	retlw	223
  9279  017B  3403               	retlw	3
  9280  017C  34D5               	retlw	213
  9281  017D  3403               	retlw	3
  9282  017E  34CB               	retlw	203
  9283  017F  3403               	retlw	3
  9284  0180  34C1               	retlw	193
  9285  0181  3403               	retlw	3
  9286  0182  34B6               	retlw	182
  9287  0183  3403               	retlw	3
  9288  0184  34AC               	retlw	172
  9289  0185  3403               	retlw	3
  9290  0186  34A2               	retlw	162
  9291  0187  3403               	retlw	3
  9292  0188  3498               	retlw	152
  9293  0189  3403               	retlw	3
  9294  018A  348E               	retlw	142
  9295  018B  3403               	retlw	3
  9296  018C  3483               	retlw	131
  9297  018D  3403               	retlw	3
  9298  018E  3479               	retlw	121
  9299  018F  3403               	retlw	3
  9300  0190  346F               	retlw	111
  9301  0191  3403               	retlw	3
  9302  0192  3465               	retlw	101
  9303  0193  3403               	retlw	3
  9304  0194  345A               	retlw	90
  9305  0195  3403               	retlw	3
  9306  0196  3450               	retlw	80
  9307  0197  3403               	retlw	3
  9308  0198  3446               	retlw	70
  9309  0199  3403               	retlw	3
  9310  019A  343C               	retlw	60
  9311  019B  3403               	retlw	3
  9312  019C  3432               	retlw	50
  9313  019D  3403               	retlw	3
  9314  019E  3427               	retlw	39
  9315  019F  3403               	retlw	3
  9316  01A0  341D               	retlw	29
  9317  01A1  3403               	retlw	3
  9318  01A2  3413               	retlw	19
  9319  01A3  3403               	retlw	3
  9320  01A4  3409               	retlw	9
  9321  01A5  3403               	retlw	3
  9322  01A6  34FE               	retlw	254
  9323  01A7  3402               	retlw	2
  9324  01A8  34F4               	retlw	244
  9325  01A9  3402               	retlw	2
  9326  01AA  34EA               	retlw	234
  9327  01AB  3402               	retlw	2
  9328  01AC  34E0               	retlw	224
  9329  01AD  3402               	retlw	2
  9330  01AE  34D6               	retlw	214
  9331  01AF  3402               	retlw	2
  9332  01B0  34CB               	retlw	203
  9333  01B1  3402               	retlw	2
  9334  01B2  34C1               	retlw	193
  9335  01B3  3402               	retlw	2
  9336  01B4  34B7               	retlw	183
  9337  01B5  3402               	retlw	2
  9338  01B6  34AD               	retlw	173
  9339  01B7  3402               	retlw	2
  9340  01B8  34A3               	retlw	163
  9341  01B9  3402               	retlw	2
  9342  01BA  3498               	retlw	152
  9343  01BB  3402               	retlw	2
  9344  01BC  348E               	retlw	142
  9345  01BD  3402               	retlw	2
  9346  01BE  3484               	retlw	132
  9347  01BF  3402               	retlw	2
  9348  01C0  347A               	retlw	122
  9349  01C1  3402               	retlw	2
  9350  01C2  346F               	retlw	111
  9351  01C3  3402               	retlw	2
  9352  01C4  3465               	retlw	101
  9353  01C5  3402               	retlw	2
  9354  01C6  345B               	retlw	91
  9355  01C7  3402               	retlw	2
  9356  01C8  3451               	retlw	81
  9357  01C9  3402               	retlw	2
  9358  01CA  3447               	retlw	71
  9359  01CB  3402               	retlw	2
  9360  01CC  343C               	retlw	60
  9361  01CD  3402               	retlw	2
  9362  01CE  3432               	retlw	50
  9363  01CF  3402               	retlw	2
  9364  01D0  3428               	retlw	40
  9365  01D1  3402               	retlw	2
  9366  01D2  341E               	retlw	30
  9367  01D3  3402               	retlw	2
  9368  01D4  3413               	retlw	19
  9369  01D5  3402               	retlw	2
  9370  01D6  3409               	retlw	9
  9371  01D7  3402               	retlw	2
  9372  01D8  34FF               	retlw	255
  9373  01D9  3401               	retlw	1
  9374  01DA  34F5               	retlw	245
  9375  01DB  3401               	retlw	1
  9376  01DC  34EB               	retlw	235
  9377  01DD  3401               	retlw	1
  9378  01DE  34E0               	retlw	224
  9379  01DF  3401               	retlw	1
  9380  01E0  34D6               	retlw	214
  9381  01E1  3401               	retlw	1
  9382  01E2  34CC               	retlw	204
  9383  01E3  3401               	retlw	1
  9384  01E4  34C2               	retlw	194
  9385  01E5  3401               	retlw	1
  9386  01E6  34B7               	retlw	183
  9387  01E7  3401               	retlw	1
  9388  01E8  34AD               	retlw	173
  9389  01E9  3401               	retlw	1
  9390  01EA  34A3               	retlw	163
  9391  01EB  3401               	retlw	1
  9392  01EC  3499               	retlw	153
  9393  01ED  3401               	retlw	1
  9394  01EE  348F               	retlw	143
  9395  01EF  3401               	retlw	1
  9396  01F0  3484               	retlw	132
  9397  01F1  3401               	retlw	1
  9398  01F2  347A               	retlw	122
  9399  01F3  3401               	retlw	1
  9400  01F4  3470               	retlw	112
  9401  01F5  3401               	retlw	1
  9402  01F6  3466               	retlw	102
  9403  01F7  3401               	retlw	1
  9404  01F8  345B               	retlw	91
  9405  01F9  3401               	retlw	1
  9406  01FA  3451               	retlw	81
  9407  01FB  3401               	retlw	1
  9408  01FC  3447               	retlw	71
  9409  01FD  3401               	retlw	1
  9410  01FE  343D               	retlw	61
  9411  01FF  3401               	retlw	1
  9412  0200  3433               	retlw	51
  9413  0201  3401               	retlw	1
  9414  0202  3428               	retlw	40
  9415  0203  3401               	retlw	1
  9416  0204  341E               	retlw	30
  9417  0205  3401               	retlw	1
  9418  0206  3414               	retlw	20
  9419  0207  3401               	retlw	1
  9420  0208  340A               	retlw	10
  9421  0209  3401               	retlw	1
  9422  020A  34FF               	retlw	255
  9423  020B  3400               	retlw	0
  9424  020C  34F5               	retlw	245
  9425  020D  3400               	retlw	0
  9426  020E  34EB               	retlw	235
  9427  020F  3400               	retlw	0
  9428  0210  34E1               	retlw	225
  9429  0211  3400               	retlw	0
  9430  0212  34D7               	retlw	215
  9431  0213  3400               	retlw	0
  9432  0214  34CC               	retlw	204
  9433  0215  3400               	retlw	0
  9434  0216  34C2               	retlw	194
  9435  0217  3400               	retlw	0
  9436  0218  34B8               	retlw	184
  9437  0219  3400               	retlw	0
  9438  021A  34AE               	retlw	174
  9439  021B  3400               	retlw	0
  9440  021C  34A4               	retlw	164
  9441  021D  3400               	retlw	0
  9442  021E  3499               	retlw	153
  9443  021F  3400               	retlw	0
  9444  0220  348F               	retlw	143
  9445  0221  3400               	retlw	0
  9446  0222  3485               	retlw	133
  9447  0223  3400               	retlw	0
  9448  0224  347B               	retlw	123
  9449  0225  3400               	retlw	0
  9450  0226  3470               	retlw	112
  9451  0227  3400               	retlw	0
  9452  0228  3466               	retlw	102
  9453  0229  3400               	retlw	0
  9454  022A  345C               	retlw	92
  9455  022B  3400               	retlw	0
  9456  022C  3452               	retlw	82
  9457  022D  3400               	retlw	0
  9458  022E  3448               	retlw	72
  9459  022F  3400               	retlw	0
  9460  0230  343D               	retlw	61
  9461  0231  3400               	retlw	0
  9462  0232  3433               	retlw	51
  9463  0233  3400               	retlw	0
  9464  0234  3429               	retlw	41
  9465  0235  3400               	retlw	0
  9466  0236  341F               	retlw	31
  9467  0237  3400               	retlw	0
  9468  0238  3414               	retlw	20
  9469  0239  3400               	retlw	0
  9470  023A  340A               	retlw	10
  9471  023B  3400               	retlw	0
  9472  023C  3400               	retlw	0
  9473  023D  3400               	retlw	0
  9474  023E  34FE               	retlw	254
  9475  023F  3403               	retlw	3
  9476  0240  34FD               	retlw	253
  9477  0241  3403               	retlw	3
  9478  0242  34FC               	retlw	252
  9479  0243  3403               	retlw	3
  9480  0244  34FB               	retlw	251
  9481  0245  3403               	retlw	3
  9482  0246  34F9               	retlw	249
  9483  0247  3403               	retlw	3
  9484  0248  34F8               	retlw	248
  9485  0249  3403               	retlw	3
  9486  024A  34F5               	retlw	245
  9487  024B  3403               	retlw	3
  9488  024C  34F3               	retlw	243
  9489  024D  3403               	retlw	3
  9490  024E  34F1               	retlw	241
  9491  024F  3403               	retlw	3
  9492  0250  34EE               	retlw	238
  9493  0251  3403               	retlw	3
  9494  0252  34EB               	retlw	235
  9495  0253  3403               	retlw	3
  9496  0254  34E8               	retlw	232
  9497  0255  3403               	retlw	3
  9498  0256  34E4               	retlw	228
  9499  0257  3403               	retlw	3
  9500  0258  34E0               	retlw	224
  9501  0259  3403               	retlw	3
  9502  025A  34DC               	retlw	220
  9503  025B  3403               	retlw	3
  9504  025C  34D8               	retlw	216
  9505  025D  3403               	retlw	3
  9506  025E  34D4               	retlw	212
  9507  025F  3403               	retlw	3
  9508  0260  34CF               	retlw	207
  9509  0261  3403               	retlw	3
  9510  0262  34CB               	retlw	203
  9511  0263  3403               	retlw	3
  9512  0264  34C6               	retlw	198
  9513  0265  3403               	retlw	3
  9514  0266  34C0               	retlw	192
  9515  0267  3403               	retlw	3
  9516  0268  34BB               	retlw	187
  9517  0269  3403               	retlw	3
  9518  026A  34B5               	retlw	181
  9519  026B  3403               	retlw	3
  9520  026C  34B0               	retlw	176
  9521  026D  3403               	retlw	3
  9522  026E  34AA               	retlw	170
  9523  026F  3403               	retlw	3
  9524  0270  34A4               	retlw	164
  9525  0271  3403               	retlw	3
  9526  0272  349D               	retlw	157
  9527  0273  3403               	retlw	3
  9528  0274  3497               	retlw	151
  9529  0275  3403               	retlw	3
  9530  0276  3490               	retlw	144
  9531  0277  3403               	retlw	3
  9532  0278  3489               	retlw	137
  9533  0279  3403               	retlw	3
  9534  027A  3482               	retlw	130
  9535  027B  3403               	retlw	3
  9536  027C  347B               	retlw	123
  9537  027D  3403               	retlw	3
  9538  027E  3473               	retlw	115
  9539  027F  3403               	retlw	3
  9540  0280  346B               	retlw	107
  9541  0281  3403               	retlw	3
  9542  0282  3464               	retlw	100
  9543  0283  3403               	retlw	3
  9544  0284  345C               	retlw	92
  9545  0285  3403               	retlw	3
  9546  0286  3453               	retlw	83
  9547  0287  3403               	retlw	3
  9548  0288  344B               	retlw	75
  9549  0289  3403               	retlw	3
  9550  028A  3442               	retlw	66
  9551  028B  3403               	retlw	3
  9552  028C  343A               	retlw	58
  9553  028D  3403               	retlw	3
  9554  028E  3431               	retlw	49
  9555  028F  3403               	retlw	3
  9556  0290  3428               	retlw	40
  9557  0291  3403               	retlw	3
  9558  0292  341E               	retlw	30
  9559  0293  3403               	retlw	3
  9560  0294  3415               	retlw	21
  9561  0295  3403               	retlw	3
  9562  0296  340B               	retlw	11
  9563  0297  3403               	retlw	3
  9564  0298  3401               	retlw	1
  9565  0299  3403               	retlw	3
  9566  029A  34F7               	retlw	247
  9567  029B  3402               	retlw	2
  9568  029C  34ED               	retlw	237
  9569  029D  3402               	retlw	2
  9570  029E  34E3               	retlw	227
  9571  029F  3402               	retlw	2
  9572  02A0  34D9               	retlw	217
  9573  02A1  3402               	retlw	2
  9574  02A2  34CE               	retlw	206
  9575  02A3  3402               	retlw	2
  9576  02A4  34C3               	retlw	195
  9577  02A5  3402               	retlw	2
  9578  02A6  34B8               	retlw	184
  9579  02A7  3402               	retlw	2
  9580  02A8  34AD               	retlw	173
  9581  02A9  3402               	retlw	2
  9582  02AA  34A2               	retlw	162
  9583  02AB  3402               	retlw	2
  9584  02AC  3496               	retlw	150
  9585  02AD  3402               	retlw	2
  9586  02AE  348A               	retlw	138
  9587  02AF  3402               	retlw	2
  9588  02B0  347F               	retlw	127
  9589  02B1  3402               	retlw	2
  9590  02B2  3473               	retlw	115
  9591  02B3  3402               	retlw	2
  9592  02B4  3467               	retlw	103
  9593  02B5  3402               	retlw	2
  9594  02B6  345A               	retlw	90
  9595  02B7  3402               	retlw	2
  9596  02B8  344E               	retlw	78
  9597  02B9  3402               	retlw	2
  9598  02BA  3441               	retlw	65
  9599  02BB  3402               	retlw	2
  9600  02BC  3434               	retlw	52
  9601  02BD  3402               	retlw	2
  9602  02BE  3427               	retlw	39
  9603  02BF  3402               	retlw	2
  9604  02C0  341A               	retlw	26
  9605  02C1  3402               	retlw	2
  9606  02C2  340D               	retlw	13
  9607  02C3  3402               	retlw	2
  9608  02C4  3400               	retlw	0
  9609  02C5  3402               	retlw	2
  9610  02C6  34F2               	retlw	242
  9611  02C7  3401               	retlw	1
  9612  02C8  34E4               	retlw	228
  9613  02C9  3401               	retlw	1
  9614  02CA  34D6               	retlw	214
  9615  02CB  3401               	retlw	1
  9616  02CC  34C8               	retlw	200
  9617  02CD  3401               	retlw	1
  9618  02CE  34BA               	retlw	186
  9619  02CF  3401               	retlw	1
  9620  02D0  34AC               	retlw	172
  9621  02D1  3401               	retlw	1
  9622  02D2  349D               	retlw	157
  9623  02D3  3401               	retlw	1
  9624  02D4  348E               	retlw	142
  9625  02D5  3401               	retlw	1
  9626  02D6  3480               	retlw	128
  9627  02D7  3401               	retlw	1
  9628  02D8  3471               	retlw	113
  9629  02D9  3401               	retlw	1
  9630  02DA  3461               	retlw	97
  9631  02DB  3401               	retlw	1
  9632  02DC  3452               	retlw	82
  9633  02DD  3401               	retlw	1
  9634  02DE  3443               	retlw	67
  9635  02DF  3401               	retlw	1
  9636  02E0  3433               	retlw	51
  9637  02E1  3401               	retlw	1
  9638  02E2  3423               	retlw	35
  9639  02E3  3401               	retlw	1
  9640  02E4  3413               	retlw	19
  9641  02E5  3401               	retlw	1
  9642  02E6  3403               	retlw	3
  9643  02E7  3401               	retlw	1
  9644  02E8  34F3               	retlw	243
  9645  02E9  3400               	retlw	0
  9646  02EA  34E3               	retlw	227
  9647  02EB  3400               	retlw	0
  9648  02EC  34D2               	retlw	210
  9649  02ED  3400               	retlw	0
  9650  02EE  34C1               	retlw	193
  9651  02EF  3400               	retlw	0
  9652  02F0  34B1               	retlw	177
  9653  02F1  3400               	retlw	0
  9654  02F2  34A0               	retlw	160
  9655  02F3  3400               	retlw	0
  9656  02F4  348E               	retlw	142
  9657  02F5  3400               	retlw	0
  9658  02F6  347D               	retlw	125
  9659  02F7  3400               	retlw	0
  9660  02F8  346C               	retlw	108
  9661  02F9  3400               	retlw	0
  9662  02FA  345A               	retlw	90
  9663  02FB  3400               	retlw	0
  9664  02FC  3448               	retlw	72
  9665  02FD  3400               	retlw	0
  9666  02FE  3437               	retlw	55
  9667  02FF  3400               	retlw	0
  9668  0300  3424               	retlw	36
  9669  0301  3400               	retlw	0
  9670  0302  3412               	retlw	18
  9671  0303  3400               	retlw	0
  9672  0304  3400               	retlw	0
  9673  0305  3400               	retlw	0
  9674  0306  34FE               	retlw	254
  9675  0307  3403               	retlw	3
  9676  0308  34FE               	retlw	254
  9677  0309  3403               	retlw	3
  9678  030A  34FD               	retlw	253
  9679  030B  3403               	retlw	3
  9680  030C  34FC               	retlw	252
  9681  030D  3403               	retlw	3
  9682  030E  34FB               	retlw	251
  9683  030F  3403               	retlw	3
  9684  0310  34FA               	retlw	250
  9685  0311  3403               	retlw	3
  9686  0312  34F9               	retlw	249
  9687  0313  3403               	retlw	3
  9688  0314  34F7               	retlw	247
  9689  0315  3403               	retlw	3
  9690  0316  34F6               	retlw	246
  9691  0317  3403               	retlw	3
  9692  0318  34F4               	retlw	244
  9693  0319  3403               	retlw	3
  9694  031A  34F2               	retlw	242
  9695  031B  3403               	retlw	3
  9696  031C  34EF               	retlw	239
  9697  031D  3403               	retlw	3
  9698  031E  34ED               	retlw	237
  9699  031F  3403               	retlw	3
  9700  0320  34EA               	retlw	234
  9701  0321  3403               	retlw	3
  9702  0322  34E7               	retlw	231
  9703  0323  3403               	retlw	3
  9704  0324  34E4               	retlw	228
  9705  0325  3403               	retlw	3
  9706  0326  34E0               	retlw	224
  9707  0327  3403               	retlw	3
  9708  0328  34DD               	retlw	221
  9709  0329  3403               	retlw	3
  9710  032A  34D9               	retlw	217
  9711  032B  3403               	retlw	3
  9712  032C  34D5               	retlw	213
  9713  032D  3403               	retlw	3
  9714  032E  34D1               	retlw	209
  9715  032F  3403               	retlw	3
  9716  0330  34CD               	retlw	205
  9717  0331  3403               	retlw	3
  9718  0332  34C8               	retlw	200
  9719  0333  3403               	retlw	3
  9720  0334  34C3               	retlw	195
  9721  0335  3403               	retlw	3
  9722  0336  34BE               	retlw	190
  9723  0337  3403               	retlw	3
  9724  0338  34B9               	retlw	185
  9725  0339  3403               	retlw	3
  9726  033A  34B3               	retlw	179
  9727  033B  3403               	retlw	3
  9728  033C  34AE               	retlw	174
  9729  033D  3403               	retlw	3
  9730  033E  34A8               	retlw	168
  9731  033F  3403               	retlw	3
  9732  0340  34A2               	retlw	162
  9733  0341  3403               	retlw	3
  9734  0342  349C               	retlw	156
  9735  0343  3403               	retlw	3
  9736  0344  3495               	retlw	149
  9737  0345  3403               	retlw	3
  9738  0346  348F               	retlw	143
  9739  0347  3403               	retlw	3
  9740  0348  3488               	retlw	136
  9741  0349  3403               	retlw	3
  9742  034A  3481               	retlw	129
  9743  034B  3403               	retlw	3
  9744  034C  347A               	retlw	122
  9745  034D  3403               	retlw	3
  9746  034E  3472               	retlw	114
  9747  034F  3403               	retlw	3
  9748  0350  346A               	retlw	106
  9749  0351  3403               	retlw	3
  9750  0352  3463               	retlw	99
  9751  0353  3403               	retlw	3
  9752  0354  345A               	retlw	90
  9753  0355  3403               	retlw	3
  9754  0356  3452               	retlw	82
  9755  0357  3403               	retlw	3
  9756  0358  344A               	retlw	74
  9757  0359  3403               	retlw	3
  9758  035A  3441               	retlw	65
  9759  035B  3403               	retlw	3
  9760  035C  3438               	retlw	56
  9761  035D  3403               	retlw	3
  9762  035E  342F               	retlw	47
  9763  035F  3403               	retlw	3
  9764  0360  3426               	retlw	38
  9765  0361  3403               	retlw	3
  9766  0362  341C               	retlw	28
  9767  0363  3403               	retlw	3
  9768  0364  3413               	retlw	19
  9769  0365  3403               	retlw	3
  9770  0366  3409               	retlw	9
  9771  0367  3403               	retlw	3
  9772  0368  34FE               	retlw	254
  9773  0369  3402               	retlw	2
  9774  036A  34F4               	retlw	244
  9775  036B  3402               	retlw	2
  9776  036C  34EA               	retlw	234
  9777  036D  3402               	retlw	2
  9778  036E  34DF               	retlw	223
  9779  036F  3402               	retlw	2
  9780  0370  34D4               	retlw	212
  9781  0371  3402               	retlw	2
  9782  0372  34C9               	retlw	201
  9783  0373  3402               	retlw	2
  9784  0374  34BE               	retlw	190
  9785  0375  3402               	retlw	2
  9786  0376  34B2               	retlw	178
  9787  0377  3402               	retlw	2
  9788  0378  34A6               	retlw	166
  9789  0379  3402               	retlw	2
  9790  037A  349A               	retlw	154
  9791  037B  3402               	retlw	2
  9792  037C  348E               	retlw	142
  9793  037D  3402               	retlw	2
  9794  037E  3482               	retlw	130
  9795  037F  3402               	retlw	2
  9796  0380  3475               	retlw	117
  9797  0381  3402               	retlw	2
  9798  0382  3468               	retlw	104
  9799  0383  3402               	retlw	2
  9800  0384  345B               	retlw	91
  9801  0385  3402               	retlw	2
  9802  0386  344E               	retlw	78
  9803  0387  3402               	retlw	2
  9804  0388  3441               	retlw	65
  9805  0389  3402               	retlw	2
  9806  038A  3433               	retlw	51
  9807  038B  3402               	retlw	2
  9808  038C  3425               	retlw	37
  9809  038D  3402               	retlw	2
  9810  038E  3417               	retlw	23
  9811  038F  3402               	retlw	2
  9812  0390  3409               	retlw	9
  9813  0391  3402               	retlw	2
  9814  0392  34FB               	retlw	251
  9815  0393  3401               	retlw	1
  9816  0394  34EC               	retlw	236
  9817  0395  3401               	retlw	1
  9818  0396  34DD               	retlw	221
  9819  0397  3401               	retlw	1
  9820  0398  34CE               	retlw	206
  9821  0399  3401               	retlw	1
  9822  039A  34BF               	retlw	191
  9823  039B  3401               	retlw	1
  9824  039C  34B0               	retlw	176
  9825  039D  3401               	retlw	1
  9826  039E  34A0               	retlw	160
  9827  039F  3401               	retlw	1
  9828  03A0  3490               	retlw	144
  9829  03A1  3401               	retlw	1
  9830  03A2  3480               	retlw	128
  9831  03A3  3401               	retlw	1
  9832  03A4  3470               	retlw	112
  9833  03A5  3401               	retlw	1
  9834  03A6  345F               	retlw	95
  9835  03A7  3401               	retlw	1
  9836  03A8  344F               	retlw	79
  9837  03A9  3401               	retlw	1
  9838  03AA  343E               	retlw	62
  9839  03AB  3401               	retlw	1
  9840  03AC  342D               	retlw	45
  9841  03AD  3401               	retlw	1
  9842  03AE  341C               	retlw	28
  9843  03AF  3401               	retlw	1
  9844  03B0  340A               	retlw	10
  9845  03B1  3401               	retlw	1
  9846  03B2  34F8               	retlw	248
  9847  03B3  3400               	retlw	0
  9848  03B4  34E7               	retlw	231
  9849  03B5  3400               	retlw	0
  9850  03B6  34D4               	retlw	212
  9851  03B7  3400               	retlw	0
  9852  03B8  34C2               	retlw	194
  9853  03B9  3400               	retlw	0
  9854  03BA  34B0               	retlw	176
  9855  03BB  3400               	retlw	0
  9856  03BC  349D               	retlw	157
  9857  03BD  3400               	retlw	0
  9858  03BE  348A               	retlw	138
  9859  03BF  3400               	retlw	0
  9860  03C0  3477               	retlw	119
  9861  03C1  3400               	retlw	0
  9862  03C2  3464               	retlw	100
  9863  03C3  3400               	retlw	0
  9864  03C4  3450               	retlw	80
  9865  03C5  3400               	retlw	0
  9866  03C6  343C               	retlw	60
  9867  03C7  3400               	retlw	0
  9868  03C8  3428               	retlw	40
  9869  03C9  3400               	retlw	0
  9870  03CA  3414               	retlw	20
  9871  03CB  3400               	retlw	0
  9872  03CC  3400               	retlw	0
  9873  03CD  3400               	retlw	0
  9874  03CE  34FE               	retlw	254
  9875  03CF  3403               	retlw	3
  9876  03D0  34FE               	retlw	254
  9877  03D1  3403               	retlw	3
  9878  03D2  34FE               	retlw	254
  9879  03D3  3403               	retlw	3
  9880  03D4  34FD               	retlw	253
  9881  03D5  3403               	retlw	3
  9882  03D6  34FD               	retlw	253
  9883  03D7  3403               	retlw	3
  9884  03D8  34FC               	retlw	252
  9885  03D9  3403               	retlw	3
  9886  03DA  34FB               	retlw	251
  9887  03DB  3403               	retlw	3
  9888  03DC  34FA               	retlw	250
  9889  03DD  3403               	retlw	3
  9890  03DE  34F9               	retlw	249
  9891  03DF  3403               	retlw	3
  9892  03E0  34F8               	retlw	248
  9893  03E1  3403               	retlw	3
  9894  03E2  34F6               	retlw	246
  9895  03E3  3403               	retlw	3
  9896  03E4  34F4               	retlw	244
  9897  03E5  3403               	retlw	3
  9898  03E6  34F3               	retlw	243
  9899  03E7  3403               	retlw	3
  9900  03E8  34F0               	retlw	240
  9901  03E9  3403               	retlw	3
  9902  03EA  34EE               	retlw	238
  9903  03EB  3403               	retlw	3
  9904  03EC  34EC               	retlw	236
  9905  03ED  3403               	retlw	3
  9906  03EE  34E9               	retlw	233
  9907  03EF  3403               	retlw	3
  9908  03F0  34E7               	retlw	231
  9909  03F1  3403               	retlw	3
  9910  03F2  34E4               	retlw	228
  9911  03F3  3403               	retlw	3
  9912  03F4  34E0               	retlw	224
  9913  03F5  3403               	retlw	3
  9914  03F6  34DD               	retlw	221
  9915  03F7  3403               	retlw	3
  9916  03F8  34D9               	retlw	217
  9917  03F9  3403               	retlw	3
  9918  03FA  34D6               	retlw	214
  9919  03FB  3403               	retlw	3
  9920  03FC  34D2               	retlw	210
  9921  03FD  3403               	retlw	3
  9922  03FE  34CE               	retlw	206
  9923  03FF  3403               	retlw	3
  9924  0400  34C9               	retlw	201
  9925  0401  3403               	retlw	3
  9926  0402  34C5               	retlw	197
  9927  0403  3403               	retlw	3
  9928  0404  34C0               	retlw	192
  9929  0405  3403               	retlw	3
  9930  0406  34BB               	retlw	187
  9931  0407  3403               	retlw	3
  9932  0408  34B6               	retlw	182
  9933  0409  3403               	retlw	3
  9934  040A  34B0               	retlw	176
  9935  040B  3403               	retlw	3
  9936  040C  34AB               	retlw	171
  9937  040D  3403               	retlw	3
  9938  040E  34A5               	retlw	165
  9939  040F  3403               	retlw	3
  9940  0410  349F               	retlw	159
  9941  0411  3403               	retlw	3
  9942  0412  3499               	retlw	153
  9943  0413  3403               	retlw	3
  9944  0414  3492               	retlw	146
  9945  0415  3403               	retlw	3
  9946  0416  348B               	retlw	139
  9947  0417  3403               	retlw	3
  9948  0418  3484               	retlw	132
  9949  0419  3403               	retlw	3
  9950  041A  347D               	retlw	125
  9951  041B  3403               	retlw	3
  9952  041C  3476               	retlw	118
  9953  041D  3403               	retlw	3
  9954  041E  346E               	retlw	110
  9955  041F  3403               	retlw	3
  9956  0420  3466               	retlw	102
  9957  0421  3403               	retlw	3
  9958  0422  345E               	retlw	94
  9959  0423  3403               	retlw	3
  9960  0424  3456               	retlw	86
  9961  0425  3403               	retlw	3
  9962  0426  344E               	retlw	78
  9963  0427  3403               	retlw	3
  9964  0428  3445               	retlw	69
  9965  0429  3403               	retlw	3
  9966  042A  343C               	retlw	60
  9967  042B  3403               	retlw	3
  9968  042C  3433               	retlw	51
  9969  042D  3403               	retlw	3
  9970  042E  3429               	retlw	41
  9971  042F  3403               	retlw	3
  9972  0430  3420               	retlw	32
  9973  0431  3403               	retlw	3
  9974  0432  3416               	retlw	22
  9975  0433  3403               	retlw	3
  9976  0434  340C               	retlw	12
  9977  0435  3403               	retlw	3
  9978  0436  3401               	retlw	1
  9979  0437  3403               	retlw	3
  9980  0438  34F7               	retlw	247
  9981  0439  3402               	retlw	2
  9982  043A  34EC               	retlw	236
  9983  043B  3402               	retlw	2
  9984  043C  34E1               	retlw	225
  9985  043D  3402               	retlw	2
  9986  043E  34D5               	retlw	213
  9987  043F  3402               	retlw	2
  9988  0440  34CA               	retlw	202
  9989  0441  3402               	retlw	2
  9990  0442  34BE               	retlw	190
  9991  0443  3402               	retlw	2
  9992  0444  34B2               	retlw	178
  9993  0445  3402               	retlw	2
  9994  0446  34A6               	retlw	166
  9995  0447  3402               	retlw	2
  9996  0448  3499               	retlw	153
  9997  0449  3402               	retlw	2
  9998  044A  348C               	retlw	140
  9999  044B  3402               	retlw	2
 10000  044C  347F               	retlw	127
 10001  044D  3402               	retlw	2
 10002  044E  3472               	retlw	114
 10003  044F  3402               	retlw	2
 10004  0450  3464               	retlw	100
 10005  0451  3402               	retlw	2
 10006  0452  3457               	retlw	87
 10007  0453  3402               	retlw	2
 10008  0454  3449               	retlw	73
 10009  0455  3402               	retlw	2
 10010  0456  343A               	retlw	58
 10011  0457  3402               	retlw	2
 10012  0458  342C               	retlw	44
 10013  0459  3402               	retlw	2
 10014  045A  341D               	retlw	29
 10015  045B  3402               	retlw	2
 10016  045C  340E               	retlw	14
 10017  045D  3402               	retlw	2
 10018  045E  34FF               	retlw	255
 10019  045F  3401               	retlw	1
 10020  0460  34EF               	retlw	239
 10021  0461  3401               	retlw	1
 10022  0462  34DF               	retlw	223
 10023  0463  3401               	retlw	1
 10024  0464  34CF               	retlw	207
 10025  0465  3401               	retlw	1
 10026  0466  34BF               	retlw	191
 10027  0467  3401               	retlw	1
 10028  0468  34AE               	retlw	174
 10029  0469  3401               	retlw	1
 10030  046A  349E               	retlw	158
 10031  046B  3401               	retlw	1
 10032  046C  348C               	retlw	140
 10033  046D  3401               	retlw	1
 10034  046E  347B               	retlw	123
 10035  046F  3401               	retlw	1
 10036  0470  346A               	retlw	106
 10037  0471  3401               	retlw	1
 10038  0472  3458               	retlw	88
 10039  0473  3401               	retlw	1
 10040  0474  3446               	retlw	70
 10041  0475  3401               	retlw	1
 10042  0476  3433               	retlw	51
 10043  0477  3401               	retlw	1
 10044  0478  3421               	retlw	33
 10045  0479  3401               	retlw	1
 10046  047A  340E               	retlw	14
 10047  047B  3401               	retlw	1
 10048  047C  34FB               	retlw	251
 10049  047D  3400               	retlw	0
 10050  047E  34E7               	retlw	231
 10051  047F  3400               	retlw	0
 10052  0480  34D3               	retlw	211
 10053  0481  3400               	retlw	0
 10054  0482  34BF               	retlw	191
 10055  0483  3400               	retlw	0
 10056  0484  34AB               	retlw	171
 10057  0485  3400               	retlw	0
 10058  0486  3497               	retlw	151
 10059  0487  3400               	retlw	0
 10060  0488  3482               	retlw	130
 10061  0489  3400               	retlw	0
 10062  048A  346D               	retlw	109
 10063  048B  3400               	retlw	0
 10064  048C  3458               	retlw	88
 10065  048D  3400               	retlw	0
 10066  048E  3442               	retlw	66
 10067  048F  3400               	retlw	0
 10068  0490  342C               	retlw	44
 10069  0491  3400               	retlw	0
 10070  0492  3416               	retlw	22
 10071  0493  3400               	retlw	0
 10072  0494  3400               	retlw	0
 10073  0495  3400               	retlw	0
 10074  0496  34FE               	retlw	254
 10075  0497  3403               	retlw	3
 10076  0498  34FE               	retlw	254
 10077  0499  3403               	retlw	3
 10078  049A  34FE               	retlw	254
 10079  049B  3403               	retlw	3
 10080  049C  34FE               	retlw	254
 10081  049D  3403               	retlw	3
 10082  049E  34FD               	retlw	253
 10083  049F  3403               	retlw	3
 10084  04A0  34FD               	retlw	253
 10085  04A1  3403               	retlw	3
 10086  04A2  34FC               	retlw	252
 10087  04A3  3403               	retlw	3
 10088  04A4  34FC               	retlw	252
 10089  04A5  3403               	retlw	3
 10090  04A6  34FB               	retlw	251
 10091  04A7  3403               	retlw	3
 10092  04A8  34FA               	retlw	250
 10093  04A9  3403               	retlw	3
 10094  04AA  34F9               	retlw	249
 10095  04AB  3403               	retlw	3
 10096  04AC  34F8               	retlw	248
 10097  04AD  3403               	retlw	3
 10098  04AE  34F6               	retlw	246
 10099  04AF  3403               	retlw	3
 10100  04B0  34F5               	retlw	245
 10101  04B1  3403               	retlw	3
 10102  04B2  34F3               	retlw	243
 10103  04B3  3403               	retlw	3
 10104  04B4  34F1               	retlw	241
 10105  04B5  3403               	retlw	3
 10106  04B6  34EF               	retlw	239
 10107  04B7  3403               	retlw	3
 10108  04B8  34ED               	retlw	237
 10109  04B9  3403               	retlw	3
 10110  04BA  34EB               	retlw	235
 10111  04BB  3403               	retlw	3
 10112  04BC  34E9               	retlw	233
 10113  04BD  3403               	retlw	3
 10114  04BE  34E6               	retlw	230
 10115  04BF  3403               	retlw	3
 10116  04C0  34E3               	retlw	227
 10117  04C1  3403               	retlw	3
 10118  04C2  34E0               	retlw	224
 10119  04C3  3403               	retlw	3
 10120  04C4  34DD               	retlw	221
 10121  04C5  3403               	retlw	3
 10122  04C6  34D9               	retlw	217
 10123  04C7  3403               	retlw	3
 10124  04C8  34D6               	retlw	214
 10125  04C9  3403               	retlw	3
 10126  04CA  34D2               	retlw	210
 10127  04CB  3403               	retlw	3
 10128  04CC  34CE               	retlw	206
 10129  04CD  3403               	retlw	3
 10130  04CE  34CA               	retlw	202
 10131  04CF  3403               	retlw	3
 10132  04D0  34C5               	retlw	197
 10133  04D1  3403               	retlw	3
 10134  04D2  34C1               	retlw	193
 10135  04D3  3403               	retlw	3
 10136  04D4  34BC               	retlw	188
 10137  04D5  3403               	retlw	3
 10138  04D6  34B7               	retlw	183
 10139  04D7  3403               	retlw	3
 10140  04D8  34B1               	retlw	177
 10141  04D9  3403               	retlw	3
 10142  04DA  34AC               	retlw	172
 10143  04DB  3403               	retlw	3
 10144  04DC  34A6               	retlw	166
 10145  04DD  3403               	retlw	3
 10146  04DE  34A0               	retlw	160
 10147  04DF  3403               	retlw	3
 10148  04E0  349A               	retlw	154
 10149  04E1  3403               	retlw	3
 10150  04E2  3493               	retlw	147
 10151  04E3  3403               	retlw	3
 10152  04E4  348D               	retlw	141
 10153  04E5  3403               	retlw	3
 10154  04E6  3486               	retlw	134
 10155  04E7  3403               	retlw	3
 10156  04E8  347F               	retlw	127
 10157  04E9  3403               	retlw	3
 10158  04EA  3477               	retlw	119
 10159  04EB  3403               	retlw	3
 10160  04EC  3470               	retlw	112
 10161  04ED  3403               	retlw	3
 10162  04EE  3468               	retlw	104
 10163  04EF  3403               	retlw	3
 10164  04F0  345F               	retlw	95
 10165  04F1  3403               	retlw	3
 10166  04F2  3457               	retlw	87
 10167  04F3  3403               	retlw	3
 10168  04F4  344E               	retlw	78
 10169  04F5  3403               	retlw	3
 10170  04F6  3446               	retlw	70
 10171  04F7  3403               	retlw	3
 10172  04F8  343C               	retlw	60
 10173  04F9  3403               	retlw	3
 10174  04FA  3433               	retlw	51
 10175  04FB  3403               	retlw	3
 10176  04FC  3429               	retlw	41
 10177  04FD  3403               	retlw	3
 10178  04FE  341F               	retlw	31
 10179  04FF  3403               	retlw	3
 10180  0500  3415               	retlw	21
 10181  0501  3403               	retlw	3
 10182  0502  340B               	retlw	11
 10183  0503  3403               	retlw	3
 10184  0504  3400               	retlw	0
 10185  0505  3403               	retlw	3
 10186  0506  34F5               	retlw	245
 10187  0507  3402               	retlw	2
 10188  0508  34EA               	retlw	234
 10189  0509  3402               	retlw	2
 10190  050A  34DE               	retlw	222
 10191  050B  3402               	retlw	2
 10192  050C  34D2               	retlw	210
 10193  050D  3402               	retlw	2
 10194  050E  34C6               	retlw	198
 10195  050F  3402               	retlw	2
 10196  0510  34BA               	retlw	186
 10197  0511  3402               	retlw	2
 10198  0512  34AD               	retlw	173
 10199  0513  3402               	retlw	2
 10200  0514  34A0               	retlw	160
 10201  0515  3402               	retlw	2
 10202  0516  3493               	retlw	147
 10203  0517  3402               	retlw	2
 10204  0518  3485               	retlw	133
 10205  0519  3402               	retlw	2
 10206  051A  3477               	retlw	119
 10207  051B  3402               	retlw	2
 10208  051C  3469               	retlw	105
 10209  051D  3402               	retlw	2
 10210  051E  345B               	retlw	91
 10211  051F  3402               	retlw	2
 10212  0520  344C               	retlw	76
 10213  0521  3402               	retlw	2
 10214  0522  343D               	retlw	61
 10215  0523  3402               	retlw	2
 10216  0524  342D               	retlw	45
 10217  0525  3402               	retlw	2
 10218  0526  341E               	retlw	30
 10219  0527  3402               	retlw	2
 10220  0528  340E               	retlw	14
 10221  0529  3402               	retlw	2
 10222  052A  34FE               	retlw	254
 10223  052B  3401               	retlw	1
 10224  052C  34ED               	retlw	237
 10225  052D  3401               	retlw	1
 10226  052E  34DC               	retlw	220
 10227  052F  3401               	retlw	1
 10228  0530  34CB               	retlw	203
 10229  0531  3401               	retlw	1
 10230  0532  34BA               	retlw	186
 10231  0533  3401               	retlw	1
 10232  0534  34A8               	retlw	168
 10233  0535  3401               	retlw	1
 10234  0536  3496               	retlw	150
 10235  0537  3401               	retlw	1
 10236  0538  3483               	retlw	131
 10237  0539  3401               	retlw	1
 10238  053A  3471               	retlw	113
 10239  053B  3401               	retlw	1
 10240  053C  345D               	retlw	93
 10241  053D  3401               	retlw	1
 10242  053E  344A               	retlw	74
 10243  053F  3401               	retlw	1
 10244  0540  3436               	retlw	54
 10245  0541  3401               	retlw	1
 10246  0542  3422               	retlw	34
 10247  0543  3401               	retlw	1
 10248  0544  340E               	retlw	14
 10249  0545  3401               	retlw	1
 10250  0546  34F9               	retlw	249
 10251  0547  3400               	retlw	0
 10252  0548  34E4               	retlw	228
 10253  0549  3400               	retlw	0
 10254  054A  34CF               	retlw	207
 10255  054B  3400               	retlw	0
 10256  054C  34B9               	retlw	185
 10257  054D  3400               	retlw	0
 10258  054E  34A3               	retlw	163
 10259  054F  3400               	retlw	0
 10260  0550  348D               	retlw	141
 10261  0551  3400               	retlw	0
 10262  0552  3476               	retlw	118
 10263  0553  3400               	retlw	0
 10264  0554  345F               	retlw	95
 10265  0555  3400               	retlw	0
 10266  0556  3448               	retlw	72
 10267  0557  3400               	retlw	0
 10268  0558  3430               	retlw	48
 10269  0559  3400               	retlw	0
 10270  055A  3418               	retlw	24
 10271  055B  3400               	retlw	0
 10272  055C  3400               	retlw	0
 10273  055D  3400               	retlw	0
 10274  055E  34FE               	retlw	254
 10275  055F  3403               	retlw	3
 10276  0560  34FE               	retlw	254
 10277  0561  3403               	retlw	3
 10278  0562  34FE               	retlw	254
 10279  0563  3403               	retlw	3
 10280  0564  34FE               	retlw	254
 10281  0565  3403               	retlw	3
 10282  0566  34FE               	retlw	254
 10283  0567  3403               	retlw	3
 10284  0568  34FD               	retlw	253
 10285  0569  3403               	retlw	3
 10286  056A  34FD               	retlw	253
 10287  056B  3403               	retlw	3
 10288  056C  34FD               	retlw	253
 10289  056D  3403               	retlw	3
 10290  056E  34FC               	retlw	252
 10291  056F  3403               	retlw	3
 10292  0570  34FB               	retlw	251
 10293  0571  3403               	retlw	3
 10294  0572  34FB               	retlw	251
 10295  0573  3403               	retlw	3
 10296  0574  34FA               	retlw	250
 10297  0575  3403               	retlw	3
 10298  0576  34F9               	retlw	249
 10299  0577  3403               	retlw	3
 10300  0578  34F8               	retlw	248
 10301  0579  3403               	retlw	3
 10302  057A  34F7               	retlw	247
 10303  057B  3403               	retlw	3
 10304  057C  34F5               	retlw	245
 10305  057D  3403               	retlw	3
 10306  057E  34F4               	retlw	244
 10307  057F  3403               	retlw	3
 10308  0580  34F2               	retlw	242
 10309  0581  3403               	retlw	3
 10310  0582  34F0               	retlw	240
 10311  0583  3403               	retlw	3
 10312  0584  34EE               	retlw	238
 10313  0585  3403               	retlw	3
 10314  0586  34EC               	retlw	236
 10315  0587  3403               	retlw	3
 10316  0588  34EA               	retlw	234
 10317  0589  3403               	retlw	3
 10318  058A  34E8               	retlw	232
 10319  058B  3403               	retlw	3
 10320  058C  34E5               	retlw	229
 10321  058D  3403               	retlw	3
 10322  058E  34E2               	retlw	226
 10323  058F  3403               	retlw	3
 10324  0590  34DF               	retlw	223
 10325  0591  3403               	retlw	3
 10326  0592  34DC               	retlw	220
 10327  0593  3403               	retlw	3
 10328  0594  34D9               	retlw	217
 10329  0595  3403               	retlw	3
 10330  0596  34D5               	retlw	213
 10331  0597  3403               	retlw	3
 10332  0598  34D1               	retlw	209
 10333  0599  3403               	retlw	3
 10334  059A  34CD               	retlw	205
 10335  059B  3403               	retlw	3
 10336  059C  34C9               	retlw	201
 10337  059D  3403               	retlw	3
 10338  059E  34C5               	retlw	197
 10339  059F  3403               	retlw	3
 10340  05A0  34C0               	retlw	192
 10341  05A1  3403               	retlw	3
 10342  05A2  34BB               	retlw	187
 10343  05A3  3403               	retlw	3
 10344  05A4  34B6               	retlw	182
 10345  05A5  3403               	retlw	3
 10346  05A6  34B1               	retlw	177
 10347  05A7  3403               	retlw	3
 10348  05A8  34AB               	retlw	171
 10349  05A9  3403               	retlw	3
 10350  05AA  34A6               	retlw	166
 10351  05AB  3403               	retlw	3
 10352  05AC  34A0               	retlw	160
 10353  05AD  3403               	retlw	3
 10354  05AE  3499               	retlw	153
 10355  05AF  3403               	retlw	3
 10356  05B0  3493               	retlw	147
 10357  05B1  3403               	retlw	3
 10358  05B2  348C               	retlw	140
 10359  05B3  3403               	retlw	3
 10360  05B4  3485               	retlw	133
 10361  05B5  3403               	retlw	3
 10362  05B6  347E               	retlw	126
 10363  05B7  3403               	retlw	3
 10364  05B8  3476               	retlw	118
 10365  05B9  3403               	retlw	3
 10366  05BA  346E               	retlw	110
 10367  05BB  3403               	retlw	3
 10368  05BC  3466               	retlw	102
 10369  05BD  3403               	retlw	3
 10370  05BE  345E               	retlw	94
 10371  05BF  3403               	retlw	3
 10372  05C0  3455               	retlw	85
 10373  05C1  3403               	retlw	3
 10374  05C2  344D               	retlw	77
 10375  05C3  3403               	retlw	3
 10376  05C4  3443               	retlw	67
 10377  05C5  3403               	retlw	3
 10378  05C6  343A               	retlw	58
 10379  05C7  3403               	retlw	3
 10380  05C8  3430               	retlw	48
 10381  05C9  3403               	retlw	3
 10382  05CA  3426               	retlw	38
 10383  05CB  3403               	retlw	3
 10384  05CC  341C               	retlw	28
 10385  05CD  3403               	retlw	3
 10386  05CE  3411               	retlw	17
 10387  05CF  3403               	retlw	3
 10388  05D0  3406               	retlw	6
 10389  05D1  3403               	retlw	3
 10390  05D2  34FB               	retlw	251
 10391  05D3  3402               	retlw	2
 10392  05D4  34EF               	retlw	239
 10393  05D5  3402               	retlw	2
 10394  05D6  34E3               	retlw	227
 10395  05D7  3402               	retlw	2
 10396  05D8  34D7               	retlw	215
 10397  05D9  3402               	retlw	2
 10398  05DA  34CB               	retlw	203
 10399  05DB  3402               	retlw	2
 10400  05DC  34BE               	retlw	190
 10401  05DD  3402               	retlw	2
 10402  05DE  34B1               	retlw	177
 10403  05DF  3402               	retlw	2
 10404  05E0  34A3               	retlw	163
 10405  05E1  3402               	retlw	2
 10406  05E2  3495               	retlw	149
 10407  05E3  3402               	retlw	2
 10408  05E4  3487               	retlw	135
 10409  05E5  3402               	retlw	2
 10410  05E6  3479               	retlw	121
 10411  05E7  3402               	retlw	2
 10412  05E8  346A               	retlw	106
 10413  05E9  3402               	retlw	2
 10414  05EA  345B               	retlw	91
 10415  05EB  3402               	retlw	2
 10416  05EC  344B               	retlw	75
 10417  05ED  3402               	retlw	2
 10418  05EE  343B               	retlw	59
 10419  05EF  3402               	retlw	2
 10420  05F0  342B               	retlw	43
 10421  05F1  3402               	retlw	2
 10422  05F2  341A               	retlw	26
 10423  05F3  3402               	retlw	2
 10424  05F4  3409               	retlw	9
 10425  05F5  3402               	retlw	2
 10426  05F6  34F8               	retlw	248
 10427  05F7  3401               	retlw	1
 10428  05F8  34E6               	retlw	230
 10429  05F9  3401               	retlw	1
 10430  05FA  34D4               	retlw	212
 10431  05FB  3401               	retlw	1
 10432  05FC  34C2               	retlw	194
 10433  05FD  3401               	retlw	1
 10434  05FE  34AF               	retlw	175
 10435  05FF  3401               	retlw	1
 10436  0600  349C               	retlw	156
 10437  0601  3401               	retlw	1
 10438  0602  3488               	retlw	136
 10439  0603  3401               	retlw	1
 10440  0604  3475               	retlw	117
 10441  0605  3401               	retlw	1
 10442  0606  3460               	retlw	96
 10443  0607  3401               	retlw	1
 10444  0608  344C               	retlw	76
 10445  0609  3401               	retlw	1
 10446  060A  3436               	retlw	54
 10447  060B  3401               	retlw	1
 10448  060C  3421               	retlw	33
 10449  060D  3401               	retlw	1
 10450  060E  340B               	retlw	11
 10451  060F  3401               	retlw	1
 10452  0610  34F5               	retlw	245
 10453  0611  3400               	retlw	0
 10454  0612  34DE               	retlw	222
 10455  0613  3400               	retlw	0
 10456  0614  34C7               	retlw	199
 10457  0615  3400               	retlw	0
 10458  0616  34B0               	retlw	176
 10459  0617  3400               	retlw	0
 10460  0618  3498               	retlw	152
 10461  0619  3400               	retlw	0
 10462  061A  3480               	retlw	128
 10463  061B  3400               	retlw	0
 10464  061C  3467               	retlw	103
 10465  061D  3400               	retlw	0
 10466  061E  344E               	retlw	78
 10467  061F  3400               	retlw	0
 10468  0620  3434               	retlw	52
 10469  0621  3400               	retlw	0
 10470  0622  341A               	retlw	26
 10471  0623  3400               	retlw	0
 10472  0624  3400               	retlw	0
 10473  0625  3400               	retlw	0
 10474  0626  34FE               	retlw	254
 10475  0627  3403               	retlw	3
 10476  0628  34FE               	retlw	254
 10477  0629  3403               	retlw	3
 10478  062A  34FE               	retlw	254
 10479  062B  3403               	retlw	3
 10480  062C  34FE               	retlw	254
 10481  062D  3403               	retlw	3
 10482  062E  34FE               	retlw	254
 10483  062F  3403               	retlw	3
 10484  0630  34FE               	retlw	254
 10485  0631  3403               	retlw	3
 10486  0632  34FD               	retlw	253
 10487  0633  3403               	retlw	3
 10488  0634  34FD               	retlw	253
 10489  0635  3403               	retlw	3
 10490  0636  34FD               	retlw	253
 10491  0637  3403               	retlw	3
 10492  0638  34FC               	retlw	252
 10493  0639  3403               	retlw	3
 10494  063A  34FC               	retlw	252
 10495  063B  3403               	retlw	3
 10496  063C  34FB               	retlw	251
 10497  063D  3403               	retlw	3
 10498  063E  34FB               	retlw	251
 10499  063F  3403               	retlw	3
 10500  0640  34FA               	retlw	250
 10501  0641  3403               	retlw	3
 10502  0642  34F9               	retlw	249
 10503  0643  3403               	retlw	3
 10504  0644  34F8               	retlw	248
 10505  0645  3403               	retlw	3
 10506  0646  34F7               	retlw	247
 10507  0647  3403               	retlw	3
 10508  0648  34F6               	retlw	246
 10509  0649  3403               	retlw	3
 10510  064A  34F4               	retlw	244
 10511  064B  3403               	retlw	3
 10512  064C  34F3               	retlw	243
 10513  064D  3403               	retlw	3
 10514  064E  34F1               	retlw	241
 10515  064F  3403               	retlw	3
 10516  0650  34EF               	retlw	239
 10517  0651  3403               	retlw	3
 10518  0652  34ED               	retlw	237
 10519  0653  3403               	retlw	3
 10520  0654  34EB               	retlw	235
 10521  0655  3403               	retlw	3
 10522  0656  34E9               	retlw	233
 10523  0657  3403               	retlw	3
 10524  0658  34E6               	retlw	230
 10525  0659  3403               	retlw	3
 10526  065A  34E4               	retlw	228
 10527  065B  3403               	retlw	3
 10528  065C  34E1               	retlw	225
 10529  065D  3403               	retlw	3
 10530  065E  34DE               	retlw	222
 10531  065F  3403               	retlw	3
 10532  0660  34DB               	retlw	219
 10533  0661  3403               	retlw	3
 10534  0662  34D8               	retlw	216
 10535  0663  3403               	retlw	3
 10536  0664  34D4               	retlw	212
 10537  0665  3403               	retlw	3
 10538  0666  34D0               	retlw	208
 10539  0667  3403               	retlw	3
 10540  0668  34CC               	retlw	204
 10541  0669  3403               	retlw	3
 10542  066A  34C8               	retlw	200
 10543  066B  3403               	retlw	3
 10544  066C  34C4               	retlw	196
 10545  066D  3403               	retlw	3
 10546  066E  34BF               	retlw	191
 10547  066F  3403               	retlw	3
 10548  0670  34BA               	retlw	186
 10549  0671  3403               	retlw	3
 10550  0672  34B5               	retlw	181
 10551  0673  3403               	retlw	3
 10552  0674  34AF               	retlw	175
 10553  0675  3403               	retlw	3
 10554  0676  34AA               	retlw	170
 10555  0677  3403               	retlw	3
 10556  0678  34A4               	retlw	164
 10557  0679  3403               	retlw	3
 10558  067A  349E               	retlw	158
 10559  067B  3403               	retlw	3
 10560  067C  3497               	retlw	151
 10561  067D  3403               	retlw	3
 10562  067E  3491               	retlw	145
 10563  067F  3403               	retlw	3
 10564  0680  348A               	retlw	138
 10565  0681  3403               	retlw	3
 10566  0682  3483               	retlw	131
 10567  0683  3403               	retlw	3
 10568  0684  347B               	retlw	123
 10569  0685  3403               	retlw	3
 10570  0686  3473               	retlw	115
 10571  0687  3403               	retlw	3
 10572  0688  346B               	retlw	107
 10573  0689  3403               	retlw	3
 10574  068A  3463               	retlw	99
 10575  068B  3403               	retlw	3
 10576  068C  345A               	retlw	90
 10577  068D  3403               	retlw	3
 10578  068E  3451               	retlw	81
 10579  068F  3403               	retlw	3
 10580  0690  3448               	retlw	72
 10581  0691  3403               	retlw	3
 10582  0692  343E               	retlw	62
 10583  0693  3403               	retlw	3
 10584  0694  3434               	retlw	52
 10585  0695  3403               	retlw	3
 10586  0696  342A               	retlw	42
 10587  0697  3403               	retlw	3
 10588  0698  3420               	retlw	32
 10589  0699  3403               	retlw	3
 10590  069A  3415               	retlw	21
 10591  069B  3403               	retlw	3
 10592  069C  340A               	retlw	10
 10593  069D  3403               	retlw	3
 10594  069E  34FE               	retlw	254
 10595  069F  3402               	retlw	2
 10596  06A0  34F2               	retlw	242
 10597  06A1  3402               	retlw	2
 10598  06A2  34E6               	retlw	230
 10599  06A3  3402               	retlw	2
 10600  06A4  34D9               	retlw	217
 10601  06A5  3402               	retlw	2
 10602  06A6  34CC               	retlw	204
 10603  06A7  3402               	retlw	2
 10604  06A8  34BF               	retlw	191
 10605  06A9  3402               	retlw	2
 10606  06AA  34B1               	retlw	177
 10607  06AB  3402               	retlw	2
 10608  06AC  34A3               	retlw	163
 10609  06AD  3402               	retlw	2
 10610  06AE  3494               	retlw	148
 10611  06AF  3402               	retlw	2
 10612  06B0  3486               	retlw	134
 10613  06B1  3402               	retlw	2
 10614  06B2  3476               	retlw	118
 10615  06B3  3402               	retlw	2
 10616  06B4  3467               	retlw	103
 10617  06B5  3402               	retlw	2
 10618  06B6  3457               	retlw	87
 10619  06B7  3402               	retlw	2
 10620  06B8  3446               	retlw	70
 10621  06B9  3402               	retlw	2
 10622  06BA  3435               	retlw	53
 10623  06BB  3402               	retlw	2
 10624  06BC  3424               	retlw	36
 10625  06BD  3402               	retlw	2
 10626  06BE  3412               	retlw	18
 10627  06BF  3402               	retlw	2
 10628  06C0  3400               	retlw	0
 10629  06C1  3402               	retlw	2
 10630  06C2  34EE               	retlw	238
 10631  06C3  3401               	retlw	1
 10632  06C4  34DB               	retlw	219
 10633  06C5  3401               	retlw	1
 10634  06C6  34C7               	retlw	199
 10635  06C7  3401               	retlw	1
 10636  06C8  34B4               	retlw	180
 10637  06C9  3401               	retlw	1
 10638  06CA  349F               	retlw	159
 10639  06CB  3401               	retlw	1
 10640  06CC  348B               	retlw	139
 10641  06CD  3401               	retlw	1
 10642  06CE  3476               	retlw	118
 10643  06CF  3401               	retlw	1
 10644  06D0  3460               	retlw	96
 10645  06D1  3401               	retlw	1
 10646  06D2  344A               	retlw	74
 10647  06D3  3401               	retlw	1
 10648  06D4  3433               	retlw	51
 10649  06D5  3401               	retlw	1
 10650  06D6  341D               	retlw	29
 10651  06D7  3401               	retlw	1
 10652  06D8  3405               	retlw	5
 10653  06D9  3401               	retlw	1
 10654  06DA  34ED               	retlw	237
 10655  06DB  3400               	retlw	0
 10656  06DC  34D5               	retlw	213
 10657  06DD  3400               	retlw	0
 10658  06DE  34BC               	retlw	188
 10659  06DF  3400               	retlw	0
 10660  06E0  34A3               	retlw	163
 10661  06E1  3400               	retlw	0
 10662  06E2  3489               	retlw	137
 10663  06E3  3400               	retlw	0
 10664  06E4  346E               	retlw	110
 10665  06E5  3400               	retlw	0
 10666  06E6  3454               	retlw	84
 10667  06E7  3400               	retlw	0
 10668  06E8  3438               	retlw	56
 10669  06E9  3400               	retlw	0
 10670  06EA  341C               	retlw	28
 10671  06EB  3400               	retlw	0
 10672  06EC  3400               	retlw	0
 10673  06ED  3400               	retlw	0
 10674  06EE                     __end_of_gamma_table:
 10675  0003                     _STATUSbits	set	3
 10676  000E                     _PORTC	set	14
 10677  000E                     _PORTCbits	set	14
 10678  000D                     _PORTBbits	set	13
 10679  000C                     _PORTAbits	set	12
 10680  0017                     _T0CON0bits	set	23
 10681  0017                     _T0CON0	set	23
 10682  0010                     _PIR0bits	set	16
 10683  0015                     _TMR0L	set	21
 10684  0016                     _TMR0H	set	22
 10685  0018                     _T0CON1	set	24
 10686  001F                     _T2CON	set	31
 10687  001D                     _TMR2	set	29
 10688  001E                     _PR2	set	30
 10689  0011                     _PIR1bits	set	17
 10690  0013                     _PIR3bits	set	19
 10691  000B                     _INTCONbits	set	11
 10692  008E                     _TRISCbits	set	142
 10693  009D                     _ADCON0bits	set	157
 10694  009C                     _ADRESH	set	156
 10695  009B                     _ADRESL	set	155
 10696  009F                     _ADACT	set	159
 10697  009E                     _ADCON1	set	158
 10698  009D                     _ADCON0	set	157
 10699  008E                     _TRISC	set	142
 10700  008D                     _TRISB	set	141
 10701  008C                     _TRISA	set	140
 10702  0091                     _PIE1bits	set	145
 10703  0093                     _PIE3bits	set	147
 10704  0097                     _WDTCON	set	151
 10705  010E                     _LATCbits	set	270
 10706  010D                     _LATBbits	set	269
 10707  010E                     _LATC	set	270
 10708  010D                     _LATB	set	269
 10709  010C                     _LATA	set	268
 10710  018E                     _ANSELCbits	set	398
 10711  018C                     _ANSELA	set	396
 10712  018D                     _ANSELB	set	397
 10713  018E                     _ANSELC	set	398
 10714  020E                     _WPUCbits	set	526
 10715  020D                     _WPUBbits	set	525
 10716  020E                     _WPUC	set	526
 10717  020C                     _WPUA	set	524
 10718  020D                     _WPUB	set	525
 10719  0215                     _SSP1CON1bits	set	533
 10720  0216                     _SSP1CON2bits	set	534
 10721  0214                     _SSP1STATbits	set	532
 10722  0211                     _SSP1BUF	set	529
 10723  0212                     _SSP1ADD	set	530
 10724  0213                     _SSP1MSK	set	531
 10725  0217                     _SSP1CON3	set	535
 10726  0216                     _SSP1CON2	set	534
 10727  0215                     _SSP1CON1	set	533
 10728  0214                     _SSP1STAT	set	532
 10729  0295                     _CCPR2	set	661
 10730  0291                     _CCPR1	set	657
 10731  028E                     _ODCONCbits	set	654
 10732  0295                     _CCPR2L	set	661
 10733  0296                     _CCPR2H	set	662
 10734  0297                     _CCP2CON	set	663
 10735  0291                     _CCPR1L	set	657
 10736  0292                     _CCPR1H	set	658
 10737  0293                     _CCP1CON	set	659
 10738  029F                     _CCPTMRSbits	set	671
 10739  028E                     _ODCONC	set	654
 10740  028D                     _ODCONB	set	653
 10741  028C                     _ODCONA	set	652
 10742  0311                     _CCPR3	set	785
 10743  0315                     _CCPR4	set	789
 10744  0315                     _CCPR4L	set	789
 10745  0316                     _CCPR4H	set	790
 10746  0317                     _CCP4CON	set	791
 10747  0311                     _CCPR3L	set	785
 10748  0312                     _CCPR3H	set	786
 10749  0313                     _CCP3CON	set	787
 10750  0413                     _T3CONbits	set	1043
 10751  0413                     _T3CON	set	1043
 10752  0411                     _TMR3L	set	1041
 10753  0412                     _TMR3H	set	1042
 10754  0414                     _T3GCON	set	1044
 10755  061F                     _PWMTMRSbits	set	1567
 10756  0617                     _PWM5DCL	set	1559
 10757  0618                     _PWM5DCH	set	1560
 10758  0619                     _PWM5CON	set	1561
 10759  0896                     _NVMCON2	set	2198
 10760  0894                     _NVMDATH	set	2196
 10761  0893                     _NVMDATL	set	2195
 10762  0892                     _NVMADRH	set	2194
 10763  0891                     _NVMADRL	set	2193
 10764  0895                     _NVMCON1bits	set	2197
 10765  0913                     _PMD2bits	set	2323
 10766  0918                     _CPUDOZEbits	set	2328
 10767  0916                     _PMD5	set	2326
 10768  0915                     _PMD4	set	2325
 10769  0914                     _PMD3	set	2324
 10770  0913                     _PMD2	set	2323
 10771  0912                     _PMD1	set	2322
 10772  0911                     _PMD0	set	2321
 10773  091E                     _OSCTUNE	set	2334
 10774  091F                     _OSCFRQ	set	2335
 10775  091D                     _OSCEN	set	2333
 10776  091B                     _OSCCON3	set	2331
 10777  0919                     _OSCCON1	set	2329
 10778  0E0F                     _PPSLOCKbits	set	3599
 10779  0E0F                     _PPSLOCK	set	3599
 10780  0E2B                     _CLCIN3PPSbits	set	3627
 10781  0E2A                     _CLCIN2PPSbits	set	3626
 10782  0E21                     _SSP1DATPPSbits	set	3617
 10783  0E20                     _SSP1CLKPPSbits	set	3616
 10784  0EA6                     _RC6PPSbits	set	3750
 10785  0EA7                     _RC7PPSbits	set	3751
 10786  0EA3                     _RC3PPSbits	set	3747
 10787  0EA4                     _RC4PPSbits	set	3748
 10788  0EA5                     _RC5PPSbits	set	3749
 10789  0E9E                     _RB6PPSbits	set	3742
 10790  0E9F                     _RB7PPSbits	set	3743
 10791  0F24                     _CLC3CON	set	3876
 10792  0F2D                     _CLC3GLS3	set	3885
 10793  0F2C                     _CLC3GLS2	set	3884
 10794  0F2B                     _CLC3GLS1	set	3883
 10795  0F2A                     _CLC3GLS0	set	3882
 10796  0F29                     _CLC3SEL3	set	3881
 10797  0F28                     _CLC3SEL2	set	3880
 10798  0F27                     _CLC3SEL1	set	3879
 10799  0F26                     _CLC3SEL0	set	3878
 10800  0F25                     _CLC3POL	set	3877
 10801  0F2E                     _CLC4CON	set	3886
 10802  0F37                     _CLC4GLS3	set	3895
 10803  0F36                     _CLC4GLS2	set	3894
 10804  0F35                     _CLC4GLS1	set	3893
 10805  0F34                     _CLC4GLS0	set	3892
 10806  0F33                     _CLC4SEL3	set	3891
 10807  0F32                     _CLC4SEL2	set	3890
 10808  0F31                     _CLC4SEL1	set	3889
 10809  0F30                     _CLC4SEL0	set	3888
 10810  0F2F                     _CLC4POL	set	3887
 10811  0F10                     _CLC1CON	set	3856
 10812  0F19                     _CLC1GLS3	set	3865
 10813  0F18                     _CLC1GLS2	set	3864
 10814  0F17                     _CLC1GLS1	set	3863
 10815  0F16                     _CLC1GLS0	set	3862
 10816  0F15                     _CLC1SEL3	set	3861
 10817  0F14                     _CLC1SEL2	set	3860
 10818  0F13                     _CLC1SEL1	set	3859
 10819  0F12                     _CLC1SEL0	set	3858
 10820  0F11                     _CLC1POL	set	3857
 10821  0F1A                     _CLC2CON	set	3866
 10822  0F23                     _CLC2GLS3	set	3875
 10823  0F22                     _CLC2GLS2	set	3874
 10824  0F21                     _CLC2GLS1	set	3873
 10825  0F20                     _CLC2GLS0	set	3872
 10826  0F1F                     _CLC2SEL3	set	3871
 10827  0F1E                     _CLC2SEL2	set	3870
 10828  0F1D                     _CLC2SEL1	set	3869
 10829  0F1C                     _CLC2SEL0	set	3868
 10830  0F1B                     _CLC2POL	set	3867
 10831                           
 10832                           	psect	cinit
 10833  0032                     start_initialization:	
 10834                           ; #config settings
 10835                           
 10836  0032                     __initialization:
 10837                           
 10838                           ; Initialize objects allocated to BANK1
 10839  0032  0021               	movlb	1	; select bank1
 10840                           
 10841                           ;initializer for _I2C1_slaveWriteData
 10842  0033  3055               	movlw	85
 10843  0034  00DA               	movwf	__pdataBANK1& (0+127)
 10844                           
 10845                           ; Clear objects allocated to BANK0
 10846  0035  3020               	movlw	low __pbssBANK0
 10847  0036  0084               	movwf	4
 10848  0037  3000               	movlw	high __pbssBANK0
 10849  0038  0085               	movwf	5
 10850  0039  302C               	movlw	44
 10851  003A  3192  22C5  3180   	fcall	clear_ram0
 10852                           
 10853                           ; Clear objects allocated to BANK1
 10854  003D  30A0               	movlw	low __pbssBANK1
 10855  003E  0084               	movwf	4
 10856  003F  3000               	movlw	high __pbssBANK1
 10857  0040  0085               	movwf	5
 10858  0041  302A               	movlw	42
 10859  0042  3192  22C5  3180   	fcall	clear_ram0
 10860  0045                     end_of_initialization:	
 10861                           ;End of C runtime variable initialization code
 10862                           
 10863  0045                     __end_of__initialization:
 10864  0045  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 10865  0046  0020               	movlb	0
 10866  0047  2848               	ljmp	l8052	;jump to C main() function
 10867  0048                     __pmaintext:	
 10868 ;;
 10869 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
 10870 ;;
 10871 ;; *************** function _main *****************
 10872 ;; Defined at:
 10873 ;;		line 80 in file "main.c"
 10874 ;; Parameters:    Size  Location     Type
 10875 ;;		None
 10876 ;; Auto vars:     Size  Location     Type
 10877 ;;		None
 10878 ;; Return value:  Size  Location     Type
 10879 ;;                  1    wreg      void 
 10880 ;; Registers used:
 10881 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10882 ;; Tracked objects:
 10883 ;;		On entry : B1F/0
 10884 ;;		On exit  : 0/0
 10885 ;;		Unchanged: 0/0
 10886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10891 ;;Total ram usage:        0 bytes
 10892 ;; Hardware stack levels required when called:   12
 10893 ;; This function calls:
 10894 ;;		_ClearInterrupt
 10895 ;;		_DataInitSet
 10896 ;;		_Encoder_FSM
 10897 ;;		_GP_Ports_FSM
 10898 ;;		_SYSTEM_Initialize
 10899 ;;		_TMR0_StartTimer
 10900 ;;		_TMR3_StartTimer
 10901 ;; This function is called by:
 10902 ;;		Startup code after reset
 10903 ;; This function uses a non-reentrant model
 10904 ;;
 10905                           
 10906                           
 10907                           ;psect for function _main
 10908  0048                     _main:
 10909  0048                     l8052:	
 10910                           ;incstack = 0
 10911                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10912                           
 10913                           
 10914                           ;main.c: 82: SYSTEM_Initialize();
 10915  0048  20B0  3180         	fcall	_SYSTEM_Initialize
 10916                           
 10917                           ;main.c: 88: (INTCONbits.GIE = 1);
 10918  004A  178B               	bsf	11,7	;volatile
 10919                           
 10920                           ;main.c: 91: (INTCONbits.PEIE = 1);
 10921  004B  170B               	bsf	11,6	;volatile
 10922                           
 10923                           ;main.c: 99: DataInitSet();
 10924  004C  206C               	fcall	_DataInitSet
 10925  004D  158E               	bsf	14,3	;volatile
 10926  004E  160E               	bsf	14,4	;volatile
 10927  004F  168E               	bsf	14,5	;volatile
 10928  0050  170E               	bsf	14,6	;volatile
 10929  0051  178E               	bsf	14,7	;volatile
 10930                           
 10931                           ;main.c: 106: TMR3_StartTimer();
 10932  0052  3192  22CB  3180   	fcall	_TMR3_StartTimer
 10933                           
 10934                           ;main.c: 107: TMR0_StartTimer();
 10935  0055  3192  22CE  3180   	fcall	_TMR0_StartTimer
 10936                           
 10937                           ;main.c: 108: ClearInterrupt();
 10938  0058  2069  3180         	fcall	_ClearInterrupt
 10939                           
 10940                           ;main.c: 110: CPUDOZEbits.IDLEN = 1;
 10941  005A  0032               	movlb	18	; select bank18
 10942  005B  1798               	bsf	24,7	;volatile
 10943                           
 10944                           ;main.c: 111: CPUDOZEbits.ROI = 1;
 10945  005C  1698               	bsf	24,5	;volatile
 10946  005D                     l8078:
 10947                           
 10948                           ;main.c: 115: if (fsm_tmr == 1) {
 10949  005D  0021               	movlb	1	; select bank1
 10950  005E  0348               	decf	_fsm_tmr^(0+128),w
 10951  005F  1D03               	btfss	3,2
 10952  0060  285D               	goto	l8078
 10953                           
 10954                           ;main.c: 117: Encoder_FSM();
 10955  0061  20AB               	fcall	_Encoder_FSM
 10956                           
 10957                           ;main.c: 118: GP_Ports_FSM();
 10958  0062  3188  2091  3180   	fcall	_GP_Ports_FSM
 10959                           
 10960                           ;main.c: 119: fsm_tmr = 0;
 10961  0065  0021               	movlb	1	; select bank1
 10962  0066  01C8               	clrf	_fsm_tmr^(0+128)
 10963  0067  0063               	sleep	;# 
 10964  0068  285D               	goto	l8078
 10965  0069                     __end_of_main:
 10966  0069                     __ptext43:	
 10967 ;; *************** function _ClearInterrupt *****************
 10968 ;; Defined at:
 10969 ;;		line 66 in file "main.c"
 10970 ;; Parameters:    Size  Location     Type
 10971 ;;		None
 10972 ;; Auto vars:     Size  Location     Type
 10973 ;;		None
 10974 ;; Return value:  Size  Location     Type
 10975 ;;                  1    wreg      void 
 10976 ;; Registers used:
 10977 ;;		None
 10978 ;; Tracked objects:
 10979 ;;		On entry : 1F/0
 10980 ;;		On exit  : 1F/2
 10981 ;;		Unchanged: 0/0
 10982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10987 ;;Total ram usage:        0 bytes
 10988 ;; Hardware stack levels used:    1
 10989 ;; Hardware stack levels required when called:    7
 10990 ;; This function calls:
 10991 ;;		Nothing
 10992 ;; This function is called by:
 10993 ;;		_main
 10994 ;; This function uses a non-reentrant model
 10995 ;;
 10996                           
 10997                           
 10998                           ;psect for function _ClearInterrupt
 10999  0069                     _ClearInterrupt:
 11000                           
 11001                           ;incstack = 0
 11002                           ; Regs used in _ClearInterrupt: []
 11003                           ;main.c: 67: do { LATBbits.LATB5 = 1; } while(0);
 11004  0069  0022               	movlb	2	; select bank2
 11005  006A  168D               	bsf	13,5	;volatile
 11006  006B  0008               	return
 11007  006C                     __end_of_ClearInterrupt:
 11008  006C                     __ptext42:	
 11009 ;; *************** function _DataInitSet *****************
 11010 ;; Defined at:
 11011 ;;		line 72 in file "DataVariable.c"
 11012 ;; Parameters:    Size  Location     Type
 11013 ;;		None
 11014 ;; Auto vars:     Size  Location     Type
 11015 ;;		None
 11016 ;; Return value:  Size  Location     Type
 11017 ;;                  1    wreg      void 
 11018 ;; Registers used:
 11019 ;;		wreg, status,2
 11020 ;; Tracked objects:
 11021 ;;		On entry : 1F/1E
 11022 ;;		On exit  : 1F/1
 11023 ;;		Unchanged: 0/0
 11024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11029 ;;Total ram usage:        0 bytes
 11030 ;; Hardware stack levels used:    1
 11031 ;; Hardware stack levels required when called:    7
 11032 ;; This function calls:
 11033 ;;		Nothing
 11034 ;; This function is called by:
 11035 ;;		_main
 11036 ;; This function uses a non-reentrant model
 11037 ;;
 11038                           
 11039                           
 11040                           ;psect for function _DataInitSet
 11041  006C                     _DataInitSet:
 11042                           
 11043                           ;DataVariable.c: 73: GCONF = 0;
 11044                           
 11045                           ;incstack = 0
 11046                           ; Regs used in _DataInitSet: [wreg+status,2]
 11047  006C  0020               	movlb	0	; select bank0
 11048  006D  01C9               	clrf	_GCONF	;volatile
 11049                           
 11050                           ;DataVariable.c: 74: GP1CONF = 0;
 11051  006E  01C8               	clrf	_GP1CONF	;volatile
 11052                           
 11053                           ;DataVariable.c: 75: GP3CONF = 0;
 11054  006F  01C6               	clrf	_GP3CONF	;volatile
 11055                           
 11056                           ;DataVariable.c: 76: INTCONF = 0;
 11057  0070  0021               	movlb	1	; select bank1
 11058  0071  01C9               	clrf	_INTCONF^(0+128)	;volatile
 11059                           
 11060                           ;DataVariable.c: 77: ESTATUS = 0;
 11061  0072  0020               	movlb	0	; select bank0
 11062  0073  01CA               	clrf	_ESTATUS	;volatile
 11063                           
 11064                           ;DataVariable.c: 78: I2STATUS = 0;
 11065  0074  0021               	movlb	1	; select bank1
 11066  0075  01C7               	clrf	_I2STATUS^(0+128)	;volatile
 11067                           
 11068                           ;DataVariable.c: 79: CVAL.val = 0;
 11069  0076  0020               	movlb	0	; select bank0
 11070  0077  01AC               	clrf	_CVAL	;volatile
 11071  0078  01AD               	clrf	_CVAL+1	;volatile
 11072  0079  01AE               	clrf	_CVAL+2	;volatile
 11073  007A  01AF               	clrf	_CVAL+3	;volatile
 11074                           
 11075                           ;DataVariable.c: 80: CMAX.val = 0;
 11076  007B  01A8               	clrf	_CMAX	;volatile
 11077  007C  01A9               	clrf	_CMAX+1	;volatile
 11078  007D  01AA               	clrf	_CMAX+2	;volatile
 11079  007E  01AB               	clrf	_CMAX+3	;volatile
 11080                           
 11081                           ;DataVariable.c: 81: CMIN.val = 0;
 11082  007F  01A4               	clrf	_CMIN	;volatile
 11083  0080  01A5               	clrf	_CMIN+1	;volatile
 11084  0081  01A6               	clrf	_CMIN+2	;volatile
 11085  0082  01A7               	clrf	_CMIN+3	;volatile
 11086                           
 11087                           ;DataVariable.c: 82: ISTEP.val = 0;
 11088  0083  01A0               	clrf	_ISTEP	;volatile
 11089  0084  01A1               	clrf	_ISTEP+1	;volatile
 11090  0085  01A2               	clrf	_ISTEP+2	;volatile
 11091  0086  01A3               	clrf	_ISTEP+3	;volatile
 11092                           
 11093                           ;DataVariable.c: 83: RLED = 0;
 11094  0087  01C5               	clrf	_RLED	;volatile
 11095                           
 11096                           ;DataVariable.c: 84: GLED = 0;
 11097  0088  01C4               	clrf	_GLED	;volatile
 11098                           
 11099                           ;DataVariable.c: 85: BLED = 0;
 11100  0089  01C3               	clrf	_BLED	;volatile
 11101                           
 11102                           ;DataVariable.c: 86: GP1REG = 0;
 11103  008A  01C2               	clrf	_GP1REG	;volatile
 11104                           
 11105                           ;DataVariable.c: 87: GP2REG = 0;
 11106  008B  01C1               	clrf	_GP2REG	;volatile
 11107                           
 11108                           ;DataVariable.c: 88: GP3REG = 0;
 11109  008C  01C0               	clrf	_GP3REG	;volatile
 11110                           
 11111                           ;DataVariable.c: 89: C_RESET = 0;
 11112  008D  0021               	movlb	1	; select bank1
 11113  008E  01C1               	clrf	_C_RESET^(0+128)	;volatile
 11114                           
 11115                           ;DataVariable.c: 90: C_MBANK = 0;
 11116  008F  01C0               	clrf	_C_MBANK^(0+128)	;volatile
 11117                           
 11118                           ;DataVariable.c: 91: C_ETYPE = 0;
 11119  0090  0020               	movlb	0	; select bank0
 11120  0091  01B9               	clrf	_C_ETYPE	;volatile
 11121                           
 11122                           ;DataVariable.c: 92: C_RMOD = 0;
 11123  0092  0021               	movlb	1	; select bank1
 11124  0093  01BF               	clrf	_C_RMOD^(0+128)	;volatile
 11125                           
 11126                           ;DataVariable.c: 93: C_IPUD = 0;
 11127  0094  01BE               	clrf	_C_IPUD^(0+128)	;volatile
 11128                           
 11129                           ;DataVariable.c: 94: C_DIRE = 0;
 11130  0095  01BD               	clrf	_C_DIRE^(0+128)	;volatile
 11131                           
 11132                           ;DataVariable.c: 95: C_WRAPE = 0;
 11133  0096  0020               	movlb	0	; select bank0
 11134  0097  01B8               	clrf	_C_WRAPE	;volatile
 11135                           
 11136                           ;DataVariable.c: 96: C_DTYPE = 0;
 11137  0098  0021               	movlb	1	; select bank1
 11138  0099  01BC               	clrf	_C_DTYPE^(0+128)	;volatile
 11139                           
 11140                           ;DataVariable.c: 97: S_CKSRC = 0;
 11141  009A  01BB               	clrf	_S_CKSRC^(0+128)	;volatile
 11142                           
 11143                           ;DataVariable.c: 98: S_RELATIVE = 0;
 11144  009B  0020               	movlb	0	; select bank0
 11145  009C  01B7               	clrf	_S_RELATIVE	;volatile
 11146                           
 11147                           ;DataVariable.c: 100: ANTBOUNC = 1;
 11148  009D  3001               	movlw	1
 11149  009E  0021               	movlb	1	; select bank1
 11150  009F  00C5               	movwf	_ANTBOUNC^(0+128)	;volatile
 11151                           
 11152                           ;DataVariable.c: 101: DPPERIOD = 0;
 11153  00A0  01C4               	clrf	_DPPERIOD^(0+128)	;volatile
 11154                           
 11155                           ;DataVariable.c: 102: FADERGB = 0;
 11156  00A1  01C3               	clrf	_FADERGB^(0+128)	;volatile
 11157                           
 11158                           ;DataVariable.c: 103: FADEGP = 0;
 11159  00A2  0020               	movlb	0	; select bank0
 11160  00A3  01BF               	clrf	_FADEGP	;volatile
 11161                           
 11162                           ;DataVariable.c: 104: DEBOUNCE = 250;
 11163  00A4  30FA               	movlw	250
 11164  00A5  0021               	movlb	1	; select bank1
 11165  00A6  00A6               	movwf	_DEBOUNCE^(0+128)	;volatile
 11166  00A7  01A7               	clrf	(_DEBOUNCE+1)^(0+128)	;volatile
 11167                           
 11168                           ;DataVariable.c: 105: DoublePush = 0;
 11169  00A8  01A4               	clrf	_DoublePush^(0+128)	;volatile
 11170  00A9  01A5               	clrf	(_DoublePush+1)^(0+128)	;volatile
 11171  00AA  0008               	return
 11172  00AB                     __end_of_DataInitSet:
 11173  00AB                     __ptext28:	
 11174 ;; *************** function _Encoder_FSM *****************
 11175 ;; Defined at:
 11176 ;;		line 296 in file "Encoder.c"
 11177 ;; Parameters:    Size  Location     Type
 11178 ;;		None
 11179 ;; Auto vars:     Size  Location     Type
 11180 ;;		None
 11181 ;; Return value:  Size  Location     Type
 11182 ;;                  1    wreg      void 
 11183 ;; Registers used:
 11184 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11185 ;; Tracked objects:
 11186 ;;		On entry : 1F/1
 11187 ;;		On exit  : 1C/0
 11188 ;;		Unchanged: 0/0
 11189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11194 ;;Total ram usage:        0 bytes
 11195 ;; Hardware stack levels used:    1
 11196 ;; Hardware stack levels required when called:   11
 11197 ;; This function calls:
 11198 ;;		_Encoder_PushButton_FSM
 11199 ;;		_FADE_LEDS
 11200 ;; This function is called by:
 11201 ;;		_main
 11202 ;; This function uses a non-reentrant model
 11203 ;;
 11204                           
 11205                           
 11206                           ;psect for function _Encoder_FSM
 11207  00AB                     _Encoder_FSM:
 11208                           
 11209                           ;Encoder.c: 297: FADE_LEDS();
 11210                           
 11211                           ;incstack = 0
 11212                           ; Regs used in _Encoder_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11213  00AB  3189  21BA  3180   	fcall	_FADE_LEDS
 11214                           
 11215                           ;Encoder.c: 298: Encoder_PushButton_FSM();
 11216  00AE  3193  2B49         	ljmp	l7938
 11217  00B0                     __end_of_Encoder_FSM:
 11218  00B0                     __ptext3:	
 11219 ;; *************** function _SYSTEM_Initialize *****************
 11220 ;; Defined at:
 11221 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11222 ;; Parameters:    Size  Location     Type
 11223 ;;		None
 11224 ;; Auto vars:     Size  Location     Type
 11225 ;;		None
 11226 ;; Return value:  Size  Location     Type
 11227 ;;                  1    wreg      void 
 11228 ;; Registers used:
 11229 ;;		wreg, status,2, status,0, pclath, cstack
 11230 ;; Tracked objects:
 11231 ;;		On entry : B1F/0
 11232 ;;		On exit  : B1F/1E
 11233 ;;		Unchanged: B00/0
 11234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11239 ;;Total ram usage:        0 bytes
 11240 ;; Hardware stack levels used:    1
 11241 ;; Hardware stack levels required when called:    8
 11242 ;; This function calls:
 11243 ;;		_CLC1_Initialize
 11244 ;;		_CLC2_Initialize
 11245 ;;		_CLC3_Initialize
 11246 ;;		_CLC4_Initialize
 11247 ;;		_I2C1_AddressSet
 11248 ;;		_I2C1_Initialize
 11249 ;;		_OSCILLATOR_Initialize
 11250 ;;		_PIN_MANAGER_Initialize
 11251 ;;		_PMD_Initialize
 11252 ;;		_TMR0_Initialize
 11253 ;;		_TMR2_Initialize
 11254 ;;		_TMR3_Initialize
 11255 ;;		_WDT_Initialize
 11256 ;; This function is called by:
 11257 ;;		_main
 11258 ;; This function uses a non-reentrant model
 11259 ;;
 11260                           
 11261                           
 11262                           ;psect for function _SYSTEM_Initialize
 11263  00B0                     _SYSTEM_Initialize:
 11264                           
 11265                           ;mcc.c: 53: PMD_Initialize();
 11266                           
 11267                           ;incstack = 0
 11268                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11269  00B0  215B  3180         	fcall	_PMD_Initialize
 11270                           
 11271                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 11272  00B2  2125  3180         	fcall	_PIN_MANAGER_Initialize
 11273                           
 11274                           ;mcc.c: 55: OSCILLATOR_Initialize();
 11275  00B4  211C  3180         	fcall	_OSCILLATOR_Initialize
 11276                           
 11277                           ;mcc.c: 56: WDT_Initialize();
 11278  00B6  2172  3180         	fcall	_WDT_Initialize
 11279                           
 11280                           ;mcc.c: 57: I2C1_AddressSet();
 11281  00B8  20F8  3180         	fcall	_I2C1_AddressSet
 11282                           
 11283                           ;mcc.c: 58: I2C1_Initialize();
 11284  00BA  210B               	fcall	_I2C1_Initialize
 11285                           
 11286                           ;mcc.c: 59: TMR2_Initialize();
 11287  00BB  3192  229D  3180   	fcall	_TMR2_Initialize
 11288                           
 11289                           ;mcc.c: 60: TMR0_Initialize();
 11290  00BE  2169               	fcall	_TMR0_Initialize
 11291                           
 11292                           ;mcc.c: 61: TMR3_Initialize();
 11293  00BF  3192  220C  3180   	fcall	_TMR3_Initialize
 11294                           
 11295                           ;mcc.c: 62: CLC1_Initialize();
 11296  00C2  20C9  3180         	fcall	_CLC1_Initialize
 11297                           
 11298                           ;mcc.c: 63: CLC2_Initialize();
 11299  00C4  20E0               	fcall	_CLC2_Initialize
 11300                           
 11301                           ;mcc.c: 64: CLC3_Initialize();
 11302  00C5  3192  228D         	fcall	_CLC3_Initialize
 11303                           
 11304                           ;mcc.c: 65: CLC4_Initialize();
 11305  00C7  3192  2A7D         	ljmp	l7594
 11306  00C9                     __end_of_SYSTEM_Initialize:
 11307  00C9                     __ptext16:	
 11308 ;; *************** function _CLC1_Initialize *****************
 11309 ;; Defined at:
 11310 ;;		line 60 in file "mcc_generated_files/clc1.c"
 11311 ;; Parameters:    Size  Location     Type
 11312 ;;		None
 11313 ;; Auto vars:     Size  Location     Type
 11314 ;;		None
 11315 ;; Return value:  Size  Location     Type
 11316 ;;                  1    wreg      void 
 11317 ;; Registers used:
 11318 ;;		wreg, status,2
 11319 ;; Tracked objects:
 11320 ;;		On entry : B1F/8
 11321 ;;		On exit  : B1F/1
 11322 ;;		Unchanged: B00/0
 11323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11328 ;;Total ram usage:        0 bytes
 11329 ;; Hardware stack levels used:    1
 11330 ;; Hardware stack levels required when called:    7
 11331 ;; This function calls:
 11332 ;;		Nothing
 11333 ;; This function is called by:
 11334 ;;		_SYSTEM_Initialize
 11335 ;; This function uses a non-reentrant model
 11336 ;;
 11337                           
 11338                           
 11339                           ;psect for function _CLC1_Initialize
 11340  00C9                     _CLC1_Initialize:
 11341                           
 11342                           ;clc1.c: 65: CLC1POL = 0x02;
 11343                           
 11344                           ;incstack = 0
 11345                           ; Regs used in _CLC1_Initialize: [wreg+status,2]
 11346  00C9  3002               	movlw	2
 11347  00CA  003E               	movlb	30	; select bank30
 11348  00CB  0091               	movwf	17	;volatile
 11349                           
 11350                           ;clc1.c: 67: CLC1SEL0 = 0x18;
 11351  00CC  3018               	movlw	24
 11352  00CD  0092               	movwf	18	;volatile
 11353                           
 11354                           ;clc1.c: 69: CLC1SEL1 = 0x02;
 11355  00CE  3002               	movlw	2
 11356  00CF  0093               	movwf	19	;volatile
 11357                           
 11358                           ;clc1.c: 71: CLC1SEL2 = 0x06;
 11359  00D0  3006               	movlw	6
 11360  00D1  0094               	movwf	20	;volatile
 11361                           
 11362                           ;clc1.c: 73: CLC1SEL3 = 0x02;
 11363  00D2  3002               	movlw	2
 11364  00D3  0095               	movwf	21	;volatile
 11365                           
 11366                           ;clc1.c: 75: CLC1GLS0 = 0x02;
 11367  00D4  0096               	movwf	22	;volatile
 11368                           
 11369                           ;clc1.c: 77: CLC1GLS1 = 0x14;
 11370  00D5  3014               	movlw	20
 11371  00D6  0097               	movwf	23	;volatile
 11372                           
 11373                           ;clc1.c: 79: CLC1GLS2 = 0x00;
 11374  00D7  0198               	clrf	24	;volatile
 11375                           
 11376                           ;clc1.c: 81: CLC1GLS3 = 0x00;
 11377  00D8  0199               	clrf	25	;volatile
 11378                           
 11379                           ;clc1.c: 83: CLC1CON = 0x9D;
 11380  00D9  309D               	movlw	157
 11381  00DA  0090               	movwf	16	;volatile
 11382                           
 11383                           ;clc1.c: 86: PIR3bits.CLC1IF = 0;
 11384  00DB  0020               	movlb	0	; select bank0
 11385  00DC  1013               	bcf	19,0	;volatile
 11386                           
 11387                           ;clc1.c: 88: PIE3bits.CLC1IE = 1;
 11388  00DD  0021               	movlb	1	; select bank1
 11389  00DE  1413               	bsf	19,0	;volatile
 11390  00DF  0008               	return
 11391  00E0                     __end_of_CLC1_Initialize:
 11392  00E0                     __ptext15:	
 11393 ;; *************** function _CLC2_Initialize *****************
 11394 ;; Defined at:
 11395 ;;		line 60 in file "mcc_generated_files/clc2.c"
 11396 ;; Parameters:    Size  Location     Type
 11397 ;;		None
 11398 ;; Auto vars:     Size  Location     Type
 11399 ;;		None
 11400 ;; Return value:  Size  Location     Type
 11401 ;;                  1    wreg      void 
 11402 ;; Registers used:
 11403 ;;		wreg, status,2
 11404 ;; Tracked objects:
 11405 ;;		On entry : B1F/1
 11406 ;;		On exit  : B1F/1
 11407 ;;		Unchanged: B00/0
 11408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11413 ;;Total ram usage:        0 bytes
 11414 ;; Hardware stack levels used:    1
 11415 ;; Hardware stack levels required when called:    7
 11416 ;; This function calls:
 11417 ;;		Nothing
 11418 ;; This function is called by:
 11419 ;;		_SYSTEM_Initialize
 11420 ;; This function uses a non-reentrant model
 11421 ;;
 11422                           
 11423                           
 11424                           ;psect for function _CLC2_Initialize
 11425  00E0                     _CLC2_Initialize:
 11426                           
 11427                           ;clc2.c: 65: CLC2POL = 0x02;
 11428                           
 11429                           ;incstack = 0
 11430                           ; Regs used in _CLC2_Initialize: [wreg+status,2]
 11431  00E0  3002               	movlw	2
 11432  00E1  003E               	movlb	30	; select bank30
 11433  00E2  009B               	movwf	27	;volatile
 11434                           
 11435                           ;clc2.c: 67: CLC2SEL0 = 0x18;
 11436  00E3  3018               	movlw	24
 11437  00E4  009C               	movwf	28	;volatile
 11438                           
 11439                           ;clc2.c: 69: CLC2SEL1 = 0x03;
 11440  00E5  3003               	movlw	3
 11441  00E6  009D               	movwf	29	;volatile
 11442                           
 11443                           ;clc2.c: 71: CLC2SEL2 = 0x07;
 11444  00E7  3007               	movlw	7
 11445  00E8  009E               	movwf	30	;volatile
 11446                           
 11447                           ;clc2.c: 73: CLC2SEL3 = 0x03;
 11448  00E9  3003               	movlw	3
 11449  00EA  009F               	movwf	31	;volatile
 11450                           
 11451                           ;clc2.c: 75: CLC2GLS0 = 0x02;
 11452  00EB  3002               	movlw	2
 11453  00EC  00A0               	movwf	32	;volatile
 11454                           
 11455                           ;clc2.c: 77: CLC2GLS1 = 0x14;
 11456  00ED  3014               	movlw	20
 11457  00EE  00A1               	movwf	33	;volatile
 11458                           
 11459                           ;clc2.c: 79: CLC2GLS2 = 0x00;
 11460  00EF  01A2               	clrf	34	;volatile
 11461                           
 11462                           ;clc2.c: 81: CLC2GLS3 = 0x00;
 11463  00F0  01A3               	clrf	35	;volatile
 11464                           
 11465                           ;clc2.c: 83: CLC2CON = 0x9D;
 11466  00F1  309D               	movlw	157
 11467  00F2  009A               	movwf	26	;volatile
 11468                           
 11469                           ;clc2.c: 86: PIR3bits.CLC2IF = 0;
 11470  00F3  0020               	movlb	0	; select bank0
 11471  00F4  1093               	bcf	19,1	;volatile
 11472                           
 11473                           ;clc2.c: 88: PIE3bits.CLC2IE = 1;
 11474  00F5  0021               	movlb	1	; select bank1
 11475  00F6  1493               	bsf	19,1	;volatile
 11476  00F7  0008               	return
 11477  00F8                     __end_of_CLC2_Initialize:
 11478  00F8                     __ptext12:	
 11479 ;; *************** function _I2C1_AddressSet *****************
 11480 ;; Defined at:
 11481 ;;		line 22 in file "i2c_register.c"
 11482 ;; Parameters:    Size  Location     Type
 11483 ;;		None
 11484 ;; Auto vars:     Size  Location     Type
 11485 ;;		None
 11486 ;; Return value:  Size  Location     Type
 11487 ;;                  1    wreg      void 
 11488 ;; Registers used:
 11489 ;;		wreg, status,2, status,0
 11490 ;; Tracked objects:
 11491 ;;		On entry : B1F/1
 11492 ;;		On exit  : B1F/0
 11493 ;;		Unchanged: B00/0
 11494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11499 ;;Total ram usage:        0 bytes
 11500 ;; Hardware stack levels used:    1
 11501 ;; Hardware stack levels required when called:    7
 11502 ;; This function calls:
 11503 ;;		Nothing
 11504 ;; This function is called by:
 11505 ;;		_SYSTEM_Initialize
 11506 ;; This function uses a non-reentrant model
 11507 ;;
 11508                           
 11509                           
 11510                           ;psect for function _I2C1_AddressSet
 11511  00F8                     _I2C1_AddressSet:
 11512                           
 11513                           ;i2c_register.c: 28: i2c_address = 0x00;
 11514                           
 11515                           ;incstack = 0
 11516                           ; Regs used in _I2C1_AddressSet: [wreg+status,2+status,0]
 11517  00F8  0020               	movlb	0	; select bank0
 11518  00F9  01CB               	clrf	_i2c_address	;volatile
 11519                           
 11520                           ;i2c_register.c: 30: if (!PORTAbits.RA0)
 11521  00FA  1C0C               	btfss	12,0	;volatile
 11522                           
 11523                           ;i2c_register.c: 31: i2c_address |= 0x01;
 11524  00FB  144B               	bsf	_i2c_address,0	;volatile
 11525                           
 11526                           ;i2c_register.c: 33: if (!PORTAbits.RA1)
 11527  00FC  1C8C               	btfss	12,1	;volatile
 11528                           
 11529                           ;i2c_register.c: 34: i2c_address |= 0x02;
 11530  00FD  14CB               	bsf	_i2c_address,1	;volatile
 11531                           
 11532                           ;i2c_register.c: 36: if (!PORTAbits.RA2)
 11533  00FE  1D0C               	btfss	12,2	;volatile
 11534                           
 11535                           ;i2c_register.c: 37: i2c_address |= 0x04;
 11536  00FF  154B               	bsf	_i2c_address,2	;volatile
 11537                           
 11538                           ;i2c_register.c: 39: if (!PORTAbits.RA3)
 11539  0100  1D8C               	btfss	12,3	;volatile
 11540                           
 11541                           ;i2c_register.c: 40: i2c_address |= 0x08;
 11542  0101  15CB               	bsf	_i2c_address,3	;volatile
 11543                           
 11544                           ;i2c_register.c: 42: if (!PORTAbits.RA4)
 11545  0102  1E0C               	btfss	12,4	;volatile
 11546                           
 11547                           ;i2c_register.c: 43: i2c_address |= 0x10;
 11548  0103  164B               	bsf	_i2c_address,4	;volatile
 11549                           
 11550                           ;i2c_register.c: 45: if (!PORTAbits.RA5)
 11551  0104  1E8C               	btfss	12,5	;volatile
 11552                           
 11553                           ;i2c_register.c: 46: i2c_address |= 0x20;
 11554  0105  16CB               	bsf	_i2c_address,5	;volatile
 11555                           
 11556                           ;i2c_register.c: 48: if (!PORTBbits.RB4)
 11557  0106  1E0D               	btfss	13,4	;volatile
 11558                           
 11559                           ;i2c_register.c: 49: i2c_address |= 0x40;
 11560  0107  174B               	bsf	_i2c_address,6	;volatile
 11561                           
 11562                           ;i2c_register.c: 51: i2c_address = (uint8_t) (i2c_address << 1);
 11563  0108  354B               	lslf	_i2c_address,w	;volatile
 11564  0109  00CB               	movwf	_i2c_address	;volatile
 11565  010A  0008               	return
 11566  010B                     __end_of_I2C1_AddressSet:
 11567  010B                     __ptext11:	
 11568 ;; *************** function _I2C1_Initialize *****************
 11569 ;; Defined at:
 11570 ;;		line 75 in file "mcc_generated_files/i2c1.c"
 11571 ;; Parameters:    Size  Location     Type
 11572 ;;		None
 11573 ;; Auto vars:     Size  Location     Type
 11574 ;;		None
 11575 ;; Return value:  Size  Location     Type
 11576 ;;                  1    wreg      void 
 11577 ;; Registers used:
 11578 ;;		wreg, status,2
 11579 ;; Tracked objects:
 11580 ;;		On entry : B1F/0
 11581 ;;		On exit  : B1F/1
 11582 ;;		Unchanged: B00/0
 11583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11588 ;;Total ram usage:        0 bytes
 11589 ;; Hardware stack levels used:    1
 11590 ;; Hardware stack levels required when called:    7
 11591 ;; This function calls:
 11592 ;;		Nothing
 11593 ;; This function is called by:
 11594 ;;		_SYSTEM_Initialize
 11595 ;; This function uses a non-reentrant model
 11596 ;;
 11597                           
 11598                           
 11599                           ;psect for function _I2C1_Initialize
 11600  010B                     _I2C1_Initialize:
 11601                           
 11602                           ;i2c1.c: 78: SSP1STAT = 0x00;
 11603                           
 11604                           ;incstack = 0
 11605                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 11606  010B  0024               	movlb	4	; select bank4
 11607  010C  0194               	clrf	20	;volatile
 11608                           
 11609                           ;i2c1.c: 80: SSP1CON1 = 0x26;
 11610  010D  3026               	movlw	38
 11611  010E  0095               	movwf	21	;volatile
 11612                           
 11613                           ;i2c1.c: 82: SSP1CON2 = 0x00;
 11614  010F  0196               	clrf	22	;volatile
 11615                           
 11616                           ;i2c1.c: 84: SSP1CON3 = 0x00;
 11617  0110  0197               	clrf	23	;volatile
 11618                           
 11619                           ;i2c1.c: 86: SSP1MSK = (0x7F << 1);
 11620  0111  30FE               	movlw	254
 11621  0112  0093               	movwf	19	;volatile
 11622                           
 11623                           ;i2c1.c: 88: SSP1ADD = i2c_address;
 11624  0113  0020               	movlb	0	; select bank0
 11625  0114  084B               	movf	_i2c_address,w	;volatile
 11626  0115  0024               	movlb	4	; select bank4
 11627  0116  0092               	movwf	18	;volatile
 11628                           
 11629                           ;i2c1.c: 91: PIR1bits.SSP1IF = 0;
 11630  0117  0020               	movlb	0	; select bank0
 11631  0118  1191               	bcf	17,3	;volatile
 11632                           
 11633                           ;i2c1.c: 93: PIE1bits.SSP1IE = 1;
 11634  0119  0021               	movlb	1	; select bank1
 11635  011A  1591               	bsf	17,3	;volatile
 11636  011B  0008               	return
 11637  011C                     __end_of_I2C1_Initialize:
 11638  011C                     __ptext10:	
 11639 ;; *************** function _OSCILLATOR_Initialize *****************
 11640 ;; Defined at:
 11641 ;;		line 68 in file "mcc_generated_files/mcc.c"
 11642 ;; Parameters:    Size  Location     Type
 11643 ;;		None
 11644 ;; Auto vars:     Size  Location     Type
 11645 ;;		None
 11646 ;; Return value:  Size  Location     Type
 11647 ;;                  1    wreg      void 
 11648 ;; Registers used:
 11649 ;;		wreg, status,2
 11650 ;; Tracked objects:
 11651 ;;		On entry : B1F/1D
 11652 ;;		On exit  : B1F/12
 11653 ;;		Unchanged: B00/0
 11654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11659 ;;Total ram usage:        0 bytes
 11660 ;; Hardware stack levels used:    1
 11661 ;; Hardware stack levels required when called:    7
 11662 ;; This function calls:
 11663 ;;		Nothing
 11664 ;; This function is called by:
 11665 ;;		_SYSTEM_Initialize
 11666 ;; This function uses a non-reentrant model
 11667 ;;
 11668                           
 11669                           
 11670                           ;psect for function _OSCILLATOR_Initialize
 11671  011C                     _OSCILLATOR_Initialize:
 11672                           
 11673                           ;mcc.c: 71: OSCCON1 = 0x60;
 11674                           
 11675                           ;incstack = 0
 11676                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11677  011C  3060               	movlw	96
 11678  011D  0032               	movlb	18	; select bank18
 11679  011E  0099               	movwf	25	;volatile
 11680                           
 11681                           ;mcc.c: 73: OSCCON3 = 0x00;
 11682  011F  019B               	clrf	27	;volatile
 11683                           
 11684                           ;mcc.c: 75: OSCEN = 0x00;
 11685  0120  019D               	clrf	29	;volatile
 11686                           
 11687                           ;mcc.c: 77: OSCFRQ = 0x07;
 11688  0121  3007               	movlw	7
 11689  0122  009F               	movwf	31	;volatile
 11690                           
 11691                           ;mcc.c: 79: OSCTUNE = 0x00;
 11692  0123  019E               	clrf	30	;volatile
 11693  0124  0008               	return
 11694  0125                     __end_of_OSCILLATOR_Initialize:
 11695  0125                     __ptext9:	
 11696 ;; *************** function _PIN_MANAGER_Initialize *****************
 11697 ;; Defined at:
 11698 ;;		line 56 in file "mcc_generated_files/pin_manager.c"
 11699 ;; Parameters:    Size  Location     Type
 11700 ;;		None
 11701 ;; Auto vars:     Size  Location     Type
 11702 ;;		None
 11703 ;; Return value:  Size  Location     Type
 11704 ;;                  1    wreg      void 
 11705 ;; Registers used:
 11706 ;;		wreg, status,2, status,0
 11707 ;; Tracked objects:
 11708 ;;		On entry : B1F/12
 11709 ;;		On exit  : B1F/1D
 11710 ;;		Unchanged: B00/0
 11711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11716 ;;Total ram usage:        0 bytes
 11717 ;; Hardware stack levels used:    1
 11718 ;; Hardware stack levels required when called:    7
 11719 ;; This function calls:
 11720 ;;		Nothing
 11721 ;; This function is called by:
 11722 ;;		_SYSTEM_Initialize
 11723 ;; This function uses a non-reentrant model
 11724 ;;
 11725                           
 11726                           
 11727                           ;psect for function _PIN_MANAGER_Initialize
 11728  0125                     _PIN_MANAGER_Initialize:
 11729                           
 11730                           ;pin_manager.c: 61: LATA = 0x00;
 11731                           
 11732                           ;incstack = 0
 11733                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 11734  0125  0022               	movlb	2	; select bank2
 11735  0126  018C               	clrf	12	;volatile
 11736                           
 11737                           ;pin_manager.c: 62: LATB = 0x00;
 11738  0127  018D               	clrf	13	;volatile
 11739                           
 11740                           ;pin_manager.c: 63: LATC = 0x00;
 11741  0128  018E               	clrf	14	;volatile
 11742                           
 11743                           ;pin_manager.c: 68: TRISA = 0x37;
 11744  0129  3037               	movlw	55
 11745  012A  0021               	movlb	1	; select bank1
 11746  012B  008C               	movwf	12	;volatile
 11747                           
 11748                           ;pin_manager.c: 69: TRISB = 0xD0;
 11749  012C  30D0               	movlw	208
 11750  012D  008D               	movwf	13	;volatile
 11751                           
 11752                           ;pin_manager.c: 70: TRISC = 0xFF;
 11753  012E  30FF               	movlw	255
 11754  012F  008E               	movwf	14	;volatile
 11755                           
 11756                           ;pin_manager.c: 75: ANSELC = 0x00;
 11757  0130  0023               	movlb	3	; select bank3
 11758  0131  018E               	clrf	14	;volatile
 11759                           
 11760                           ;pin_manager.c: 76: ANSELB = 0x20;
 11761  0132  3020               	movlw	32
 11762  0133  008D               	movwf	13	;volatile
 11763                           
 11764                           ;pin_manager.c: 77: ANSELA = 0x00;
 11765  0134  018C               	clrf	12	;volatile
 11766                           
 11767                           ;pin_manager.c: 82: WPUB = 0x10;
 11768  0135  3010               	movlw	16
 11769  0136  0024               	movlb	4	; select bank4
 11770  0137  008D               	movwf	13	;volatile
 11771                           
 11772                           ;pin_manager.c: 83: WPUA = 0x3F;
 11773  0138  303F               	movlw	63
 11774  0139  008C               	movwf	12	;volatile
 11775                           
 11776                           ;pin_manager.c: 84: WPUC = 0x00;
 11777  013A  018E               	clrf	14	;volatile
 11778                           
 11779                           ;pin_manager.c: 89: ODCONA = 0x00;
 11780  013B  0025               	movlb	5	; select bank5
 11781  013C  018C               	clrf	12	;volatile
 11782                           
 11783                           ;pin_manager.c: 90: ODCONB = 0x20;
 11784  013D  3020               	movlw	32
 11785  013E  008D               	movwf	13	;volatile
 11786                           
 11787                           ;pin_manager.c: 91: ODCONC = 0x00;
 11788  013F  018E               	clrf	14	;volatile
 11789                           
 11790                           ;pin_manager.c: 93: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 11791  0140  003C               	movlb	28	; select bank28
 11792  0141  0820               	movf	32,w	;volatile
 11793  0142  39E0               	andlw	-32
 11794  0143  380E               	iorlw	14
 11795  0144  00A0               	movwf	32	;volatile
 11796                           
 11797                           ;pin_manager.c: 94: SSP1DATPPSbits.SSP1DATPPS = 0x0F;
 11798  0145  0821               	movf	33,w	;volatile
 11799  0146  39E0               	andlw	-32
 11800  0147  380F               	iorlw	15
 11801  0148  00A1               	movwf	33	;volatile
 11802                           
 11803                           ;pin_manager.c: 95: CLCIN2PPSbits.CLCIN2PPS = 0x10;
 11804  0149  082A               	movf	42,w	;volatile
 11805  014A  39E0               	andlw	-32
 11806  014B  3810               	iorlw	16
 11807  014C  00AA               	movwf	42	;volatile
 11808                           
 11809                           ;pin_manager.c: 96: CLCIN3PPSbits.CLCIN3PPS = 0x11;
 11810  014D  082B               	movf	43,w	;volatile
 11811  014E  39E0               	andlw	-32
 11812  014F  3811               	iorlw	17
 11813  0150  00AB               	movwf	43	;volatile
 11814                           
 11815                           ;pin_manager.c: 97: RB7PPSbits.RB7PPS = 0x19;
 11816  0151  003D               	movlb	29	; select bank29
 11817  0152  081F               	movf	31,w	;volatile
 11818  0153  39E0               	andlw	-32
 11819  0154  3819               	iorlw	25
 11820  0155  009F               	movwf	31	;volatile
 11821                           
 11822                           ;pin_manager.c: 98: RB6PPSbits.RB6PPS = 0x18;
 11823  0156  081E               	movf	30,w	;volatile
 11824  0157  39E0               	andlw	-32
 11825  0158  3818               	iorlw	24
 11826  0159  009E               	movwf	30	;volatile
 11827  015A  0008               	return
 11828  015B                     __end_of_PIN_MANAGER_Initialize:
 11829  015B                     __ptext8:	
 11830 ;; *************** function _PMD_Initialize *****************
 11831 ;; Defined at:
 11832 ;;		line 88 in file "mcc_generated_files/mcc.c"
 11833 ;; Parameters:    Size  Location     Type
 11834 ;;		None
 11835 ;; Auto vars:     Size  Location     Type
 11836 ;;		None
 11837 ;; Return value:  Size  Location     Type
 11838 ;;                  1    wreg      void 
 11839 ;; Registers used:
 11840 ;;		wreg
 11841 ;; Tracked objects:
 11842 ;;		On entry : B1F/0
 11843 ;;		On exit  : B1F/12
 11844 ;;		Unchanged: B00/0
 11845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11850 ;;Total ram usage:        0 bytes
 11851 ;; Hardware stack levels used:    1
 11852 ;; Hardware stack levels required when called:    7
 11853 ;; This function calls:
 11854 ;;		Nothing
 11855 ;; This function is called by:
 11856 ;;		_SYSTEM_Initialize
 11857 ;; This function uses a non-reentrant model
 11858 ;;
 11859                           
 11860                           
 11861                           ;psect for function _PMD_Initialize
 11862  015B                     _PMD_Initialize:
 11863                           
 11864                           ;mcc.c: 91: PMD0 = 0x40;
 11865                           
 11866                           ;incstack = 0
 11867                           ; Regs used in _PMD_Initialize: [wreg]
 11868  015B  3040               	movlw	64
 11869  015C  0032               	movlb	18	; select bank18
 11870  015D  0091               	movwf	17	;volatile
 11871                           
 11872                           ;mcc.c: 93: PMD1 = 0xF2;
 11873  015E  30F2               	movlw	242
 11874  015F  0092               	movwf	18	;volatile
 11875                           
 11876                           ;mcc.c: 95: PMD2 = 0x66;
 11877  0160  3066               	movlw	102
 11878  0161  0093               	movwf	19	;volatile
 11879                           
 11880                           ;mcc.c: 97: PMD3 = 0xE0;
 11881  0162  30E0               	movlw	224
 11882  0163  0094               	movwf	20	;volatile
 11883                           
 11884                           ;mcc.c: 99: PMD4 = 0x20;
 11885  0164  3020               	movlw	32
 11886  0165  0095               	movwf	21	;volatile
 11887                           
 11888                           ;mcc.c: 101: PMD5 = 0x01;
 11889  0166  3001               	movlw	1
 11890  0167  0096               	movwf	22	;volatile
 11891  0168  0008               	return
 11892  0169                     __end_of_PMD_Initialize:
 11893  0169                     __ptext7:	
 11894 ;; *************** function _TMR0_Initialize *****************
 11895 ;; Defined at:
 11896 ;;		line 60 in file "mcc_generated_files/tmr0.c"
 11897 ;; Parameters:    Size  Location     Type
 11898 ;;		None
 11899 ;; Auto vars:     Size  Location     Type
 11900 ;;		None
 11901 ;; Return value:  Size  Location     Type
 11902 ;;                  1    wreg      void 
 11903 ;; Registers used:
 11904 ;;		wreg, status,2
 11905 ;; Tracked objects:
 11906 ;;		On entry : B1F/0
 11907 ;;		On exit  : B1F/0
 11908 ;;		Unchanged: B00/0
 11909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11910 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11913 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11914 ;;Total ram usage:        0 bytes
 11915 ;; Hardware stack levels used:    1
 11916 ;; Hardware stack levels required when called:    7
 11917 ;; This function calls:
 11918 ;;		Nothing
 11919 ;; This function is called by:
 11920 ;;		_SYSTEM_Initialize
 11921 ;; This function uses a non-reentrant model
 11922 ;;
 11923                           
 11924                           
 11925                           ;psect for function _TMR0_Initialize
 11926  0169                     _TMR0_Initialize:
 11927                           
 11928                           ;tmr0.c: 65: T0CON1 = 0x48;
 11929                           
 11930                           ;incstack = 0
 11931                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
 11932  0169  3048               	movlw	72
 11933  016A  0098               	movwf	24	;volatile
 11934                           
 11935                           ;tmr0.c: 68: TMR0H = 0x01;
 11936  016B  3001               	movlw	1
 11937  016C  0096               	movwf	22	;volatile
 11938                           
 11939                           ;tmr0.c: 71: TMR0L = 0x00;
 11940  016D  0195               	clrf	21	;volatile
 11941                           
 11942                           ;tmr0.c: 74: PIR0bits.TMR0IF = 0;
 11943  016E  1290               	bcf	16,5	;volatile
 11944                           
 11945                           ;tmr0.c: 77: T0CON0 = 0x85;
 11946  016F  3085               	movlw	133
 11947  0170  0097               	movwf	23	;volatile
 11948  0171  0008               	return
 11949  0172                     __end_of_TMR0_Initialize:
 11950  0172                     __ptext4:	
 11951 ;; *************** function _WDT_Initialize *****************
 11952 ;; Defined at:
 11953 ;;		line 82 in file "mcc_generated_files/mcc.c"
 11954 ;; Parameters:    Size  Location     Type
 11955 ;;		None
 11956 ;; Auto vars:     Size  Location     Type
 11957 ;;		None
 11958 ;; Return value:  Size  Location     Type
 11959 ;;                  1    wreg      void 
 11960 ;; Registers used:
 11961 ;;		wreg
 11962 ;; Tracked objects:
 11963 ;;		On entry : B1F/12
 11964 ;;		On exit  : B1F/1
 11965 ;;		Unchanged: B00/0
 11966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11971 ;;Total ram usage:        0 bytes
 11972 ;; Hardware stack levels used:    1
 11973 ;; Hardware stack levels required when called:    7
 11974 ;; This function calls:
 11975 ;;		Nothing
 11976 ;; This function is called by:
 11977 ;;		_SYSTEM_Initialize
 11978 ;; This function uses a non-reentrant model
 11979 ;;
 11980                           
 11981                           
 11982                           ;psect for function _WDT_Initialize
 11983  0172                     _WDT_Initialize:
 11984                           
 11985                           ;mcc.c: 85: WDTCON = 0x16;
 11986                           
 11987                           ;incstack = 0
 11988                           ; Regs used in _WDT_Initialize: [wreg]
 11989  0172  3016               	movlw	22
 11990  0173  0021               	movlb	1	; select bank1
 11991  0174  0097               	movwf	23	;volatile
 11992  0175  0008               	return
 11993  0176                     __end_of_WDT_Initialize:
 11994                           
 11995                           	psect	bssBANK0
 11996  0020                     __pbssBANK0:
 11997  0020                     _ISTEP:
 11998  0020                     	ds	4
 11999  0024                     _CMIN:
 12000  0024                     	ds	4
 12001  0028                     _CMAX:
 12002  0028                     	ds	4
 12003  002C                     _CVAL:
 12004  002C                     	ds	4
 12005  0030                     _enc_status:
 12006  0030                     	ds	1
 12007  0031                     _temp_blu:
 12008  0031                     	ds	1
 12009  0032                     _temp_green:
 12010  0032                     	ds	1
 12011  0033                     _temp_red:
 12012  0033                     	ds	1
 12013  0034                     _temp_gp3:
 12014  0034                     	ds	1
 12015  0035                     _temp_gp2:
 12016  0035                     	ds	1
 12017  0036                     _temp_gp1:
 12018  0036                     	ds	1
 12019  0037                     _S_RELATIVE:
 12020  0037                     	ds	1
 12021  0038                     _C_WRAPE:
 12022  0038                     	ds	1
 12023  0039                     _C_ETYPE:
 12024  0039                     	ds	1
 12025  003A                     _GAMMABLED:
 12026  003A                     	ds	1
 12027  003B                     _GAMMAGLED:
 12028  003B                     	ds	1
 12029  003C                     _GAMMAGP3_RLED:
 12030  003C                     	ds	1
 12031  003D                     _GAMMAGP2:
 12032  003D                     	ds	1
 12033  003E                     _GAMMAGP1:
 12034  003E                     	ds	1
 12035  003F                     _FADEGP:
 12036  003F                     	ds	1
 12037  0040                     _GP3REG:
 12038  0040                     	ds	1
 12039  0041                     _GP2REG:
 12040  0041                     	ds	1
 12041  0042                     _GP1REG:
 12042  0042                     	ds	1
 12043  0043                     _BLED:
 12044  0043                     	ds	1
 12045  0044                     _GLED:
 12046  0044                     	ds	1
 12047  0045                     _RLED:
 12048  0045                     	ds	1
 12049  0046                     _GP3CONF:
 12050  0046                     	ds	1
 12051  0047                     _GP2CONF:
 12052  0047                     	ds	1
 12053  0048                     _GP1CONF:
 12054  0048                     	ds	1
 12055  0049                     _GCONF:
 12056  0049                     	ds	1
 12057  004A                     _ESTATUS:
 12058  004A                     	ds	1
 12059  004B                     _i2c_address:
 12060  004B                     	ds	1
 12061                           
 12062                           	psect	bssBANK1
 12063  00A0                     __pbssBANK1:
 12064  00A0                     _double_push_delay:
 12065  00A0                     	ds	2
 12066  00A2                     _double_push_cnt:
 12067  00A2                     	ds	2
 12068  00A4                     _DoublePush:
 12069  00A4                     	ds	2
 12070  00A6                     _DEBOUNCE:
 12071  00A6                     	ds	2
 12072  00A8                     _timer3ReloadVal:
 12073  00A8                     	ds	2
 12074  00AA                     EncoderSwitch_GetValueFiltered@pb_status:
 12075  00AA                     	ds	1
 12076  00AB                     _fade_cnt:
 12077  00AB                     	ds	1
 12078  00AC                     _pb_cnt:
 12079  00AC                     	ds	1
 12080  00AD                     _pb_fsm:
 12081  00AD                     	ds	1
 12082  00AE                     _gp_fade_cnt:
 12083  00AE                     	ds	1
 12084  00AF                     _gp3_fsm:
 12085  00AF                     	ds	1
 12086  00B0                     _gp2_fsm:
 12087  00B0                     	ds	1
 12088  00B1                     _gp1_fsm:
 12089  00B1                     	ds	1
 12090  00B2                     _gp_timer:
 12091  00B2                     	ds	1
 12092  00B3                     I2C1_StatusCallback@slaveWriteType:
 12093  00B3                     	ds	1
 12094  00B4                     _int2clear:
 12095  00B4                     	ds	1
 12096  00B5                     _intclear:
 12097  00B5                     	ds	1
 12098  00B6                     _EncoderReg:
 12099  00B6                     	ds	1
 12100  00B7                     _X2_n:
 12101  00B7                     	ds	1
 12102  00B8                     _X2_p:
 12103  00B8                     	ds	1
 12104  00B9                     _X1_n:
 12105  00B9                     	ds	1
 12106  00BA                     _X1_p:
 12107  00BA                     	ds	1
 12108  00BB                     _S_CKSRC:
 12109  00BB                     	ds	1
 12110  00BC                     _C_DTYPE:
 12111  00BC                     	ds	1
 12112  00BD                     _C_DIRE:
 12113  00BD                     	ds	1
 12114  00BE                     _C_IPUD:
 12115  00BE                     	ds	1
 12116  00BF                     _C_RMOD:
 12117  00BF                     	ds	1
 12118  00C0                     _C_MBANK:
 12119  00C0                     	ds	1
 12120  00C1                     _C_RESET:
 12121  00C1                     	ds	1
 12122  00C2                     _GCONF2:
 12123  00C2                     	ds	1
 12124  00C3                     _FADERGB:
 12125  00C3                     	ds	1
 12126  00C4                     _DPPERIOD:
 12127  00C4                     	ds	1
 12128  00C5                     _ANTBOUNC:
 12129  00C5                     	ds	1
 12130  00C6                     _FSTATUS:
 12131  00C6                     	ds	1
 12132  00C7                     _I2STATUS:
 12133  00C7                     	ds	1
 12134  00C8                     _fsm_tmr:
 12135  00C8                     	ds	1
 12136  00C9                     _INTCONF:
 12137  00C9                     	ds	1
 12138                           
 12139                           	psect	dataBANK1
 12140  00DA                     __pdataBANK1:
 12141  00DA                     _I2C1_slaveWriteData:
 12142  00DA                     	ds	1
 12143                           
 12144                           	psect	clrtext
 12145  12C5                     clear_ram0:	
 12146                           ;	Called with FSR0 containing the base address, and
 12147                           ;	WREG with the size to clear
 12148                           
 12149  12C5  0064               	clrwdt	;clear the watchdog before getting into this loop
 12150  12C6                     clrloop0:
 12151  12C6  0180               	clrf	0	;clear RAM location pointed to by FSR
 12152  12C7  3101               	addfsr 0,1
 12153  12C8  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 12154  12C9  2AC6               	goto	clrloop0	;have we reached the end yet?
 12155  12CA  3400               	retlw	0	;all done for this memory range, return
 12156                           
 12157                           	psect	cstackBANK1
 12158  00CA                     __pcstackBANK1:
 12159  00CA                     ??_PMD_Initialize:
 12160  00CA                     ??_PIN_MANAGER_Initialize:	
 12161                           ; 1 bytes @ 0x0
 12162                           
 12163  00CA                     ??_OSCILLATOR_Initialize:	
 12164                           ; 1 bytes @ 0x0
 12165                           
 12166  00CA                     ??_WDT_Initialize:	
 12167                           ; 1 bytes @ 0x0
 12168                           
 12169  00CA                     ??_I2C1_AddressSet:	
 12170                           ; 1 bytes @ 0x0
 12171                           
 12172  00CA                     ??_I2C1_Initialize:	
 12173                           ; 1 bytes @ 0x0
 12174                           
 12175  00CA                     ??_TMR2_Initialize:	
 12176                           ; 1 bytes @ 0x0
 12177                           
 12178  00CA                     ??_TMR0_Initialize:	
 12179                           ; 1 bytes @ 0x0
 12180                           
 12181  00CA                     ??_TMR3_Initialize:	
 12182                           ; 1 bytes @ 0x0
 12183                           
 12184  00CA                     ??_CLC1_Initialize:	
 12185                           ; 1 bytes @ 0x0
 12186                           
 12187  00CA                     ??_CLC2_Initialize:	
 12188                           ; 1 bytes @ 0x0
 12189                           
 12190  00CA                     ??_CLC3_Initialize:	
 12191                           ; 1 bytes @ 0x0
 12192                           
 12193  00CA                     ??_CLC4_Initialize:	
 12194                           ; 1 bytes @ 0x0
 12195                           
 12196  00CA                     ??_DataInitSet:	
 12197                           ; 1 bytes @ 0x0
 12198                           
 12199  00CA                     ??_SYSTEM_Initialize:	
 12200                           ; 1 bytes @ 0x0
 12201                           
 12202  00CA                     ??_ADC_Initialize:	
 12203                           ; 1 bytes @ 0x0
 12204                           
 12205  00CA                     ??_TMR3_StartTimer:	
 12206                           ; 1 bytes @ 0x0
 12207                           
 12208  00CA                     ??_TMR0_StartTimer:	
 12209                           ; 1 bytes @ 0x0
 12210                           
 12211  00CA                     ??_SetInterrupt:	
 12212                           ; 1 bytes @ 0x0
 12213                           
 12214  00CA                     ??_ClearInterrupt:	
 12215                           ; 1 bytes @ 0x0
 12216                           
 12217  00CA                     ??_EncoderStatusUpdate:	
 12218                           ; 1 bytes @ 0x0
 12219                           
 12220  00CA                     ??_FadeProcessSet:	
 12221                           ; 1 bytes @ 0x0
 12222                           
 12223  00CA                     ??_EncoderSwitch_GetValue:	
 12224                           ; 1 bytes @ 0x0
 12225                           
 12226  00CA                     ??_EncoderSwitch_GetValueFiltered:	
 12227                           ; 1 bytes @ 0x0
 12228                           
 12229  00CA                     ?_ADC_GetConversion:	
 12230                           ; 1 bytes @ 0x0
 12231                           
 12232  00CA                     ?___wmul:	
 12233                           ; 2 bytes @ 0x0
 12234                           
 12235  00CA                     EncoderStatusUpdate@stat:	
 12236                           ; 2 bytes @ 0x0
 12237                           
 12238  00CA                     FadeProcessSet@stat:	
 12239                           ; 1 bytes @ 0x0
 12240                           
 12241  00CA                     ___wmul@multiplier:	
 12242                           ; 1 bytes @ 0x0
 12243                           
 12244                           
 12245                           ; 2 bytes @ 0x0
 12246  00CA                     	ds	1
 12247  00CB                     ??_Int2StatusUpdate:
 12248  00CB                     ??_Encoder_PushButton_FSM:	
 12249                           ; 1 bytes @ 0x1
 12250                           
 12251  00CB                     Int2StatusUpdate@stat:	
 12252                           ; 1 bytes @ 0x1
 12253                           
 12254                           
 12255                           ; 1 bytes @ 0x1
 12256  00CB                     	ds	1
 12257  00CC                     ??_ADC_GetConversion:
 12258  00CC                     ??_FadeProcessClear:	
 12259                           ; 1 bytes @ 0x2
 12260                           
 12261  00CC                     FadeProcessClear@stat:	
 12262                           ; 1 bytes @ 0x2
 12263                           
 12264  00CC                     ___wmul@multiplicand:	
 12265                           ; 1 bytes @ 0x2
 12266                           
 12267                           
 12268                           ; 2 bytes @ 0x2
 12269  00CC                     	ds	1
 12270  00CD                     ADC_GetConversion@channel:
 12271                           
 12272                           ; 1 bytes @ 0x3
 12273  00CD                     	ds	1
 12274  00CE                     ??_GP1_FSM:
 12275  00CE                     ??_GP2_FSM:	
 12276                           ; 1 bytes @ 0x4
 12277                           
 12278  00CE                     ??_GP3_FSM:	
 12279                           ; 1 bytes @ 0x4
 12280                           
 12281  00CE                     ??___wmul:	
 12282                           ; 1 bytes @ 0x4
 12283                           
 12284  00CE                     ___wmul@product:	
 12285                           ; 1 bytes @ 0x4
 12286                           
 12287                           
 12288                           ; 2 bytes @ 0x4
 12289  00CE                     	ds	2
 12290  00D0                     ??_PWM_GP1:
 12291  00D0                     ??_PWM_GP2:	
 12292                           ; 1 bytes @ 0x6
 12293                           
 12294  00D0                     ??_PWM_GP3_RLED:	
 12295                           ; 1 bytes @ 0x6
 12296                           
 12297  00D0                     ??_PWM_GLED:	
 12298                           ; 1 bytes @ 0x6
 12299                           
 12300  00D0                     ??_PWM_BLED:	
 12301                           ; 1 bytes @ 0x6
 12302                           
 12303                           
 12304                           ; 1 bytes @ 0x6
 12305  00D0                     	ds	6
 12306  00D6                     PWM_GP2@duty:
 12307  00D6                     PWM_GP3_RLED@duty:	
 12308                           ; 1 bytes @ 0xC
 12309                           
 12310  00D6                     PWM_GLED@duty:	
 12311                           ; 1 bytes @ 0xC
 12312                           
 12313  00D6                     PWM_BLED@duty:	
 12314                           ; 1 bytes @ 0xC
 12315                           
 12316                           
 12317                           ; 1 bytes @ 0xC
 12318  00D6                     	ds	1
 12319  00D7                     ??_Encoder_FSM:
 12320  00D7                     ??_FADE_GP2:	
 12321                           ; 1 bytes @ 0xD
 12322                           
 12323  00D7                     ??_FADE_GP3:	
 12324                           ; 1 bytes @ 0xD
 12325                           
 12326  00D7                     ??_FADE_LEDS:	
 12327                           ; 1 bytes @ 0xD
 12328                           
 12329                           
 12330                           ; 1 bytes @ 0xD
 12331  00D7                     	ds	1
 12332  00D8                     PWM_GP1@duty:
 12333                           
 12334                           ; 1 bytes @ 0xE
 12335  00D8                     	ds	1
 12336  00D9                     ??_GP_Ports_FSM:
 12337  00D9                     ??_FADE_GP1:	
 12338                           ; 1 bytes @ 0xF
 12339                           
 12340                           
 12341                           ; 1 bytes @ 0xF
 12342  00D9                     	ds	1
 12343  00DA                     ??_main:
 12344                           
 12345                           	psect	cstackCOMMON
 12346  0070                     __pcstackCOMMON:	
 12347                           ; 1 bytes @ 0x10
 12348                           
 12349  0070                     ?___flge:
 12350  0070                     ?_PMD_Initialize:	
 12351                           ; 1 bit 
 12352                           
 12353  0070                     ?_PIN_MANAGER_Initialize:	
 12354                           ; 1 bytes @ 0x0
 12355                           
 12356  0070                     ?_OSCILLATOR_Initialize:	
 12357                           ; 1 bytes @ 0x0
 12358                           
 12359  0070                     ?_WDT_Initialize:	
 12360                           ; 1 bytes @ 0x0
 12361                           
 12362  0070                     ?_I2C1_AddressSet:	
 12363                           ; 1 bytes @ 0x0
 12364                           
 12365  0070                     ?_I2C1_Initialize:	
 12366                           ; 1 bytes @ 0x0
 12367                           
 12368  0070                     ?_TMR2_Initialize:	
 12369                           ; 1 bytes @ 0x0
 12370                           
 12371  0070                     ?_TMR0_Initialize:	
 12372                           ; 1 bytes @ 0x0
 12373                           
 12374  0070                     ?_TMR3_Initialize:	
 12375                           ; 1 bytes @ 0x0
 12376                           
 12377  0070                     ?_CLC1_Initialize:	
 12378                           ; 1 bytes @ 0x0
 12379                           
 12380  0070                     ?_CLC2_Initialize:	
 12381                           ; 1 bytes @ 0x0
 12382                           
 12383  0070                     ?_CLC3_Initialize:	
 12384                           ; 1 bytes @ 0x0
 12385                           
 12386  0070                     ?_CLC4_Initialize:	
 12387                           ; 1 bytes @ 0x0
 12388                           
 12389  0070                     ?_CLC2_ISR:	
 12390                           ; 1 bytes @ 0x0
 12391                           
 12392  0070                     ?_CLC1_ISR:	
 12393                           ; 1 bytes @ 0x0
 12394                           
 12395  0070                     ?_I2C1_ISR:	
 12396                           ; 1 bytes @ 0x0
 12397                           
 12398  0070                     ?_TMR3_ISR:	
 12399                           ; 1 bytes @ 0x0
 12400                           
 12401  0070                     ?_I2C1_StatusCallback:	
 12402                           ; 1 bytes @ 0x0
 12403                           
 12404  0070                     ?_TimerInt:	
 12405                           ; 1 bytes @ 0x0
 12406                           
 12407  0070                     ??_TimerInt:	
 12408                           ; 1 bytes @ 0x0
 12409                           
 12410  0070                     ?_Encoder_AB_Interrupt:	
 12411                           ; 1 bytes @ 0x0
 12412                           
 12413  0070                     ?_DataInitSet:	
 12414                           ; 1 bytes @ 0x0
 12415                           
 12416  0070                     ?_Encoder_FSM:	
 12417                           ; 1 bytes @ 0x0
 12418                           
 12419  0070                     ?_GP_Ports_FSM:	
 12420                           ; 1 bytes @ 0x0
 12421                           
 12422  0070                     ?_RegisterRead:	
 12423                           ; 1 bytes @ 0x0
 12424                           
 12425  0070                     ?_FirstConfig:	
 12426                           ; 1 bytes @ 0x0
 12427                           
 12428  0070                     ??_FirstConfig:	
 12429                           ; 1 bytes @ 0x0
 12430                           
 12431  0070                     ?_Config_GP1:	
 12432                           ; 1 bytes @ 0x0
 12433                           
 12434  0070                     ?_Config_GP2:	
 12435                           ; 1 bytes @ 0x0
 12436                           
 12437  0070                     ?_Config_GP3:	
 12438                           ; 1 bytes @ 0x0
 12439                           
 12440  0070                     ?_UpdateOut_GP1:	
 12441                           ; 1 bytes @ 0x0
 12442                           
 12443  0070                     ??_UpdateOut_GP1:	
 12444                           ; 1 bytes @ 0x0
 12445                           
 12446  0070                     ?_UpdateOut_GP2:	
 12447                           ; 1 bytes @ 0x0
 12448                           
 12449  0070                     ??_UpdateOut_GP2:	
 12450                           ; 1 bytes @ 0x0
 12451                           
 12452  0070                     ?_UpdateOut_GP3:	
 12453                           ; 1 bytes @ 0x0
 12454                           
 12455  0070                     ??_UpdateOut_GP3:	
 12456                           ; 1 bytes @ 0x0
 12457                           
 12458  0070                     ?_SecondConfig:	
 12459                           ; 1 bytes @ 0x0
 12460                           
 12461  0070                     ??_SecondConfig:	
 12462                           ; 1 bytes @ 0x0
 12463                           
 12464  0070                     ?_eeprom_write:	
 12465                           ; 1 bytes @ 0x0
 12466                           
 12467  0070                     ?_eeprom_read:	
 12468                           ; 1 bytes @ 0x0
 12469                           
 12470  0070                     ??_eeprom_read:	
 12471                           ; 1 bytes @ 0x0
 12472                           
 12473  0070                     ?_RGB_EncoderMode:	
 12474                           ; 1 bytes @ 0x0
 12475                           
 12476  0070                     ??_RGB_EncoderMode:	
 12477                           ; 1 bytes @ 0x0
 12478                           
 12479  0070                     ?_STD_EncoderMode:	
 12480                           ; 1 bytes @ 0x0
 12481                           
 12482  0070                     ??_STD_EncoderMode:	
 12483                           ; 1 bytes @ 0x0
 12484                           
 12485  0070                     ?_PWM_GP1:	
 12486                           ; 1 bytes @ 0x0
 12487                           
 12488  0070                     ?_PWM_GP2:	
 12489                           ; 1 bytes @ 0x0
 12490                           
 12491  0070                     ?_PWM_GP3_RLED:	
 12492                           ; 1 bytes @ 0x0
 12493                           
 12494  0070                     ?_PWM_GLED:	
 12495                           ; 1 bytes @ 0x0
 12496                           
 12497  0070                     ?_PWM_BLED:	
 12498                           ; 1 bytes @ 0x0
 12499                           
 12500  0070                     ?_SYSTEM_Initialize:	
 12501                           ; 1 bytes @ 0x0
 12502                           
 12503  0070                     ?_INTERRUPT_InterruptManager:	
 12504                           ; 1 bytes @ 0x0
 12505                           
 12506  0070                     ?_I2C1_Initialize_ClockStreach:	
 12507                           ; 1 bytes @ 0x0
 12508                           
 12509  0070                     ??_I2C1_Initialize_ClockStreach:	
 12510                           ; 1 bytes @ 0x0
 12511                           
 12512  0070                     ?_PWM5_Initialize:	
 12513                           ; 1 bytes @ 0x0
 12514                           
 12515  0070                     ??_PWM5_Initialize:	
 12516                           ; 1 bytes @ 0x0
 12517                           
 12518  0070                     ?_PWM3_Initialize:	
 12519                           ; 1 bytes @ 0x0
 12520                           
 12521  0070                     ??_PWM3_Initialize:	
 12522                           ; 1 bytes @ 0x0
 12523                           
 12524  0070                     ?_PWM4_Initialize:	
 12525                           ; 1 bytes @ 0x0
 12526                           
 12527  0070                     ??_PWM4_Initialize:	
 12528                           ; 1 bytes @ 0x0
 12529                           
 12530  0070                     ?_ADC_Initialize:	
 12531                           ; 1 bytes @ 0x0
 12532                           
 12533  0070                     ?_PWM1_Initialize:	
 12534                           ; 1 bytes @ 0x0
 12535                           
 12536  0070                     ??_PWM1_Initialize:	
 12537                           ; 1 bytes @ 0x0
 12538                           
 12539  0070                     ?_PWM2_Initialize:	
 12540                           ; 1 bytes @ 0x0
 12541                           
 12542  0070                     ??_PWM2_Initialize:	
 12543                           ; 1 bytes @ 0x0
 12544                           
 12545  0070                     ?_TMR3_StartTimer:	
 12546                           ; 1 bytes @ 0x0
 12547                           
 12548  0070                     ?_TMR3_WriteTimer:	
 12549                           ; 1 bytes @ 0x0
 12550                           
 12551  0070                     ?_TMR0_StartTimer:	
 12552                           ; 1 bytes @ 0x0
 12553                           
 12554  0070                     ?_TMR0_Reload:	
 12555                           ; 1 bytes @ 0x0
 12556                           
 12557  0070                     ??_TMR0_Reload:	
 12558                           ; 1 bytes @ 0x0
 12559                           
 12560  0070                     ?_SetInterrupt:	
 12561                           ; 1 bytes @ 0x0
 12562                           
 12563  0070                     ?_ClearInterrupt:	
 12564                           ; 1 bytes @ 0x0
 12565                           
 12566  0070                     ?_main:	
 12567                           ; 1 bytes @ 0x0
 12568                           
 12569  0070                     ?_FirstDataSplit:	
 12570                           ; 1 bytes @ 0x0
 12571                           
 12572  0070                     ??_FirstDataSplit:	
 12573                           ; 1 bytes @ 0x0
 12574                           
 12575  0070                     ?_SecondDataSplit:	
 12576                           ; 1 bytes @ 0x0
 12577                           
 12578  0070                     ??_SecondDataSplit:	
 12579                           ; 1 bytes @ 0x0
 12580                           
 12581  0070                     ?_EncoderStatusUpdate:	
 12582                           ; 1 bytes @ 0x0
 12583                           
 12584  0070                     ?_Int2StatusUpdate:	
 12585                           ; 1 bytes @ 0x0
 12586                           
 12587  0070                     ?_FadeProcessSet:	
 12588                           ; 1 bytes @ 0x0
 12589                           
 12590  0070                     ?_FadeProcessClear:	
 12591                           ; 1 bytes @ 0x0
 12592                           
 12593  0070                     ?_FADE_GP1:	
 12594                           ; 1 bytes @ 0x0
 12595                           
 12596  0070                     ?_FADE_GP2:	
 12597                           ; 1 bytes @ 0x0
 12598                           
 12599  0070                     ?_FADE_GP3:	
 12600                           ; 1 bytes @ 0x0
 12601                           
 12602  0070                     ?_GP1_FSM:	
 12603                           ; 1 bytes @ 0x0
 12604                           
 12605  0070                     ?_GP2_FSM:	
 12606                           ; 1 bytes @ 0x0
 12607                           
 12608  0070                     ?_GP3_FSM:	
 12609                           ; 1 bytes @ 0x0
 12610                           
 12611  0070                     ?_EncoderSwitch_GetValue:	
 12612                           ; 1 bytes @ 0x0
 12613                           
 12614  0070                     ?_EncoderSwitch_GetValueFiltered:	
 12615                           ; 1 bytes @ 0x0
 12616                           
 12617  0070                     ?_FADE_LEDS:	
 12618                           ; 1 bytes @ 0x0
 12619                           
 12620  0070                     ?_Encoder_PushButton_FSM:	
 12621                           ; 1 bytes @ 0x0
 12622                           
 12623  0070                     ?i1_I2C1_Initialize:	
 12624                           ; 1 bytes @ 0x0
 12625                           
 12626  0070                     ??i1_I2C1_Initialize:	
 12627                           ; 1 bytes @ 0x0
 12628                           
 12629  0070                     ?i1_SetInterrupt:	
 12630                           ; 1 bytes @ 0x0
 12631                           
 12632  0070                     ??i1_SetInterrupt:	
 12633                           ; 1 bytes @ 0x0
 12634                           
 12635  0070                     ?i1_EncoderStatusUpdate:	
 12636                           ; 1 bytes @ 0x0
 12637                           
 12638  0070                     ??i1_EncoderStatusUpdate:	
 12639                           ; 1 bytes @ 0x0
 12640                           
 12641  0070                     ?i1_PWM_GP1:	
 12642                           ; 1 bytes @ 0x0
 12643                           
 12644  0070                     ?i1_PWM_GP2:	
 12645                           ; 1 bytes @ 0x0
 12646                           
 12647  0070                     ?i1_PWM_GP3_RLED:	
 12648                           ; 1 bytes @ 0x0
 12649                           
 12650  0070                     ?i1___wmul:	
 12651                           ; 1 bytes @ 0x0
 12652                           
 12653  0070                     ?___fladd:	
 12654                           ; 2 bytes @ 0x0
 12655                           
 12656  0070                     TMR0_Reload@periodVal:	
 12657                           ; 4 bytes @ 0x0
 12658                           
 12659  0070                     eeprom_read@addr:	
 12660                           ; 1 bytes @ 0x0
 12661                           
 12662  0070                     eeprom_write@value:	
 12663                           ; 1 bytes @ 0x0
 12664                           
 12665  0070                     i1EncoderStatusUpdate@stat:	
 12666                           ; 1 bytes @ 0x0
 12667                           
 12668  0070                     TMR3_WriteTimer@timerVal:	
 12669                           ; 1 bytes @ 0x0
 12670                           
 12671  0070                     i1___wmul@multiplier:	
 12672                           ; 2 bytes @ 0x0
 12673                           
 12674  0070                     ___flge@ff1:	
 12675                           ; 2 bytes @ 0x0
 12676                           
 12677  0070                     ___fladd@b:	
 12678                           ; 4 bytes @ 0x0
 12679                           
 12680                           
 12681                           ; 4 bytes @ 0x0
 12682  0070                     	ds	1
 12683  0071                     ??_RegisterRead:
 12684  0071                     ??_eeprom_write:	
 12685                           ; 1 bytes @ 0x1
 12686                           
 12687  0071                     RegisterRead@add:	
 12688                           ; 1 bytes @ 0x1
 12689                           
 12690  0071                     eeprom_write@addr:	
 12691                           ; 1 bytes @ 0x1
 12692                           
 12693                           
 12694                           ; 1 bytes @ 0x1
 12695  0071                     	ds	1
 12696  0072                     ??_TMR3_ISR:
 12697  0072                     ??_TMR3_WriteTimer:	
 12698                           ; 1 bytes @ 0x2
 12699                           
 12700  0072                     RegisterRead@return_value:	
 12701                           ; 1 bytes @ 0x2
 12702                           
 12703  0072                     i1___wmul@multiplicand:	
 12704                           ; 1 bytes @ 0x2
 12705                           
 12706                           
 12707                           ; 2 bytes @ 0x2
 12708  0072                     	ds	2
 12709  0074                     ??i1___wmul:
 12710  0074                     i1___wmul@product:	
 12711                           ; 1 bytes @ 0x4
 12712                           
 12713  0074                     ___flge@ff2:	
 12714                           ; 2 bytes @ 0x4
 12715                           
 12716  0074                     ___fladd@a:	
 12717                           ; 4 bytes @ 0x4
 12718                           
 12719                           
 12720                           ; 4 bytes @ 0x4
 12721  0074                     	ds	2
 12722  0076                     ??i1_PWM_GP1:
 12723  0076                     ??i1_PWM_GP2:	
 12724                           ; 1 bytes @ 0x6
 12725                           
 12726  0076                     ??i1_PWM_GP3_RLED:	
 12727                           ; 1 bytes @ 0x6
 12728                           
 12729                           
 12730                           ; 1 bytes @ 0x6
 12731  0076                     	ds	2
 12732  0078                     ??___flge:
 12733  0078                     ___fladd@signs:	
 12734                           ; 1 bytes @ 0x8
 12735                           
 12736                           
 12737                           ; 1 bytes @ 0x8
 12738  0078                     	ds	1
 12739  0079                     ___fladd@aexp:
 12740                           
 12741                           ; 1 bytes @ 0x9
 12742  0079                     	ds	1
 12743  007A                     ___fladd@bexp:
 12744                           
 12745                           ; 1 bytes @ 0xA
 12746  007A                     	ds	1
 12747  007B                     ___fladd@grs:
 12748                           
 12749                           ; 1 bytes @ 0xB
 12750  007B                     	ds	1
 12751  007C                     ??_CLC2_ISR:
 12752  007C                     ??_CLC1_ISR:	
 12753                           ; 1 bytes @ 0xC
 12754                           
 12755  007C                     ??___flsub:	
 12756                           ; 1 bytes @ 0xC
 12757                           
 12758  007C                     i1PWM_GP2@duty:	
 12759                           ; 1 bytes @ 0xC
 12760                           
 12761  007C                     i1PWM_GP3_RLED@duty:	
 12762                           ; 1 bytes @ 0xC
 12763                           
 12764                           
 12765                           ; 1 bytes @ 0xC
 12766  007C                     	ds	2
 12767  007E                     ??_I2C1_ISR:
 12768  007E                     ??_I2C1_StatusCallback:	
 12769                           ; 1 bytes @ 0xE
 12770                           
 12771  007E                     ??_RegisterWrite:	
 12772                           ; 1 bytes @ 0xE
 12773                           
 12774  007E                     ??_INTERRUPT_InterruptManager:	
 12775                           ; 1 bytes @ 0xE
 12776                           
 12777                           
 12778                           	psect	cstackBANK0
 12779  004C                     __pcstackBANK0:	
 12780                           ; 1 bytes @ 0xE
 12781                           
 12782  004C                     ??_Config_GP2:
 12783  004C                     ??_Config_GP3:	
 12784                           ; 1 bytes @ 0x0
 12785                           
 12786  004C                     ??___fladd:	
 12787                           ; 1 bytes @ 0x0
 12788                           
 12789  004C                     i1PWM_GP1@duty:	
 12790                           ; 1 bytes @ 0x0
 12791                           
 12792                           
 12793                           ; 1 bytes @ 0x0
 12794  004C                     	ds	1
 12795  004D                     ??_Config_GP1:
 12796                           
 12797                           ; 1 bytes @ 0x1
 12798  004D                     	ds	2
 12799  004F                     ?_RegisterWrite:
 12800  004F                     RegisterWrite@data:	
 12801                           ; 1 bytes @ 0x3
 12802                           
 12803                           
 12804                           ; 1 bytes @ 0x3
 12805  004F                     	ds	1
 12806  0050                     RegisterWrite@add:
 12807                           
 12808                           ; 1 bytes @ 0x4
 12809  0050                     	ds	1
 12810  0051                     I2C1_StatusCallback@i2c_bus_state:
 12811                           
 12812                           ; 1 bytes @ 0x5
 12813  0051                     	ds	1
 12814  0052                     I2C1_ISR@i2c_data:
 12815                           
 12816                           ; 1 bytes @ 0x6
 12817  0052                     	ds	2
 12818  0054                     ?___flsub:
 12819  0054                     ___flsub@a:	
 12820                           ; 4 bytes @ 0x8
 12821                           
 12822                           
 12823                           ; 4 bytes @ 0x8
 12824  0054                     	ds	4
 12825  0058                     ___flsub@b:
 12826                           
 12827                           ; 4 bytes @ 0xC
 12828  0058                     	ds	4
 12829  005C                     ??_Encoder_AB_Interrupt:
 12830                           
 12831                           ; 1 bytes @ 0x10
 12832  005C                     	ds	4
 12833                           
 12834                           	psect	text1
 12835  12CB                     __ptext1:	
 12836 ;; *************** function _TMR3_StartTimer *****************
 12837 ;; Defined at:
 12838 ;;		line 90 in file "mcc_generated_files/tmr3.c"
 12839 ;; Parameters:    Size  Location     Type
 12840 ;;		None
 12841 ;; Auto vars:     Size  Location     Type
 12842 ;;		None
 12843 ;; Return value:  Size  Location     Type
 12844 ;;                  1    wreg      void 
 12845 ;; Registers used:
 12846 ;;		None
 12847 ;; Tracked objects:
 12848 ;;		On entry : 1F/1
 12849 ;;		On exit  : 1F/8
 12850 ;;		Unchanged: 0/0
 12851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12856 ;;Total ram usage:        0 bytes
 12857 ;; Hardware stack levels used:    1
 12858 ;; Hardware stack levels required when called:    7
 12859 ;; This function calls:
 12860 ;;		Nothing
 12861 ;; This function is called by:
 12862 ;;		_main
 12863 ;; This function uses a non-reentrant model
 12864 ;;
 12865                           
 12866                           
 12867                           ;psect for function _TMR3_StartTimer
 12868  12CB                     _TMR3_StartTimer:
 12869                           
 12870                           ;tmr3.c: 93: T3CONbits.TMR3ON = 1;
 12871                           
 12872                           ;incstack = 0
 12873                           ; Regs used in _TMR3_StartTimer: []
 12874  12CB  0028               	movlb	8	; select bank8
 12875  12CC  1413               	bsf	19,0	;volatile
 12876  12CD  0008               	return
 12877  12CE                     __end_of_TMR3_StartTimer:
 12878                           
 12879                           	psect	text2
 12880  12CE                     __ptext2:	
 12881 ;; *************** function _TMR0_StartTimer *****************
 12882 ;; Defined at:
 12883 ;;		line 80 in file "mcc_generated_files/tmr0.c"
 12884 ;; Parameters:    Size  Location     Type
 12885 ;;		None
 12886 ;; Auto vars:     Size  Location     Type
 12887 ;;		None
 12888 ;; Return value:  Size  Location     Type
 12889 ;;                  1    wreg      void 
 12890 ;; Registers used:
 12891 ;;		None
 12892 ;; Tracked objects:
 12893 ;;		On entry : 1F/8
 12894 ;;		On exit  : 1F/0
 12895 ;;		Unchanged: 0/0
 12896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12901 ;;Total ram usage:        0 bytes
 12902 ;; Hardware stack levels used:    1
 12903 ;; Hardware stack levels required when called:    7
 12904 ;; This function calls:
 12905 ;;		Nothing
 12906 ;; This function is called by:
 12907 ;;		_main
 12908 ;; This function uses a non-reentrant model
 12909 ;;
 12910                           
 12911                           
 12912                           ;psect for function _TMR0_StartTimer
 12913  12CE                     _TMR0_StartTimer:
 12914                           
 12915                           ;tmr0.c: 83: T0CON0bits.T0EN = 1;
 12916                           
 12917                           ;incstack = 0
 12918                           ; Regs used in _TMR0_StartTimer: []
 12919  12CE  0020               	movlb	0	; select bank0
 12920  12CF  1797               	bsf	23,7	;volatile
 12921  12D0  0008               	return
 12922  12D1                     __end_of_TMR0_StartTimer:
 12923                           
 12924                           	psect	text5
 12925  120C                     __ptext5:	
 12926 ;; *************** function _TMR3_Initialize *****************
 12927 ;; Defined at:
 12928 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 12929 ;; Parameters:    Size  Location     Type
 12930 ;;		None
 12931 ;; Auto vars:     Size  Location     Type
 12932 ;;		None
 12933 ;; Return value:  Size  Location     Type
 12934 ;;                  1    wreg      void 
 12935 ;; Registers used:
 12936 ;;		wreg, status,2
 12937 ;; Tracked objects:
 12938 ;;		On entry : B1F/0
 12939 ;;		On exit  : B1F/8
 12940 ;;		Unchanged: B00/0
 12941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12946 ;;Total ram usage:        0 bytes
 12947 ;; Hardware stack levels used:    1
 12948 ;; Hardware stack levels required when called:    7
 12949 ;; This function calls:
 12950 ;;		Nothing
 12951 ;; This function is called by:
 12952 ;;		_SYSTEM_Initialize
 12953 ;; This function uses a non-reentrant model
 12954 ;;
 12955                           
 12956                           
 12957                           ;psect for function _TMR3_Initialize
 12958  120C                     _TMR3_Initialize:
 12959                           
 12960                           ;tmr3.c: 69: T3GCON = 0x00;
 12961                           
 12962                           ;incstack = 0
 12963                           ; Regs used in _TMR3_Initialize: [wreg+status,2]
 12964  120C  0028               	movlb	8	; select bank8
 12965  120D  0194               	clrf	20	;volatile
 12966                           
 12967                           ;tmr3.c: 72: TMR3H = 0xE0;
 12968  120E  30E0               	movlw	224
 12969  120F  0092               	movwf	18	;volatile
 12970                           
 12971                           ;tmr3.c: 75: TMR3L = 0xC0;
 12972  1210  30C0               	movlw	192
 12973  1211  0091               	movwf	17	;volatile
 12974                           
 12975                           ;tmr3.c: 78: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 12976  1212  0812               	movf	18,w	;volatile
 12977  1213  0021               	movlb	1	; select bank1
 12978  1214  00A9               	movwf	(_timer3ReloadVal+1)^(0+128)	;volatile
 12979  1215  01A8               	clrf	_timer3ReloadVal^(0+128)	;volatile
 12980  1216  0028               	movlb	8	; select bank8
 12981  1217  0811               	movf	17,w	;volatile
 12982  1218  0021               	movlb	1	; select bank1
 12983  1219  04A8               	iorwf	_timer3ReloadVal^(0+128),f	;volatile
 12984                           
 12985                           ;tmr3.c: 81: PIR3bits.TMR3IF = 0;
 12986  121A  0020               	movlb	0	; select bank0
 12987  121B  1213               	bcf	19,4	;volatile
 12988                           
 12989                           ;tmr3.c: 84: PIE3bits.TMR3IE = 1;
 12990  121C  0021               	movlb	1	; select bank1
 12991  121D  1613               	bsf	19,4	;volatile
 12992                           
 12993                           ;tmr3.c: 87: T3CON = 0x01;
 12994  121E  3001               	movlw	1
 12995  121F  0028               	movlb	8	; select bank8
 12996  1220  0093               	movwf	19	;volatile
 12997  1221  0008               	return
 12998  1222                     __end_of_TMR3_Initialize:
 12999                           
 13000                           	psect	text6
 13001  129D                     __ptext6:	
 13002 ;; *************** function _TMR2_Initialize *****************
 13003 ;; Defined at:
 13004 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 13005 ;; Parameters:    Size  Location     Type
 13006 ;;		None
 13007 ;; Auto vars:     Size  Location     Type
 13008 ;;		None
 13009 ;; Return value:  Size  Location     Type
 13010 ;;                  1    wreg      void 
 13011 ;; Registers used:
 13012 ;;		wreg, status,2
 13013 ;; Tracked objects:
 13014 ;;		On entry : B1F/1
 13015 ;;		On exit  : B1F/0
 13016 ;;		Unchanged: B00/0
 13017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13022 ;;Total ram usage:        0 bytes
 13023 ;; Hardware stack levels used:    1
 13024 ;; Hardware stack levels required when called:    7
 13025 ;; This function calls:
 13026 ;;		Nothing
 13027 ;; This function is called by:
 13028 ;;		_SYSTEM_Initialize
 13029 ;; This function uses a non-reentrant model
 13030 ;;
 13031                           
 13032                           
 13033                           ;psect for function _TMR2_Initialize
 13034  129D                     _TMR2_Initialize:
 13035                           
 13036                           ;tmr2.c: 67: PR2 = 0xFF;
 13037                           
 13038                           ;incstack = 0
 13039                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 13040  129D  30FF               	movlw	255
 13041  129E  0020               	movlb	0	; select bank0
 13042  129F  009E               	movwf	30	;volatile
 13043                           
 13044                           ;tmr2.c: 70: TMR2 = 0x00;
 13045  12A0  019D               	clrf	29	;volatile
 13046                           
 13047                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
 13048  12A1  1091               	bcf	17,1	;volatile
 13049                           
 13050                           ;tmr2.c: 76: T2CON = 0x04;
 13051  12A2  3004               	movlw	4
 13052  12A3  009F               	movwf	31	;volatile
 13053  12A4  0008               	return
 13054  12A5                     __end_of_TMR2_Initialize:
 13055                           
 13056                           	psect	text13
 13057  127D                     __ptext13:	
 13058 ;; *************** function _CLC4_Initialize *****************
 13059 ;; Defined at:
 13060 ;;		line 58 in file "mcc_generated_files/clc4.c"
 13061 ;; Parameters:    Size  Location     Type
 13062 ;;		None
 13063 ;; Auto vars:     Size  Location     Type
 13064 ;;		None
 13065 ;; Return value:  Size  Location     Type
 13066 ;;                  1    wreg      void 
 13067 ;; Registers used:
 13068 ;;		wreg, status,2
 13069 ;; Tracked objects:
 13070 ;;		On entry : B1F/1E
 13071 ;;		On exit  : B1F/1E
 13072 ;;		Unchanged: B00/0
 13073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13078 ;;Total ram usage:        0 bytes
 13079 ;; Hardware stack levels used:    1
 13080 ;; Hardware stack levels required when called:    7
 13081 ;; This function calls:
 13082 ;;		Nothing
 13083 ;; This function is called by:
 13084 ;;		_SYSTEM_Initialize
 13085 ;; This function uses a non-reentrant model
 13086 ;;
 13087                           
 13088                           
 13089                           ;psect for function _CLC4_Initialize
 13090  127D                     _CLC4_Initialize:
 13091  127D                     l7594:	
 13092                           ;incstack = 0
 13093                           ; Regs used in _CLC4_Initialize: [wreg+status,2]
 13094                           
 13095                           
 13096                           ;clc4.c: 63: CLC4POL = 0x00;
 13097  127D  01AF               	clrf	47	;volatile
 13098                           
 13099                           ;clc4.c: 65: CLC4SEL0 = 0x18;
 13100  127E  3018               	movlw	24
 13101  127F  00B0               	movwf	48	;volatile
 13102                           
 13103                           ;clc4.c: 67: CLC4SEL1 = 0x03;
 13104  1280  3003               	movlw	3
 13105  1281  00B1               	movwf	49	;volatile
 13106                           
 13107                           ;clc4.c: 69: CLC4SEL2 = 0x03;
 13108  1282  00B2               	movwf	50	;volatile
 13109                           
 13110                           ;clc4.c: 71: CLC4SEL3 = 0x03;
 13111  1283  00B3               	movwf	51	;volatile
 13112                           
 13113                           ;clc4.c: 73: CLC4GLS0 = 0x02;
 13114  1284  3002               	movlw	2
 13115  1285  00B4               	movwf	52	;volatile
 13116                           
 13117                           ;clc4.c: 75: CLC4GLS1 = 0x08;
 13118  1286  3008               	movlw	8
 13119  1287  00B5               	movwf	53	;volatile
 13120                           
 13121                           ;clc4.c: 77: CLC4GLS2 = 0x00;
 13122  1288  01B6               	clrf	54	;volatile
 13123                           
 13124                           ;clc4.c: 79: CLC4GLS3 = 0x00;
 13125  1289  01B7               	clrf	55	;volatile
 13126                           
 13127                           ;clc4.c: 81: CLC4CON = 0x85;
 13128  128A  3085               	movlw	133
 13129  128B  00AE               	movwf	46	;volatile
 13130  128C  0008               	return
 13131  128D                     __end_of_CLC4_Initialize:
 13132                           
 13133                           	psect	text14
 13134  128D                     __ptext14:	
 13135 ;; *************** function _CLC3_Initialize *****************
 13136 ;; Defined at:
 13137 ;;		line 58 in file "mcc_generated_files/clc3.c"
 13138 ;; Parameters:    Size  Location     Type
 13139 ;;		None
 13140 ;; Auto vars:     Size  Location     Type
 13141 ;;		None
 13142 ;; Return value:  Size  Location     Type
 13143 ;;                  1    wreg      void 
 13144 ;; Registers used:
 13145 ;;		wreg, status,2
 13146 ;; Tracked objects:
 13147 ;;		On entry : B1F/1
 13148 ;;		On exit  : B1F/1E
 13149 ;;		Unchanged: B00/0
 13150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13155 ;;Total ram usage:        0 bytes
 13156 ;; Hardware stack levels used:    1
 13157 ;; Hardware stack levels required when called:    7
 13158 ;; This function calls:
 13159 ;;		Nothing
 13160 ;; This function is called by:
 13161 ;;		_SYSTEM_Initialize
 13162 ;; This function uses a non-reentrant model
 13163 ;;
 13164                           
 13165                           
 13166                           ;psect for function _CLC3_Initialize
 13167  128D                     _CLC3_Initialize:
 13168                           
 13169                           ;clc3.c: 63: CLC3POL = 0x00;
 13170                           
 13171                           ;incstack = 0
 13172                           ; Regs used in _CLC3_Initialize: [wreg+status,2]
 13173  128D  003E               	movlb	30	; select bank30
 13174  128E  01A5               	clrf	37	;volatile
 13175                           
 13176                           ;clc3.c: 65: CLC3SEL0 = 0x18;
 13177  128F  3018               	movlw	24
 13178  1290  00A6               	movwf	38	;volatile
 13179                           
 13180                           ;clc3.c: 67: CLC3SEL1 = 0x02;
 13181  1291  3002               	movlw	2
 13182  1292  00A7               	movwf	39	;volatile
 13183                           
 13184                           ;clc3.c: 69: CLC3SEL2 = 0x02;
 13185  1293  00A8               	movwf	40	;volatile
 13186                           
 13187                           ;clc3.c: 71: CLC3SEL3 = 0x02;
 13188  1294  00A9               	movwf	41	;volatile
 13189                           
 13190                           ;clc3.c: 73: CLC3GLS0 = 0x02;
 13191  1295  00AA               	movwf	42	;volatile
 13192                           
 13193                           ;clc3.c: 75: CLC3GLS1 = 0x08;
 13194  1296  3008               	movlw	8
 13195  1297  00AB               	movwf	43	;volatile
 13196                           
 13197                           ;clc3.c: 77: CLC3GLS2 = 0x00;
 13198  1298  01AC               	clrf	44	;volatile
 13199                           
 13200                           ;clc3.c: 79: CLC3GLS3 = 0x00;
 13201  1299  01AD               	clrf	45	;volatile
 13202                           
 13203                           ;clc3.c: 81: CLC3CON = 0x85;
 13204  129A  3085               	movlw	133
 13205  129B  00A4               	movwf	36	;volatile
 13206  129C  0008               	return
 13207  129D                     __end_of_CLC3_Initialize:
 13208                           
 13209                           	psect	text17
 13210  0891                     __ptext17:	
 13211 ;; *************** function _GP_Ports_FSM *****************
 13212 ;; Defined at:
 13213 ;;		line 535 in file "GPports.c"
 13214 ;; Parameters:    Size  Location     Type
 13215 ;;		None
 13216 ;; Auto vars:     Size  Location     Type
 13217 ;;		None
 13218 ;; Return value:  Size  Location     Type
 13219 ;;                  1    wreg      void 
 13220 ;; Registers used:
 13221 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13222 ;; Tracked objects:
 13223 ;;		On entry : 1C/1
 13224 ;;		On exit  : 1E/0
 13225 ;;		Unchanged: 0/0
 13226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13229 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13230 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13231 ;;Total ram usage:        1 bytes
 13232 ;; Hardware stack levels used:    1
 13233 ;; Hardware stack levels required when called:   11
 13234 ;; This function calls:
 13235 ;;		_FADE_GP1
 13236 ;;		_FADE_GP2
 13237 ;;		_FADE_GP3
 13238 ;;		_GP1_FSM
 13239 ;;		_GP2_FSM
 13240 ;;		_GP3_FSM
 13241 ;; This function is called by:
 13242 ;;		_main
 13243 ;; This function uses a non-reentrant model
 13244 ;;
 13245                           
 13246                           
 13247                           ;psect for function _GP_Ports_FSM
 13248  0891                     _GP_Ports_FSM:
 13249                           
 13250                           ;GPports.c: 538: FADE_GP1();
 13251                           
 13252                           ;incstack = 0
 13253                           ; Regs used in _GP_Ports_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13254  0891  22DC               	fcall	_FADE_GP1
 13255                           
 13256                           ;GPports.c: 539: FADE_GP2();
 13257  0892  3194  2475  3188   	fcall	_FADE_GP2
 13258                           
 13259                           ;GPports.c: 540: FADE_GP3();
 13260  0895  3195  2514  3188   	fcall	_FADE_GP3
 13261                           
 13262                           ;GPports.c: 542: if (gp_fade_cnt++ >= FADEGP) {
 13263  0898  0021               	movlb	1	; select bank1
 13264  0899  082E               	movf	_gp_fade_cnt^(0+128),w
 13265  089A  0AAE               	incf	_gp_fade_cnt^(0+128),f
 13266  089B  00D9               	movwf	??_GP_Ports_FSM^(0+128)
 13267  089C  0020               	movlb	0	; select bank0
 13268  089D  083F               	movf	_FADEGP,w	;volatile
 13269  089E  0021               	movlb	1	; select bank1
 13270  089F  0259               	subwf	??_GP_Ports_FSM^(0+128),w
 13271  08A0  1803               	btfsc	3,0
 13272                           
 13273                           ;GPports.c: 543: gp_fade_cnt = 0;
 13274  08A1  01AE               	clrf	_gp_fade_cnt^(0+128)
 13275                           
 13276                           ;GPports.c: 544: };GPports.c: 546: if (gp_timer++ > 10) {
 13277  08A2  0832               	movf	_gp_timer^(0+128),w
 13278  08A3  0AB2               	incf	_gp_timer^(0+128),f
 13279  08A4  00D9               	movwf	??_GP_Ports_FSM^(0+128)
 13280  08A5  300B               	movlw	11
 13281  08A6  0259               	subwf	??_GP_Ports_FSM^(0+128),w
 13282  08A7  1C03               	skipc
 13283  08A8  0008               	return
 13284                           
 13285                           ;GPports.c: 547: gp_timer = 0;
 13286  08A9  01B2               	clrf	_gp_timer^(0+128)
 13287                           
 13288                           ;GPports.c: 548: GP1_FSM();
 13289  08AA  20AF  3188         	fcall	_GP1_FSM
 13290                           
 13291                           ;GPports.c: 549: GP2_FSM();
 13292  08AC  20FA  3188         	fcall	_GP2_FSM
 13293                           
 13294                           ;GPports.c: 550: GP3_FSM();
 13295  08AE  2947               	ljmp	l7804
 13296  08AF                     __end_of_GP_Ports_FSM:
 13297  08AF                     __ptext20:	
 13298 ;; *************** function _GP1_FSM *****************
 13299 ;; Defined at:
 13300 ;;		line 393 in file "GPports.c"
 13301 ;; Parameters:    Size  Location     Type
 13302 ;;		None
 13303 ;; Auto vars:     Size  Location     Type
 13304 ;;		None
 13305 ;; Return value:  Size  Location     Type
 13306 ;;                  1    wreg      void 
 13307 ;; Registers used:
 13308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13309 ;; Tracked objects:
 13310 ;;		On entry : 1F/1
 13311 ;;		On exit  : 1E/0
 13312 ;;		Unchanged: 0/0
 13313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13316 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13317 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13318 ;;Total ram usage:        2 bytes
 13319 ;; Hardware stack levels used:    1
 13320 ;; Hardware stack levels required when called:    9
 13321 ;; This function calls:
 13322 ;;		_ADC_GetConversion
 13323 ;;		_ADC_Initialize
 13324 ;;		_Int2StatusUpdate
 13325 ;;		_SetInterrupt
 13326 ;; This function is called by:
 13327 ;;		_GP_Ports_FSM
 13328 ;; This function uses a non-reentrant model
 13329 ;;
 13330                           
 13331                           
 13332                           ;psect for function _GP1_FSM
 13333  08AF                     _GP1_FSM:
 13334                           
 13335                           ;GPports.c: 394: switch (gp1_fsm) {
 13336                           
 13337                           ;incstack = 0
 13338                           ; Regs used in _GP1_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13339  08AF  28EF               	goto	l7752
 13340  08B0                     l7714:
 13341                           
 13342                           ;GPports.c: 396: if ((GP1CONF & 0x03) == 0x02) {
 13343  08B0  3003               	movlw	3
 13344  08B1  0020               	movlb	0	; select bank0
 13345  08B2  0548               	andwf	_GP1CONF,w	;volatile
 13346  08B3  0021               	movlb	1	; select bank1
 13347  08B4  00CE               	movwf	??_GP1_FSM^(0+128)
 13348  08B5  3A02               	xorlw	2
 13349  08B6  1D03               	btfss	3,2
 13350  08B7  28BB               	goto	l7722
 13351                           
 13352                           ;GPports.c: 397: gp1_fsm = GP_ADC_MODE;
 13353  08B8  01B1               	clrf	_gp1_fsm^(0+128)
 13354  08B9  0AB1               	incf	_gp1_fsm^(0+128),f
 13355                           
 13356                           ;GPports.c: 398: ADC_Initialize();
 13357  08BA  29B2               	ljmp	l7180
 13358  08BB                     l7722:
 13359                           
 13360                           ;GPports.c: 400: };GPports.c: 401: if ((GP1CONF & 0x03) == 0x03) {
 13361  08BB  3003               	movlw	3
 13362  08BC  0020               	movlb	0	; select bank0
 13363  08BD  0548               	andwf	_GP1CONF,w	;volatile
 13364  08BE  0021               	movlb	1	; select bank1
 13365  08BF  00CE               	movwf	??_GP1_FSM^(0+128)
 13366  08C0  3A03               	xorlw	3
 13367  08C1  1D03               	btfss	3,2
 13368  08C2  0008               	return
 13369  08C3                     l7724:
 13370                           
 13371                           ;GPports.c: 402: gp1_fsm = GP_WAITRISE;
 13372  08C3  3002               	movlw	2
 13373  08C4  0021               	movlb	1	; select bank1
 13374  08C5  00B1               	movwf	_gp1_fsm^(0+128)
 13375  08C6  0008               	return
 13376  08C7                     l7728:
 13377                           
 13378                           ;GPports.c: 408: GP1REG = (ADC_GetConversion(A_GP1) >> 2);
 13379  08C7  3017               	movlw	23
 13380  08C8  2197               	fcall	_ADC_GetConversion
 13381  08C9  084A               	movf	?_ADC_GetConversion^(0+128),w
 13382  08CA  00CE               	movwf	??_GP1_FSM^(0+128)
 13383  08CB  084B               	movf	(?_ADC_GetConversion+1)^(0+128),w
 13384  08CC  00CF               	movwf	(??_GP1_FSM^(0+128)+1)
 13385  08CD  36CF               	lsrf	(??_GP1_FSM^(0+128)+1),f
 13386  08CE  0CCE               	rrf	??_GP1_FSM^(0+128),f
 13387  08CF  36CF               	lsrf	(??_GP1_FSM^(0+128)+1),f
 13388  08D0  0CCE               	rrf	??_GP1_FSM^(0+128),f
 13389  08D1  084E               	movf	??_GP1_FSM^(0+128),w
 13390  08D2  0020               	movlb	0	; select bank0
 13391  08D3  00C2               	movwf	_GP1REG	;volatile
 13392                           
 13393                           ;GPports.c: 409: break;
 13394  08D4  0008               	return
 13395  08D5                     l1237:	
 13396                           ;GPports.c: 411: case GP_WAITRISE:
 13397                           
 13398                           
 13399                           ;GPports.c: 412: if (PORTCbits.RC7 == 1) {
 13400  08D5  0020               	movlb	0	; select bank0
 13401  08D6  1F8E               	btfss	14,7	;volatile
 13402  08D7  0008               	return
 13403                           
 13404                           ;GPports.c: 413: GP1REG = 1;
 13405  08D8  3001               	movlw	1
 13406  08D9  00C2               	movwf	_GP1REG	;volatile
 13407                           
 13408                           ;GPports.c: 414: Int2StatusUpdate(E_GP1POS);
 13409  08DA  22BE  3188         	fcall	_Int2StatusUpdate
 13410                           
 13411                           ;GPports.c: 415: if ((GP1CONF & 0x08) != 0) {
 13412  08DC  1DC8               	btfss	_GP1CONF,3	;volatile
 13413  08DD  28DF               	goto	l7738
 13414                           
 13415                           ;GPports.c: 416: SetInterrupt();
 13416  08DE  22B5               	fcall	_SetInterrupt
 13417  08DF                     l7738:
 13418                           
 13419                           ;GPports.c: 417: };GPports.c: 418: gp1_fsm = GP_WAITFALL;
 13420  08DF  3003               	movlw	3
 13421  08E0  0021               	movlb	1	; select bank1
 13422  08E1  00B1               	movwf	_gp1_fsm^(0+128)
 13423  08E2  0008               	return
 13424  08E3                     l1240:	
 13425                           ;GPports.c: 422: case GP_WAITFALL:
 13426                           
 13427                           
 13428                           ;GPports.c: 423: if (PORTCbits.RC7 == 0) {
 13429  08E3  0020               	movlb	0	; select bank0
 13430  08E4  1B8E               	btfsc	14,7	;volatile
 13431  08E5  0008               	return
 13432                           
 13433                           ;GPports.c: 424: GP1REG = 0;
 13434  08E6  01C2               	clrf	_GP1REG	;volatile
 13435                           
 13436                           ;GPports.c: 425: Int2StatusUpdate(E_GP1NEG);
 13437  08E7  3002               	movlw	2
 13438  08E8  22BE  3188         	fcall	_Int2StatusUpdate
 13439                           
 13440                           ;GPports.c: 426: if ((GP1CONF & 0x10) != 0) {
 13441  08EA  1E48               	btfss	_GP1CONF,4	;volatile
 13442  08EB  28C3               	goto	l7724
 13443                           
 13444                           ;GPports.c: 427: SetInterrupt();
 13445  08EC  22B5  3188         	fcall	_SetInterrupt
 13446  08EE  28C3               	goto	l7724
 13447  08EF                     l7752:
 13448  08EF  0831               	movf	_gp1_fsm^(0+128),w
 13449                           
 13450                           ; Switch size 1, requested type "speed"
 13451                           ; Number of cases is 4, Range of values is 0 to 3
 13452                           ; switch strategies available:
 13453                           ; Name         Instructions Cycles
 13454                           ; direct_byte           14     6 (fixed)
 13455                           ; simple_byte           13     7 (average)
 13456                           ; jumptable            260     6 (fixed)
 13457                           ;	Chosen strategy is direct_byte
 13458  08F0  0084               	movwf	4
 13459  08F1  3004               	movlw	4
 13460  08F2  0204               	subwf	4,w
 13461  08F3  1803               	skipnc
 13462  08F4  0008               	return
 13463  08F5  3190               	movlp	high S8428
 13464  08F6  3504               	lslf	4,w
 13465  08F7  3EF4               	addlw	low S8428
 13466  08F8  0082               	movwf	2
 13467  08F9  0008               	return
 13468  08FA                     __end_of_GP1_FSM:
 13469  08FA                     __ptext19:	
 13470 ;; *************** function _GP2_FSM *****************
 13471 ;; Defined at:
 13472 ;;		line 438 in file "GPports.c"
 13473 ;; Parameters:    Size  Location     Type
 13474 ;;		None
 13475 ;; Auto vars:     Size  Location     Type
 13476 ;;		None
 13477 ;; Return value:  Size  Location     Type
 13478 ;;                  1    wreg      void 
 13479 ;; Registers used:
 13480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13481 ;; Tracked objects:
 13482 ;;		On entry : 1E/1
 13483 ;;		On exit  : 1E/0
 13484 ;;		Unchanged: 0/0
 13485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13488 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13489 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13490 ;;Total ram usage:        2 bytes
 13491 ;; Hardware stack levels used:    1
 13492 ;; Hardware stack levels required when called:    9
 13493 ;; This function calls:
 13494 ;;		_ADC_GetConversion
 13495 ;;		_ADC_Initialize
 13496 ;;		_Int2StatusUpdate
 13497 ;;		_SetInterrupt
 13498 ;; This function is called by:
 13499 ;;		_GP_Ports_FSM
 13500 ;; This function uses a non-reentrant model
 13501 ;;
 13502                           
 13503                           
 13504                           ;psect for function _GP2_FSM
 13505  08FA                     _GP2_FSM:
 13506                           
 13507                           ;GPports.c: 440: switch (gp2_fsm) {
 13508                           
 13509                           ;incstack = 0
 13510                           ; Regs used in _GP2_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13511  08FA  293B               	goto	l7798
 13512  08FB                     l7760:
 13513                           
 13514                           ;GPports.c: 442: if ((GP2CONF & 0x03) == 0x02) {
 13515  08FB  3003               	movlw	3
 13516  08FC  0020               	movlb	0	; select bank0
 13517  08FD  0547               	andwf	_GP2CONF,w	;volatile
 13518  08FE  0021               	movlb	1	; select bank1
 13519  08FF  00CE               	movwf	??_GP2_FSM^(0+128)
 13520  0900  3A02               	xorlw	2
 13521  0901  1D03               	btfss	3,2
 13522  0902  2906               	goto	l7768
 13523                           
 13524                           ;GPports.c: 443: gp2_fsm = GP_ADC_MODE;
 13525  0903  01B0               	clrf	_gp2_fsm^(0+128)
 13526  0904  0AB0               	incf	_gp2_fsm^(0+128),f
 13527                           
 13528                           ;GPports.c: 444: ADC_Initialize();
 13529  0905  29B2               	ljmp	l7180
 13530  0906                     l7768:
 13531                           
 13532                           ;GPports.c: 446: };GPports.c: 448: if ((GP2CONF & 0x03) == 0x03) {
 13533  0906  3003               	movlw	3
 13534  0907  0020               	movlb	0	; select bank0
 13535  0908  0547               	andwf	_GP2CONF,w	;volatile
 13536  0909  0021               	movlb	1	; select bank1
 13537  090A  00CE               	movwf	??_GP2_FSM^(0+128)
 13538  090B  3A03               	xorlw	3
 13539  090C  1D03               	btfss	3,2
 13540  090D  0008               	return
 13541  090E                     l7770:
 13542                           
 13543                           ;GPports.c: 449: gp2_fsm = GP_WAITRISE;
 13544  090E  3002               	movlw	2
 13545  090F  0021               	movlb	1	; select bank1
 13546  0910  00B0               	movwf	_gp2_fsm^(0+128)
 13547  0911  0008               	return
 13548  0912                     l7774:
 13549                           
 13550                           ;GPports.c: 455: GP2REG = (ADC_GetConversion(A_GP2) >> 2);
 13551  0912  3016               	movlw	22
 13552  0913  2197               	fcall	_ADC_GetConversion
 13553  0914  084A               	movf	?_ADC_GetConversion^(0+128),w
 13554  0915  00CE               	movwf	??_GP2_FSM^(0+128)
 13555  0916  084B               	movf	(?_ADC_GetConversion+1)^(0+128),w
 13556  0917  00CF               	movwf	(??_GP2_FSM^(0+128)+1)
 13557  0918  36CF               	lsrf	(??_GP2_FSM^(0+128)+1),f
 13558  0919  0CCE               	rrf	??_GP2_FSM^(0+128),f
 13559  091A  36CF               	lsrf	(??_GP2_FSM^(0+128)+1),f
 13560  091B  0CCE               	rrf	??_GP2_FSM^(0+128),f
 13561  091C  084E               	movf	??_GP2_FSM^(0+128),w
 13562  091D  0020               	movlb	0	; select bank0
 13563  091E  00C1               	movwf	_GP2REG	;volatile
 13564                           
 13565                           ;GPports.c: 456: break;
 13566  091F  0008               	return
 13567  0920                     l1252:	
 13568                           ;GPports.c: 458: case GP_WAITRISE:
 13569                           
 13570                           
 13571                           ;GPports.c: 459: if (PORTCbits.RC6 == 1) {
 13572  0920  0020               	movlb	0	; select bank0
 13573  0921  1F0E               	btfss	14,6	;volatile
 13574  0922  0008               	return
 13575                           
 13576                           ;GPports.c: 460: GP2REG = 1;
 13577  0923  3001               	movlw	1
 13578  0924  00C1               	movwf	_GP2REG	;volatile
 13579                           
 13580                           ;GPports.c: 461: Int2StatusUpdate(E_GP2POS);
 13581  0925  3004               	movlw	4
 13582  0926  22BE  3188         	fcall	_Int2StatusUpdate
 13583                           
 13584                           ;GPports.c: 462: if ((GP2CONF & 0x08) != 0) {
 13585  0928  1DC7               	btfss	_GP2CONF,3	;volatile
 13586  0929  292B               	goto	l7784
 13587                           
 13588                           ;GPports.c: 463: SetInterrupt();
 13589  092A  22B5               	fcall	_SetInterrupt
 13590  092B                     l7784:
 13591                           
 13592                           ;GPports.c: 464: };GPports.c: 465: gp2_fsm = GP_WAITFALL;
 13593  092B  3003               	movlw	3
 13594  092C  0021               	movlb	1	; select bank1
 13595  092D  00B0               	movwf	_gp2_fsm^(0+128)
 13596  092E  0008               	return
 13597  092F                     l1255:	
 13598                           ;GPports.c: 469: case GP_WAITFALL:
 13599                           
 13600                           
 13601                           ;GPports.c: 470: if (PORTCbits.RC6 == 0) {
 13602  092F  0020               	movlb	0	; select bank0
 13603  0930  1B0E               	btfsc	14,6	;volatile
 13604  0931  0008               	return
 13605                           
 13606                           ;GPports.c: 472: GP2REG = 0;
 13607  0932  01C1               	clrf	_GP2REG	;volatile
 13608                           
 13609                           ;GPports.c: 473: Int2StatusUpdate(E_GP2NEG);
 13610  0933  3008               	movlw	8
 13611  0934  22BE  3188         	fcall	_Int2StatusUpdate
 13612                           
 13613                           ;GPports.c: 474: if ((GP2CONF & 0x10) != 0) {
 13614  0936  1E47               	btfss	_GP2CONF,4	;volatile
 13615  0937  290E               	goto	l7770
 13616                           
 13617                           ;GPports.c: 475: SetInterrupt();
 13618  0938  22B5  3188         	fcall	_SetInterrupt
 13619  093A  290E               	goto	l7770
 13620  093B                     l7798:
 13621  093B  0021               	movlb	1	; select bank1
 13622  093C  0830               	movf	_gp2_fsm^(0+128),w
 13623                           
 13624                           ; Switch size 1, requested type "speed"
 13625                           ; Number of cases is 4, Range of values is 0 to 3
 13626                           ; switch strategies available:
 13627                           ; Name         Instructions Cycles
 13628                           ; direct_byte           14     6 (fixed)
 13629                           ; simple_byte           13     7 (average)
 13630                           ; jumptable            260     6 (fixed)
 13631                           ;	Chosen strategy is direct_byte
 13632  093D  0084               	movwf	4
 13633  093E  3004               	movlw	4
 13634  093F  0204               	subwf	4,w
 13635  0940  1803               	skipnc
 13636  0941  0008               	return
 13637  0942  3190               	movlp	high S8426
 13638  0943  3504               	lslf	4,w
 13639  0944  3EEC               	addlw	low S8426
 13640  0945  0082               	movwf	2
 13641  0946  0008               	return
 13642  0947                     __end_of_GP2_FSM:
 13643  0947                     __ptext18:	
 13644 ;; *************** function _GP3_FSM *****************
 13645 ;; Defined at:
 13646 ;;		line 487 in file "GPports.c"
 13647 ;; Parameters:    Size  Location     Type
 13648 ;;		None
 13649 ;; Auto vars:     Size  Location     Type
 13650 ;;		None
 13651 ;; Return value:  Size  Location     Type
 13652 ;;                  1    wreg      void 
 13653 ;; Registers used:
 13654 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13655 ;; Tracked objects:
 13656 ;;		On entry : 1E/1
 13657 ;;		On exit  : 1E/0
 13658 ;;		Unchanged: 0/0
 13659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13662 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13663 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13664 ;;Total ram usage:        2 bytes
 13665 ;; Hardware stack levels used:    1
 13666 ;; Hardware stack levels required when called:    9
 13667 ;; This function calls:
 13668 ;;		_ADC_GetConversion
 13669 ;;		_ADC_Initialize
 13670 ;;		_Int2StatusUpdate
 13671 ;;		_SetInterrupt
 13672 ;; This function is called by:
 13673 ;;		_GP_Ports_FSM
 13674 ;; This function uses a non-reentrant model
 13675 ;;
 13676                           
 13677                           
 13678                           ;psect for function _GP3_FSM
 13679  0947                     _GP3_FSM:
 13680  0947                     l7804:	
 13681                           ;incstack = 0
 13682                           ; Regs used in _GP3_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13683                           
 13684                           
 13685                           ;GPports.c: 489: if (C_ETYPE == 1)
 13686  0947  0020               	movlb	0	; select bank0
 13687  0948  0B39               	decfsz	_C_ETYPE,w	;volatile
 13688  0949  298B               	goto	l7846
 13689  094A  0008               	return
 13690  094B                     l7808:
 13691                           
 13692                           ;GPports.c: 494: if ((GP3CONF & 0x03) == 0x02) {
 13693  094B  3003               	movlw	3
 13694  094C  0020               	movlb	0	; select bank0
 13695  094D  0546               	andwf	_GP3CONF,w	;volatile
 13696  094E  0021               	movlb	1	; select bank1
 13697  094F  00CE               	movwf	??_GP3_FSM^(0+128)
 13698  0950  3A02               	xorlw	2
 13699  0951  1D03               	btfss	3,2
 13700  0952  2956               	goto	l7816
 13701                           
 13702                           ;GPports.c: 495: gp3_fsm = GP_ADC_MODE;
 13703  0953  01AF               	clrf	_gp3_fsm^(0+128)
 13704  0954  0AAF               	incf	_gp3_fsm^(0+128),f
 13705                           
 13706                           ;GPports.c: 496: ADC_Initialize();
 13707  0955  29B2               	ljmp	l7180
 13708  0956                     l7816:
 13709                           
 13710                           ;GPports.c: 498: };GPports.c: 500: if ((GP3CONF & 0x03) == 0x03) {
 13711  0956  3003               	movlw	3
 13712  0957  0020               	movlb	0	; select bank0
 13713  0958  0546               	andwf	_GP3CONF,w	;volatile
 13714  0959  0021               	movlb	1	; select bank1
 13715  095A  00CE               	movwf	??_GP3_FSM^(0+128)
 13716  095B  3A03               	xorlw	3
 13717  095C  1D03               	btfss	3,2
 13718  095D  0008               	return
 13719  095E                     l7818:
 13720                           
 13721                           ;GPports.c: 501: gp3_fsm = GP_WAITRISE;
 13722  095E  3002               	movlw	2
 13723  095F  0021               	movlb	1	; select bank1
 13724  0960  00AF               	movwf	_gp3_fsm^(0+128)
 13725  0961  0008               	return
 13726  0962                     l7822:
 13727                           
 13728                           ;GPports.c: 507: GP3REG = (ADC_GetConversion(A_GP3) >> 2);
 13729  0962  3015               	movlw	21
 13730  0963  2197               	fcall	_ADC_GetConversion
 13731  0964  084A               	movf	?_ADC_GetConversion^(0+128),w
 13732  0965  00CE               	movwf	??_GP3_FSM^(0+128)
 13733  0966  084B               	movf	(?_ADC_GetConversion+1)^(0+128),w
 13734  0967  00CF               	movwf	(??_GP3_FSM^(0+128)+1)
 13735  0968  36CF               	lsrf	(??_GP3_FSM^(0+128)+1),f
 13736  0969  0CCE               	rrf	??_GP3_FSM^(0+128),f
 13737  096A  36CF               	lsrf	(??_GP3_FSM^(0+128)+1),f
 13738  096B  0CCE               	rrf	??_GP3_FSM^(0+128),f
 13739  096C  084E               	movf	??_GP3_FSM^(0+128),w
 13740  096D  0020               	movlb	0	; select bank0
 13741  096E  00C0               	movwf	_GP3REG	;volatile
 13742                           
 13743                           ;GPports.c: 508: break;
 13744  096F  0008               	return
 13745  0970                     l1268:	
 13746                           ;GPports.c: 510: case GP_WAITRISE:
 13747                           
 13748                           
 13749                           ;GPports.c: 511: if (PORTCbits.RC5 == 1) {
 13750  0970  0020               	movlb	0	; select bank0
 13751  0971  1E8E               	btfss	14,5	;volatile
 13752  0972  0008               	return
 13753                           
 13754                           ;GPports.c: 512: GP3REG = 1;
 13755  0973  3001               	movlw	1
 13756  0974  00C0               	movwf	_GP3REG	;volatile
 13757                           
 13758                           ;GPports.c: 513: Int2StatusUpdate(E_GP3POS);
 13759  0975  3010               	movlw	16
 13760  0976  22BE  3188         	fcall	_Int2StatusUpdate
 13761                           
 13762                           ;GPports.c: 514: if ((GP3CONF & 0x08) != 0) {
 13763  0978  1DC6               	btfss	_GP3CONF,3	;volatile
 13764  0979  297B               	goto	l7832
 13765                           
 13766                           ;GPports.c: 515: SetInterrupt();
 13767  097A  22B5               	fcall	_SetInterrupt
 13768  097B                     l7832:
 13769                           
 13770                           ;GPports.c: 516: };GPports.c: 517: gp3_fsm = GP_WAITFALL;
 13771  097B  3003               	movlw	3
 13772  097C  0021               	movlb	1	; select bank1
 13773  097D  00AF               	movwf	_gp3_fsm^(0+128)
 13774  097E  0008               	return
 13775  097F                     l1271:	
 13776                           ;GPports.c: 521: case GP_WAITFALL:
 13777                           
 13778                           
 13779                           ;GPports.c: 522: if (PORTCbits.RC5 == 0) {
 13780  097F  0020               	movlb	0	; select bank0
 13781  0980  1A8E               	btfsc	14,5	;volatile
 13782  0981  0008               	return
 13783                           
 13784                           ;GPports.c: 524: GP3REG = 0;
 13785  0982  01C0               	clrf	_GP3REG	;volatile
 13786                           
 13787                           ;GPports.c: 525: Int2StatusUpdate(E_GP3NEG);
 13788  0983  3020               	movlw	32
 13789  0984  22BE  3188         	fcall	_Int2StatusUpdate
 13790                           
 13791                           ;GPports.c: 526: if ((GP3CONF & 0x10) != 0) {
 13792  0986  1E46               	btfss	_GP3CONF,4	;volatile
 13793  0987  295E               	goto	l7818
 13794                           
 13795                           ;GPports.c: 527: SetInterrupt();
 13796  0988  22B5  3188         	fcall	_SetInterrupt
 13797  098A  295E               	goto	l7818
 13798  098B                     l7846:
 13799  098B  0021               	movlb	1	; select bank1
 13800  098C  082F               	movf	_gp3_fsm^(0+128),w
 13801                           
 13802                           ; Switch size 1, requested type "speed"
 13803                           ; Number of cases is 4, Range of values is 0 to 3
 13804                           ; switch strategies available:
 13805                           ; Name         Instructions Cycles
 13806                           ; direct_byte           14     6 (fixed)
 13807                           ; simple_byte           13     7 (average)
 13808                           ; jumptable            260     6 (fixed)
 13809                           ;	Chosen strategy is direct_byte
 13810  098D  0084               	movwf	4
 13811  098E  3004               	movlw	4
 13812  098F  0204               	subwf	4,w
 13813  0990  1803               	skipnc
 13814  0991  0008               	return
 13815  0992  3190               	movlp	high S8424
 13816  0993  3504               	lslf	4,w
 13817  0994  3EE4               	addlw	low S8424
 13818  0995  0082               	movwf	2
 13819  0996  0008               	return
 13820  0997                     __end_of_GP3_FSM:
 13821  0997                     __ptext22:	
 13822 ;; *************** function _ADC_GetConversion *****************
 13823 ;; Defined at:
 13824 ;;		line 87 in file "mcc_generated_files/adc.c"
 13825 ;; Parameters:    Size  Location     Type
 13826 ;;  channel         1    wreg     enum E6505
 13827 ;; Auto vars:     Size  Location     Type
 13828 ;;  channel         1    3[BANK1 ] enum E6505
 13829 ;; Return value:  Size  Location     Type
 13830 ;;                  2    0[BANK1 ] unsigned int 
 13831 ;; Registers used:
 13832 ;;		wreg, status,2, status,0
 13833 ;; Tracked objects:
 13834 ;;		On entry : 1E/1
 13835 ;;		On exit  : 1F/1
 13836 ;;		Unchanged: 0/0
 13837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13838 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13839 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13840 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13841 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13842 ;;Total ram usage:        4 bytes
 13843 ;; Hardware stack levels used:    1
 13844 ;; Hardware stack levels required when called:    7
 13845 ;; This function calls:
 13846 ;;		Nothing
 13847 ;; This function is called by:
 13848 ;;		_GP1_FSM
 13849 ;;		_GP2_FSM
 13850 ;;		_GP3_FSM
 13851 ;; This function uses a non-reentrant model
 13852 ;;
 13853                           
 13854                           
 13855                           ;psect for function _ADC_GetConversion
 13856  0997                     _ADC_GetConversion:
 13857                           
 13858                           ;incstack = 0
 13859                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 13860                           ;ADC_GetConversion@channel stored from wreg
 13861  0997  0021               	movlb	1	; select bank1
 13862  0998  00CD               	movwf	ADC_GetConversion@channel^(0+128)
 13863                           
 13864                           ;adc.c: 90: ADCON0bits.CHS = channel;
 13865  0999  00CC               	movwf	??_ADC_GetConversion^(0+128)
 13866  099A  0DCC               	rlf	??_ADC_GetConversion^(0+128),f
 13867  099B  0DCC               	rlf	??_ADC_GetConversion^(0+128),f
 13868  099C  081D               	movf	29,w	;volatile
 13869  099D  064C               	xorwf	??_ADC_GetConversion^(0+128),w
 13870  099E  3903               	andlw	-253
 13871  099F  064C               	xorwf	??_ADC_GetConversion^(0+128),w
 13872  09A0  009D               	movwf	29	;volatile
 13873                           
 13874                           ;adc.c: 93: ADCON0bits.ADON = 1;
 13875  09A1  141D               	bsf	29,0	;volatile
 13876                           
 13877                           ;adc.c: 96: _delay((unsigned long)((5)*(32000000/4000000.0)));
 13878  09A2  300D               	movlw	13
 13879  09A3                     u5727:
 13880  09A3  0B89               	decfsz	9,f
 13881  09A4  29A3               	goto	u5727
 13882  09A5  0000               	nop
 13883                           
 13884                           ;adc.c: 99: ADCON0bits.ADGO = 1;
 13885  09A6  0021               	movlb	1	; select bank1
 13886  09A7  149D               	bsf	29,1	;volatile
 13887  09A8                     l249:	
 13888                           ;adc.c: 103: {
 13889                           
 13890  09A8  189D               	btfsc	29,1	;volatile
 13891  09A9  29A8               	goto	l249
 13892                           
 13893                           ;adc.c: 104: };adc.c: 107: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 13894  09AA  081C               	movf	28,w	;volatile
 13895  09AB  00CB               	movwf	(?_ADC_GetConversion+1)^(0+128)
 13896  09AC  01CA               	clrf	?_ADC_GetConversion^(0+128)
 13897  09AD  081B               	movf	27,w	;volatile
 13898  09AE  07CA               	addwf	?_ADC_GetConversion^(0+128),f
 13899  09AF  1803               	skipnc
 13900  09B0  0ACB               	incf	(?_ADC_GetConversion+1)^(0+128),f
 13901  09B1  0008               	return
 13902  09B2                     __end_of_ADC_GetConversion:
 13903  09B2                     __ptext21:	
 13904 ;; *************** function _ADC_Initialize *****************
 13905 ;; Defined at:
 13906 ;;		line 65 in file "mcc_generated_files/adc.c"
 13907 ;; Parameters:    Size  Location     Type
 13908 ;;		None
 13909 ;; Auto vars:     Size  Location     Type
 13910 ;;		None
 13911 ;; Return value:  Size  Location     Type
 13912 ;;                  1    wreg      void 
 13913 ;; Registers used:
 13914 ;;		wreg, status,2
 13915 ;; Tracked objects:
 13916 ;;		On entry : 1F/1
 13917 ;;		On exit  : 1F/1
 13918 ;;		Unchanged: 0/0
 13919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13924 ;;Total ram usage:        0 bytes
 13925 ;; Hardware stack levels used:    1
 13926 ;; Hardware stack levels required when called:    7
 13927 ;; This function calls:
 13928 ;;		Nothing
 13929 ;; This function is called by:
 13930 ;;		_GP1_FSM
 13931 ;;		_GP2_FSM
 13932 ;;		_GP3_FSM
 13933 ;; This function uses a non-reentrant model
 13934 ;;
 13935                           
 13936                           
 13937                           ;psect for function _ADC_Initialize
 13938  09B2                     _ADC_Initialize:
 13939  09B2                     l7180:	
 13940                           ;incstack = 0
 13941                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 13942                           
 13943                           
 13944                           ;adc.c: 70: ADCON0 = 0x01;
 13945  09B2  3001               	movlw	1
 13946  09B3  009D               	movwf	29	;volatile
 13947                           
 13948                           ;adc.c: 73: ADCON1 = 0xE0;
 13949  09B4  30E0               	movlw	224
 13950  09B5  009E               	movwf	30	;volatile
 13951                           
 13952                           ;adc.c: 76: ADACT = 0x00;
 13953  09B6  019F               	clrf	31	;volatile
 13954                           
 13955                           ;adc.c: 79: ADRESL = 0x00;
 13956  09B7  019B               	clrf	27	;volatile
 13957                           
 13958                           ;adc.c: 82: ADRESH = 0x00;
 13959  09B8  019C               	clrf	28	;volatile
 13960  09B9  0008               	return
 13961  09BA                     __end_of_ADC_Initialize:
 13962  09BA                     __ptext29:	
 13963 ;; *************** function _FADE_LEDS *****************
 13964 ;; Defined at:
 13965 ;;		line 135 in file "Encoder.c"
 13966 ;; Parameters:    Size  Location     Type
 13967 ;;		None
 13968 ;; Auto vars:     Size  Location     Type
 13969 ;;		None
 13970 ;; Return value:  Size  Location     Type
 13971 ;;                  1    wreg      void 
 13972 ;; Registers used:
 13973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13974 ;; Tracked objects:
 13975 ;;		On entry : 1F/1
 13976 ;;		On exit  : 18/0
 13977 ;;		Unchanged: 0/0
 13978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13983 ;;Total ram usage:        0 bytes
 13984 ;; Hardware stack levels used:    1
 13985 ;; Hardware stack levels required when called:   10
 13986 ;; This function calls:
 13987 ;;		_FadeProcessClear
 13988 ;;		_FadeProcessSet
 13989 ;;		_PWM_BLED
 13990 ;;		_PWM_GLED
 13991 ;;		_PWM_GP3_RLED
 13992 ;; This function is called by:
 13993 ;;		_Encoder_FSM
 13994 ;; This function uses a non-reentrant model
 13995 ;;
 13996                           
 13997                           
 13998                           ;psect for function _FADE_LEDS
 13999  09BA                     _FADE_LEDS:
 14000                           
 14001                           ;Encoder.c: 137: if (C_ETYPE == 0)
 14002                           
 14003                           ;incstack = 0
 14004                           ; Regs used in _FADE_LEDS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14005  09BA  0020               	movlb	0	; select bank0
 14006  09BB  0839               	movf	_C_ETYPE,w	;volatile
 14007  09BC  1903               	btfsc	3,2
 14008  09BD  0008               	return
 14009                           
 14010                           ;Encoder.c: 140: if (FADERGB == 0) {
 14011  09BE  0021               	movlb	1	; select bank1
 14012  09BF  0843               	movf	_FADERGB^(0+128),w	;volatile
 14013  09C0  1D03               	btfss	3,2
 14014  09C1  29DE               	goto	l7878
 14015                           
 14016                           ;Encoder.c: 141: if (temp_red != RLED) {
 14017  09C2  0020               	movlb	0	; select bank0
 14018  09C3  0833               	movf	_temp_red,w
 14019  09C4  0645               	xorwf	_RLED,w	;volatile
 14020  09C5  1903               	skipnz
 14021  09C6  29CC               	goto	l7864
 14022                           
 14023                           ;Encoder.c: 142: temp_red = RLED;
 14024  09C7  0845               	movf	_RLED,w	;volatile
 14025  09C8  00B3               	movwf	_temp_red
 14026                           
 14027                           ;Encoder.c: 143: PWM_GP3_RLED(temp_red);
 14028  09C9  3195  2542  3188   	fcall	_PWM_GP3_RLED
 14029  09CC                     l7864:
 14030                           
 14031                           ;Encoder.c: 144: };Encoder.c: 146: if (temp_green != GLED) {
 14032  09CC  0020               	movlb	0	; select bank0
 14033  09CD  0832               	movf	_temp_green,w
 14034  09CE  0644               	xorwf	_GLED,w	;volatile
 14035  09CF  1903               	skipnz
 14036  09D0  29D5               	goto	l7870
 14037                           
 14038                           ;Encoder.c: 147: temp_green = GLED;
 14039  09D1  0844               	movf	_GLED,w	;volatile
 14040  09D2  00B2               	movwf	_temp_green
 14041                           
 14042                           ;Encoder.c: 148: PWM_GLED(temp_green);
 14043  09D3  2242  3188         	fcall	_PWM_GLED
 14044  09D5                     l7870:
 14045                           
 14046                           ;Encoder.c: 149: };Encoder.c: 151: if (temp_blu != BLED) {
 14047  09D5  0020               	movlb	0	; select bank0
 14048  09D6  0831               	movf	_temp_blu,w
 14049  09D7  0643               	xorwf	_BLED,w	;volatile
 14050  09D8  1903               	skipnz
 14051  09D9  0008               	return
 14052                           
 14053                           ;Encoder.c: 152: temp_blu = BLED;
 14054  09DA  0843               	movf	_BLED,w	;volatile
 14055  09DB  00B1               	movwf	_temp_blu
 14056                           
 14057                           ;Encoder.c: 153: PWM_BLED(temp_blu);
 14058  09DC  3188  281D         	ljmp	_PWM_BLED
 14059  09DE                     l7878:
 14060                           
 14061                           ;Encoder.c: 156: };Encoder.c: 157: fade_cnt++;
 14062  09DE  0AAB               	incf	_fade_cnt^(0+128),f
 14063                           
 14064                           ;Encoder.c: 158: if (fade_cnt >= FADERGB) {
 14065  09DF  0843               	movf	_FADERGB^(0+128),w	;volatile
 14066  09E0  022B               	subwf	_fade_cnt^(0+128),w
 14067  09E1  1C03               	skipc
 14068  09E2  0008               	return
 14069                           
 14070                           ;Encoder.c: 159: fade_cnt = 0;
 14071  09E3  01AB               	clrf	_fade_cnt^(0+128)
 14072                           
 14073                           ;Encoder.c: 161: if (temp_red != RLED) {
 14074  09E4  0020               	movlb	0	; select bank0
 14075  09E5  0833               	movf	_temp_red,w
 14076  09E6  0645               	xorwf	_RLED,w	;volatile
 14077  09E7  1903               	skipnz
 14078  09E8  2A01               	goto	l7902
 14079                           
 14080                           ;Encoder.c: 163: if (temp_red < RLED) {
 14081  09E9  0845               	movf	_RLED,w	;volatile
 14082  09EA  0233               	subwf	_temp_red,w
 14083  09EB  1803               	skipnc
 14084  09EC  29EE               	goto	l7890
 14085                           
 14086                           ;Encoder.c: 164: temp_red++;
 14087  09ED  0AB3               	incf	_temp_red,f
 14088  09EE                     l7890:
 14089                           
 14090                           ;Encoder.c: 165: };Encoder.c: 166: if (temp_red > RLED) {
 14091  09EE  0833               	movf	_temp_red,w
 14092  09EF  0245               	subwf	_RLED,w	;volatile
 14093  09F0  1C03               	btfss	3,0
 14094                           
 14095                           ;Encoder.c: 167: temp_red--;
 14096  09F1  03B3               	decf	_temp_red,f
 14097                           
 14098                           ;Encoder.c: 168: };Encoder.c: 170: PWM_GP3_RLED(temp_red);
 14099  09F2  0833               	movf	_temp_red,w
 14100  09F3  3195  2542  3188   	fcall	_PWM_GP3_RLED
 14101                           
 14102                           ;Encoder.c: 171: if (temp_red == RLED) {
 14103  09F6  0020               	movlb	0	; select bank0
 14104  09F7  0833               	movf	_temp_red,w
 14105  09F8  0645               	xorwf	_RLED,w	;volatile
 14106                           
 14107                           ;Encoder.c: 172: FadeProcessClear(F_FER);
 14108  09F9  3001               	movlw	1
 14109  09FA  1D03               	skipz
 14110  09FB  29FF               	goto	L4
 14111  09FC  2236  3188         	fcall	_FadeProcessClear
 14112                           
 14113                           ;Encoder.c: 173: } else {
 14114  09FE  2A01               	goto	l7902
 14115  09FF                     L4:	
 14116                           ;Encoder.c: 174: FadeProcessSet(F_FER);
 14117                           
 14118  09FF  223E  3188         	fcall	_FadeProcessSet
 14119  0A01                     l7902:
 14120                           
 14121                           ;Encoder.c: 175: };Encoder.c: 176: };Encoder.c: 178: if (temp_green != GLED) {
 14122  0A01  0020               	movlb	0	; select bank0
 14123  0A02  0832               	movf	_temp_green,w
 14124  0A03  0644               	xorwf	_GLED,w	;volatile
 14125  0A04  1903               	skipnz
 14126  0A05  2A1D               	goto	l7920
 14127                           
 14128                           ;Encoder.c: 180: if (temp_green < GLED) {
 14129  0A06  0844               	movf	_GLED,w	;volatile
 14130  0A07  0232               	subwf	_temp_green,w
 14131  0A08  1803               	skipnc
 14132  0A09  2A0B               	goto	l7908
 14133                           
 14134                           ;Encoder.c: 181: temp_green++;
 14135  0A0A  0AB2               	incf	_temp_green,f
 14136  0A0B                     l7908:
 14137                           
 14138                           ;Encoder.c: 182: };Encoder.c: 183: if (temp_green > GLED) {
 14139  0A0B  0832               	movf	_temp_green,w
 14140  0A0C  0244               	subwf	_GLED,w	;volatile
 14141  0A0D  1C03               	btfss	3,0
 14142                           
 14143                           ;Encoder.c: 184: temp_green--;
 14144  0A0E  03B2               	decf	_temp_green,f
 14145                           
 14146                           ;Encoder.c: 185: };Encoder.c: 187: PWM_GLED(temp_green);
 14147  0A0F  0832               	movf	_temp_green,w
 14148  0A10  2242  3188         	fcall	_PWM_GLED
 14149                           
 14150                           ;Encoder.c: 188: if (temp_green == GLED) {
 14151  0A12  0020               	movlb	0	; select bank0
 14152  0A13  0832               	movf	_temp_green,w
 14153  0A14  0644               	xorwf	_GLED,w	;volatile
 14154                           
 14155                           ;Encoder.c: 189: FadeProcessClear(F_FEG);
 14156  0A15  3002               	movlw	2
 14157  0A16  1D03               	skipz
 14158  0A17  2A1B               	goto	L5
 14159  0A18  2236  3188         	fcall	_FadeProcessClear
 14160                           
 14161                           ;Encoder.c: 190: } else {
 14162  0A1A  2A1D               	goto	l7920
 14163  0A1B                     L5:	
 14164                           ;Encoder.c: 191: FadeProcessSet(F_FEG);
 14165                           
 14166  0A1B  223E  3188         	fcall	_FadeProcessSet
 14167  0A1D                     l7920:
 14168                           
 14169                           ;Encoder.c: 193: };Encoder.c: 194: };Encoder.c: 197: if (temp_blu != BLED) {
 14170  0A1D  0020               	movlb	0	; select bank0
 14171  0A1E  0831               	movf	_temp_blu,w
 14172  0A1F  0643               	xorwf	_BLED,w	;volatile
 14173  0A20  1903               	skipnz
 14174  0A21  0008               	return
 14175                           
 14176                           ;Encoder.c: 199: if (temp_blu < BLED) {
 14177  0A22  0843               	movf	_BLED,w	;volatile
 14178  0A23  0231               	subwf	_temp_blu,w
 14179  0A24  1C03               	btfss	3,0
 14180                           
 14181                           ;Encoder.c: 200: temp_blu++;
 14182  0A25  0AB1               	incf	_temp_blu,f
 14183                           
 14184                           ;Encoder.c: 201: };Encoder.c: 202: if (temp_blu > BLED) {
 14185  0A26  0831               	movf	_temp_blu,w
 14186  0A27  0243               	subwf	_BLED,w	;volatile
 14187  0A28  1C03               	btfss	3,0
 14188                           
 14189                           ;Encoder.c: 203: temp_blu--;
 14190  0A29  03B1               	decf	_temp_blu,f
 14191                           
 14192                           ;Encoder.c: 204: };Encoder.c: 206: PWM_BLED(temp_blu);
 14193  0A2A  0831               	movf	_temp_blu,w
 14194  0A2B  3188  201D  3188   	fcall	_PWM_BLED
 14195                           
 14196                           ;Encoder.c: 207: if (temp_blu == BLED) {
 14197  0A2E  0020               	movlb	0	; select bank0
 14198  0A2F  0831               	movf	_temp_blu,w
 14199  0A30  0643               	xorwf	_BLED,w	;volatile
 14200                           
 14201                           ;Encoder.c: 208: FadeProcessClear(F_FEB);
 14202  0A31  3004               	movlw	4
 14203  0A32  1D03               	skipz
 14204  0A33  2A35               	goto	L6
 14205  0A34  2A36               	ljmp	_FadeProcessClear
 14206  0A35                     L6:	
 14207                           ;Encoder.c: 211: FadeProcessSet(F_FEB);
 14208                           
 14209                           ;Encoder.c: 209: } else {
 14210                           
 14211  0A35  2A3E               	ljmp	_FadeProcessSet
 14212  0A36                     __end_of_FADE_LEDS:
 14213  0A36                     __ptext35:	
 14214 ;; *************** function _FadeProcessClear *****************
 14215 ;; Defined at:
 14216 ;;		line 160 in file "DataVariable.c"
 14217 ;; Parameters:    Size  Location     Type
 14218 ;;  stat            1    wreg     enum E96
 14219 ;; Auto vars:     Size  Location     Type
 14220 ;;  stat            1    2[BANK1 ] enum E96
 14221 ;; Return value:  Size  Location     Type
 14222 ;;                  1    wreg      void 
 14223 ;; Registers used:
 14224 ;;		wreg, status,2, status,0, pclath, cstack
 14225 ;; Tracked objects:
 14226 ;;		On entry : 1F/0
 14227 ;;		On exit  : 1C/0
 14228 ;;		Unchanged: 0/0
 14229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14231 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14233 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14234 ;;Total ram usage:        1 bytes
 14235 ;; Hardware stack levels used:    1
 14236 ;; Hardware stack levels required when called:    9
 14237 ;; This function calls:
 14238 ;;		_Int2StatusUpdate
 14239 ;;		_SetInterrupt
 14240 ;; This function is called by:
 14241 ;;		_FADE_GP1
 14242 ;;		_FADE_GP2
 14243 ;;		_FADE_GP3
 14244 ;;		_FADE_LEDS
 14245 ;; This function uses a non-reentrant model
 14246 ;;
 14247                           
 14248                           
 14249                           ;psect for function _FadeProcessClear
 14250  0A36                     _FadeProcessClear:
 14251                           
 14252                           ;incstack = 0
 14253                           ; Regs used in _FadeProcessClear: [wreg+status,2+status,0+pclath+cstack]
 14254                           ;FadeProcessClear@stat stored from wreg
 14255  0A36  0021               	movlb	1	; select bank1
 14256  0A37  00CC               	movwf	FadeProcessClear@stat^(0+128)
 14257                           
 14258                           ;DataVariable.c: 161: FSTATUS &= ~(uint8_t) stat;
 14259  0A38  094C               	comf	FadeProcessClear@stat^(0+128),w
 14260  0A39  05C6               	andwf	_FSTATUS^(0+128),f	;volatile
 14261                           
 14262                           ;DataVariable.c: 162: Int2StatusUpdate(E_GPFADE);
 14263  0A3A  3040               	movlw	64
 14264  0A3B  22BE  3188         	fcall	_Int2StatusUpdate
 14265                           
 14266                           ;DataVariable.c: 164: SetInterrupt();
 14267  0A3D  2AB5               	ljmp	l7146
 14268  0A3E                     __end_of_FadeProcessClear:
 14269  0A3E                     __ptext34:	
 14270 ;; *************** function _FadeProcessSet *****************
 14271 ;; Defined at:
 14272 ;;		line 152 in file "DataVariable.c"
 14273 ;; Parameters:    Size  Location     Type
 14274 ;;  stat            1    wreg     enum E96
 14275 ;; Auto vars:     Size  Location     Type
 14276 ;;  stat            1    0[BANK1 ] enum E96
 14277 ;; Return value:  Size  Location     Type
 14278 ;;                  1    wreg      void 
 14279 ;; Registers used:
 14280 ;;		wreg, status,2, status,0
 14281 ;; Tracked objects:
 14282 ;;		On entry : 1F/0
 14283 ;;		On exit  : 1F/1
 14284 ;;		Unchanged: 0/0
 14285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14287 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14289 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14290 ;;Total ram usage:        1 bytes
 14291 ;; Hardware stack levels used:    1
 14292 ;; Hardware stack levels required when called:    7
 14293 ;; This function calls:
 14294 ;;		Nothing
 14295 ;; This function is called by:
 14296 ;;		_FADE_GP1
 14297 ;;		_FADE_GP2
 14298 ;;		_FADE_GP3
 14299 ;;		_FADE_LEDS
 14300 ;; This function uses a non-reentrant model
 14301 ;;
 14302                           
 14303                           
 14304                           ;psect for function _FadeProcessSet
 14305  0A3E                     _FadeProcessSet:
 14306                           
 14307                           ;incstack = 0
 14308                           ; Regs used in _FadeProcessSet: [wreg+status,2+status,0]
 14309                           ;FadeProcessSet@stat stored from wreg
 14310  0A3E  0021               	movlb	1	; select bank1
 14311  0A3F  00CA               	movwf	FadeProcessSet@stat^(0+128)
 14312                           
 14313                           ;DataVariable.c: 153: FSTATUS |= (uint8_t) stat;
 14314  0A40  04C6               	iorwf	_FSTATUS^(0+128),f	;volatile
 14315  0A41  0008               	return
 14316  0A42                     __end_of_FadeProcessSet:
 14317  0A42                     __ptext31:	
 14318 ;; *************** function _PWM_GLED *****************
 14319 ;; Defined at:
 14320 ;;		line 130 in file "PWM.c"
 14321 ;; Parameters:    Size  Location     Type
 14322 ;;  duty            1    wreg     unsigned char 
 14323 ;; Auto vars:     Size  Location     Type
 14324 ;;  duty            1   12[BANK1 ] unsigned char 
 14325 ;; Return value:  Size  Location     Type
 14326 ;;                  1    wreg      void 
 14327 ;; Registers used:
 14328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14329 ;; Tracked objects:
 14330 ;;		On entry : 1F/0
 14331 ;;		On exit  : 1F/5
 14332 ;;		Unchanged: 0/0
 14333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14335 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14336 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14337 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 14338 ;;Total ram usage:        7 bytes
 14339 ;; Hardware stack levels used:    1
 14340 ;; Hardware stack levels required when called:    8
 14341 ;; This function calls:
 14342 ;;		___wmul
 14343 ;; This function is called by:
 14344 ;;		_FADE_LEDS
 14345 ;; This function uses a non-reentrant model
 14346 ;;
 14347                           
 14348                           
 14349                           ;psect for function _PWM_GLED
 14350  0A42                     _PWM_GLED:
 14351                           
 14352                           ;incstack = 0
 14353                           ; Regs used in _PWM_GLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14354                           ;PWM_GLED@duty stored from wreg
 14355  0A42  0021               	movlb	1	; select bank1
 14356  0A43  00D6               	movwf	PWM_GLED@duty^(0+128)
 14357                           
 14358                           ;PWM.c: 132: if (duty == 0) {
 14359  0A44  0856               	movf	PWM_GLED@duty^(0+128),w
 14360  0A45  1D03               	btfss	3,2
 14361  0A46  2A5B               	goto	l7374
 14362                           
 14363                           ;PWM.c: 134: do { LATCbits.LATC4 = 1; } while(0);
 14364  0A47  0022               	movlb	2	; select bank2
 14365  0A48  160E               	bsf	14,4	;volatile
 14366                           
 14367                           ;PWM.c: 135: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 14368  0A49  3055               	movlw	85
 14369  0A4A  003C               	movlb	28	; select bank28
 14370  0A4B  008F               	movwf	15	;volsfr
 14371  0A4C  30AA               	movlw	170
 14372  0A4D  008F               	movwf	15	;volsfr
 14373  0A4E  100F               	bcf	15,0	;volsfr
 14374                           
 14375                           ;PWM.c: 136: RC4PPSbits.RC4PPS = 0x00;
 14376  0A4F  30E0               	movlw	-32
 14377  0A50  003D               	movlb	29	; select bank29
 14378  0A51  05A4               	andwf	36,f	;volatile
 14379                           
 14380                           ;PWM.c: 137: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 14381  0A52  3055               	movlw	85
 14382  0A53  003C               	movlb	28	; select bank28
 14383  0A54  008F               	movwf	15	;volsfr
 14384  0A55  30AA               	movlw	170
 14385  0A56  008F               	movwf	15	;volsfr
 14386  0A57  140F               	bsf	15,0	;volsfr
 14387                           
 14388                           ;PWM.c: 138: CCP2CON = 0;
 14389  0A58  0025               	movlb	5	; select bank5
 14390  0A59  0197               	clrf	23	;volatile
 14391  0A5A  0008               	return
 14392  0A5B                     l7374:
 14393                           
 14394                           ;PWM.c: 140: };PWM.c: 142: if (CCP2CON == 0) {
 14395  0A5B  0025               	movlb	5	; select bank5
 14396  0A5C  0817               	movf	23,w	;volatile
 14397  0A5D  1D03               	btfss	3,2
 14398  0A5E  2A76               	goto	l1523
 14399                           
 14400                           ;PWM.c: 143: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 14401  0A5F  3055               	movlw	85
 14402  0A60  003C               	movlb	28	; select bank28
 14403  0A61  008F               	movwf	15	;volsfr
 14404  0A62  30AA               	movlw	170
 14405  0A63  008F               	movwf	15	;volsfr
 14406  0A64  100F               	bcf	15,0	;volsfr
 14407                           
 14408                           ;PWM.c: 144: RC4PPSbits.RC4PPS = 0x0D;
 14409  0A65  003D               	movlb	29	; select bank29
 14410  0A66  0824               	movf	36,w	;volatile
 14411  0A67  39E0               	andlw	-32
 14412  0A68  380D               	iorlw	13
 14413  0A69  00A4               	movwf	36	;volatile
 14414                           
 14415                           ;PWM.c: 145: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 14416  0A6A  3055               	movlw	85
 14417  0A6B  003C               	movlb	28	; select bank28
 14418  0A6C  008F               	movwf	15	;volsfr
 14419  0A6D  30AA               	movlw	170
 14420  0A6E  008F               	movwf	15	;volsfr
 14421  0A6F  140F               	bsf	15,0	;volsfr
 14422                           
 14423                           ;PWM.c: 146: CCP2CON = 0x8F;
 14424  0A70  308F               	movlw	143
 14425  0A71  0025               	movlb	5	; select bank5
 14426  0A72  0097               	movwf	23	;volatile
 14427                           
 14428                           ;PWM.c: 147: CCPR2 = 0xFFFF;
 14429  0A73  30FF               	movlw	255
 14430  0A74  0096               	movwf	22	;volatile
 14431  0A75  0095               	movwf	21	;volatile
 14432  0A76                     l1523:
 14433                           
 14434                           ;PWM.c: 148: };PWM.c: 150: if (GAMMAGLED == 0) {
 14435  0A76  0020               	movlb	0	; select bank0
 14436  0A77  083B               	movf	_GAMMAGLED,w	;volatile
 14437  0A78  1D03               	btfss	3,2
 14438  0A79  2A8A               	goto	l7394
 14439                           
 14440                           ;PWM.c: 151: CCPR2 = (uint16_t) (0xff - duty) << 2;
 14441  0A7A  0021               	movlb	1	; select bank1
 14442  0A7B  0956               	comf	PWM_GLED@duty^(0+128),w
 14443  0A7C  00D0               	movwf	??_PWM_GLED^(0+128)
 14444  0A7D  01D1               	clrf	(??_PWM_GLED^(0+128)+1)
 14445  0A7E  35D0               	lslf	??_PWM_GLED^(0+128),f
 14446  0A7F  0DD1               	rlf	(??_PWM_GLED^(0+128)+1),f
 14447  0A80  35D0               	lslf	??_PWM_GLED^(0+128),f
 14448  0A81  0DD1               	rlf	(??_PWM_GLED^(0+128)+1),f
 14449  0A82  0850               	movf	??_PWM_GLED^(0+128),w
 14450  0A83  0025               	movlb	5	; select bank5
 14451  0A84  0095               	movwf	21	;volatile
 14452  0A85  0021               	movlb	1	; select bank1
 14453  0A86  0851               	movf	(??_PWM_GLED+1)^(0+128),w
 14454  0A87  0025               	movlb	5	; select bank5
 14455  0A88  0096               	movwf	22	;volatile
 14456                           
 14457                           ;PWM.c: 153: } else {
 14458  0A89  0008               	return
 14459  0A8A                     l7394:
 14460                           
 14461                           ;PWM.c: 155: if (duty > 100)
 14462  0A8A  3065               	movlw	101
 14463  0A8B  0021               	movlb	1	; select bank1
 14464  0A8C  0256               	subwf	PWM_GLED@duty^(0+128),w
 14465  0A8D  1C03               	skipc
 14466  0A8E  2A91               	goto	l7398
 14467                           
 14468                           ;PWM.c: 156: duty = 100;
 14469  0A8F  3064               	movlw	100
 14470  0A90  00D6               	movwf	PWM_GLED@duty^(0+128)
 14471  0A91                     l7398:
 14472                           
 14473                           ;PWM.c: 158: CCPR2 = gamma_table[GAMMAGLED - 1U][(duty - 1U)];
 14474  0A91  0856               	movf	PWM_GLED@duty^(0+128),w
 14475  0A92  00D0               	movwf	??_PWM_GLED^(0+128)
 14476  0A93  01D1               	clrf	(??_PWM_GLED^(0+128)+1)
 14477  0A94  35D0               	lslf	??_PWM_GLED^(0+128),f
 14478  0A95  0DD1               	rlf	(??_PWM_GLED^(0+128)+1),f
 14479  0A96  0020               	movlb	0	; select bank0
 14480  0A97  083B               	movf	_GAMMAGLED,w	;volatile
 14481  0A98  0021               	movlb	1	; select bank1
 14482  0A99  00CA               	movwf	___wmul@multiplier^(0+128)
 14483  0A9A  30C8               	movlw	200
 14484  0A9B  01CB               	clrf	(___wmul@multiplier+1)^(0+128)
 14485  0A9C  00CC               	movwf	___wmul@multiplicand^(0+128)
 14486  0A9D  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
 14487  0A9E  22C7               	fcall	___wmul
 14488  0A9F  30AC               	movlw	low ((_gamma_table| (0+32768)+65334))
 14489  0AA0  00D2               	movwf	(??_PWM_GLED+2)^(0+128)
 14490  0AA1  3080               	movlw	high ((_gamma_table| (0+32768)+65334))
 14491  0AA2  00D3               	movwf	((??_PWM_GLED+2)^(0+128)+1)
 14492  0AA3  084A               	movf	?___wmul^(0+128),w
 14493  0AA4  0752               	addwf	(??_PWM_GLED+2)^(0+128),w
 14494  0AA5  00D4               	movwf	(??_PWM_GLED+4)^(0+128)
 14495  0AA6  084B               	movf	(?___wmul+1)^(0+128),w
 14496  0AA7  3D53               	addwfc	(??_PWM_GLED+3)^(0+128),w
 14497  0AA8  00D5               	movwf	(??_PWM_GLED+5)^(0+128)
 14498  0AA9  0854               	movf	(??_PWM_GLED+4)^(0+128),w
 14499  0AAA  0750               	addwf	??_PWM_GLED^(0+128),w
 14500  0AAB  0084               	movwf	4
 14501  0AAC  0855               	movf	(??_PWM_GLED+5)^(0+128),w
 14502  0AAD  3D51               	addwfc	(??_PWM_GLED+1)^(0+128),w
 14503  0AAE  0085               	movwf	5
 14504  0AAF  3F00               	moviw [0]fsr0
 14505  0AB0  0025               	movlb	5	; select bank5
 14506  0AB1  0095               	movwf	21	;volatile
 14507  0AB2  3F01               	moviw [1]fsr0
 14508  0AB3  0096               	movwf	22	;volatile
 14509  0AB4  0008               	return
 14510  0AB5                     __end_of_PWM_GLED:
 14511  0AB5                     __ptext38:	
 14512 ;; *************** function _SetInterrupt *****************
 14513 ;; Defined at:
 14514 ;;		line 56 in file "main.c"
 14515 ;; Parameters:    Size  Location     Type
 14516 ;;		None
 14517 ;; Auto vars:     Size  Location     Type
 14518 ;;		None
 14519 ;; Return value:  Size  Location     Type
 14520 ;;                  1    wreg      void 
 14521 ;; Registers used:
 14522 ;;		wreg, status,2, status,0
 14523 ;; Tracked objects:
 14524 ;;		On entry : 18/0
 14525 ;;		On exit  : 1C/0
 14526 ;;		Unchanged: 0/0
 14527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14532 ;;Total ram usage:        0 bytes
 14533 ;; Hardware stack levels used:    1
 14534 ;; Hardware stack levels required when called:    7
 14535 ;; This function calls:
 14536 ;;		Nothing
 14537 ;; This function is called by:
 14538 ;;		_FadeProcessClear
 14539 ;;		_GP1_FSM
 14540 ;;		_GP2_FSM
 14541 ;;		_GP3_FSM
 14542 ;;		_Encoder_PushButton_FSM
 14543 ;; This function uses a non-reentrant model
 14544 ;;
 14545                           
 14546                           
 14547                           ;psect for function _SetInterrupt
 14548  0AB5                     _SetInterrupt:
 14549  0AB5                     l7146:	
 14550                           ;incstack = 0
 14551                           ; Regs used in _SetInterrupt: [wreg+status,2+status,0]
 14552                           
 14553                           
 14554                           ;main.c: 58: if ((ESTATUS & INTCONF) != 0) {
 14555  0AB5  0020               	movlb	0	; select bank0
 14556  0AB6  084A               	movf	_ESTATUS,w	;volatile
 14557  0AB7  0021               	movlb	1	; select bank1
 14558  0AB8  0549               	andwf	_INTCONF^(0+128),w	;volatile
 14559  0AB9  1903               	btfsc	3,2
 14560  0ABA  0008               	return
 14561                           
 14562                           ;main.c: 59: do { LATBbits.LATB5 = 0; } while(0);
 14563  0ABB  0022               	movlb	2	; select bank2
 14564  0ABC  128D               	bcf	13,5	;volatile
 14565  0ABD  0008               	return
 14566  0ABE                     __end_of_SetInterrupt:
 14567  0ABE                     __ptext36:	
 14568 ;; *************** function _Int2StatusUpdate *****************
 14569 ;; Defined at:
 14570 ;;		line 143 in file "DataVariable.c"
 14571 ;; Parameters:    Size  Location     Type
 14572 ;;  stat            1    wreg     enum E87
 14573 ;; Auto vars:     Size  Location     Type
 14574 ;;  stat            1    1[BANK1 ] enum E87
 14575 ;; Return value:  Size  Location     Type
 14576 ;;                  1    wreg      void 
 14577 ;; Registers used:
 14578 ;;		wreg, status,2, status,0, pclath, cstack
 14579 ;; Tracked objects:
 14580 ;;		On entry : 1E/0
 14581 ;;		On exit  : 1F/0
 14582 ;;		Unchanged: 0/0
 14583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14585 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14587 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14588 ;;Total ram usage:        1 bytes
 14589 ;; Hardware stack levels used:    1
 14590 ;; Hardware stack levels required when called:    8
 14591 ;; This function calls:
 14592 ;;		_EncoderStatusUpdate
 14593 ;; This function is called by:
 14594 ;;		_FadeProcessClear
 14595 ;;		_GP1_FSM
 14596 ;;		_GP2_FSM
 14597 ;;		_GP3_FSM
 14598 ;; This function uses a non-reentrant model
 14599 ;;
 14600                           
 14601                           
 14602                           ;psect for function _Int2StatusUpdate
 14603  0ABE                     _Int2StatusUpdate:
 14604                           
 14605                           ;incstack = 0
 14606                           ; Regs used in _Int2StatusUpdate: [wreg+status,2+status,0+pclath+cstack]
 14607                           ;Int2StatusUpdate@stat stored from wreg
 14608  0ABE  0021               	movlb	1	; select bank1
 14609  0ABF  00CB               	movwf	Int2StatusUpdate@stat^(0+128)
 14610                           
 14611                           ;DataVariable.c: 144: I2STATUS |= (uint8_t) stat;
 14612  0AC0  04C7               	iorwf	_I2STATUS^(0+128),f	;volatile
 14613                           
 14614                           ;DataVariable.c: 145: EncoderStatusUpdate(S_INT2);
 14615  0AC1  3080               	movlw	128
 14616  0AC2  2AC3               	ljmp	_EncoderStatusUpdate
 14617  0AC3                     __end_of_Int2StatusUpdate:
 14618  0AC3                     __ptext41:	
 14619 ;; *************** function _EncoderStatusUpdate *****************
 14620 ;; Defined at:
 14621 ;;		line 135 in file "DataVariable.c"
 14622 ;; Parameters:    Size  Location     Type
 14623 ;;  stat            1    wreg     enum E77
 14624 ;; Auto vars:     Size  Location     Type
 14625 ;;  stat            1    0[BANK1 ] enum E77
 14626 ;; Return value:  Size  Location     Type
 14627 ;;                  1    wreg      void 
 14628 ;; Registers used:
 14629 ;;		wreg, status,2, status,0
 14630 ;; Tracked objects:
 14631 ;;		On entry : 1F/1
 14632 ;;		On exit  : 1F/0
 14633 ;;		Unchanged: 0/0
 14634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14636 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14638 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 14639 ;;Total ram usage:        1 bytes
 14640 ;; Hardware stack levels used:    1
 14641 ;; Hardware stack levels required when called:    7
 14642 ;; This function calls:
 14643 ;;		Nothing
 14644 ;; This function is called by:
 14645 ;;		_Int2StatusUpdate
 14646 ;;		_Encoder_PushButton_FSM
 14647 ;; This function uses a non-reentrant model
 14648 ;;
 14649                           
 14650                           
 14651                           ;psect for function _EncoderStatusUpdate
 14652  0AC3                     _EncoderStatusUpdate:
 14653                           
 14654                           ;incstack = 0
 14655                           ; Regs used in _EncoderStatusUpdate: [wreg+status,2+status,0]
 14656                           ;EncoderStatusUpdate@stat stored from wreg
 14657  0AC3  00CA               	movwf	EncoderStatusUpdate@stat^(0+128)
 14658                           
 14659                           ;DataVariable.c: 136: ESTATUS |= (uint8_t) stat;
 14660  0AC4  0020               	movlb	0	; select bank0
 14661  0AC5  04CA               	iorwf	_ESTATUS,f	;volatile
 14662  0AC6  0008               	return
 14663  0AC7                     __end_of_EncoderStatusUpdate:
 14664  0AC7                     __ptext33:	
 14665 ;; *************** function ___wmul *****************
 14666 ;; Defined at:
 14667 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
 14668 ;; Parameters:    Size  Location     Type
 14669 ;;  multiplier      2    0[BANK1 ] unsigned int 
 14670 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 14671 ;; Auto vars:     Size  Location     Type
 14672 ;;  product         2    4[BANK1 ] unsigned int 
 14673 ;; Return value:  Size  Location     Type
 14674 ;;                  2    0[BANK1 ] unsigned int 
 14675 ;; Registers used:
 14676 ;;		wreg, status,2, status,0
 14677 ;; Tracked objects:
 14678 ;;		On entry : 1F/1
 14679 ;;		On exit  : 1F/1
 14680 ;;		Unchanged: 0/0
 14681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14682 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14683 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 14684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14685 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 14686 ;;Total ram usage:        6 bytes
 14687 ;; Hardware stack levels used:    1
 14688 ;; Hardware stack levels required when called:    7
 14689 ;; This function calls:
 14690 ;;		Nothing
 14691 ;; This function is called by:
 14692 ;;		_PWM_GP1
 14693 ;;		_PWM_GP2
 14694 ;;		_PWM_GP3_RLED
 14695 ;;		_PWM_GLED
 14696 ;;		_PWM_BLED
 14697 ;; This function uses a non-reentrant model
 14698 ;;
 14699                           
 14700                           
 14701                           ;psect for function ___wmul
 14702  0AC7                     ___wmul:
 14703                           
 14704                           ;incstack = 0
 14705                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14706  0AC7  01CE               	clrf	___wmul@product^(0+128)
 14707  0AC8  01CF               	clrf	(___wmul@product+1)^(0+128)
 14708  0AC9                     l7166:
 14709  0AC9  1C4A               	btfss	___wmul@multiplier^(0+128),0
 14710  0ACA  2ACF               	goto	l7170
 14711  0ACB  084C               	movf	___wmul@multiplicand^(0+128),w
 14712  0ACC  07CE               	addwf	___wmul@product^(0+128),f
 14713  0ACD  084D               	movf	(___wmul@multiplicand+1)^(0+128),w
 14714  0ACE  3DCF               	addwfc	(___wmul@product+1)^(0+128),f
 14715  0ACF                     l7170:
 14716  0ACF  35CC               	lslf	___wmul@multiplicand^(0+128),f
 14717  0AD0  0DCD               	rlf	(___wmul@multiplicand+1)^(0+128),f
 14718  0AD1  36CB               	lsrf	(___wmul@multiplier+1)^(0+128),f
 14719  0AD2  0CCA               	rrf	___wmul@multiplier^(0+128),f
 14720  0AD3  084A               	movf	___wmul@multiplier^(0+128),w
 14721  0AD4  044B               	iorwf	(___wmul@multiplier+1)^(0+128),w
 14722  0AD5  1D03               	btfss	3,2
 14723  0AD6  2AC9               	goto	l7166
 14724  0AD7  084F               	movf	(___wmul@product+1)^(0+128),w
 14725  0AD8  00CB               	movwf	(?___wmul+1)^(0+128)
 14726  0AD9  084E               	movf	___wmul@product^(0+128),w
 14727  0ADA  00CA               	movwf	?___wmul^(0+128)
 14728  0ADB  0008               	return
 14729  0ADC                     __end_of___wmul:
 14730  0ADC                     __ptext26:	
 14731 ;; *************** function _FADE_GP1 *****************
 14732 ;; Defined at:
 14733 ;;		line 26 in file "GPports.c"
 14734 ;; Parameters:    Size  Location     Type
 14735 ;;		None
 14736 ;; Auto vars:     Size  Location     Type
 14737 ;;		None
 14738 ;; Return value:  Size  Location     Type
 14739 ;;                  1    wreg      void 
 14740 ;; Registers used:
 14741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14742 ;; Tracked objects:
 14743 ;;		On entry : 1C/1
 14744 ;;		On exit  : 10/0
 14745 ;;		Unchanged: 0/0
 14746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14751 ;;Total ram usage:        0 bytes
 14752 ;; Hardware stack levels used:    1
 14753 ;; Hardware stack levels required when called:   10
 14754 ;; This function calls:
 14755 ;;		_FadeProcessClear
 14756 ;;		_FadeProcessSet
 14757 ;;		_PWM_GP1
 14758 ;; This function is called by:
 14759 ;;		_GP_Ports_FSM
 14760 ;; This function uses a non-reentrant model
 14761 ;;
 14762                           
 14763                           
 14764                           ;psect for function _FADE_GP1
 14765  0ADC                     _FADE_GP1:
 14766                           
 14767                           ;GPports.c: 28: if ((GP1CONF & 0x03) != 0x00)
 14768                           
 14769                           ;incstack = 0
 14770                           ; Regs used in _FADE_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14771  0ADC  0020               	movlb	0	; select bank0
 14772  0ADD  0848               	movf	_GP1CONF,w	;volatile
 14773  0ADE  3903               	andlw	3
 14774  0ADF  1D03               	btfss	3,2
 14775  0AE0  0008               	return
 14776                           
 14777                           ;GPports.c: 31: if (FADEGP == 0) {
 14778  0AE1  083F               	movf	_FADEGP,w	;volatile
 14779  0AE2  1D03               	btfss	3,2
 14780  0AE3  2AEC               	goto	l7624
 14781                           
 14782                           ;GPports.c: 32: if (temp_gp1 != GP1REG) {
 14783  0AE4  0836               	movf	_temp_gp1,w
 14784  0AE5  0642               	xorwf	_GP1REG,w	;volatile
 14785  0AE6  1903               	skipnz
 14786  0AE7  0008               	return
 14787                           
 14788                           ;GPports.c: 33: temp_gp1 = GP1REG;
 14789  0AE8  0842               	movf	_GP1REG,w	;volatile
 14790  0AE9  00B6               	movwf	_temp_gp1
 14791                           
 14792                           ;GPports.c: 34: PWM_GP1(temp_gp1);
 14793  0AEA  3193  2BDE         	ljmp	_PWM_GP1
 14794  0AEC                     l7624:
 14795                           
 14796                           ;GPports.c: 37: };GPports.c: 39: if (gp_fade_cnt >= FADEGP) {
 14797  0AEC  083F               	movf	_FADEGP,w	;volatile
 14798  0AED  0021               	movlb	1	; select bank1
 14799  0AEE  022E               	subwf	_gp_fade_cnt^(0+128),w
 14800  0AEF  1C03               	skipc
 14801  0AF0  0008               	return
 14802                           
 14803                           ;GPports.c: 40: if (temp_gp1 != GP1REG) {
 14804  0AF1  0020               	movlb	0	; select bank0
 14805  0AF2  0836               	movf	_temp_gp1,w
 14806  0AF3  0642               	xorwf	_GP1REG,w	;volatile
 14807  0AF4  1903               	skipnz
 14808  0AF5  0008               	return
 14809                           
 14810                           ;GPports.c: 42: if (temp_gp1 < GP1REG) {
 14811  0AF6  0842               	movf	_GP1REG,w	;volatile
 14812  0AF7  0236               	subwf	_temp_gp1,w
 14813  0AF8  1C03               	btfss	3,0
 14814                           
 14815                           ;GPports.c: 43: temp_gp1++;
 14816  0AF9  0AB6               	incf	_temp_gp1,f
 14817                           
 14818                           ;GPports.c: 44: };GPports.c: 45: if (temp_gp1 > GP1REG) {
 14819  0AFA  0836               	movf	_temp_gp1,w
 14820  0AFB  0242               	subwf	_GP1REG,w	;volatile
 14821  0AFC  1C03               	btfss	3,0
 14822                           
 14823                           ;GPports.c: 46: temp_gp1--;
 14824  0AFD  03B6               	decf	_temp_gp1,f
 14825                           
 14826                           ;GPports.c: 47: };GPports.c: 49: PWM_GP1(temp_gp1);
 14827  0AFE  0836               	movf	_temp_gp1,w
 14828  0AFF  3193  23DE  3188   	fcall	_PWM_GP1
 14829                           
 14830                           ;GPports.c: 50: if (temp_gp1 == GP1REG) {
 14831  0B02  0020               	movlb	0	; select bank0
 14832  0B03  0836               	movf	_temp_gp1,w
 14833  0B04  0642               	xorwf	_GP1REG,w	;volatile
 14834                           
 14835                           ;GPports.c: 51: FadeProcessClear(F_FGP1);
 14836  0B05  3008               	movlw	8
 14837  0B06  1D03               	skipz
 14838  0B07  2B09               	goto	L3
 14839  0B08  2A36               	ljmp	_FadeProcessClear
 14840  0B09                     L3:	
 14841                           ;GPports.c: 53: FadeProcessSet(F_FGP1);
 14842                           
 14843                           ;GPports.c: 52: } else {
 14844                           
 14845  0B09  2A3E               	ljmp	_FadeProcessSet
 14846  0B0A                     __end_of_FADE_GP1:
 14847                           
 14848                           	psect	swtext1
 14849  10E4                     __pswtext1:
 14850  10E4                     S8424:
 14851  10E4  3189  294B         	ljmp	l7808
 14852  10E6  3189  2962         	ljmp	l7822
 14853  10E8  3189  2970         	ljmp	l1268
 14854  10EA  3189  297F         	ljmp	l1271
 14855                           
 14856                           	psect	swtext2
 14857  10EC                     __pswtext2:
 14858  10EC                     S8426:
 14859  10EC  3188  28FB         	ljmp	l7760
 14860  10EE  3189  2912         	ljmp	l7774
 14861  10F0  3189  2920         	ljmp	l1252
 14862  10F2  3189  292F         	ljmp	l1255
 14863                           
 14864                           	psect	swtext3
 14865  10F4                     __pswtext3:
 14866  10F4                     S8428:
 14867  10F4  3188  28B0         	ljmp	l7714
 14868  10F6  3188  28C7         	ljmp	l7728
 14869  10F8  3188  28D5         	ljmp	l1237
 14870  10FA  3188  28E3         	ljmp	l1240
 14871                           
 14872                           	psect	text23
 14873  1514                     __ptext23:	
 14874 ;; *************** function _FADE_GP3 *****************
 14875 ;; Defined at:
 14876 ;;		line 101 in file "GPports.c"
 14877 ;; Parameters:    Size  Location     Type
 14878 ;;		None
 14879 ;; Auto vars:     Size  Location     Type
 14880 ;;		None
 14881 ;; Return value:  Size  Location     Type
 14882 ;;                  1    wreg      void 
 14883 ;; Registers used:
 14884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14885 ;; Tracked objects:
 14886 ;;		On entry : 18/1
 14887 ;;		On exit  : 18/0
 14888 ;;		Unchanged: 0/0
 14889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14894 ;;Total ram usage:        0 bytes
 14895 ;; Hardware stack levels used:    1
 14896 ;; Hardware stack levels required when called:   10
 14897 ;; This function calls:
 14898 ;;		_FadeProcessClear
 14899 ;;		_FadeProcessSet
 14900 ;;		_PWM_GP3_RLED
 14901 ;; This function is called by:
 14902 ;;		_GP_Ports_FSM
 14903 ;; This function uses a non-reentrant model
 14904 ;;
 14905                           
 14906                           
 14907                           ;psect for function _FADE_GP3
 14908  1514                     _FADE_GP3:
 14909                           
 14910                           ;GPports.c: 103: if ((GP3CONF & 0x03) != 0x00)
 14911                           
 14912                           ;incstack = 0
 14913                           ; Regs used in _FADE_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14914  1514  0020               	movlb	0	; select bank0
 14915  1515  0846               	movf	_GP3CONF,w	;volatile
 14916  1516  3903               	andlw	3
 14917  1517  1D03               	btfss	3,2
 14918  1518  0008               	return
 14919                           
 14920                           ;GPports.c: 106: if (FADEGP == 0) {
 14921  1519  083F               	movf	_FADEGP,w	;volatile
 14922  151A  1D03               	btfss	3,2
 14923  151B  2D23               	goto	l7692
 14924                           
 14925                           ;GPports.c: 107: if (temp_gp3 != GP3REG) {
 14926  151C  0834               	movf	_temp_gp3,w
 14927  151D  0640               	xorwf	_GP3REG,w	;volatile
 14928  151E  1903               	skipnz
 14929  151F  0008               	return
 14930                           
 14931                           ;GPports.c: 108: temp_gp3 = GP3REG;
 14932  1520  0840               	movf	_GP3REG,w	;volatile
 14933  1521  00B4               	movwf	_temp_gp3
 14934                           
 14935                           ;GPports.c: 109: PWM_GP3_RLED(temp_gp3);
 14936  1522  2D42               	ljmp	_PWM_GP3_RLED
 14937  1523                     l7692:
 14938                           
 14939                           ;GPports.c: 112: };GPports.c: 114: if (gp_fade_cnt >= FADEGP) {
 14940  1523  083F               	movf	_FADEGP,w	;volatile
 14941  1524  0021               	movlb	1	; select bank1
 14942  1525  022E               	subwf	_gp_fade_cnt^(0+128),w
 14943  1526  1C03               	skipc
 14944  1527  0008               	return
 14945                           
 14946                           ;GPports.c: 115: if (temp_gp3 != GP3REG) {
 14947  1528  0020               	movlb	0	; select bank0
 14948  1529  0834               	movf	_temp_gp3,w
 14949  152A  0640               	xorwf	_GP3REG,w	;volatile
 14950  152B  1903               	skipnz
 14951  152C  0008               	return
 14952                           
 14953                           ;GPports.c: 117: if (temp_gp3 < GP3REG) {
 14954  152D  0840               	movf	_GP3REG,w	;volatile
 14955  152E  0234               	subwf	_temp_gp3,w
 14956  152F  1C03               	btfss	3,0
 14957                           
 14958                           ;GPports.c: 118: temp_gp3++;
 14959  1530  0AB4               	incf	_temp_gp3,f
 14960                           
 14961                           ;GPports.c: 119: };GPports.c: 120: if (temp_gp3 > GP3REG) {
 14962  1531  0834               	movf	_temp_gp3,w
 14963  1532  0240               	subwf	_GP3REG,w	;volatile
 14964  1533  1C03               	btfss	3,0
 14965                           
 14966                           ;GPports.c: 121: temp_gp3--;
 14967  1534  03B4               	decf	_temp_gp3,f
 14968                           
 14969                           ;GPports.c: 122: };GPports.c: 124: PWM_GP3_RLED(temp_gp3);
 14970  1535  0834               	movf	_temp_gp3,w
 14971  1536  2542  3195         	fcall	_PWM_GP3_RLED
 14972                           
 14973                           ;GPports.c: 125: if (temp_gp3 == GP3REG) {
 14974  1538  0020               	movlb	0	; select bank0
 14975  1539  0834               	movf	_temp_gp3,w
 14976  153A  0640               	xorwf	_GP3REG,w	;volatile
 14977                           
 14978                           ;GPports.c: 126: FadeProcessClear(F_FGP3);
 14979  153B  3020               	movlw	32
 14980  153C  1D03               	skipz
 14981  153D  2D40               	goto	L1
 14982  153E  318A  2A36         	ljmp	_FadeProcessClear
 14983  1540                     L1:	
 14984                           ;GPports.c: 128: FadeProcessSet(F_FGP3);
 14985                           
 14986                           ;GPports.c: 127: } else {
 14987                           
 14988  1540  318A  2A3E         	ljmp	_FadeProcessSet
 14989  1542                     __end_of_FADE_GP3:
 14990  1542                     __ptext30:	
 14991 ;; *************** function _PWM_GP3_RLED *****************
 14992 ;; Defined at:
 14993 ;;		line 95 in file "PWM.c"
 14994 ;; Parameters:    Size  Location     Type
 14995 ;;  duty            1    wreg     unsigned char 
 14996 ;; Auto vars:     Size  Location     Type
 14997 ;;  duty            1   12[BANK1 ] unsigned char 
 14998 ;; Return value:  Size  Location     Type
 14999 ;;                  1    wreg      void 
 15000 ;; Registers used:
 15001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15002 ;; Tracked objects:
 15003 ;;		On entry : 1F/0
 15004 ;;		On exit  : 1F/5
 15005 ;;		Unchanged: 0/0
 15006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15008 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15009 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 15010 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 15011 ;;Total ram usage:        7 bytes
 15012 ;; Hardware stack levels used:    1
 15013 ;; Hardware stack levels required when called:    8
 15014 ;; This function calls:
 15015 ;;		___wmul
 15016 ;; This function is called by:
 15017 ;;		_FADE_GP3
 15018 ;;		_FADE_LEDS
 15019 ;; This function uses a non-reentrant model
 15020 ;;
 15021                           
 15022                           
 15023                           ;psect for function _PWM_GP3_RLED
 15024  1542                     _PWM_GP3_RLED:
 15025                           
 15026                           ;incstack = 0
 15027                           ; Regs used in _PWM_GP3_RLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15028                           ;PWM_GP3_RLED@duty stored from wreg
 15029  1542  0021               	movlb	1	; select bank1
 15030  1543  00D6               	movwf	PWM_GP3_RLED@duty^(0+128)
 15031                           
 15032                           ;PWM.c: 97: if (duty == 0) {
 15033  1544  0856               	movf	PWM_GP3_RLED@duty^(0+128),w
 15034  1545  1D03               	btfss	3,2
 15035  1546  2D5B               	goto	l7314
 15036                           
 15037                           ;PWM.c: 99: do { LATCbits.LATC5 = 1; } while(0);
 15038  1547  0022               	movlb	2	; select bank2
 15039  1548  168E               	bsf	14,5	;volatile
 15040                           
 15041                           ;PWM.c: 100: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15042  1549  3055               	movlw	85
 15043  154A  003C               	movlb	28	; select bank28
 15044  154B  008F               	movwf	15	;volsfr
 15045  154C  30AA               	movlw	170
 15046  154D  008F               	movwf	15	;volsfr
 15047  154E  100F               	bcf	15,0	;volsfr
 15048                           
 15049                           ;PWM.c: 101: RC5PPSbits.RC5PPS = 0x00;
 15050  154F  30E0               	movlw	-32
 15051  1550  003D               	movlb	29	; select bank29
 15052  1551  05A5               	andwf	37,f	;volatile
 15053                           
 15054                           ;PWM.c: 102: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15055  1552  3055               	movlw	85
 15056  1553  003C               	movlb	28	; select bank28
 15057  1554  008F               	movwf	15	;volsfr
 15058  1555  30AA               	movlw	170
 15059  1556  008F               	movwf	15	;volsfr
 15060  1557  140F               	bsf	15,0	;volsfr
 15061                           
 15062                           ;PWM.c: 103: CCP1CON = 0;
 15063  1558  0025               	movlb	5	; select bank5
 15064  1559  0193               	clrf	19	;volatile
 15065  155A  0008               	return
 15066  155B                     l7314:
 15067                           
 15068                           ;PWM.c: 105: };PWM.c: 107: if (CCP1CON == 0) {
 15069  155B  0025               	movlb	5	; select bank5
 15070  155C  0813               	movf	19,w	;volatile
 15071  155D  1D03               	btfss	3,2
 15072  155E  2D76               	goto	l1513
 15073                           
 15074                           ;PWM.c: 108: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15075  155F  3055               	movlw	85
 15076  1560  003C               	movlb	28	; select bank28
 15077  1561  008F               	movwf	15	;volsfr
 15078  1562  30AA               	movlw	170
 15079  1563  008F               	movwf	15	;volsfr
 15080  1564  100F               	bcf	15,0	;volsfr
 15081                           
 15082                           ;PWM.c: 109: RC5PPSbits.RC5PPS = 0x0C;
 15083  1565  003D               	movlb	29	; select bank29
 15084  1566  0825               	movf	37,w	;volatile
 15085  1567  39E0               	andlw	-32
 15086  1568  380C               	iorlw	12
 15087  1569  00A5               	movwf	37	;volatile
 15088                           
 15089                           ;PWM.c: 110: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15090  156A  3055               	movlw	85
 15091  156B  003C               	movlb	28	; select bank28
 15092  156C  008F               	movwf	15	;volsfr
 15093  156D  30AA               	movlw	170
 15094  156E  008F               	movwf	15	;volsfr
 15095  156F  140F               	bsf	15,0	;volsfr
 15096                           
 15097                           ;PWM.c: 111: CCP1CON = 0x8F;
 15098  1570  308F               	movlw	143
 15099  1571  0025               	movlb	5	; select bank5
 15100  1572  0093               	movwf	19	;volatile
 15101                           
 15102                           ;PWM.c: 112: CCPR1 = 0xFFFF;
 15103  1573  30FF               	movlw	255
 15104  1574  0092               	movwf	18	;volatile
 15105  1575  0091               	movwf	17	;volatile
 15106  1576                     l1513:
 15107                           
 15108                           ;PWM.c: 113: };PWM.c: 115: if (GAMMAGP3_RLED == 0) {
 15109  1576  0020               	movlb	0	; select bank0
 15110  1577  083C               	movf	_GAMMAGP3_RLED,w	;volatile
 15111  1578  1D03               	btfss	3,2
 15112  1579  2D8A               	goto	l7334
 15113                           
 15114                           ;PWM.c: 117: CCPR1 = (uint16_t) (0xff - duty) << 2;
 15115  157A  0021               	movlb	1	; select bank1
 15116  157B  0956               	comf	PWM_GP3_RLED@duty^(0+128),w
 15117  157C  00D0               	movwf	??_PWM_GP3_RLED^(0+128)
 15118  157D  01D1               	clrf	(??_PWM_GP3_RLED^(0+128)+1)
 15119  157E  35D0               	lslf	??_PWM_GP3_RLED^(0+128),f
 15120  157F  0DD1               	rlf	(??_PWM_GP3_RLED^(0+128)+1),f
 15121  1580  35D0               	lslf	??_PWM_GP3_RLED^(0+128),f
 15122  1581  0DD1               	rlf	(??_PWM_GP3_RLED^(0+128)+1),f
 15123  1582  0850               	movf	??_PWM_GP3_RLED^(0+128),w
 15124  1583  0025               	movlb	5	; select bank5
 15125  1584  0091               	movwf	17	;volatile
 15126  1585  0021               	movlb	1	; select bank1
 15127  1586  0851               	movf	(??_PWM_GP3_RLED+1)^(0+128),w
 15128  1587  0025               	movlb	5	; select bank5
 15129  1588  0092               	movwf	18	;volatile
 15130                           
 15131                           ;PWM.c: 119: } else {
 15132  1589  0008               	return
 15133  158A                     l7334:
 15134                           
 15135                           ;PWM.c: 120: if (duty > 100)
 15136  158A  3065               	movlw	101
 15137  158B  0021               	movlb	1	; select bank1
 15138  158C  0256               	subwf	PWM_GP3_RLED@duty^(0+128),w
 15139  158D  1C03               	skipc
 15140  158E  2D91               	goto	l7338
 15141                           
 15142                           ;PWM.c: 121: duty = 100;
 15143  158F  3064               	movlw	100
 15144  1590  00D6               	movwf	PWM_GP3_RLED@duty^(0+128)
 15145  1591                     l7338:
 15146                           
 15147                           ;PWM.c: 123: CCPR1 = gamma_table[GAMMAGP3_RLED - 1U][(duty - 1U)];
 15148  1591  0856               	movf	PWM_GP3_RLED@duty^(0+128),w
 15149  1592  00D0               	movwf	??_PWM_GP3_RLED^(0+128)
 15150  1593  01D1               	clrf	(??_PWM_GP3_RLED^(0+128)+1)
 15151  1594  35D0               	lslf	??_PWM_GP3_RLED^(0+128),f
 15152  1595  0DD1               	rlf	(??_PWM_GP3_RLED^(0+128)+1),f
 15153  1596  0020               	movlb	0	; select bank0
 15154  1597  083C               	movf	_GAMMAGP3_RLED,w	;volatile
 15155  1598  0021               	movlb	1	; select bank1
 15156  1599  00CA               	movwf	___wmul@multiplier^(0+128)
 15157  159A  30C8               	movlw	200
 15158  159B  01CB               	clrf	(___wmul@multiplier+1)^(0+128)
 15159  159C  00CC               	movwf	___wmul@multiplicand^(0+128)
 15160  159D  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
 15161  159E  318A  22C7         	fcall	___wmul
 15162  15A0  30AC               	movlw	low ((_gamma_table| (0+32768)+65334))
 15163  15A1  00D2               	movwf	(??_PWM_GP3_RLED+2)^(0+128)
 15164  15A2  3080               	movlw	high ((_gamma_table| (0+32768)+65334))
 15165  15A3  00D3               	movwf	((??_PWM_GP3_RLED+2)^(0+128)+1)
 15166  15A4  084A               	movf	?___wmul^(0+128),w
 15167  15A5  0752               	addwf	(??_PWM_GP3_RLED+2)^(0+128),w
 15168  15A6  00D4               	movwf	(??_PWM_GP3_RLED+4)^(0+128)
 15169  15A7  084B               	movf	(?___wmul+1)^(0+128),w
 15170  15A8  3D53               	addwfc	(??_PWM_GP3_RLED+3)^(0+128),w
 15171  15A9  00D5               	movwf	(??_PWM_GP3_RLED+5)^(0+128)
 15172  15AA  0854               	movf	(??_PWM_GP3_RLED+4)^(0+128),w
 15173  15AB  0750               	addwf	??_PWM_GP3_RLED^(0+128),w
 15174  15AC  0084               	movwf	4
 15175  15AD  0855               	movf	(??_PWM_GP3_RLED+5)^(0+128),w
 15176  15AE  3D51               	addwfc	(??_PWM_GP3_RLED+1)^(0+128),w
 15177  15AF  0085               	movwf	5
 15178  15B0  3F00               	moviw [0]fsr0
 15179  15B1  0025               	movlb	5	; select bank5
 15180  15B2  0091               	movwf	17	;volatile
 15181  15B3  3F01               	moviw [1]fsr0
 15182  15B4  0092               	movwf	18	;volatile
 15183  15B5  0008               	return
 15184  15B6                     __end_of_PWM_GP3_RLED:
 15185                           
 15186                           	psect	text24
 15187  1475                     __ptext24:	
 15188 ;; *************** function _FADE_GP2 *****************
 15189 ;; Defined at:
 15190 ;;		line 63 in file "GPports.c"
 15191 ;; Parameters:    Size  Location     Type
 15192 ;;		None
 15193 ;; Auto vars:     Size  Location     Type
 15194 ;;		None
 15195 ;; Return value:  Size  Location     Type
 15196 ;;                  1    wreg      void 
 15197 ;; Registers used:
 15198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15199 ;; Tracked objects:
 15200 ;;		On entry : 10/1
 15201 ;;		On exit  : 18/0
 15202 ;;		Unchanged: 0/0
 15203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15208 ;;Total ram usage:        0 bytes
 15209 ;; Hardware stack levels used:    1
 15210 ;; Hardware stack levels required when called:   10
 15211 ;; This function calls:
 15212 ;;		_FadeProcessClear
 15213 ;;		_FadeProcessSet
 15214 ;;		_PWM_GP2
 15215 ;; This function is called by:
 15216 ;;		_GP_Ports_FSM
 15217 ;; This function uses a non-reentrant model
 15218 ;;
 15219                           
 15220                           
 15221                           ;psect for function _FADE_GP2
 15222  1475                     _FADE_GP2:
 15223                           
 15224                           ;GPports.c: 65: if ((GP2CONF & 0x03) != 0x00)
 15225                           
 15226                           ;incstack = 0
 15227                           ; Regs used in _FADE_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15228  1475  0020               	movlb	0	; select bank0
 15229  1476  0847               	movf	_GP2CONF,w	;volatile
 15230  1477  3903               	andlw	3
 15231  1478  1D03               	btfss	3,2
 15232  1479  0008               	return
 15233                           
 15234                           ;GPports.c: 68: if (FADEGP == 0) {
 15235  147A  083F               	movf	_FADEGP,w	;volatile
 15236  147B  1D03               	btfss	3,2
 15237  147C  2C84               	goto	l7658
 15238                           
 15239                           ;GPports.c: 69: if (temp_gp2 != GP2REG) {
 15240  147D  0835               	movf	_temp_gp2,w
 15241  147E  0641               	xorwf	_GP2REG,w	;volatile
 15242  147F  1903               	skipnz
 15243  1480  0008               	return
 15244                           
 15245                           ;GPports.c: 70: temp_gp2 = GP2REG;
 15246  1481  0841               	movf	_GP2REG,w	;volatile
 15247  1482  00B5               	movwf	_temp_gp2
 15248                           
 15249                           ;GPports.c: 71: PWM_GP2(temp_gp2);
 15250  1483  2CA3               	ljmp	_PWM_GP2
 15251  1484                     l7658:
 15252                           
 15253                           ;GPports.c: 74: };GPports.c: 76: if (gp_fade_cnt >= FADEGP) {
 15254  1484  083F               	movf	_FADEGP,w	;volatile
 15255  1485  0021               	movlb	1	; select bank1
 15256  1486  022E               	subwf	_gp_fade_cnt^(0+128),w
 15257  1487  1C03               	skipc
 15258  1488  0008               	return
 15259                           
 15260                           ;GPports.c: 77: if (temp_gp2 != GP2REG) {
 15261  1489  0020               	movlb	0	; select bank0
 15262  148A  0835               	movf	_temp_gp2,w
 15263  148B  0641               	xorwf	_GP2REG,w	;volatile
 15264  148C  1903               	skipnz
 15265  148D  0008               	return
 15266                           
 15267                           ;GPports.c: 79: if (temp_gp2 < GP2REG) {
 15268  148E  0841               	movf	_GP2REG,w	;volatile
 15269  148F  0235               	subwf	_temp_gp2,w
 15270  1490  1C03               	btfss	3,0
 15271                           
 15272                           ;GPports.c: 80: temp_gp2++;
 15273  1491  0AB5               	incf	_temp_gp2,f
 15274                           
 15275                           ;GPports.c: 81: };GPports.c: 82: if (temp_gp2 > GP2REG) {
 15276  1492  0835               	movf	_temp_gp2,w
 15277  1493  0241               	subwf	_GP2REG,w	;volatile
 15278  1494  1C03               	btfss	3,0
 15279                           
 15280                           ;GPports.c: 83: temp_gp2--;
 15281  1495  03B5               	decf	_temp_gp2,f
 15282                           
 15283                           ;GPports.c: 84: };GPports.c: 86: PWM_GP2(temp_gp2);
 15284  1496  0835               	movf	_temp_gp2,w
 15285  1497  24A3  3194         	fcall	_PWM_GP2
 15286                           
 15287                           ;GPports.c: 87: if (temp_gp2 == GP2REG) {
 15288  1499  0020               	movlb	0	; select bank0
 15289  149A  0835               	movf	_temp_gp2,w
 15290  149B  0641               	xorwf	_GP2REG,w	;volatile
 15291                           
 15292                           ;GPports.c: 88: FadeProcessClear(F_FGP2);
 15293  149C  3010               	movlw	16
 15294  149D  1D03               	skipz
 15295  149E  2CA1               	goto	L2
 15296  149F  318A  2A36         	ljmp	_FadeProcessClear
 15297  14A1                     L2:	
 15298                           ;GPports.c: 90: FadeProcessSet(F_FGP2);
 15299                           
 15300                           ;GPports.c: 89: } else {
 15301                           
 15302  14A1  318A  2A3E         	ljmp	_FadeProcessSet
 15303  14A3                     __end_of_FADE_GP2:
 15304  14A3                     __ptext25:	
 15305 ;; *************** function _PWM_GP2 *****************
 15306 ;; Defined at:
 15307 ;;		line 64 in file "PWM.c"
 15308 ;; Parameters:    Size  Location     Type
 15309 ;;  duty            1    wreg     unsigned char 
 15310 ;; Auto vars:     Size  Location     Type
 15311 ;;  duty            1   12[BANK1 ] unsigned char 
 15312 ;; Return value:  Size  Location     Type
 15313 ;;                  1    wreg      void 
 15314 ;; Registers used:
 15315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15316 ;; Tracked objects:
 15317 ;;		On entry : 1F/0
 15318 ;;		On exit  : 1F/6
 15319 ;;		Unchanged: 0/0
 15320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15322 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15323 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 15324 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 15325 ;;Total ram usage:        7 bytes
 15326 ;; Hardware stack levels used:    1
 15327 ;; Hardware stack levels required when called:    8
 15328 ;; This function calls:
 15329 ;;		___wmul
 15330 ;; This function is called by:
 15331 ;;		_FADE_GP2
 15332 ;; This function uses a non-reentrant model
 15333 ;;
 15334                           
 15335                           
 15336                           ;psect for function _PWM_GP2
 15337  14A3                     _PWM_GP2:
 15338                           
 15339                           ;incstack = 0
 15340                           ; Regs used in _PWM_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15341                           ;PWM_GP2@duty stored from wreg
 15342  14A3  0021               	movlb	1	; select bank1
 15343  14A4  00D6               	movwf	PWM_GP2@duty^(0+128)
 15344                           
 15345                           ;PWM.c: 66: if (duty == 0) {
 15346  14A5  0856               	movf	PWM_GP2@duty^(0+128),w
 15347  14A6  1D03               	btfss	3,2
 15348  14A7  2CBC               	goto	l7272
 15349                           
 15350                           ;PWM.c: 68: do { LATCbits.LATC6 = 1; } while(0);
 15351  14A8  0022               	movlb	2	; select bank2
 15352  14A9  170E               	bsf	14,6	;volatile
 15353                           
 15354                           ;PWM.c: 69: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15355  14AA  3055               	movlw	85
 15356  14AB  003C               	movlb	28	; select bank28
 15357  14AC  008F               	movwf	15	;volsfr
 15358  14AD  30AA               	movlw	170
 15359  14AE  008F               	movwf	15	;volsfr
 15360  14AF  100F               	bcf	15,0	;volsfr
 15361                           
 15362                           ;PWM.c: 70: RC6PPSbits.RC6PPS = 0x00;
 15363  14B0  30E0               	movlw	-32
 15364  14B1  003D               	movlb	29	; select bank29
 15365  14B2  05A6               	andwf	38,f	;volatile
 15366                           
 15367                           ;PWM.c: 71: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15368  14B3  3055               	movlw	85
 15369  14B4  003C               	movlb	28	; select bank28
 15370  14B5  008F               	movwf	15	;volsfr
 15371  14B6  30AA               	movlw	170
 15372  14B7  008F               	movwf	15	;volsfr
 15373  14B8  140F               	bsf	15,0	;volsfr
 15374                           
 15375                           ;PWM.c: 72: CCP4CON = 0;
 15376  14B9  0026               	movlb	6	; select bank6
 15377  14BA  0197               	clrf	23	;volatile
 15378  14BB  0008               	return
 15379  14BC                     l7272:
 15380                           
 15381                           ;PWM.c: 74: };PWM.c: 75: if (CCP4CON == 0) {
 15382  14BC  0026               	movlb	6	; select bank6
 15383  14BD  0817               	movf	23,w	;volatile
 15384  14BE  1D03               	btfss	3,2
 15385  14BF  2CD4               	goto	l1503
 15386                           
 15387                           ;PWM.c: 76: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15388  14C0  3055               	movlw	85
 15389  14C1  003C               	movlb	28	; select bank28
 15390  14C2  008F               	movwf	15	;volsfr
 15391  14C3  30AA               	movlw	170
 15392  14C4  008F               	movwf	15	;volsfr
 15393  14C5  100F               	bcf	15,0	;volsfr
 15394                           
 15395                           ;PWM.c: 77: RC6PPSbits.RC6PPS = 0x0F;
 15396  14C6  003D               	movlb	29	; select bank29
 15397  14C7  0826               	movf	38,w	;volatile
 15398  14C8  39E0               	andlw	-32
 15399  14C9  380F               	iorlw	15
 15400  14CA  00A6               	movwf	38	;volatile
 15401                           
 15402                           ;PWM.c: 78: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15403  14CB  3055               	movlw	85
 15404  14CC  003C               	movlb	28	; select bank28
 15405  14CD  008F               	movwf	15	;volsfr
 15406  14CE  30AA               	movlw	170
 15407  14CF  008F               	movwf	15	;volsfr
 15408  14D0  140F               	bsf	15,0	;volsfr
 15409                           
 15410                           ;PWM.c: 79: CCP4CON = 0x8F;
 15411  14D1  308F               	movlw	143
 15412  14D2  0026               	movlb	6	; select bank6
 15413  14D3  0097               	movwf	23	;volatile
 15414  14D4                     l1503:
 15415                           
 15416                           ;PWM.c: 80: };PWM.c: 81: if (GAMMAGP2 == 0) {
 15417  14D4  0020               	movlb	0	; select bank0
 15418  14D5  083D               	movf	_GAMMAGP2,w	;volatile
 15419  14D6  1D03               	btfss	3,2
 15420  14D7  2CE8               	goto	l7290
 15421                           
 15422                           ;PWM.c: 83: CCPR4 = (uint16_t) (0xff - duty) << 2;
 15423  14D8  0021               	movlb	1	; select bank1
 15424  14D9  0956               	comf	PWM_GP2@duty^(0+128),w
 15425  14DA  00D0               	movwf	??_PWM_GP2^(0+128)
 15426  14DB  01D1               	clrf	(??_PWM_GP2^(0+128)+1)
 15427  14DC  35D0               	lslf	??_PWM_GP2^(0+128),f
 15428  14DD  0DD1               	rlf	(??_PWM_GP2^(0+128)+1),f
 15429  14DE  35D0               	lslf	??_PWM_GP2^(0+128),f
 15430  14DF  0DD1               	rlf	(??_PWM_GP2^(0+128)+1),f
 15431  14E0  0850               	movf	??_PWM_GP2^(0+128),w
 15432  14E1  0026               	movlb	6	; select bank6
 15433  14E2  0095               	movwf	21	;volatile
 15434  14E3  0021               	movlb	1	; select bank1
 15435  14E4  0851               	movf	(??_PWM_GP2+1)^(0+128),w
 15436  14E5  0026               	movlb	6	; select bank6
 15437  14E6  0096               	movwf	22	;volatile
 15438                           
 15439                           ;PWM.c: 85: } else {
 15440  14E7  0008               	return
 15441  14E8                     l7290:
 15442                           
 15443                           ;PWM.c: 86: if (duty > 100)
 15444  14E8  3065               	movlw	101
 15445  14E9  0021               	movlb	1	; select bank1
 15446  14EA  0256               	subwf	PWM_GP2@duty^(0+128),w
 15447  14EB  1C03               	skipc
 15448  14EC  2CEF               	goto	l7294
 15449                           
 15450                           ;PWM.c: 87: duty = 100;
 15451  14ED  3064               	movlw	100
 15452  14EE  00D6               	movwf	PWM_GP2@duty^(0+128)
 15453  14EF                     l7294:
 15454                           
 15455                           ;PWM.c: 88: CCPR4 = (uint16_t) gamma_table[GAMMAGP2 - 1U][(duty - 1U)];
 15456  14EF  0856               	movf	PWM_GP2@duty^(0+128),w
 15457  14F0  00D0               	movwf	??_PWM_GP2^(0+128)
 15458  14F1  01D1               	clrf	(??_PWM_GP2^(0+128)+1)
 15459  14F2  35D0               	lslf	??_PWM_GP2^(0+128),f
 15460  14F3  0DD1               	rlf	(??_PWM_GP2^(0+128)+1),f
 15461  14F4  0020               	movlb	0	; select bank0
 15462  14F5  083D               	movf	_GAMMAGP2,w	;volatile
 15463  14F6  0021               	movlb	1	; select bank1
 15464  14F7  00CA               	movwf	___wmul@multiplier^(0+128)
 15465  14F8  30C8               	movlw	200
 15466  14F9  01CB               	clrf	(___wmul@multiplier+1)^(0+128)
 15467  14FA  00CC               	movwf	___wmul@multiplicand^(0+128)
 15468  14FB  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
 15469  14FC  318A  22C7         	fcall	___wmul
 15470  14FE  30AC               	movlw	low ((_gamma_table| (0+32768)+65334))
 15471  14FF  00D2               	movwf	(??_PWM_GP2+2)^(0+128)
 15472  1500  3080               	movlw	high ((_gamma_table| (0+32768)+65334))
 15473  1501  00D3               	movwf	((??_PWM_GP2+2)^(0+128)+1)
 15474  1502  084A               	movf	?___wmul^(0+128),w
 15475  1503  0752               	addwf	(??_PWM_GP2+2)^(0+128),w
 15476  1504  00D4               	movwf	(??_PWM_GP2+4)^(0+128)
 15477  1505  084B               	movf	(?___wmul+1)^(0+128),w
 15478  1506  3D53               	addwfc	(??_PWM_GP2+3)^(0+128),w
 15479  1507  00D5               	movwf	(??_PWM_GP2+5)^(0+128)
 15480  1508  0854               	movf	(??_PWM_GP2+4)^(0+128),w
 15481  1509  0750               	addwf	??_PWM_GP2^(0+128),w
 15482  150A  0084               	movwf	4
 15483  150B  0855               	movf	(??_PWM_GP2+5)^(0+128),w
 15484  150C  3D51               	addwfc	(??_PWM_GP2+1)^(0+128),w
 15485  150D  0085               	movwf	5
 15486  150E  3F00               	moviw [0]fsr0
 15487  150F  0026               	movlb	6	; select bank6
 15488  1510  0095               	movwf	21	;volatile
 15489  1511  3F01               	moviw [1]fsr0
 15490  1512  0096               	movwf	22	;volatile
 15491  1513  0008               	return
 15492  1514                     __end_of_PWM_GP2:
 15493                           
 15494                           	psect	text27
 15495  13DE                     __ptext27:	
 15496 ;; *************** function _PWM_GP1 *****************
 15497 ;; Defined at:
 15498 ;;		line 30 in file "PWM.c"
 15499 ;; Parameters:    Size  Location     Type
 15500 ;;  duty            1    wreg     unsigned char 
 15501 ;; Auto vars:     Size  Location     Type
 15502 ;;  duty            1   14[BANK1 ] unsigned char 
 15503 ;; Return value:  Size  Location     Type
 15504 ;;                  1    wreg      void 
 15505 ;; Registers used:
 15506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15507 ;; Tracked objects:
 15508 ;;		On entry : 1F/0
 15509 ;;		On exit  : 1F/C
 15510 ;;		Unchanged: 0/0
 15511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15513 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15514 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 15515 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 15516 ;;Total ram usage:        9 bytes
 15517 ;; Hardware stack levels used:    1
 15518 ;; Hardware stack levels required when called:    8
 15519 ;; This function calls:
 15520 ;;		___wmul
 15521 ;; This function is called by:
 15522 ;;		_FADE_GP1
 15523 ;; This function uses a non-reentrant model
 15524 ;;
 15525                           
 15526                           
 15527                           ;psect for function _PWM_GP1
 15528  13DE                     _PWM_GP1:
 15529                           
 15530                           ;incstack = 0
 15531                           ; Regs used in _PWM_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15532                           ;PWM_GP1@duty stored from wreg
 15533  13DE  0021               	movlb	1	; select bank1
 15534  13DF  00D8               	movwf	PWM_GP1@duty^(0+128)
 15535                           
 15536                           ;PWM.c: 32: if (duty == 0) {
 15537  13E0  0858               	movf	PWM_GP1@duty^(0+128),w
 15538  13E1  1D03               	btfss	3,2
 15539  13E2  2BF7               	goto	l7226
 15540                           
 15541                           ;PWM.c: 34: do { LATCbits.LATC7 = 1; } while(0);
 15542  13E3  0022               	movlb	2	; select bank2
 15543  13E4  178E               	bsf	14,7	;volatile
 15544                           
 15545                           ;PWM.c: 35: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15546  13E5  3055               	movlw	85
 15547  13E6  003C               	movlb	28	; select bank28
 15548  13E7  008F               	movwf	15	;volsfr
 15549  13E8  30AA               	movlw	170
 15550  13E9  008F               	movwf	15	;volsfr
 15551  13EA  100F               	bcf	15,0	;volsfr
 15552                           
 15553                           ;PWM.c: 36: RC7PPSbits.RC7PPS = 0x00;
 15554  13EB  30E0               	movlw	-32
 15555  13EC  003D               	movlb	29	; select bank29
 15556  13ED  05A7               	andwf	39,f	;volatile
 15557                           
 15558                           ;PWM.c: 37: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15559  13EE  3055               	movlw	85
 15560  13EF  003C               	movlb	28	; select bank28
 15561  13F0  008F               	movwf	15	;volsfr
 15562  13F1  30AA               	movlw	170
 15563  13F2  008F               	movwf	15	;volsfr
 15564  13F3  140F               	bsf	15,0	;volsfr
 15565                           
 15566                           ;PWM.c: 38: PWM5CON = 0;
 15567  13F4  002C               	movlb	12	; select bank12
 15568  13F5  0199               	clrf	25	;volatile
 15569  13F6  0008               	return
 15570  13F7                     l7226:
 15571                           
 15572                           ;PWM.c: 40: };PWM.c: 42: if (PWM5CON == 0) {
 15573  13F7  002C               	movlb	12	; select bank12
 15574  13F8  0819               	movf	25,w	;volatile
 15575  13F9  1D03               	btfss	3,2
 15576  13FA  2C0F               	goto	l1493
 15577                           
 15578                           ;PWM.c: 43: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15579  13FB  3055               	movlw	85
 15580  13FC  003C               	movlb	28	; select bank28
 15581  13FD  008F               	movwf	15	;volsfr
 15582  13FE  30AA               	movlw	170
 15583  13FF  008F               	movwf	15	;volsfr
 15584  1400  100F               	bcf	15,0	;volsfr
 15585                           
 15586                           ;PWM.c: 44: RC7PPSbits.RC7PPS = 0x02;
 15587  1401  003D               	movlb	29	; select bank29
 15588  1402  0827               	movf	39,w	;volatile
 15589  1403  39E0               	andlw	-32
 15590  1404  3802               	iorlw	2
 15591  1405  00A7               	movwf	39	;volatile
 15592                           
 15593                           ;PWM.c: 45: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15594  1406  3055               	movlw	85
 15595  1407  003C               	movlb	28	; select bank28
 15596  1408  008F               	movwf	15	;volsfr
 15597  1409  30AA               	movlw	170
 15598  140A  008F               	movwf	15	;volsfr
 15599  140B  140F               	bsf	15,0	;volsfr
 15600                           
 15601                           ;PWM.c: 46: PWM5CON = 0x80;
 15602  140C  3080               	movlw	128
 15603  140D  002C               	movlb	12	; select bank12
 15604  140E  0099               	movwf	25	;volatile
 15605  140F                     l1493:
 15606                           
 15607                           ;PWM.c: 47: };PWM.c: 49: if (GAMMAGP1 == 0) {
 15608  140F  0020               	movlb	0	; select bank0
 15609  1410  083E               	movf	_GAMMAGP1,w	;volatile
 15610  1411  1D03               	btfss	3,2
 15611  1412  2C19               	goto	l7246
 15612                           
 15613                           ;PWM.c: 50: PWM5DCH = 0xFFU - duty;
 15614  1413  0021               	movlb	1	; select bank1
 15615  1414  0958               	comf	PWM_GP1@duty^(0+128),w
 15616  1415  002C               	movlb	12	; select bank12
 15617  1416  0098               	movwf	24	;volatile
 15618                           
 15619                           ;PWM.c: 51: PWM5DCL = 0;
 15620  1417  0197               	clrf	23	;volatile
 15621                           
 15622                           ;PWM.c: 52: } else {
 15623  1418  0008               	return
 15624  1419                     l7246:
 15625                           
 15626                           ;PWM.c: 53: if (duty > 100)
 15627  1419  3065               	movlw	101
 15628  141A  0021               	movlb	1	; select bank1
 15629  141B  0258               	subwf	PWM_GP1@duty^(0+128),w
 15630  141C  1C03               	skipc
 15631  141D  2C20               	goto	l7250
 15632                           
 15633                           ;PWM.c: 54: duty = 100;
 15634  141E  3064               	movlw	100
 15635  141F  00D8               	movwf	PWM_GP1@duty^(0+128)
 15636  1420                     l7250:
 15637                           
 15638                           ;PWM.c: 55: PWM5DCH = (gamma_table[GAMMAGP1 - 1U][(duty - 1U)] & 0x03FC) >> 2U;
 15639  1420  0858               	movf	PWM_GP1@duty^(0+128),w
 15640  1421  00D0               	movwf	??_PWM_GP1^(0+128)
 15641  1422  01D1               	clrf	(??_PWM_GP1^(0+128)+1)
 15642  1423  35D0               	lslf	??_PWM_GP1^(0+128),f
 15643  1424  0DD1               	rlf	(??_PWM_GP1^(0+128)+1),f
 15644  1425  0020               	movlb	0	; select bank0
 15645  1426  083E               	movf	_GAMMAGP1,w	;volatile
 15646  1427  0021               	movlb	1	; select bank1
 15647  1428  00CA               	movwf	___wmul@multiplier^(0+128)
 15648  1429  30C8               	movlw	200
 15649  142A  01CB               	clrf	(___wmul@multiplier+1)^(0+128)
 15650  142B  00CC               	movwf	___wmul@multiplicand^(0+128)
 15651  142C  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
 15652  142D  318A  22C7  3193   	fcall	___wmul
 15653  1430  30AC               	movlw	low ((_gamma_table| (0+32768)+65334))
 15654  1431  00D2               	movwf	(??_PWM_GP1+2)^(0+128)
 15655  1432  3080               	movlw	high ((_gamma_table| (0+32768)+65334))
 15656  1433  00D3               	movwf	((??_PWM_GP1+2)^(0+128)+1)
 15657  1434  084A               	movf	?___wmul^(0+128),w
 15658  1435  0752               	addwf	(??_PWM_GP1+2)^(0+128),w
 15659  1436  00D4               	movwf	(??_PWM_GP1+4)^(0+128)
 15660  1437  084B               	movf	(?___wmul+1)^(0+128),w
 15661  1438  3D53               	addwfc	(??_PWM_GP1+3)^(0+128),w
 15662  1439  00D5               	movwf	(??_PWM_GP1+5)^(0+128)
 15663  143A  0854               	movf	(??_PWM_GP1+4)^(0+128),w
 15664  143B  0750               	addwf	??_PWM_GP1^(0+128),w
 15665  143C  0084               	movwf	4
 15666  143D  0855               	movf	(??_PWM_GP1+5)^(0+128),w
 15667  143E  3D51               	addwfc	(??_PWM_GP1+1)^(0+128),w
 15668  143F  0085               	movwf	5
 15669  1440  3F00               	moviw [0]fsr0
 15670  1441  00D6               	movwf	(??_PWM_GP1+6)^(0+128)
 15671  1442  3F01               	moviw [1]fsr0
 15672  1443  00D7               	movwf	((??_PWM_GP1+6)^(0+128)+1)
 15673  1444  36D7               	lsrf	((??_PWM_GP1+6)^(0+128)+1),f
 15674  1445  0CD6               	rrf	(??_PWM_GP1+6)^(0+128),f
 15675  1446  36D7               	lsrf	((??_PWM_GP1+6)^(0+128)+1),f
 15676  1447  0CD6               	rrf	(??_PWM_GP1+6)^(0+128),f
 15677  1448  0856               	movf	(??_PWM_GP1+6)^(0+128),w
 15678  1449  002C               	movlb	12	; select bank12
 15679  144A  0098               	movwf	24	;volatile
 15680                           
 15681                           ;PWM.c: 56: PWM5DCL = (gamma_table[GAMMAGP1 - 1U][(duty - 1U)] & 0x0003) << 6U;
 15682  144B  0021               	movlb	1	; select bank1
 15683  144C  0858               	movf	PWM_GP1@duty^(0+128),w
 15684  144D  00D0               	movwf	??_PWM_GP1^(0+128)
 15685  144E  01D1               	clrf	(??_PWM_GP1^(0+128)+1)
 15686  144F  35D0               	lslf	??_PWM_GP1^(0+128),f
 15687  1450  0DD1               	rlf	(??_PWM_GP1^(0+128)+1),f
 15688  1451  0020               	movlb	0	; select bank0
 15689  1452  083E               	movf	_GAMMAGP1,w	;volatile
 15690  1453  0021               	movlb	1	; select bank1
 15691  1454  00CA               	movwf	___wmul@multiplier^(0+128)
 15692  1455  30C8               	movlw	200
 15693  1456  01CB               	clrf	(___wmul@multiplier+1)^(0+128)
 15694  1457  00CC               	movwf	___wmul@multiplicand^(0+128)
 15695  1458  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
 15696  1459  318A  22C7         	fcall	___wmul
 15697  145B  30AC               	movlw	low ((_gamma_table| (0+32768)+65334))
 15698  145C  00D2               	movwf	(??_PWM_GP1+2)^(0+128)
 15699  145D  3080               	movlw	high ((_gamma_table| (0+32768)+65334))
 15700  145E  00D3               	movwf	((??_PWM_GP1+2)^(0+128)+1)
 15701  145F  084A               	movf	?___wmul^(0+128),w
 15702  1460  0752               	addwf	(??_PWM_GP1+2)^(0+128),w
 15703  1461  00D4               	movwf	(??_PWM_GP1+4)^(0+128)
 15704  1462  084B               	movf	(?___wmul+1)^(0+128),w
 15705  1463  3D53               	addwfc	(??_PWM_GP1+3)^(0+128),w
 15706  1464  00D5               	movwf	(??_PWM_GP1+5)^(0+128)
 15707  1465  0854               	movf	(??_PWM_GP1+4)^(0+128),w
 15708  1466  0750               	addwf	??_PWM_GP1^(0+128),w
 15709  1467  0084               	movwf	4
 15710  1468  0855               	movf	(??_PWM_GP1+5)^(0+128),w
 15711  1469  3D51               	addwfc	(??_PWM_GP1+1)^(0+128),w
 15712  146A  0085               	movwf	5
 15713  146B  0800               	movf	0,w	;code access
 15714  146C  3903               	andlw	3
 15715  146D  00D6               	movwf	(??_PWM_GP1+6)^(0+128)
 15716  146E  0CD6               	rrf	(??_PWM_GP1+6)^(0+128),f
 15717  146F  0CD6               	rrf	(??_PWM_GP1+6)^(0+128),f
 15718  1470  0C56               	rrf	(??_PWM_GP1+6)^(0+128),w
 15719  1471  39C0               	andlw	192
 15720  1472  002C               	movlb	12	; select bank12
 15721  1473  0097               	movwf	23	;volatile
 15722  1474  0008               	return
 15723  1475                     __end_of_PWM_GP1:
 15724                           
 15725                           	psect	text32
 15726  081D                     __ptext32:	
 15727 ;; *************** function _PWM_BLED *****************
 15728 ;; Defined at:
 15729 ;;		line 165 in file "PWM.c"
 15730 ;; Parameters:    Size  Location     Type
 15731 ;;  duty            1    wreg     unsigned char 
 15732 ;; Auto vars:     Size  Location     Type
 15733 ;;  duty            1   12[BANK1 ] unsigned char 
 15734 ;; Return value:  Size  Location     Type
 15735 ;;                  1    wreg      void 
 15736 ;; Registers used:
 15737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15738 ;; Tracked objects:
 15739 ;;		On entry : 1F/0
 15740 ;;		On exit  : 1F/6
 15741 ;;		Unchanged: 0/0
 15742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15744 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 15745 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 15746 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 15747 ;;Total ram usage:        7 bytes
 15748 ;; Hardware stack levels used:    1
 15749 ;; Hardware stack levels required when called:    8
 15750 ;; This function calls:
 15751 ;;		___wmul
 15752 ;; This function is called by:
 15753 ;;		_FADE_LEDS
 15754 ;; This function uses a non-reentrant model
 15755 ;;
 15756                           
 15757                           
 15758                           ;psect for function _PWM_BLED
 15759  081D                     _PWM_BLED:
 15760                           
 15761                           ;incstack = 0
 15762                           ; Regs used in _PWM_BLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15763                           ;PWM_BLED@duty stored from wreg
 15764  081D  0021               	movlb	1	; select bank1
 15765  081E  00D6               	movwf	PWM_BLED@duty^(0+128)
 15766                           
 15767                           ;PWM.c: 167: if (duty == 0) {
 15768  081F  0856               	movf	PWM_BLED@duty^(0+128),w
 15769  0820  1D03               	btfss	3,2
 15770  0821  2836               	goto	l7418
 15771                           
 15772                           ;PWM.c: 169: do { LATCbits.LATC3 = 1; } while(0);
 15773  0822  0022               	movlb	2	; select bank2
 15774  0823  158E               	bsf	14,3	;volatile
 15775                           
 15776                           ;PWM.c: 170: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15777  0824  3055               	movlw	85
 15778  0825  003C               	movlb	28	; select bank28
 15779  0826  008F               	movwf	15	;volsfr
 15780  0827  30AA               	movlw	170
 15781  0828  008F               	movwf	15	;volsfr
 15782  0829  100F               	bcf	15,0	;volsfr
 15783                           
 15784                           ;PWM.c: 171: RC3PPSbits.RC3PPS = 0x00;
 15785  082A  30E0               	movlw	-32
 15786  082B  003D               	movlb	29	; select bank29
 15787  082C  05A3               	andwf	35,f	;volatile
 15788                           
 15789                           ;PWM.c: 172: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15790  082D  3055               	movlw	85
 15791  082E  003C               	movlb	28	; select bank28
 15792  082F  008F               	movwf	15	;volsfr
 15793  0830  30AA               	movlw	170
 15794  0831  008F               	movwf	15	;volsfr
 15795  0832  140F               	bsf	15,0	;volsfr
 15796                           
 15797                           ;PWM.c: 173: CCP3CON = 0;
 15798  0833  0026               	movlb	6	; select bank6
 15799  0834  0193               	clrf	19	;volatile
 15800  0835  0008               	return
 15801  0836                     l7418:
 15802                           
 15803                           ;PWM.c: 175: };PWM.c: 178: if (CCP3CON == 0) {
 15804  0836  0026               	movlb	6	; select bank6
 15805  0837  0813               	movf	19,w	;volatile
 15806  0838  1D03               	btfss	3,2
 15807  0839  2851               	goto	l1533
 15808                           
 15809                           ;PWM.c: 179: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 15810  083A  3055               	movlw	85
 15811  083B  003C               	movlb	28	; select bank28
 15812  083C  008F               	movwf	15	;volsfr
 15813  083D  30AA               	movlw	170
 15814  083E  008F               	movwf	15	;volsfr
 15815  083F  100F               	bcf	15,0	;volsfr
 15816                           
 15817                           ;PWM.c: 180: RC3PPSbits.RC3PPS = 0x0E;
 15818  0840  003D               	movlb	29	; select bank29
 15819  0841  0823               	movf	35,w	;volatile
 15820  0842  39E0               	andlw	-32
 15821  0843  380E               	iorlw	14
 15822  0844  00A3               	movwf	35	;volatile
 15823                           
 15824                           ;PWM.c: 181: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 15825  0845  3055               	movlw	85
 15826  0846  003C               	movlb	28	; select bank28
 15827  0847  008F               	movwf	15	;volsfr
 15828  0848  30AA               	movlw	170
 15829  0849  008F               	movwf	15	;volsfr
 15830  084A  140F               	bsf	15,0	;volsfr
 15831                           
 15832                           ;PWM.c: 182: CCP3CON = 0x8F;
 15833  084B  308F               	movlw	143
 15834  084C  0026               	movlb	6	; select bank6
 15835  084D  0093               	movwf	19	;volatile
 15836                           
 15837                           ;PWM.c: 183: CCPR3 = 0xFFFF;
 15838  084E  30FF               	movlw	255
 15839  084F  0092               	movwf	18	;volatile
 15840  0850  0091               	movwf	17	;volatile
 15841  0851                     l1533:
 15842                           
 15843                           ;PWM.c: 184: };PWM.c: 186: if (GAMMABLED == 0) {
 15844  0851  0020               	movlb	0	; select bank0
 15845  0852  083A               	movf	_GAMMABLED,w	;volatile
 15846  0853  1D03               	btfss	3,2
 15847  0854  2865               	goto	l7438
 15848                           
 15849                           ;PWM.c: 188: CCPR3 = (uint16_t) (0xff - duty) << 2;
 15850  0855  0021               	movlb	1	; select bank1
 15851  0856  0956               	comf	PWM_BLED@duty^(0+128),w
 15852  0857  00D0               	movwf	??_PWM_BLED^(0+128)
 15853  0858  01D1               	clrf	(??_PWM_BLED^(0+128)+1)
 15854  0859  35D0               	lslf	??_PWM_BLED^(0+128),f
 15855  085A  0DD1               	rlf	(??_PWM_BLED^(0+128)+1),f
 15856  085B  35D0               	lslf	??_PWM_BLED^(0+128),f
 15857  085C  0DD1               	rlf	(??_PWM_BLED^(0+128)+1),f
 15858  085D  0850               	movf	??_PWM_BLED^(0+128),w
 15859  085E  0026               	movlb	6	; select bank6
 15860  085F  0091               	movwf	17	;volatile
 15861  0860  0021               	movlb	1	; select bank1
 15862  0861  0851               	movf	(??_PWM_BLED+1)^(0+128),w
 15863  0862  0026               	movlb	6	; select bank6
 15864  0863  0092               	movwf	18	;volatile
 15865                           
 15866                           ;PWM.c: 190: } else {
 15867  0864  0008               	return
 15868  0865                     l7438:
 15869                           
 15870                           ;PWM.c: 192: if (duty > 100)
 15871  0865  3065               	movlw	101
 15872  0866  0021               	movlb	1	; select bank1
 15873  0867  0256               	subwf	PWM_BLED@duty^(0+128),w
 15874  0868  1C03               	skipc
 15875  0869  286C               	goto	l7442
 15876                           
 15877                           ;PWM.c: 193: duty = 100;
 15878  086A  3064               	movlw	100
 15879  086B  00D6               	movwf	PWM_BLED@duty^(0+128)
 15880  086C                     l7442:
 15881                           
 15882                           ;PWM.c: 195: CCPR3 = gamma_table[GAMMABLED - 1U][(duty - 1U)];
 15883  086C  0856               	movf	PWM_BLED@duty^(0+128),w
 15884  086D  00D0               	movwf	??_PWM_BLED^(0+128)
 15885  086E  01D1               	clrf	(??_PWM_BLED^(0+128)+1)
 15886  086F  35D0               	lslf	??_PWM_BLED^(0+128),f
 15887  0870  0DD1               	rlf	(??_PWM_BLED^(0+128)+1),f
 15888  0871  0020               	movlb	0	; select bank0
 15889  0872  083A               	movf	_GAMMABLED,w	;volatile
 15890  0873  0021               	movlb	1	; select bank1
 15891  0874  00CA               	movwf	___wmul@multiplier^(0+128)
 15892  0875  30C8               	movlw	200
 15893  0876  01CB               	clrf	(___wmul@multiplier+1)^(0+128)
 15894  0877  00CC               	movwf	___wmul@multiplicand^(0+128)
 15895  0878  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
 15896  0879  318A  22C7         	fcall	___wmul
 15897  087B  30AC               	movlw	low ((_gamma_table| (0+32768)+65334))
 15898  087C  00D2               	movwf	(??_PWM_BLED+2)^(0+128)
 15899  087D  3080               	movlw	high ((_gamma_table| (0+32768)+65334))
 15900  087E  00D3               	movwf	((??_PWM_BLED+2)^(0+128)+1)
 15901  087F  084A               	movf	?___wmul^(0+128),w
 15902  0880  0752               	addwf	(??_PWM_BLED+2)^(0+128),w
 15903  0881  00D4               	movwf	(??_PWM_BLED+4)^(0+128)
 15904  0882  084B               	movf	(?___wmul+1)^(0+128),w
 15905  0883  3D53               	addwfc	(??_PWM_BLED+3)^(0+128),w
 15906  0884  00D5               	movwf	(??_PWM_BLED+5)^(0+128)
 15907  0885  0854               	movf	(??_PWM_BLED+4)^(0+128),w
 15908  0886  0750               	addwf	??_PWM_BLED^(0+128),w
 15909  0887  0084               	movwf	4
 15910  0888  0855               	movf	(??_PWM_BLED+5)^(0+128),w
 15911  0889  3D51               	addwfc	(??_PWM_BLED+1)^(0+128),w
 15912  088A  0085               	movwf	5
 15913  088B  3F00               	moviw [0]fsr0
 15914  088C  0026               	movlb	6	; select bank6
 15915  088D  0091               	movwf	17	;volatile
 15916  088E  3F01               	moviw [1]fsr0
 15917  088F  0092               	movwf	18	;volatile
 15918  0890  0008               	return
 15919  0891                     __end_of_PWM_BLED:
 15920                           
 15921                           	psect	text37
 15922  1349                     __ptext37:	
 15923 ;; *************** function _Encoder_PushButton_FSM *****************
 15924 ;; Defined at:
 15925 ;;		line 221 in file "Encoder.c"
 15926 ;; Parameters:    Size  Location     Type
 15927 ;;		None
 15928 ;; Auto vars:     Size  Location     Type
 15929 ;;		None
 15930 ;; Return value:  Size  Location     Type
 15931 ;;                  1    wreg      void 
 15932 ;; Registers used:
 15933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15934 ;; Tracked objects:
 15935 ;;		On entry : 18/1
 15936 ;;		On exit  : 1C/0
 15937 ;;		Unchanged: 0/0
 15938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15943 ;;Total ram usage:        0 bytes
 15944 ;; Hardware stack levels used:    1
 15945 ;; Hardware stack levels required when called:    9
 15946 ;; This function calls:
 15947 ;;		_EncoderStatusUpdate
 15948 ;;		_EncoderSwitch_GetValueFiltered
 15949 ;;		_SetInterrupt
 15950 ;; This function is called by:
 15951 ;;		_Encoder_FSM
 15952 ;; This function uses a non-reentrant model
 15953 ;;
 15954                           
 15955                           
 15956                           ;psect for function _Encoder_PushButton_FSM
 15957  1349                     _Encoder_PushButton_FSM:
 15958  1349                     l7938:	
 15959                           ;incstack = 0
 15960                           ; Regs used in _Encoder_PushButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15961                           
 15962                           
 15963                           ;Encoder.c: 223: if (double_push_cnt > DoublePush) {
 15964  1349  0021               	movlb	1	; select bank1
 15965  134A  0823               	movf	(_double_push_cnt+1)^(0+128),w
 15966  134B  0225               	subwf	(_DoublePush+1)^(0+128),w	;volatile
 15967  134C  1D03               	skipz
 15968  134D  2B50               	goto	u5615
 15969  134E  0822               	movf	_double_push_cnt^(0+128),w
 15970  134F  0224               	subwf	_DoublePush^(0+128),w	;volatile
 15971  1350                     u5615:
 15972  1350  1803               	skipnc
 15973  1351  2B55               	goto	l7942
 15974                           
 15975                           ;Encoder.c: 224: pb_fsm = ENCODER_TIMEOUT;
 15976  1352  3005               	movlw	5
 15977  1353  00AD               	movwf	_pb_fsm^(0+128)
 15978                           
 15979                           ;Encoder.c: 225: } else {
 15980  1354  2BAA               	goto	l8002
 15981  1355                     l7942:
 15982                           
 15983                           ;Encoder.c: 226: double_push_cnt++;
 15984  1355  0AA2               	incf	_double_push_cnt^(0+128),f
 15985  1356  1903               	skipnz
 15986  1357  0AA3               	incf	(_double_push_cnt+1)^(0+128),f
 15987  1358  2BAA               	goto	l8002
 15988  1359                     l7944:
 15989                           
 15990                           ;Encoder.c: 231: double_push_cnt = 0;
 15991  1359  01A2               	clrf	_double_push_cnt^(0+128)
 15992  135A  01A3               	clrf	(_double_push_cnt+1)^(0+128)
 15993                           
 15994                           ;Encoder.c: 232: if (EncoderSwitch_GetValueFiltered() == 1) {
 15995  135B  23B5  3193         	fcall	_EncoderSwitch_GetValueFiltered
 15996  135D  3A01               	xorlw	1
 15997  135E  1D03               	skipz
 15998  135F  0008               	return
 15999                           
 16000                           ;Encoder.c: 233: pb_fsm = ENCODER_WAITRELEASE;
 16001  1360  01AD               	clrf	_pb_fsm^(0+128)
 16002  1361  0AAD               	incf	_pb_fsm^(0+128),f
 16003  1362  0008               	return
 16004  1363                     l7950:
 16005                           
 16006                           ;Encoder.c: 239: if (EncoderSwitch_GetValueFiltered() == 0) {
 16007  1363  23B5  3193         	fcall	_EncoderSwitch_GetValueFiltered
 16008  1365  3A00               	xorlw	0
 16009  1366  1D03               	skipz
 16010  1367  0008               	return
 16011                           
 16012                           ;Encoder.c: 240: pb_fsm = ENCODER_WAITDOUBLEPUSH;
 16013  1368  3002               	movlw	2
 16014  1369  00AD               	movwf	_pb_fsm^(0+128)
 16015  136A  0008               	return
 16016  136B                     l7954:
 16017                           
 16018                           ;Encoder.c: 245: if (EncoderSwitch_GetValueFiltered() == 1) {
 16019  136B  23B5  3193         	fcall	_EncoderSwitch_GetValueFiltered
 16020  136D  3A01               	xorlw	1
 16021  136E  1D03               	skipz
 16022  136F  0008               	return
 16023                           
 16024                           ;Encoder.c: 246: pb_fsm = ENCODER_WAITDOUBLERELEASED;
 16025  1370  3003               	movlw	3
 16026  1371  00AD               	movwf	_pb_fsm^(0+128)
 16027  1372  0008               	return
 16028  1373                     l7958:
 16029                           
 16030                           ;Encoder.c: 251: if (EncoderSwitch_GetValueFiltered() == 0) {
 16031  1373  23B5  3193         	fcall	_EncoderSwitch_GetValueFiltered
 16032  1375  3A00               	xorlw	0
 16033  1376  1D03               	skipz
 16034  1377  0008               	return
 16035  1378  3004               	movlw	4
 16036                           
 16037                           ;Encoder.c: 252: double_push_cnt = 0;
 16038  1379  01A2               	clrf	_double_push_cnt^(0+128)
 16039  137A  01A3               	clrf	(_double_push_cnt+1)^(0+128)
 16040                           
 16041                           ;Encoder.c: 253: double_push_delay = 0;
 16042  137B  01A0               	clrf	_double_push_delay^(0+128)
 16043  137C  01A1               	clrf	(_double_push_delay+1)^(0+128)
 16044                           
 16045                           ;Encoder.c: 254: pb_fsm = ENCODER_DOUBLEDELAY;
 16046  137D  00AD               	movwf	_pb_fsm^(0+128)
 16047  137E                     L7:	
 16048                           ;Encoder.c: 255: EncoderStatusUpdate(S_PUSHD);
 16049                           
 16050  137E  318A  22C3         	fcall	_EncoderStatusUpdate
 16051  1380                     l7966:
 16052                           
 16053                           ;Encoder.c: 256: SetInterrupt();
 16054  1380  318A  2AB5         	ljmp	l7146
 16055  1382                     l7968:
 16056                           
 16057                           ;Encoder.c: 261: double_push_cnt = 0;
 16058  1382  01A2               	clrf	_double_push_cnt^(0+128)
 16059  1383  01A3               	clrf	(_double_push_cnt+1)^(0+128)
 16060                           
 16061                           ;Encoder.c: 262: if (double_push_delay > DoublePush) {
 16062  1384  0821               	movf	(_double_push_delay+1)^(0+128),w
 16063  1385  0225               	subwf	(_DoublePush+1)^(0+128),w	;volatile
 16064  1386  1D03               	skipz
 16065  1387  2B8A               	goto	u5665
 16066  1388  0820               	movf	_double_push_delay^(0+128),w
 16067  1389  0224               	subwf	_DoublePush^(0+128),w	;volatile
 16068  138A                     u5665:
 16069  138A  1803               	skipnc
 16070  138B  2B8E               	goto	l7974
 16071                           
 16072                           ;Encoder.c: 263: pb_fsm = ENCODER_WAITPUSH;
 16073  138C  01AD               	clrf	_pb_fsm^(0+128)
 16074                           
 16075                           ;Encoder.c: 264: } else {
 16076  138D  0008               	return
 16077  138E                     l7974:
 16078                           
 16079                           ;Encoder.c: 265: double_push_delay++;
 16080  138E  0AA0               	incf	_double_push_delay^(0+128),f
 16081  138F  1903               	skipnz
 16082  1390  0AA1               	incf	(_double_push_delay+1)^(0+128),f
 16083  1391  0008               	return
 16084  1392                     l7976:
 16085  1392  3002               	movlw	2
 16086                           
 16087                           ;Encoder.c: 270: double_push_cnt = 0;
 16088  1393  01A2               	clrf	_double_push_cnt^(0+128)
 16089  1394  01A3               	clrf	(_double_push_cnt+1)^(0+128)
 16090                           
 16091                           ;Encoder.c: 271: EncoderStatusUpdate(S_PUSHP);
 16092  1395  318A  22C3  3193   	fcall	_EncoderStatusUpdate
 16093                           
 16094                           ;Encoder.c: 272: if (EncoderSwitch_GetValueFiltered() == 1) {
 16095  1398  23B5  3193         	fcall	_EncoderSwitch_GetValueFiltered
 16096  139A  3A01               	xorlw	1
 16097  139B  1D03               	skipz
 16098  139C  2BA7               	goto	l7994
 16099                           
 16100                           ;Encoder.c: 273: pb_fsm = ENCODER_PUSHRESET;
 16101  139D  3006               	movlw	6
 16102  139E  00AD               	movwf	_pb_fsm^(0+128)
 16103                           
 16104                           ;Encoder.c: 274: } else {
 16105  139F  2B80               	goto	l7966
 16106  13A0                     l7990:	
 16107                           ;Encoder.c: 276: EncoderStatusUpdate(S_PUSHR);
 16108                           
 16109                           ;Encoder.c: 275: pb_fsm = ENCODER_WAITPUSH;
 16110                           
 16111                           
 16112                           ;Encoder.c: 282: double_push_cnt = 0;
 16113  13A0  01A2               	clrf	_double_push_cnt^(0+128)
 16114  13A1  01A3               	clrf	(_double_push_cnt+1)^(0+128)
 16115                           
 16116                           ;Encoder.c: 283: if (EncoderSwitch_GetValueFiltered() == 0) {
 16117  13A2  23B5  3193         	fcall	_EncoderSwitch_GetValueFiltered
 16118  13A4  3A00               	xorlw	0
 16119  13A5  1D03               	skipz
 16120  13A6  0008               	return
 16121  13A7                     l7994:
 16122  13A7  3001               	movlw	1
 16123                           
 16124                           ;Encoder.c: 285: pb_fsm = ENCODER_WAITPUSH;
 16125  13A8  01AD               	clrf	_pb_fsm^(0+128)
 16126                           
 16127                           ;Encoder.c: 286: EncoderStatusUpdate(S_PUSHR);
 16128  13A9  2B7E               	goto	L7
 16129  13AA                     l8002:
 16130  13AA  082D               	movf	_pb_fsm^(0+128),w
 16131                           
 16132                           ; Switch size 1, requested type "speed"
 16133                           ; Number of cases is 7, Range of values is 0 to 6
 16134                           ; switch strategies available:
 16135                           ; Name         Instructions Cycles
 16136                           ; direct_byte           20     6 (fixed)
 16137                           ; simple_byte           22    12 (average)
 16138                           ; jumptable            260     6 (fixed)
 16139                           ;	Chosen strategy is direct_byte
 16140  13AB  0084               	movwf	4
 16141  13AC  3007               	movlw	7
 16142  13AD  0204               	subwf	4,w
 16143  13AE  1803               	skipnc
 16144  13AF  0008               	return
 16145  13B0  3187               	movlp	high S8430
 16146  13B1  3504               	lslf	4,w
 16147  13B2  3EF1               	addlw	low S8430
 16148  13B3  0082               	movwf	2
 16149  13B4  0008               	return
 16150  13B5                     __end_of_Encoder_PushButton_FSM:
 16151  13B5                     __ptext39:	
 16152 ;; *************** function _EncoderSwitch_GetValueFiltered *****************
 16153 ;; Defined at:
 16154 ;;		line 47 in file "Encoder.c"
 16155 ;; Parameters:    Size  Location     Type
 16156 ;;		None
 16157 ;; Auto vars:     Size  Location     Type
 16158 ;;		None
 16159 ;; Return value:  Size  Location     Type
 16160 ;;                  1    wreg      unsigned char 
 16161 ;; Registers used:
 16162 ;;		wreg, status,2, status,0, pclath, cstack
 16163 ;; Tracked objects:
 16164 ;;		On entry : 18/1
 16165 ;;		On exit  : 1F/1
 16166 ;;		Unchanged: 0/0
 16167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16172 ;;Total ram usage:        0 bytes
 16173 ;; Hardware stack levels used:    1
 16174 ;; Hardware stack levels required when called:    8
 16175 ;; This function calls:
 16176 ;;		_EncoderSwitch_GetValue
 16177 ;; This function is called by:
 16178 ;;		_Encoder_PushButton_FSM
 16179 ;; This function uses a non-reentrant model
 16180 ;;
 16181                           
 16182                           
 16183                           ;psect for function _EncoderSwitch_GetValueFiltered
 16184  13B5                     _EncoderSwitch_GetValueFiltered:
 16185                           
 16186                           ;Encoder.c: 48: static bool pb_status = 0;;Encoder.c: 50: if (EncoderSwitch_GetValue() =
      +                          = 1) {
 16187                           
 16188                           ;incstack = 0
 16189                           ; Regs used in _EncoderSwitch_GetValueFiltered: [wreg+status,2+status,0+pclath+cstack]
 16190  13B5  23D1  3193         	fcall	_EncoderSwitch_GetValue
 16191  13B7  3A01               	xorlw	1
 16192  13B8  1D03               	skipz
 16193  13B9  2BC6               	goto	l7348
 16194                           
 16195                           ;Encoder.c: 51: if (pb_cnt++ >= 50) {
 16196  13BA  0021               	movlb	1	; select bank1
 16197  13BB  082C               	movf	_pb_cnt^(0+128),w
 16198  13BC  0AAC               	incf	_pb_cnt^(0+128),f
 16199  13BD  3A80               	xorlw	128
 16200  13BE  3E4E               	addlw	-178
 16201  13BF  1C03               	skipc
 16202  13C0  2BCF               	goto	l7352
 16203                           
 16204                           ;Encoder.c: 52: pb_cnt = 50;
 16205  13C1  3032               	movlw	50
 16206  13C2  00AC               	movwf	_pb_cnt^(0+128)
 16207                           
 16208                           ;Encoder.c: 53: pb_status = 1;
 16209  13C3  01AA               	clrf	EncoderSwitch_GetValueFiltered@pb_status^(0+128)
 16210  13C4  0AAA               	incf	EncoderSwitch_GetValueFiltered@pb_status^(0+128),f
 16211  13C5  2BCF               	goto	l7352
 16212  13C6                     l7348:
 16213                           
 16214                           ;Encoder.c: 56: if (pb_cnt-- <= 0) {
 16215  13C6  0021               	movlb	1	; select bank1
 16216  13C7  082C               	movf	_pb_cnt^(0+128),w
 16217  13C8  03AC               	decf	_pb_cnt^(0+128),f
 16218  13C9  3A80               	xorlw	128
 16219  13CA  3E7F               	addlw	-129
 16220  13CB  1803               	skipnc
 16221  13CC  2BCF               	goto	l7352
 16222                           
 16223                           ;Encoder.c: 57: pb_cnt = 0;
 16224  13CD  01AC               	clrf	_pb_cnt^(0+128)
 16225                           
 16226                           ;Encoder.c: 58: pb_status = 0;
 16227  13CE  01AA               	clrf	EncoderSwitch_GetValueFiltered@pb_status^(0+128)
 16228  13CF                     l7352:
 16229                           
 16230                           ;Encoder.c: 59: };Encoder.c: 60: };Encoder.c: 62: return pb_status;
 16231  13CF  082A               	movf	EncoderSwitch_GetValueFiltered@pb_status^(0+128),w
 16232  13D0  0008               	return
 16233  13D1                     __end_of_EncoderSwitch_GetValueFiltered:
 16234  13D1                     __ptext40:	
 16235 ;; *************** function _EncoderSwitch_GetValue *****************
 16236 ;; Defined at:
 16237 ;;		line 34 in file "Encoder.c"
 16238 ;; Parameters:    Size  Location     Type
 16239 ;;		None
 16240 ;; Auto vars:     Size  Location     Type
 16241 ;;		None
 16242 ;; Return value:  Size  Location     Type
 16243 ;;                  1    wreg      unsigned char 
 16244 ;; Registers used:
 16245 ;;		wreg, status,2, status,0
 16246 ;; Tracked objects:
 16247 ;;		On entry : 18/1
 16248 ;;		On exit  : 1F/0
 16249 ;;		Unchanged: 0/0
 16250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16255 ;;Total ram usage:        0 bytes
 16256 ;; Hardware stack levels used:    1
 16257 ;; Hardware stack levels required when called:    7
 16258 ;; This function calls:
 16259 ;;		Nothing
 16260 ;; This function is called by:
 16261 ;;		_EncoderSwitch_GetValueFiltered
 16262 ;; This function uses a non-reentrant model
 16263 ;;
 16264                           
 16265                           
 16266                           ;psect for function _EncoderSwitch_GetValue
 16267  13D1                     _EncoderSwitch_GetValue:
 16268                           
 16269                           ;Encoder.c: 35: if (C_ETYPE == 1) {
 16270                           
 16271                           ;incstack = 0
 16272                           ; Regs used in _EncoderSwitch_GetValue: [wreg+status,2+status,0]
 16273  13D1  0020               	movlb	0	; select bank0
 16274  13D2  0B39               	decfsz	_C_ETYPE,w	;volatile
 16275  13D3  2BD8               	goto	l7160
 16276                           
 16277                           ;Encoder.c: 36: return (PORTCbits.RC2);
 16278  13D4  0C0E               	rrf	14,w	;volatile
 16279  13D5  0C89               	rrf	9,f
 16280  13D6  3901               	andlw	1
 16281  13D7  0008               	return
 16282  13D8                     l7160:
 16283                           
 16284                           ;Encoder.c: 38: return ((bool)!PORTCbits.RC4);
 16285  13D8  1003               	clrc
 16286  13D9  1E0E               	btfss	14,4	;volatile
 16287  13DA  1403               	setc
 16288  13DB  3000               	movlw	0
 16289  13DC  3D09               	addwfc	9,w
 16290  13DD  0008               	return
 16291  13DE                     __end_of_EncoderSwitch_GetValue:
 16292                           
 16293                           	psect	swtext4
 16294  07F1                     __pswtext4:
 16295  07F1                     S8430:
 16296  07F1  3193  2B59         	ljmp	l7944
 16297  07F3  3193  2B63         	ljmp	l7950
 16298  07F5  3193  2B6B         	ljmp	l7954
 16299  07F7  3193  2B73         	ljmp	l7958
 16300  07F9  3193  2B82         	ljmp	l7968
 16301  07FB  3193  2B92         	ljmp	l7976
 16302  07FD  3193  2BA0         	ljmp	l7990
 16303                           
 16304                           	psect	intentry
 16305  0004                     __pintentry:	
 16306 ;; *************** function _INTERRUPT_InterruptManager *****************
 16307 ;; Defined at:
 16308 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16309 ;; Parameters:    Size  Location     Type
 16310 ;;		None
 16311 ;; Auto vars:     Size  Location     Type
 16312 ;;		None
 16313 ;; Return value:  Size  Location     Type
 16314 ;;                  1    wreg      void 
 16315 ;; Registers used:
 16316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16317 ;; Tracked objects:
 16318 ;;		On entry : 0/0
 16319 ;;		On exit  : 0/0
 16320 ;;		Unchanged: 0/0
 16321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16326 ;;Total ram usage:        0 bytes
 16327 ;; Hardware stack levels used:    1
 16328 ;; Hardware stack levels required when called:    6
 16329 ;; This function calls:
 16330 ;;		_CLC1_ISR
 16331 ;;		_CLC2_ISR
 16332 ;;		_I2C1_ISR
 16333 ;;		_TMR3_ISR
 16334 ;; This function is called by:
 16335 ;;		Interrupt level 1
 16336 ;; This function uses a non-reentrant model
 16337 ;;
 16338                           
 16339  0004                     _INTERRUPT_InterruptManager:
 16340                           
 16341                           ;incstack = 0
 16342  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 16343                           
 16344                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16345  0005  3180               	pagesel	$
 16346                           
 16347                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 16348  0006  1F0B               	btfss	11,6	;volatile
 16349  0007  282E               	goto	i1l95
 16350                           
 16351                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE3bits.CLC2IE == 1 && PIR3bits
      +                          .CLC2IF == 1)
 16352  0008  0021               	movlb	1	; select bank1
 16353  0009  1C93               	btfss	19,1	;volatile
 16354  000A  2812               	goto	i1l86
 16355  000B  0020               	movlb	0	; select bank0
 16356  000C  1C93               	btfss	19,1	;volatile
 16357  000D  2812               	goto	i1l86
 16358                           
 16359                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: CLC2_ISR();
 16360  000E  318D  2584  3180   	fcall	_CLC2_ISR
 16361                           
 16362                           ;interrupt_manager.c: 60: }
 16363  0011  282E               	goto	i1l95
 16364  0012                     i1l86:
 16365                           
 16366                           ;interrupt_manager.c: 61: else if(PIE3bits.CLC1IE == 1 && PIR3bits.CLC1IF == 1)
 16367  0012  0021               	movlb	1	; select bank1
 16368  0013  1C13               	btfss	19,0	;volatile
 16369  0014  281C               	goto	i1l88
 16370  0015  0020               	movlb	0	; select bank0
 16371  0016  1C13               	btfss	19,0	;volatile
 16372  0017  281C               	goto	i1l88
 16373                           
 16374                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: CLC1_ISR();
 16375  0018  318D  2588  3180   	fcall	_CLC1_ISR
 16376                           
 16377                           ;interrupt_manager.c: 64: }
 16378  001B  282E               	goto	i1l95
 16379  001C                     i1l88:
 16380                           
 16381                           ;interrupt_manager.c: 65: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 16382  001C  0021               	movlb	1	; select bank1
 16383  001D  1D91               	btfss	17,3	;volatile
 16384  001E  2826               	goto	i1l90
 16385  001F  0020               	movlb	0	; select bank0
 16386  0020  1D91               	btfss	17,3	;volatile
 16387  0021  2826               	goto	i1l90
 16388                           
 16389                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: I2C1_ISR();
 16390  0022  3195  25B6  3180   	fcall	_I2C1_ISR
 16391                           
 16392                           ;interrupt_manager.c: 68: }
 16393  0025  282E               	goto	i1l95
 16394  0026                     i1l90:
 16395                           
 16396                           ;interrupt_manager.c: 69: else if(PIE3bits.TMR3IE == 1 && PIR3bits.TMR3IF == 1)
 16397  0026  0021               	movlb	1	; select bank1
 16398  0027  1E13               	btfss	19,4	;volatile
 16399  0028  282E               	goto	i1l95
 16400  0029  0020               	movlb	0	; select bank0
 16401  002A  1E13               	btfss	19,4	;volatile
 16402  002B  282E               	goto	i1l95
 16403                           
 16404                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: TMR3_ISR();
 16405  002C  3187  27D4         	fcall	_TMR3_ISR
 16406  002E                     i1l95:	
 16407                           ;interrupt_manager.c: 72: }
 16408                           
 16409  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 16410  002F  0009               	retfie
 16411  0030                     __end_of_INTERRUPT_InterruptManager:
 16412                           
 16413                           	psect	text45
 16414  07D4                     __ptext45:	
 16415 ;; *************** function _TMR3_ISR *****************
 16416 ;; Defined at:
 16417 ;;		line 121 in file "mcc_generated_files/tmr3.c"
 16418 ;; Parameters:    Size  Location     Type
 16419 ;;		None
 16420 ;; Auto vars:     Size  Location     Type
 16421 ;;		None
 16422 ;; Return value:  Size  Location     Type
 16423 ;;                  1    wreg      void 
 16424 ;; Registers used:
 16425 ;;		wreg, status,2, status,0, pclath, cstack
 16426 ;; Tracked objects:
 16427 ;;		On entry : 1F/0
 16428 ;;		On exit  : 1F/8
 16429 ;;		Unchanged: 0/0
 16430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16435 ;;Total ram usage:        0 bytes
 16436 ;; Hardware stack levels used:    1
 16437 ;; Hardware stack levels required when called:    1
 16438 ;; This function calls:
 16439 ;;		_TMR3_WriteTimer
 16440 ;;		_TimerInt
 16441 ;; This function is called by:
 16442 ;;		_INTERRUPT_InterruptManager
 16443 ;; This function uses a non-reentrant model
 16444 ;;
 16445                           
 16446                           
 16447                           ;psect for function _TMR3_ISR
 16448  07D4                     _TMR3_ISR:
 16449                           
 16450                           ;tmr3.c: 124: TimerInt();
 16451                           
 16452                           ;incstack = 0
 16453                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 16454  07D4  27ED  3187         	fcall	_TimerInt
 16455                           
 16456                           ;tmr3.c: 126: PIR3bits.TMR3IF = 0;
 16457  07D6  0020               	movlb	0	; select bank0
 16458  07D7  1213               	bcf	19,4	;volatile
 16459                           
 16460                           ;tmr3.c: 127: TMR3_WriteTimer(timer3ReloadVal);
 16461  07D8  0021               	movlb	1	; select bank1
 16462  07D9  0829               	movf	(_timer3ReloadVal+1)^(0+128),w	;volatile
 16463  07DA  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 16464  07DB  0828               	movf	_timer3ReloadVal^(0+128),w	;volatile
 16465  07DC  00F0               	movwf	TMR3_WriteTimer@timerVal
 16466  07DD  2FDE               	ljmp	i1l6198
 16467  07DE                     __end_of_TMR3_ISR:
 16468  07DE                     __ptext47:	
 16469 ;; *************** function _TMR3_WriteTimer *****************
 16470 ;; Defined at:
 16471 ;;		line 98 in file "mcc_generated_files/tmr3.c"
 16472 ;; Parameters:    Size  Location     Type
 16473 ;;  timerVal        2    0[COMMON] unsigned int 
 16474 ;; Auto vars:     Size  Location     Type
 16475 ;;		None
 16476 ;; Return value:  Size  Location     Type
 16477 ;;                  1    wreg      void 
 16478 ;; Registers used:
 16479 ;;		wreg
 16480 ;; Tracked objects:
 16481 ;;		On entry : 1F/1
 16482 ;;		On exit  : 1F/8
 16483 ;;		Unchanged: 0/0
 16484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16488 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16489 ;;Total ram usage:        2 bytes
 16490 ;; Hardware stack levels used:    1
 16491 ;; This function calls:
 16492 ;;		Nothing
 16493 ;; This function is called by:
 16494 ;;		_TMR3_ISR
 16495 ;; This function uses a non-reentrant model
 16496 ;;
 16497                           
 16498                           
 16499                           ;psect for function _TMR3_WriteTimer
 16500  07DE                     _TMR3_WriteTimer:
 16501  07DE                     i1l6198:	
 16502                           ;incstack = 0
 16503                           ; Regs used in _TMR3_WriteTimer: [wreg]
 16504                           
 16505                           
 16506                           ;tmr3.c: 100: if (T3CONbits.T3SYNC == 1)
 16507  07DE  0028               	movlb	8	; select bank8
 16508  07DF  1D13               	btfss	19,2	;volatile
 16509  07E0  2FE8               	goto	i1l6206
 16510                           
 16511                           ;tmr3.c: 101: {;tmr3.c: 103: T3CONbits.TMR3ON = 0;
 16512  07E1  1013               	bcf	19,0	;volatile
 16513                           
 16514                           ;tmr3.c: 106: TMR3H = (timerVal >> 8);
 16515  07E2  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 16516  07E3  0092               	movwf	18	;volatile
 16517                           
 16518                           ;tmr3.c: 107: TMR3L = timerVal;
 16519  07E4  0870               	movf	TMR3_WriteTimer@timerVal,w
 16520  07E5  0091               	movwf	17	;volatile
 16521                           
 16522                           ;tmr3.c: 110: T3CONbits.TMR3ON =1;
 16523  07E6  1413               	bsf	19,0	;volatile
 16524                           
 16525                           ;tmr3.c: 111: }
 16526  07E7  0008               	return
 16527  07E8                     i1l6206:
 16528                           
 16529                           ;tmr3.c: 112: else;tmr3.c: 113: {;tmr3.c: 115: TMR3H = (timerVal >> 8);
 16530  07E8  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 16531  07E9  0092               	movwf	18	;volatile
 16532                           
 16533                           ;tmr3.c: 116: TMR3L = timerVal;
 16534  07EA  0870               	movf	TMR3_WriteTimer@timerVal,w
 16535  07EB  0091               	movwf	17	;volatile
 16536  07EC  0008               	return
 16537  07ED                     __end_of_TMR3_WriteTimer:
 16538  07ED                     __ptext46:	
 16539 ;; *************** function _TimerInt *****************
 16540 ;; Defined at:
 16541 ;;		line 73 in file "main.c"
 16542 ;; Parameters:    Size  Location     Type
 16543 ;;		None
 16544 ;; Auto vars:     Size  Location     Type
 16545 ;;		None
 16546 ;; Return value:  Size  Location     Type
 16547 ;;                  1    wreg      void 
 16548 ;; Registers used:
 16549 ;;		None
 16550 ;; Tracked objects:
 16551 ;;		On entry : 1F/0
 16552 ;;		On exit  : 1F/1
 16553 ;;		Unchanged: 0/0
 16554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16559 ;;Total ram usage:        0 bytes
 16560 ;; Hardware stack levels used:    1
 16561 ;; This function calls:
 16562 ;;		Nothing
 16563 ;; This function is called by:
 16564 ;;		_TMR3_ISR
 16565 ;; This function uses a non-reentrant model
 16566 ;;
 16567                           
 16568                           
 16569                           ;psect for function _TimerInt
 16570  07ED                     _TimerInt:
 16571                           
 16572                           ;main.c: 74: fsm_tmr = 1;
 16573                           
 16574                           ;incstack = 0
 16575                           ; Regs used in _TimerInt: []
 16576  07ED  0021               	movlb	1	; select bank1
 16577  07EE  01C8               	clrf	_fsm_tmr^(0+128)
 16578  07EF  0AC8               	incf	_fsm_tmr^(0+128),f
 16579  07F0  0008               	return
 16580  07F1                     __end_of_TimerInt:
 16581                           
 16582                           	psect	text48
 16583  15B6                     __ptext48:	
 16584 ;; *************** function _I2C1_ISR *****************
 16585 ;; Defined at:
 16586 ;;		line 121 in file "mcc_generated_files/i2c1.c"
 16587 ;; Parameters:    Size  Location     Type
 16588 ;;		None
 16589 ;; Auto vars:     Size  Location     Type
 16590 ;;  i2c_data        1    6[BANK0 ] unsigned char 
 16591 ;; Return value:  Size  Location     Type
 16592 ;;                  1    wreg      void 
 16593 ;; Registers used:
 16594 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16595 ;; Tracked objects:
 16596 ;;		On entry : 1F/0
 16597 ;;		On exit  : 1F/4
 16598 ;;		Unchanged: 0/0
 16599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16601 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16603 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16604 ;;Total ram usage:        1 bytes
 16605 ;; Hardware stack levels used:    1
 16606 ;; Hardware stack levels required when called:    5
 16607 ;; This function calls:
 16608 ;;		_I2C1_StatusCallback
 16609 ;; This function is called by:
 16610 ;;		_INTERRUPT_InterruptManager
 16611 ;; This function uses a non-reentrant model
 16612 ;;
 16613                           
 16614                           
 16615                           ;psect for function _I2C1_ISR
 16616  15B6                     _I2C1_ISR:
 16617                           
 16618                           ;i2c1.c: 129: PIR1bits.SSP1IF = 0;
 16619                           
 16620                           ;incstack = 0
 16621                           ; Regs used in _I2C1_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16622  15B6  1191               	bcf	17,3	;volatile
 16623                           
 16624                           ;i2c1.c: 130: i2c_data = SSP1BUF;
 16625  15B7  0024               	movlb	4	; select bank4
 16626  15B8  0811               	movf	17,w	;volatile
 16627  15B9  0020               	movlb	0	; select bank0
 16628  15BA  00D2               	movwf	I2C1_ISR@i2c_data
 16629                           
 16630                           ;i2c1.c: 131: if(1 == SSP1STATbits.R_nW)
 16631  15BB  0024               	movlb	4	; select bank4
 16632  15BC  1D14               	btfss	20,2	;volatile
 16633  15BD  2DC5               	goto	i1l134
 16634                           
 16635                           ;i2c1.c: 132: {;i2c1.c: 133: if((1 == SSP1STATbits.D_nA) && (1 == SSP1CON2bits.ACKSTAT))
 16636  15BE  1A94               	btfsc	20,5	;volatile
 16637  15BF  1F16               	btfss	22,6	;volatile
 16638  15C0  2DC3               	goto	i1l6694
 16639                           
 16640                           ;i2c1.c: 134: {;i2c1.c: 136: I2C1_StatusCallback(I2C1_SLAVE_READ_COMPLETED);
 16641  15C1  3003               	movlw	3
 16642  15C2  2DCE               	goto	L8
 16643  15C3                     i1l6694:	
 16644                           ;i2c1.c: 137: }
 16645                           
 16646                           
 16647                           ;i2c1.c: 138: else;i2c1.c: 139: {;i2c1.c: 141: I2C1_StatusCallback(I2C1_SLAVE_READ_REQUE
      +                          ST);
 16648  15C3  3001               	movlw	1
 16649  15C4  2DCE               	goto	L8
 16650  15C5                     i1l134:
 16651                           
 16652                           ;i2c1.c: 144: else if(0 == SSP1STATbits.D_nA)
 16653  15C5  1A94               	btfsc	20,5	;volatile
 16654  15C6  2DC9               	goto	i1l6698
 16655                           
 16656                           ;i2c1.c: 145: {;i2c1.c: 149: I2C1_StatusCallback(I2C1_SLAVE_WRITE_REQUEST);
 16657  15C7  3000               	movlw	0
 16658  15C8  2DCE               	goto	L8
 16659  15C9                     i1l6698:	
 16660                           ;i2c1.c: 150: }
 16661                           
 16662                           
 16663                           ;i2c1.c: 151: else;i2c1.c: 152: {;i2c1.c: 153: I2C1_slaveWriteData = i2c_data;
 16664  15C9  0020               	movlb	0	; select bank0
 16665  15CA  0852               	movf	I2C1_ISR@i2c_data,w
 16666  15CB  0021               	movlb	1	; select bank1
 16667  15CC  00DA               	movwf	_I2C1_slaveWriteData^(0+128)	;volatile
 16668                           
 16669                           ;i2c1.c: 156: I2C1_StatusCallback(I2C1_SLAVE_WRITE_COMPLETED);
 16670  15CD  3002               	movlw	2
 16671  15CE                     L8:
 16672  15CE  25D2               	fcall	_I2C1_StatusCallback
 16673                           
 16674                           ;i2c1.c: 157: };i2c1.c: 159: SSP1CON1bits.CKP = 1;
 16675  15CF  0024               	movlb	4	; select bank4
 16676  15D0  1615               	bsf	21,4	;volatile
 16677  15D1  0008               	return
 16678  15D2                     __end_of_I2C1_ISR:
 16679  15D2                     __ptext49:	
 16680 ;; *************** function _I2C1_StatusCallback *****************
 16681 ;; Defined at:
 16682 ;;		line 58 in file "i2c_register.c"
 16683 ;; Parameters:    Size  Location     Type
 16684 ;;  i2c_bus_stat    1    wreg     enum E75
 16685 ;; Auto vars:     Size  Location     Type
 16686 ;;  i2c_bus_stat    1    5[BANK0 ] enum E75
 16687 ;; Return value:  Size  Location     Type
 16688 ;;                  1    wreg      void 
 16689 ;; Registers used:
 16690 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16691 ;; Tracked objects:
 16692 ;;		On entry : 1A/4
 16693 ;;		On exit  : 1E/0
 16694 ;;		Unchanged: 0/0
 16695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16697 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16699 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16700 ;;Total ram usage:        1 bytes
 16701 ;; Hardware stack levels used:    1
 16702 ;; Hardware stack levels required when called:    4
 16703 ;; This function calls:
 16704 ;;		_RegisterRead
 16705 ;;		_RegisterWrite
 16706 ;; This function is called by:
 16707 ;;		_I2C1_ISR
 16708 ;; This function uses a non-reentrant model
 16709 ;;
 16710                           
 16711                           
 16712                           ;psect for function _I2C1_StatusCallback
 16713  15D2                     _I2C1_StatusCallback:
 16714                           
 16715                           ;incstack = 0
 16716                           ; Regs used in _I2C1_StatusCallback: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16717                           ;I2C1_StatusCallback@i2c_bus_state stored from wreg
 16718  15D2  0020               	movlb	0	; select bank0
 16719  15D3  00D1               	movwf	I2C1_StatusCallback@i2c_bus_state
 16720                           
 16721                           ;i2c_register.c: 59: static uint8_t slaveWriteType = SLAVE_NORMAL_DATA;;i2c_register.c: 
      +                          61: switch (i2c_bus_state) {
 16722  15D4  2DFA               	goto	i1l6190
 16723  15D5                     i1l759:	
 16724                           ;i2c_register.c: 62: case I2C1_SLAVE_WRITE_REQUEST:
 16725                           
 16726                           
 16727                           ;i2c_register.c: 64: slaveWriteType = SLAVE_DATA_ADDRESS;
 16728  15D5  0021               	movlb	1	; select bank1
 16729  15D6  01B3               	clrf	I2C1_StatusCallback@slaveWriteType^(0+128)
 16730  15D7  0AB3               	incf	I2C1_StatusCallback@slaveWriteType^(0+128),f
 16731                           
 16732                           ;i2c_register.c: 65: break;
 16733  15D8  0008               	return
 16734  15D9                     i1l6172:
 16735                           
 16736                           ;i2c_register.c: 72: EncoderReg = I2C1_slaveWriteData;
 16737  15D9  085A               	movf	_I2C1_slaveWriteData^(0+128),w	;volatile
 16738  15DA  00B6               	movwf	_EncoderReg^(0+128)	;volatile
 16739                           
 16740                           ;i2c_register.c: 73: break;
 16741  15DB  2DF0               	goto	i1l6182
 16742  15DC                     i1l6174:
 16743                           
 16744                           ;i2c_register.c: 77: RegisterWrite(EncoderReg, I2C1_slaveWriteData);
 16745  15DC  085A               	movf	_I2C1_slaveWriteData^(0+128),w	;volatile
 16746  15DD  0020               	movlb	0	; select bank0
 16747  15DE  00CF               	movwf	RegisterWrite@data
 16748  15DF  0021               	movlb	1	; select bank1
 16749  15E0  0836               	movf	_EncoderReg^(0+128),w	;volatile
 16750  15E1  318B  230A  3195   	fcall	_RegisterWrite
 16751                           
 16752                           ;i2c_register.c: 78: EncoderReg++;
 16753  15E4  0021               	movlb	1	; select bank1
 16754  15E5  0AB6               	incf	_EncoderReg^(0+128),f	;volatile
 16755                           
 16756                           ;i2c_register.c: 79: break;
 16757  15E6  2DF0               	goto	i1l6182
 16758  15E7                     i1l6180:
 16759  15E7  0021               	movlb	1	; select bank1
 16760  15E8  0833               	movf	I2C1_StatusCallback@slaveWriteType^(0+128),w
 16761                           
 16762                           ; Switch size 1, requested type "speed"
 16763                           ; Number of cases is 2, Range of values is 0 to 1
 16764                           ; switch strategies available:
 16765                           ; Name         Instructions Cycles
 16766                           ; simple_byte            7     4 (average)
 16767                           ; direct_byte           10     6 (fixed)
 16768                           ; jumptable            260     6 (fixed)
 16769                           ;	Chosen strategy is simple_byte
 16770  15E9  3A00               	xorlw	0	; case 0
 16771  15EA  1903               	skipnz
 16772  15EB  2DDC               	goto	i1l6174
 16773  15EC  3A01               	xorlw	1	; case 1
 16774  15ED  1903               	skipnz
 16775  15EE  2DD9               	goto	i1l6172
 16776  15EF  2DDC               	goto	i1l6174
 16777  15F0                     i1l6182:
 16778                           
 16779                           ;i2c_register.c: 83: slaveWriteType = SLAVE_NORMAL_DATA;
 16780  15F0  01B3               	clrf	I2C1_StatusCallback@slaveWriteType^(0+128)
 16781                           
 16782                           ;i2c_register.c: 84: break;
 16783  15F1  0008               	return
 16784  15F2                     i1l6184:
 16785                           
 16786                           ;i2c_register.c: 87: SSP1BUF = RegisterRead(EncoderReg);
 16787  15F2  0021               	movlb	1	; select bank1
 16788  15F3  0836               	movf	_EncoderReg^(0+128),w	;volatile
 16789  15F4  2605               	fcall	_RegisterRead
 16790  15F5  0024               	movlb	4	; select bank4
 16791  15F6  0091               	movwf	17	;volatile
 16792                           
 16793                           ;i2c_register.c: 88: EncoderReg++;
 16794  15F7  0021               	movlb	1	; select bank1
 16795  15F8  0AB6               	incf	_EncoderReg^(0+128),f	;volatile
 16796                           
 16797                           ;i2c_register.c: 89: break;
 16798  15F9  0008               	return
 16799  15FA                     i1l6190:
 16800  15FA  0851               	movf	I2C1_StatusCallback@i2c_bus_state,w
 16801                           
 16802                           ; Switch size 1, requested type "speed"
 16803                           ; Number of cases is 4, Range of values is 0 to 3
 16804                           ; switch strategies available:
 16805                           ; Name         Instructions Cycles
 16806                           ; direct_byte           14     6 (fixed)
 16807                           ; simple_byte           13     7 (average)
 16808                           ; jumptable            260     6 (fixed)
 16809                           ;	Chosen strategy is direct_byte
 16810  15FB  0084               	movwf	4
 16811  15FC  3004               	movlw	4
 16812  15FD  0204               	subwf	4,w
 16813  15FE  1803               	skipnc
 16814  15FF  0008               	return
 16815  1600  3192               	movlp	high i1S8432
 16816  1601  3504               	lslf	4,w
 16817  1602  3EA5               	addlw	low i1S8432
 16818  1603  0082               	movwf	2
 16819  1604                     i1l770:
 16820  1604  0008               	return
 16821  1605                     __end_of_I2C1_StatusCallback:
 16822  1605                     __ptext76:	
 16823 ;; *************** function _RegisterRead *****************
 16824 ;; Defined at:
 16825 ;;		line 307 in file "i2c_register.c"
 16826 ;; Parameters:    Size  Location     Type
 16827 ;;  add             1    wreg     unsigned char 
 16828 ;; Auto vars:     Size  Location     Type
 16829 ;;  add             1    1[COMMON] unsigned char 
 16830 ;;  return_value    1    2[COMMON] unsigned char 
 16831 ;; Return value:  Size  Location     Type
 16832 ;;                  1    wreg      unsigned char 
 16833 ;; Registers used:
 16834 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16835 ;; Tracked objects:
 16836 ;;		On entry : 1F/1
 16837 ;;		On exit  : C/0
 16838 ;;		Unchanged: 0/0
 16839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16841 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16843 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16844 ;;Total ram usage:        2 bytes
 16845 ;; Hardware stack levels used:    1
 16846 ;; Hardware stack levels required when called:    1
 16847 ;; This function calls:
 16848 ;;		_eeprom_read
 16849 ;; This function is called by:
 16850 ;;		_I2C1_StatusCallback
 16851 ;; This function uses a non-reentrant model
 16852 ;;
 16853                           
 16854                           
 16855                           ;psect for function _RegisterRead
 16856  1605                     _RegisterRead:
 16857                           
 16858                           ;incstack = 0
 16859                           ; Regs used in _RegisterRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16860                           ;RegisterRead@add stored from wreg
 16861  1605  00F1               	movwf	RegisterRead@add
 16862                           
 16863                           ;i2c_register.c: 310: switch (add) {
 16864  1606  2EA0               	goto	i1l5720
 16865  1607                     i1l5600:
 16866                           
 16867                           ;i2c_register.c: 312: return_value = GCONF;
 16868  1607  0020               	movlb	0	; select bank0
 16869  1608  0849               	movf	_GCONF,w	;volatile
 16870  1609  2E9E               	goto	L45
 16871  160A                     i1l5602:	
 16872                           ;i2c_register.c: 313: break;
 16873                           
 16874                           
 16875                           ;i2c_register.c: 316: return_value = GP1CONF;
 16876  160A  0020               	movlb	0	; select bank0
 16877  160B  0848               	movf	_GP1CONF,w	;volatile
 16878  160C  2E9E               	goto	L45
 16879  160D                     i1l5604:	
 16880                           ;i2c_register.c: 317: break;
 16881                           
 16882                           
 16883                           ;i2c_register.c: 320: return_value = GP2CONF;
 16884  160D  0020               	movlb	0	; select bank0
 16885  160E  0847               	movf	_GP2CONF,w	;volatile
 16886  160F  2E9E               	goto	L45
 16887  1610                     i1l5606:	
 16888                           ;i2c_register.c: 321: break;
 16889                           
 16890                           
 16891                           ;i2c_register.c: 324: if (C_ETYPE == 0) {
 16892  1610  0020               	movlb	0	; select bank0
 16893  1611  0839               	movf	_C_ETYPE,w	;volatile
 16894  1612  1D03               	btfss	3,2
 16895  1613  2E16               	goto	i1l5610
 16896                           
 16897                           ;i2c_register.c: 325: return_value = GP3CONF;
 16898  1614  0846               	movf	_GP3CONF,w	;volatile
 16899  1615  2E9E               	goto	L45
 16900  1616                     i1l5610:	
 16901                           ;i2c_register.c: 326: } else {
 16902                           
 16903                           
 16904                           ;i2c_register.c: 327: return_value = 0;
 16905  1616  01F2               	clrf	RegisterRead@return_value
 16906  1617  2EAA               	goto	i1l5722
 16907  1618                     i1l5612:
 16908                           
 16909                           ;i2c_register.c: 332: return_value = INTCONF;
 16910  1618  0849               	movf	_INTCONF^(0+128),w	;volatile
 16911  1619  2E9E               	goto	L45
 16912  161A                     i1l5614:	
 16913                           ;i2c_register.c: 333: break;
 16914                           
 16915                           
 16916                           ;i2c_register.c: 336: return_value = ESTATUS;
 16917  161A  0020               	movlb	0	; select bank0
 16918  161B  084A               	movf	_ESTATUS,w	;volatile
 16919  161C  00F2               	movwf	RegisterRead@return_value
 16920                           
 16921                           ;i2c_register.c: 337: ESTATUS = 0;
 16922  161D  01CA               	clrf	_ESTATUS	;volatile
 16923  161E  0022               	movlb	2	; select bank2
 16924  161F  168D               	bsf	13,5	;volatile
 16925  1620  2EAA               	goto	i1l5722
 16926  1621                     i1l5620:
 16927                           
 16928                           ;i2c_register.c: 342: return_value = I2STATUS;
 16929  1621  0847               	movf	_I2STATUS^(0+128),w	;volatile
 16930  1622  00F2               	movwf	RegisterRead@return_value
 16931                           
 16932                           ;i2c_register.c: 343: I2STATUS = 0;
 16933  1623  01C7               	clrf	_I2STATUS^(0+128)	;volatile
 16934                           
 16935                           ;i2c_register.c: 344: break;
 16936  1624  2EAA               	goto	i1l5722
 16937  1625                     i1l5624:
 16938                           
 16939                           ;i2c_register.c: 347: return_value = FSTATUS;
 16940  1625  0846               	movf	_FSTATUS^(0+128),w	;volatile
 16941  1626  2E9E               	goto	L45
 16942  1627                     i1l5626:	
 16943                           ;i2c_register.c: 348: break;
 16944                           
 16945                           
 16946                           ;i2c_register.c: 352: return_value = CVAL.bval[3];
 16947  1627  0020               	movlb	0	; select bank0
 16948  1628  082F               	movf	_CVAL+3,w	;volatile
 16949  1629  00F2               	movwf	RegisterRead@return_value
 16950                           
 16951                           ;i2c_register.c: 353: if (S_RELATIVE == 1)
 16952  162A  0B37               	decfsz	_S_RELATIVE,w	;volatile
 16953  162B  2EAA               	goto	i1l5722
 16954  162C  2E46               	goto	L16
 16955  162D                     i1l5632:	
 16956                           ;i2c_register.c: 354: CVAL.bval[3] = 0;
 16957                           
 16958                           
 16959                           ;i2c_register.c: 357: return_value = CVAL.bval[2];
 16960  162D  0020               	movlb	0	; select bank0
 16961  162E  082E               	movf	_CVAL+2,w	;volatile
 16962  162F  00F2               	movwf	RegisterRead@return_value
 16963                           
 16964                           ;i2c_register.c: 358: if (S_RELATIVE == 1) {
 16965  1630  0B37               	decfsz	_S_RELATIVE,w	;volatile
 16966  1631  2EAA               	goto	i1l5722
 16967                           
 16968                           ;i2c_register.c: 359: CVAL.bval[3] = 0;
 16969  1632  01AF               	clrf	_CVAL+3	;volatile
 16970                           
 16971                           ;i2c_register.c: 360: CVAL.bval[2] = 0;
 16972  1633  01AE               	clrf	_CVAL+2	;volatile
 16973  1634  2EAA               	goto	i1l5722
 16974  1635                     i1l5638:
 16975                           
 16976                           ;i2c_register.c: 364: return_value = CVAL.bval[1];
 16977  1635  0020               	movlb	0	; select bank0
 16978  1636  082D               	movf	_CVAL+1,w	;volatile
 16979  1637  00F2               	movwf	RegisterRead@return_value
 16980                           
 16981                           ;i2c_register.c: 365: if (S_RELATIVE == 1) {
 16982  1638  0B37               	decfsz	_S_RELATIVE,w	;volatile
 16983  1639  2EAA               	goto	i1l5722
 16984                           
 16985                           ;i2c_register.c: 366: CVAL.bval[3] = 0;
 16986  163A  01AF               	clrf	_CVAL+3	;volatile
 16987                           
 16988                           ;i2c_register.c: 367: CVAL.bval[2] = 0;
 16989  163B  01AE               	clrf	_CVAL+2	;volatile
 16990                           
 16991                           ;i2c_register.c: 368: CVAL.bval[1] = 0;
 16992  163C  01AD               	clrf	_CVAL+1	;volatile
 16993  163D  2EAA               	goto	i1l5722
 16994  163E                     i1l5644:
 16995                           
 16996                           ;i2c_register.c: 372: return_value = CVAL.bval[0];
 16997  163E  0020               	movlb	0	; select bank0
 16998  163F  082C               	movf	_CVAL,w	;volatile
 16999  1640  00F2               	movwf	RegisterRead@return_value
 17000                           
 17001                           ;i2c_register.c: 373: if (S_RELATIVE == 1)
 17002  1641  0B37               	decfsz	_S_RELATIVE,w	;volatile
 17003  1642  2EAA               	goto	i1l5722
 17004                           
 17005                           ;i2c_register.c: 374: CVAL.val = 0;
 17006  1643  01AC               	clrf	_CVAL	;volatile
 17007  1644  01AD               	clrf	_CVAL+1	;volatile
 17008  1645  01AE               	clrf	_CVAL+2	;volatile
 17009  1646                     L16:
 17010  1646  01AF               	clrf	_CVAL+3	;volatile
 17011  1647  2EAA               	goto	i1l5722
 17012  1648                     i1l5650:
 17013                           
 17014                           ;i2c_register.c: 379: return_value = CMAX.bval[3];
 17015  1648  0020               	movlb	0	; select bank0
 17016  1649  082B               	movf	_CMAX+3,w	;volatile
 17017  164A  2E9E               	goto	L45
 17018  164B                     i1l5652:	
 17019                           ;i2c_register.c: 380: break;
 17020                           
 17021                           
 17022                           ;i2c_register.c: 382: return_value = CMAX.bval[2];
 17023  164B  0020               	movlb	0	; select bank0
 17024  164C  082A               	movf	_CMAX+2,w	;volatile
 17025  164D  2E9E               	goto	L45
 17026  164E                     i1l5654:	
 17027                           ;i2c_register.c: 383: break;
 17028                           
 17029                           
 17030                           ;i2c_register.c: 385: return_value = CMAX.bval[1];
 17031  164E  0020               	movlb	0	; select bank0
 17032  164F  0829               	movf	_CMAX+1,w	;volatile
 17033  1650  2E9E               	goto	L45
 17034  1651                     i1l5656:	
 17035                           ;i2c_register.c: 386: break;
 17036                           
 17037                           
 17038                           ;i2c_register.c: 388: return_value = CMAX.bval[0];
 17039  1651  0020               	movlb	0	; select bank0
 17040  1652  0828               	movf	_CMAX,w	;volatile
 17041  1653  2E9E               	goto	L45
 17042  1654                     i1l5658:	
 17043                           ;i2c_register.c: 389: break;
 17044                           
 17045                           
 17046                           ;i2c_register.c: 393: return_value = CMIN.bval[3];
 17047  1654  0020               	movlb	0	; select bank0
 17048  1655  0827               	movf	_CMIN+3,w	;volatile
 17049  1656  2E9E               	goto	L45
 17050  1657                     i1l5660:	
 17051                           ;i2c_register.c: 394: break;
 17052                           
 17053                           
 17054                           ;i2c_register.c: 396: return_value = CMIN.bval[2];
 17055  1657  0020               	movlb	0	; select bank0
 17056  1658  0826               	movf	_CMIN+2,w	;volatile
 17057  1659  2E9E               	goto	L45
 17058  165A                     i1l5662:	
 17059                           ;i2c_register.c: 397: break;
 17060                           
 17061                           
 17062                           ;i2c_register.c: 399: return_value = CMIN.bval[1];
 17063  165A  0020               	movlb	0	; select bank0
 17064  165B  0825               	movf	_CMIN+1,w	;volatile
 17065  165C  2E9E               	goto	L45
 17066  165D                     i1l5664:	
 17067                           ;i2c_register.c: 400: break;
 17068                           
 17069                           
 17070                           ;i2c_register.c: 402: return_value = CMIN.bval[0];
 17071  165D  0020               	movlb	0	; select bank0
 17072  165E  0824               	movf	_CMIN,w	;volatile
 17073  165F  2E9E               	goto	L45
 17074  1660                     i1l5666:	
 17075                           ;i2c_register.c: 403: break;
 17076                           
 17077                           
 17078                           ;i2c_register.c: 407: return_value = ISTEP.bval[3];
 17079  1660  0020               	movlb	0	; select bank0
 17080  1661  0823               	movf	_ISTEP+3,w	;volatile
 17081  1662  2E9E               	goto	L45
 17082  1663                     i1l5668:	
 17083                           ;i2c_register.c: 408: break;
 17084                           
 17085                           
 17086                           ;i2c_register.c: 410: return_value = ISTEP.bval[2];
 17087  1663  0020               	movlb	0	; select bank0
 17088  1664  0822               	movf	_ISTEP+2,w	;volatile
 17089  1665  2E9E               	goto	L45
 17090  1666                     i1l5670:	
 17091                           ;i2c_register.c: 411: break;
 17092                           
 17093                           
 17094                           ;i2c_register.c: 413: return_value = ISTEP.bval[1];
 17095  1666  0020               	movlb	0	; select bank0
 17096  1667  0821               	movf	_ISTEP+1,w	;volatile
 17097  1668  2E9E               	goto	L45
 17098  1669                     i1l5672:	
 17099                           ;i2c_register.c: 414: break;
 17100                           
 17101                           
 17102                           ;i2c_register.c: 416: return_value = ISTEP.bval[0];
 17103  1669  0020               	movlb	0	; select bank0
 17104  166A  0820               	movf	_ISTEP,w	;volatile
 17105  166B  2E9E               	goto	L45
 17106  166C                     i1l5674:	
 17107                           ;i2c_register.c: 417: break;
 17108                           
 17109                           
 17110                           ;i2c_register.c: 421: return_value = RLED;
 17111  166C  0020               	movlb	0	; select bank0
 17112  166D  0845               	movf	_RLED,w	;volatile
 17113  166E  2E9E               	goto	L45
 17114  166F                     i1l5676:	
 17115                           ;i2c_register.c: 422: break;
 17116                           
 17117                           
 17118                           ;i2c_register.c: 425: return_value = GLED;
 17119  166F  0020               	movlb	0	; select bank0
 17120  1670  0844               	movf	_GLED,w	;volatile
 17121  1671  2E9E               	goto	L45
 17122  1672                     i1l5678:	
 17123                           ;i2c_register.c: 426: break;
 17124                           
 17125                           
 17126                           ;i2c_register.c: 429: return_value = BLED;
 17127  1672  0020               	movlb	0	; select bank0
 17128  1673  0843               	movf	_BLED,w	;volatile
 17129  1674  2E9E               	goto	L45
 17130  1675                     i1l5680:	
 17131                           ;i2c_register.c: 430: break;
 17132                           
 17133                           
 17134                           ;i2c_register.c: 433: return_value = GP1REG;
 17135  1675  0020               	movlb	0	; select bank0
 17136  1676  0842               	movf	_GP1REG,w	;volatile
 17137  1677  2E9E               	goto	L45
 17138  1678                     i1l5682:	
 17139                           ;i2c_register.c: 434: break;
 17140                           
 17141                           
 17142                           ;i2c_register.c: 437: return_value = GP2REG;
 17143  1678  0020               	movlb	0	; select bank0
 17144  1679  0841               	movf	_GP2REG,w	;volatile
 17145  167A  2E9E               	goto	L45
 17146  167B                     i1l5684:	
 17147                           ;i2c_register.c: 438: break;
 17148                           
 17149                           
 17150                           ;i2c_register.c: 441: if (C_ETYPE == 0) {
 17151  167B  0020               	movlb	0	; select bank0
 17152  167C  0839               	movf	_C_ETYPE,w	;volatile
 17153  167D  1D03               	btfss	3,2
 17154  167E  2E16               	goto	i1l5610
 17155                           
 17156                           ;i2c_register.c: 442: return_value = GP3REG;
 17157  167F  0840               	movf	_GP3REG,w	;volatile
 17158  1680  2E9E               	goto	L45
 17159  1681                     i1l5690:	
 17160                           ;i2c_register.c: 443: } else {
 17161                           
 17162                           
 17163                           ;i2c_register.c: 449: return_value = ANTBOUNC;
 17164  1681  0845               	movf	_ANTBOUNC^(0+128),w	;volatile
 17165  1682  2E9E               	goto	L45
 17166  1683                     i1l5692:	
 17167                           ;i2c_register.c: 450: break;
 17168                           
 17169                           
 17170                           ;i2c_register.c: 453: return_value = DPPERIOD;
 17171  1683  0844               	movf	_DPPERIOD^(0+128),w	;volatile
 17172  1684  2E9E               	goto	L45
 17173  1685                     i1l5694:	
 17174                           ;i2c_register.c: 454: break;
 17175                           
 17176                           
 17177                           ;i2c_register.c: 457: return_value = FADERGB;
 17178  1685  0843               	movf	_FADERGB^(0+128),w	;volatile
 17179  1686  2E9E               	goto	L45
 17180  1687                     i1l5696:	
 17181                           ;i2c_register.c: 458: break;
 17182                           
 17183                           
 17184                           ;i2c_register.c: 461: return_value = FADEGP;
 17185  1687  0020               	movlb	0	; select bank0
 17186  1688  083F               	movf	_FADEGP,w	;volatile
 17187  1689  2E9E               	goto	L45
 17188  168A                     i1l5698:	
 17189                           ;i2c_register.c: 462: break;
 17190                           
 17191                           
 17192                           ;i2c_register.c: 466: return_value = GAMMAGP3_RLED;
 17193  168A  0020               	movlb	0	; select bank0
 17194  168B  083C               	movf	_GAMMAGP3_RLED,w	;volatile
 17195  168C  2E9E               	goto	L45
 17196  168D                     i1l5700:	
 17197                           ;i2c_register.c: 467: break;
 17198                           
 17199                           
 17200                           ;i2c_register.c: 470: return_value = GAMMAGLED;
 17201  168D  0020               	movlb	0	; select bank0
 17202  168E  083B               	movf	_GAMMAGLED,w	;volatile
 17203  168F  2E9E               	goto	L45
 17204  1690                     i1l5702:	
 17205                           ;i2c_register.c: 471: break;
 17206                           
 17207                           
 17208                           ;i2c_register.c: 474: return_value = GAMMABLED;
 17209  1690  0020               	movlb	0	; select bank0
 17210  1691  083A               	movf	_GAMMABLED,w	;volatile
 17211  1692  2E9E               	goto	L45
 17212  1693                     i1l5704:	
 17213                           ;i2c_register.c: 475: break;
 17214                           
 17215                           
 17216                           ;i2c_register.c: 478: return_value = GAMMAGP1;
 17217  1693  0020               	movlb	0	; select bank0
 17218  1694  083E               	movf	_GAMMAGP1,w	;volatile
 17219  1695  2E9E               	goto	L45
 17220  1696                     i1l5706:	
 17221                           ;i2c_register.c: 479: break;
 17222                           
 17223                           
 17224                           ;i2c_register.c: 482: return_value = GAMMAGP2;
 17225  1696  0020               	movlb	0	; select bank0
 17226  1697  083D               	movf	_GAMMAGP2,w	;volatile
 17227  1698  2E9E               	goto	L45
 17228  1699                     i1l5710:	
 17229                           ;i2c_register.c: 483: break;
 17230                           
 17231                           
 17232                           ;i2c_register.c: 490: return_value = GCONF2;
 17233  1699  0842               	movf	_GCONF2^(0+128),w	;volatile
 17234  169A  2E9E               	goto	L45
 17235  169B                     i1l5712:	
 17236                           ;i2c_register.c: 491: break;
 17237                           
 17238                           
 17239                           ;i2c_register.c: 494: return_value = 0x53;;
 17240  169B  3053               	movlw	83
 17241  169C  2E9E               	goto	L45
 17242  169D                     i1l5714:	
 17243                           ;i2c_register.c: 495: break;
 17244                           
 17245                           
 17246                           ;i2c_register.c: 498: return_value = 0x23;
 17247  169D  3023               	movlw	35
 17248  169E                     L45:
 17249  169E  00F2               	movwf	RegisterRead@return_value
 17250                           
 17251                           ;i2c_register.c: 499: break;
 17252  169F  2EAA               	goto	i1l5722
 17253  16A0                     i1l5720:
 17254  16A0  0871               	movf	RegisterRead@add,w
 17255                           
 17256                           ; Switch size 1, requested type "speed"
 17257                           ; Number of cases is 43, Range of values is 0 to 113
 17258                           ; switch strategies available:
 17259                           ; Name         Instructions Cycles
 17260                           ; direct_byte          234     6 (fixed)
 17261                           ; simple_byte          130    66 (average)
 17262                           ; jumptable            260     6 (fixed)
 17263                           ;	Chosen strategy is direct_byte
 17264  16A1  0084               	movwf	4
 17265  16A2  3072               	movlw	114
 17266  16A3  0204               	subwf	4,w
 17267  16A4  1803               	skipnc
 17268  16A5  2E16               	goto	i1l5610
 17269  16A6  3190               	movlp	high i1S8454
 17270  16A7  3504               	lslf	4,w
 17271  16A8  3E00               	addlw	low i1S8454
 17272  16A9  0082               	movwf	2
 17273  16AA                     i1l5722:
 17274                           
 17275                           ;i2c_register.c: 506: if (add >= REG_EEPROMS) {
 17276  16AA  3080               	movlw	128
 17277  16AB  0271               	subwf	RegisterRead@add,w
 17278  16AC  1C03               	skipc
 17279  16AD  2EB8               	goto	i1l5730
 17280                           
 17281                           ;i2c_register.c: 507: if (C_MBANK == 0) {
 17282  16AE  0021               	movlb	1	; select bank1
 17283  16AF  0840               	movf	_C_MBANK^(0+128),w	;volatile
 17284  16B0  1D03               	btfss	3,2
 17285  16B1  2EB5               	goto	i1l5728
 17286                           
 17287                           ;i2c_register.c: 508: return_value = eeprom_read((uint8_t) (add - REG_EEPROMS));
 17288  16B2  0871               	movf	RegisterRead@add,w
 17289  16B3  3E80               	addlw	128
 17290  16B4  2EB6               	goto	L46
 17291  16B5                     i1l5728:	
 17292                           ;i2c_register.c: 509: } else {
 17293                           
 17294                           
 17295                           ;i2c_register.c: 510: return_value = eeprom_read(add);
 17296  16B5  0871               	movf	RegisterRead@add,w
 17297  16B6                     L46:
 17298  16B6  26BA               	fcall	_eeprom_read
 17299  16B7  00F2               	movwf	RegisterRead@return_value
 17300  16B8                     i1l5730:
 17301                           
 17302                           ;i2c_register.c: 511: };i2c_register.c: 512: };i2c_register.c: 513: return return_value;
 17303  16B8  0872               	movf	RegisterRead@return_value,w
 17304  16B9  0008               	return
 17305  16BA                     __end_of_RegisterRead:
 17306  16BA                     __ptext77:	
 17307 ;; *************** function _eeprom_read *****************
 17308 ;; Defined at:
 17309 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eeread.c"
 17310 ;; Parameters:    Size  Location     Type
 17311 ;;  addr            1    wreg     unsigned char 
 17312 ;; Auto vars:     Size  Location     Type
 17313 ;;  addr            1    0[COMMON] unsigned char 
 17314 ;; Return value:  Size  Location     Type
 17315 ;;                  1    wreg      unsigned char 
 17316 ;; Registers used:
 17317 ;;		wreg
 17318 ;; Tracked objects:
 17319 ;;		On entry : 1F/1
 17320 ;;		On exit  : 1F/11
 17321 ;;		Unchanged: 0/0
 17322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17324 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17326 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17327 ;;Total ram usage:        1 bytes
 17328 ;; Hardware stack levels used:    1
 17329 ;; This function calls:
 17330 ;;		Nothing
 17331 ;; This function is called by:
 17332 ;;		_RegisterRead
 17333 ;; This function uses a non-reentrant model
 17334 ;;
 17335                           
 17336                           
 17337                           ;psect for function _eeprom_read
 17338  16BA                     _eeprom_read:
 17339                           
 17340                           ;incstack = 0
 17341                           ; Regs used in _eeprom_read: [wreg]
 17342                           ;eeprom_read@addr stored from wreg
 17343  16BA  00F0               	movwf	eeprom_read@addr
 17344  16BB  2EBD               	goto	i1l1695
 17345  16BC                     u266_21:
 17346  16BC  0021               	movlb	1	; select bank1
 17347  16BD                     i1l1695:	
 17348                           ;__eeread.c: 8: do
 17349                           
 17350  16BD  0064               	clrwdt	;# 
 17351                           
 17352                           ;__eeread.c: 14: while (NVMCON1bits.WR);
 17353  16BE  0031               	movlb	17	; select bank17
 17354  16BF  1895               	btfsc	21,1	;volsfr
 17355  16C0  2EBC               	goto	u266_21
 17356                           
 17357                           ;__eeread.c: 18: return ( NVMCON1bits.NVMREGS = 1, NVMADRL = (addr) & 0xFFU, NVMADRH = 0
      +                          x70, NVMCON1bits.RD = 1, NVMDATL);
 17358  16C1  1715               	bsf	21,6	;volsfr
 17359  16C2  0870               	movf	eeprom_read@addr,w
 17360  16C3  0091               	movwf	17	;volatile
 17361  16C4  3070               	movlw	112
 17362  16C5  0092               	movwf	18	;volatile
 17363  16C6  1415               	bsf	21,0	;volsfr
 17364  16C7  0813               	movf	19,w	;volatile
 17365  16C8  0008               	return
 17366  16C9                     __end_of_eeprom_read:
 17367                           
 17368                           	psect	swtext5
 17369  12A5                     __pswtext5:
 17370  12A5                     i1S8432:
 17371  12A5  3195  2DD5         	ljmp	i1l759
 17372  12A7  3195  2DF2         	ljmp	i1l6184
 17373  12A9  3195  2DE7         	ljmp	i1l6180
 17374  12AB  3196  2E04         	ljmp	i1l770
 17375                           
 17376                           	psect	text50
 17377  0B0A                     __ptext50:	
 17378 ;; *************** function _RegisterWrite *****************
 17379 ;; Defined at:
 17380 ;;		line 107 in file "i2c_register.c"
 17381 ;; Parameters:    Size  Location     Type
 17382 ;;  add             1    wreg     unsigned char 
 17383 ;;  data            1    3[BANK0 ] unsigned char 
 17384 ;; Auto vars:     Size  Location     Type
 17385 ;;  add             1    4[BANK0 ] unsigned char 
 17386 ;; Return value:  Size  Location     Type
 17387 ;;                  1    wreg      void 
 17388 ;; Registers used:
 17389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17390 ;; Tracked objects:
 17391 ;;		On entry : 1F/1
 17392 ;;		On exit  : E/0
 17393 ;;		Unchanged: 0/0
 17394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17395 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17396 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17398 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17399 ;;Total ram usage:        2 bytes
 17400 ;; Hardware stack levels used:    1
 17401 ;; Hardware stack levels required when called:    3
 17402 ;; This function calls:
 17403 ;;		_Config_GP1
 17404 ;;		_Config_GP2
 17405 ;;		_Config_GP3
 17406 ;;		_FirstConfig
 17407 ;;		_FirstDataSplit
 17408 ;;		_SecondConfig
 17409 ;;		_SecondDataSplit
 17410 ;;		_TMR0_Reload
 17411 ;;		_UpdateOut_GP1
 17412 ;;		_UpdateOut_GP2
 17413 ;;		_UpdateOut_GP3
 17414 ;;		_eeprom_write
 17415 ;;		i1___wmul
 17416 ;; This function is called by:
 17417 ;;		_I2C1_StatusCallback
 17418 ;; This function uses a non-reentrant model
 17419 ;;
 17420                           
 17421                           
 17422                           ;psect for function _RegisterWrite
 17423  0B0A                     _RegisterWrite:
 17424                           
 17425                           ;incstack = 0
 17426                           ; Regs used in _RegisterWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17427                           ;RegisterWrite@add stored from wreg
 17428  0B0A  0020               	movlb	0	; select bank0
 17429  0B0B  00D0               	movwf	RegisterWrite@add
 17430                           
 17431                           ;i2c_register.c: 109: switch (add) {
 17432  0B0C  2BD7               	goto	i1l5582
 17433  0B0D                     i1l5462:
 17434                           
 17435                           ;i2c_register.c: 111: GCONF = data;
 17436  0B0D  084F               	movf	RegisterWrite@data,w
 17437  0B0E  00C9               	movwf	_GCONF	;volatile
 17438                           
 17439                           ;i2c_register.c: 112: FirstDataSplit();
 17440  0B0F  3191  21C4  318B   	fcall	_FirstDataSplit
 17441                           
 17442                           ;i2c_register.c: 113: FirstConfig();
 17443  0B12  23F7  318B         	fcall	_FirstConfig
 17444                           
 17445                           ;i2c_register.c: 114: break;
 17446  0B14  2BE1               	goto	i1l5584
 17447  0B15                     i1l5468:
 17448                           
 17449                           ;i2c_register.c: 117: GP1CONF = data;
 17450  0B15  084F               	movf	RegisterWrite@data,w
 17451  0B16  00C8               	movwf	_GP1CONF	;volatile
 17452                           
 17453                           ;i2c_register.c: 118: Config_GP1();
 17454  0B17  2446  318B         	fcall	_Config_GP1
 17455                           
 17456                           ;i2c_register.c: 119: break;
 17457  0B19  2BE1               	goto	i1l5584
 17458  0B1A                     i1l5472:
 17459                           
 17460                           ;i2c_register.c: 122: GP2CONF = data;
 17461  0B1A  084F               	movf	RegisterWrite@data,w
 17462  0B1B  00C7               	movwf	_GP2CONF	;volatile
 17463                           
 17464                           ;i2c_register.c: 123: Config_GP2();
 17465  0B1C  3186  26EE  318B   	fcall	_Config_GP2
 17466                           
 17467                           ;i2c_register.c: 124: break;
 17468  0B1F  2BE1               	goto	i1l5584
 17469  0B20                     i1l5476:
 17470                           
 17471                           ;i2c_register.c: 127: if (C_ETYPE == 0) {
 17472  0B20  0839               	movf	_C_ETYPE,w	;volatile
 17473  0B21  1D03               	btfss	3,2
 17474  0B22  2BE1               	goto	i1l5584
 17475                           
 17476                           ;i2c_register.c: 128: GP3CONF = data;
 17477  0B23  084F               	movf	RegisterWrite@data,w
 17478  0B24  00C6               	movwf	_GP3CONF	;volatile
 17479                           
 17480                           ;i2c_register.c: 129: Config_GP3();
 17481  0B25  3197  2701  318B   	fcall	_Config_GP3
 17482  0B28  2BE1               	goto	i1l5584
 17483  0B29                     i1l5482:
 17484                           
 17485                           ;i2c_register.c: 134: INTCONF = data;
 17486  0B29  084F               	movf	RegisterWrite@data,w
 17487  0B2A  0021               	movlb	1	; select bank1
 17488  0B2B  00C9               	movwf	_INTCONF^(0+128)	;volatile
 17489                           
 17490                           ;i2c_register.c: 135: break;
 17491  0B2C  2BE1               	goto	i1l5584
 17492  0B2D                     i1l5484:
 17493                           
 17494                           ;i2c_register.c: 139: CVAL.bval[3] = data;
 17495  0B2D  084F               	movf	RegisterWrite@data,w
 17496  0B2E  00AF               	movwf	_CVAL+3	;volatile
 17497                           
 17498                           ;i2c_register.c: 140: break;
 17499  0B2F  2BE1               	goto	i1l5584
 17500  0B30                     i1l5486:
 17501                           
 17502                           ;i2c_register.c: 142: CVAL.bval[2] = data;
 17503  0B30  084F               	movf	RegisterWrite@data,w
 17504  0B31  00AE               	movwf	_CVAL+2	;volatile
 17505                           
 17506                           ;i2c_register.c: 143: break;
 17507  0B32  2BE1               	goto	i1l5584
 17508  0B33                     i1l5488:
 17509                           
 17510                           ;i2c_register.c: 145: CVAL.bval[1] = data;
 17511  0B33  084F               	movf	RegisterWrite@data,w
 17512  0B34  00AD               	movwf	_CVAL+1	;volatile
 17513                           
 17514                           ;i2c_register.c: 146: break;
 17515  0B35  2BE1               	goto	i1l5584
 17516  0B36                     i1l5490:
 17517                           
 17518                           ;i2c_register.c: 148: CVAL.bval[0] = data;
 17519  0B36  084F               	movf	RegisterWrite@data,w
 17520  0B37  00AC               	movwf	_CVAL	;volatile
 17521                           
 17522                           ;i2c_register.c: 149: break;
 17523  0B38  2BE1               	goto	i1l5584
 17524  0B39                     i1l5492:
 17525                           
 17526                           ;i2c_register.c: 153: CMAX.bval[3] = data;
 17527  0B39  084F               	movf	RegisterWrite@data,w
 17528  0B3A  00AB               	movwf	_CMAX+3	;volatile
 17529                           
 17530                           ;i2c_register.c: 154: break;
 17531  0B3B  2BE1               	goto	i1l5584
 17532  0B3C                     i1l5494:
 17533                           
 17534                           ;i2c_register.c: 156: CMAX.bval[2] = data;
 17535  0B3C  084F               	movf	RegisterWrite@data,w
 17536  0B3D  00AA               	movwf	_CMAX+2	;volatile
 17537                           
 17538                           ;i2c_register.c: 157: break;
 17539  0B3E  2BE1               	goto	i1l5584
 17540  0B3F                     i1l5496:
 17541                           
 17542                           ;i2c_register.c: 159: CMAX.bval[1] = data;
 17543  0B3F  084F               	movf	RegisterWrite@data,w
 17544  0B40  00A9               	movwf	_CMAX+1	;volatile
 17545                           
 17546                           ;i2c_register.c: 160: break;
 17547  0B41  2BE1               	goto	i1l5584
 17548  0B42                     i1l5498:
 17549                           
 17550                           ;i2c_register.c: 162: CMAX.bval[0] = data;
 17551  0B42  084F               	movf	RegisterWrite@data,w
 17552  0B43  00A8               	movwf	_CMAX	;volatile
 17553                           
 17554                           ;i2c_register.c: 163: break;
 17555  0B44  2BE1               	goto	i1l5584
 17556  0B45                     i1l5500:
 17557                           
 17558                           ;i2c_register.c: 167: CMIN.bval[3] = data;
 17559  0B45  084F               	movf	RegisterWrite@data,w
 17560  0B46  00A7               	movwf	_CMIN+3	;volatile
 17561                           
 17562                           ;i2c_register.c: 168: break;
 17563  0B47  2BE1               	goto	i1l5584
 17564  0B48                     i1l5502:
 17565                           
 17566                           ;i2c_register.c: 170: CMIN.bval[2] = data;
 17567  0B48  084F               	movf	RegisterWrite@data,w
 17568  0B49  00A6               	movwf	_CMIN+2	;volatile
 17569                           
 17570                           ;i2c_register.c: 171: break;
 17571  0B4A  2BE1               	goto	i1l5584
 17572  0B4B                     i1l5504:
 17573                           
 17574                           ;i2c_register.c: 173: CMIN.bval[1] = data;
 17575  0B4B  084F               	movf	RegisterWrite@data,w
 17576  0B4C  00A5               	movwf	_CMIN+1	;volatile
 17577                           
 17578                           ;i2c_register.c: 174: break;
 17579  0B4D  2BE1               	goto	i1l5584
 17580  0B4E                     i1l5506:
 17581                           
 17582                           ;i2c_register.c: 176: CMIN.bval[0] = data;
 17583  0B4E  084F               	movf	RegisterWrite@data,w
 17584  0B4F  00A4               	movwf	_CMIN	;volatile
 17585                           
 17586                           ;i2c_register.c: 177: break;
 17587  0B50  2BE1               	goto	i1l5584
 17588  0B51                     i1l5508:
 17589                           
 17590                           ;i2c_register.c: 181: ISTEP.bval[3] = data;
 17591  0B51  084F               	movf	RegisterWrite@data,w
 17592  0B52  00A3               	movwf	_ISTEP+3	;volatile
 17593                           
 17594                           ;i2c_register.c: 182: break;
 17595  0B53  2BE1               	goto	i1l5584
 17596  0B54                     i1l5510:
 17597                           
 17598                           ;i2c_register.c: 184: ISTEP.bval[2] = data;
 17599  0B54  084F               	movf	RegisterWrite@data,w
 17600  0B55  00A2               	movwf	_ISTEP+2	;volatile
 17601                           
 17602                           ;i2c_register.c: 185: break;
 17603  0B56  2BE1               	goto	i1l5584
 17604  0B57                     i1l5512:
 17605                           
 17606                           ;i2c_register.c: 187: ISTEP.bval[1] = data;
 17607  0B57  084F               	movf	RegisterWrite@data,w
 17608  0B58  00A1               	movwf	_ISTEP+1	;volatile
 17609                           
 17610                           ;i2c_register.c: 188: break;
 17611  0B59  2BE1               	goto	i1l5584
 17612  0B5A                     i1l5514:
 17613                           
 17614                           ;i2c_register.c: 190: ISTEP.bval[0] = data;
 17615  0B5A  084F               	movf	RegisterWrite@data,w
 17616  0B5B  00A0               	movwf	_ISTEP	;volatile
 17617                           
 17618                           ;i2c_register.c: 191: break;
 17619  0B5C  2BE1               	goto	i1l5584
 17620  0B5D                     i1l5516:
 17621                           
 17622                           ;i2c_register.c: 195: RLED = data;
 17623  0B5D  084F               	movf	RegisterWrite@data,w
 17624  0B5E  00C5               	movwf	_RLED	;volatile
 17625                           
 17626                           ;i2c_register.c: 197: break;
 17627  0B5F  2BE1               	goto	i1l5584
 17628  0B60                     i1l5518:
 17629                           
 17630                           ;i2c_register.c: 200: GLED = data;
 17631  0B60  084F               	movf	RegisterWrite@data,w
 17632  0B61  00C4               	movwf	_GLED	;volatile
 17633                           
 17634                           ;i2c_register.c: 201: break;
 17635  0B62  2BE1               	goto	i1l5584
 17636  0B63                     i1l5520:
 17637                           
 17638                           ;i2c_register.c: 204: BLED = data;
 17639  0B63  084F               	movf	RegisterWrite@data,w
 17640  0B64  00C3               	movwf	_BLED	;volatile
 17641                           
 17642                           ;i2c_register.c: 205: break;
 17643  0B65  2BE1               	goto	i1l5584
 17644  0B66                     i1l5522:
 17645                           
 17646                           ;i2c_register.c: 209: GP1REG = data;
 17647  0B66  084F               	movf	RegisterWrite@data,w
 17648  0B67  00C2               	movwf	_GP1REG	;volatile
 17649                           
 17650                           ;i2c_register.c: 210: UpdateOut_GP1();
 17651  0B68  3192  225B  318B   	fcall	_UpdateOut_GP1
 17652                           
 17653                           ;i2c_register.c: 211: break;
 17654  0B6B  2BE1               	goto	i1l5584
 17655  0B6C                     i1l5526:
 17656                           
 17657                           ;i2c_register.c: 214: GP2REG = data;
 17658  0B6C  084F               	movf	RegisterWrite@data,w
 17659  0B6D  00C1               	movwf	_GP2REG	;volatile
 17660                           
 17661                           ;i2c_register.c: 215: UpdateOut_GP2();
 17662  0B6E  3192  224A  318B   	fcall	_UpdateOut_GP2
 17663                           
 17664                           ;i2c_register.c: 216: break;
 17665  0B71  2BE1               	goto	i1l5584
 17666  0B72                     i1l5530:
 17667                           
 17668                           ;i2c_register.c: 220: if (C_ETYPE == 0) {
 17669  0B72  0839               	movf	_C_ETYPE,w	;volatile
 17670  0B73  1D03               	btfss	3,2
 17671  0B74  2BE1               	goto	i1l5584
 17672                           
 17673                           ;i2c_register.c: 221: GP3REG = data;
 17674  0B75  084F               	movf	RegisterWrite@data,w
 17675  0B76  00C0               	movwf	_GP3REG	;volatile
 17676                           
 17677                           ;i2c_register.c: 222: UpdateOut_GP3();
 17678  0B77  3192  2222  318B   	fcall	_UpdateOut_GP3
 17679  0B7A  2BE1               	goto	i1l5584
 17680  0B7B                     i1l5536:
 17681                           
 17682                           ;i2c_register.c: 229: if (ANTBOUNC < 1)
 17683  0B7B  0021               	movlb	1	; select bank1
 17684  0B7C  0845               	movf	_ANTBOUNC^(0+128),w	;volatile
 17685  0B7D  1D03               	btfss	3,2
 17686  0B7E  2B81               	goto	i1l805
 17687                           
 17688                           ;i2c_register.c: 230: ANTBOUNC = 1;
 17689  0B7F  3001               	movlw	1
 17690  0B80  00C5               	movwf	_ANTBOUNC^(0+128)	;volatile
 17691  0B81                     i1l805:
 17692                           
 17693                           ;i2c_register.c: 231: ANTBOUNC = data;
 17694  0B81  0020               	movlb	0	; select bank0
 17695  0B82  084F               	movf	RegisterWrite@data,w
 17696  0B83  0021               	movlb	1	; select bank1
 17697  0B84  00C5               	movwf	_ANTBOUNC^(0+128)	;volatile
 17698                           
 17699                           ;i2c_register.c: 232: TMR0_Reload(ANTBOUNC);
 17700  0B85  0845               	movf	_ANTBOUNC^(0+128),w	;volatile
 17701  0B86  2442  318B         	fcall	_TMR0_Reload
 17702                           
 17703                           ;i2c_register.c: 233: break;
 17704  0B88  2BE1               	goto	i1l5584
 17705  0B89                     i1l5542:
 17706                           
 17707                           ;i2c_register.c: 235: DPPERIOD = data;
 17708  0B89  084F               	movf	RegisterWrite@data,w
 17709  0B8A  0021               	movlb	1	; select bank1
 17710  0B8B  00C4               	movwf	_DPPERIOD^(0+128)	;volatile
 17711                           
 17712                           ;i2c_register.c: 236: DoublePush = (uint16_t) DPPERIOD * 10;
 17713  0B8C  0844               	movf	_DPPERIOD^(0+128),w	;volatile
 17714  0B8D  00F0               	movwf	i1___wmul@multiplier
 17715  0B8E  300A               	movlw	10
 17716  0B8F  01F1               	clrf	i1___wmul@multiplier+1
 17717  0B90  00F2               	movwf	i1___wmul@multiplicand
 17718  0B91  01F3               	clrf	i1___wmul@multiplicand+1
 17719  0B92  254E  318B         	fcall	i1___wmul
 17720  0B94  0871               	movf	?i1___wmul+1,w
 17721  0B95  0021               	movlb	1	; select bank1
 17722  0B96  00A5               	movwf	(_DoublePush+1)^(0+128)	;volatile
 17723  0B97  0870               	movf	?i1___wmul,w
 17724  0B98  00A4               	movwf	_DoublePush^(0+128)	;volatile
 17725                           
 17726                           ;i2c_register.c: 237: break;
 17727  0B99  2BE1               	goto	i1l5584
 17728  0B9A                     i1l5546:
 17729                           
 17730                           ;i2c_register.c: 240: FADERGB = data;
 17731  0B9A  084F               	movf	RegisterWrite@data,w
 17732  0B9B  0021               	movlb	1	; select bank1
 17733  0B9C  00C3               	movwf	_FADERGB^(0+128)	;volatile
 17734                           
 17735                           ;i2c_register.c: 241: break;
 17736  0B9D  2BE1               	goto	i1l5584
 17737  0B9E                     i1l5548:
 17738                           
 17739                           ;i2c_register.c: 244: FADEGP = data;
 17740  0B9E  084F               	movf	RegisterWrite@data,w
 17741  0B9F  00BF               	movwf	_FADEGP	;volatile
 17742                           
 17743                           ;i2c_register.c: 245: break;
 17744  0BA0  2BE1               	goto	i1l5584
 17745  0BA1                     i1l5550:
 17746                           
 17747                           ;i2c_register.c: 248: GAMMAGP3_RLED = data;
 17748  0BA1  084F               	movf	RegisterWrite@data,w
 17749  0BA2  00BC               	movwf	_GAMMAGP3_RLED	;volatile
 17750                           
 17751                           ;i2c_register.c: 249: if (GAMMAGP3_RLED > 8)
 17752  0BA3  3009               	movlw	9
 17753  0BA4  023C               	subwf	_GAMMAGP3_RLED,w	;volatile
 17754  0BA5  1C03               	skipc
 17755  0BA6  2BE1               	goto	i1l5584
 17756                           
 17757                           ;i2c_register.c: 250: GAMMAGP3_RLED = 8;
 17758  0BA7  3008               	movlw	8
 17759  0BA8  00BC               	movwf	_GAMMAGP3_RLED	;volatile
 17760  0BA9  2BE1               	goto	i1l5584
 17761  0BAA                     i1l5554:
 17762                           
 17763                           ;i2c_register.c: 254: GAMMAGLED = data;
 17764  0BAA  084F               	movf	RegisterWrite@data,w
 17765  0BAB  00BB               	movwf	_GAMMAGLED	;volatile
 17766                           
 17767                           ;i2c_register.c: 255: if (GAMMAGLED > 8)
 17768  0BAC  3009               	movlw	9
 17769  0BAD  023B               	subwf	_GAMMAGLED,w	;volatile
 17770  0BAE  1C03               	skipc
 17771  0BAF  2BE1               	goto	i1l5584
 17772                           
 17773                           ;i2c_register.c: 256: GAMMAGLED = 8;
 17774  0BB0  3008               	movlw	8
 17775  0BB1  00BB               	movwf	_GAMMAGLED	;volatile
 17776  0BB2  2BE1               	goto	i1l5584
 17777  0BB3                     i1l5558:
 17778                           
 17779                           ;i2c_register.c: 260: GAMMABLED = data;
 17780  0BB3  084F               	movf	RegisterWrite@data,w
 17781  0BB4  00BA               	movwf	_GAMMABLED	;volatile
 17782                           
 17783                           ;i2c_register.c: 261: if (GAMMABLED > 8)
 17784  0BB5  3009               	movlw	9
 17785  0BB6  023A               	subwf	_GAMMABLED,w	;volatile
 17786  0BB7  1C03               	skipc
 17787  0BB8  2BE1               	goto	i1l5584
 17788                           
 17789                           ;i2c_register.c: 262: GAMMABLED = 8;
 17790  0BB9  3008               	movlw	8
 17791  0BBA  00BA               	movwf	_GAMMABLED	;volatile
 17792  0BBB  2BE1               	goto	i1l5584
 17793  0BBC                     i1l5562:
 17794                           
 17795                           ;i2c_register.c: 266: GAMMAGP1 = data;
 17796  0BBC  084F               	movf	RegisterWrite@data,w
 17797  0BBD  00BE               	movwf	_GAMMAGP1	;volatile
 17798                           
 17799                           ;i2c_register.c: 267: if (GAMMAGP1 > 8)
 17800  0BBE  3009               	movlw	9
 17801  0BBF  023E               	subwf	_GAMMAGP1,w	;volatile
 17802  0BC0  1C03               	skipc
 17803  0BC1  2BE1               	goto	i1l5584
 17804                           
 17805                           ;i2c_register.c: 268: GAMMAGP1 = 8;
 17806  0BC2  3008               	movlw	8
 17807  0BC3  00BE               	movwf	_GAMMAGP1	;volatile
 17808  0BC4  2BE1               	goto	i1l5584
 17809  0BC5                     i1l5566:
 17810                           
 17811                           ;i2c_register.c: 272: GAMMAGP2 = data;
 17812  0BC5  084F               	movf	RegisterWrite@data,w
 17813  0BC6  00BD               	movwf	_GAMMAGP2	;volatile
 17814                           
 17815                           ;i2c_register.c: 273: if (GAMMAGP2 > 8)
 17816  0BC7  3009               	movlw	9
 17817  0BC8  023D               	subwf	_GAMMAGP2,w	;volatile
 17818  0BC9  1C03               	skipc
 17819  0BCA  2BE1               	goto	i1l5584
 17820                           
 17821                           ;i2c_register.c: 274: GAMMAGP2 = 8;
 17822  0BCB  3008               	movlw	8
 17823  0BCC  00BD               	movwf	_GAMMAGP2	;volatile
 17824  0BCD  2BE1               	goto	i1l5584
 17825  0BCE                     i1l5570:
 17826  0BCE  2BA1               	goto	i1l5550
 17827  0BCF                     i1l5574:	
 17828                           ;i2c_register.c: 279: if (GAMMAGP3_RLED > 8)
 17829                           
 17830                           ;i2c_register.c: 278: GAMMAGP3_RLED = data;
 17831                           
 17832                           
 17833                           ;i2c_register.c: 284: GCONF2 = data;
 17834  0BCF  084F               	movf	RegisterWrite@data,w
 17835  0BD0  0021               	movlb	1	; select bank1
 17836  0BD1  00C2               	movwf	_GCONF2^(0+128)	;volatile
 17837                           
 17838                           ;i2c_register.c: 285: SecondDataSplit();
 17839  0BD2  257A  318B         	fcall	_SecondDataSplit
 17840                           
 17841                           ;i2c_register.c: 286: SecondConfig();
 17842  0BD4  243A  318B         	fcall	_SecondConfig
 17843                           
 17844                           ;i2c_register.c: 287: break;
 17845  0BD6  2BE1               	goto	i1l5584
 17846  0BD7                     i1l5582:
 17847  0BD7  0850               	movf	RegisterWrite@add,w
 17848                           
 17849                           ; Switch size 1, requested type "speed"
 17850                           ; Number of cases is 38, Range of values is 0 to 48
 17851                           ; switch strategies available:
 17852                           ; Name         Instructions Cycles
 17853                           ; direct_byte          104     6 (fixed)
 17854                           ; simple_byte          115    58 (average)
 17855                           ; jumptable            260     6 (fixed)
 17856                           ;	Chosen strategy is direct_byte
 17857  0BD8  0084               	movwf	4
 17858  0BD9  3031               	movlw	49
 17859  0BDA  0204               	subwf	4,w
 17860  0BDB  1803               	skipnc
 17861  0BDC  2BE1               	goto	i1l5584
 17862  0BDD  3191               	movlp	high i1S8434
 17863  0BDE  3504               	lslf	4,w
 17864  0BDF  3E00               	addlw	low i1S8434
 17865  0BE0  0082               	movwf	2
 17866  0BE1                     i1l5584:
 17867                           
 17868                           ;i2c_register.c: 290: if (add >= REG_EEPROMS) {
 17869  0BE1  3080               	movlw	128
 17870  0BE2  0020               	movlb	0	; select bank0
 17871  0BE3  0250               	subwf	RegisterWrite@add,w
 17872  0BE4  1C03               	skipc
 17873  0BE5  0008               	return
 17874                           
 17875                           ;i2c_register.c: 292: if (C_MBANK == 0) {
 17876  0BE6  0021               	movlb	1	; select bank1
 17877  0BE7  0840               	movf	_C_MBANK^(0+128),w	;volatile
 17878  0BE8  1D03               	btfss	3,2
 17879  0BE9  2BF1               	goto	i1l5590
 17880                           
 17881                           ;i2c_register.c: 293: eeprom_write((uint8_t) (add - REG_EEPROMS), (uint8_t) data);
 17882  0BEA  0020               	movlb	0	; select bank0
 17883  0BEB  084F               	movf	RegisterWrite@data,w
 17884  0BEC  00F0               	movwf	eeprom_write@value
 17885  0BED  0850               	movf	RegisterWrite@add,w
 17886  0BEE  3E80               	addlw	128
 17887  0BEF  3188  2801         	ljmp	_eeprom_write
 17888  0BF1                     i1l5590:	
 17889                           ;i2c_register.c: 295: } else {
 17890                           
 17891                           
 17892                           ;i2c_register.c: 296: eeprom_write((uint8_t) add, (uint8_t) data);
 17893  0BF1  0020               	movlb	0	; select bank0
 17894  0BF2  084F               	movf	RegisterWrite@data,w
 17895  0BF3  00F0               	movwf	eeprom_write@value
 17896  0BF4  0850               	movf	RegisterWrite@add,w
 17897  0BF5  3188  2801         	ljmp	_eeprom_write
 17898  0BF7                     __end_of_RegisterWrite:
 17899  0BF7                     __ptext61:	
 17900 ;; *************** function _FirstConfig *****************
 17901 ;; Defined at:
 17902 ;;		line 519 in file "i2c_register.c"
 17903 ;; Parameters:    Size  Location     Type
 17904 ;;		None
 17905 ;; Auto vars:     Size  Location     Type
 17906 ;;		None
 17907 ;; Return value:  Size  Location     Type
 17908 ;;                  1    wreg      void 
 17909 ;; Registers used:
 17910 ;;		wreg, status,2, status,0, pclath, cstack
 17911 ;; Tracked objects:
 17912 ;;		On entry : 1F/1
 17913 ;;		On exit  : 0/0
 17914 ;;		Unchanged: 0/0
 17915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17920 ;;Total ram usage:        0 bytes
 17921 ;; Hardware stack levels used:    1
 17922 ;; Hardware stack levels required when called:    2
 17923 ;; This function calls:
 17924 ;;		_RGB_EncoderMode
 17925 ;;		_STD_EncoderMode
 17926 ;; This function is called by:
 17927 ;;		_RegisterWrite
 17928 ;; This function uses a non-reentrant model
 17929 ;;
 17930                           
 17931                           
 17932                           ;psect for function _FirstConfig
 17933  0BF7                     _FirstConfig:
 17934                           
 17935                           ;i2c_register.c: 521: if (C_ETYPE == 1) {
 17936                           
 17937                           ;incstack = 0
 17938                           ; Regs used in _FirstConfig: [wreg+status,2+status,0+pclath+cstack]
 17939  0BF7  0020               	movlb	0	; select bank0
 17940  0BF8  0339               	decf	_C_ETYPE,w	;volatile
 17941  0BF9  1D03               	btfss	3,2
 17942  0BFA  2BFF               	goto	i1l4986
 17943                           
 17944                           ;i2c_register.c: 522: RGB_EncoderMode();
 17945  0BFB  3196  26C9  318B   	fcall	_RGB_EncoderMode
 17946                           
 17947                           ;i2c_register.c: 523: } else {
 17948  0BFE  2C01               	goto	i1l4988
 17949  0BFF                     i1l4986:
 17950                           
 17951                           ;i2c_register.c: 524: STD_EncoderMode();
 17952  0BFF  2563  318B         	fcall	_STD_EncoderMode
 17953  0C01                     i1l4988:
 17954                           
 17955                           ;i2c_register.c: 525: };i2c_register.c: 528: if (C_DIRE == 1) {
 17956  0C01  0021               	movlb	1	; select bank1
 17957  0C02  0B3D               	decfsz	_C_DIRE^(0+128),w	;volatile
 17958  0C03  2C0C               	goto	i1l4992
 17959                           
 17960                           ;i2c_register.c: 530: X1_p = 4;
 17961  0C04  3004               	movlw	4
 17962  0C05  00BA               	movwf	_X1_p^(0+128)	;volatile
 17963                           
 17964                           ;i2c_register.c: 531: X1_n = 8;
 17965  0C06  3008               	movlw	8
 17966  0C07  00B9               	movwf	_X1_n^(0+128)	;volatile
 17967                           
 17968                           ;i2c_register.c: 533: X2_p = 11;
 17969  0C08  300B               	movlw	11
 17970  0C09  00B8               	movwf	_X2_p^(0+128)	;volatile
 17971                           
 17972                           ;i2c_register.c: 534: X2_n = 7;
 17973  0C0A  3007               	movlw	7
 17974  0C0B  2C13               	goto	L9
 17975  0C0C                     i1l4992:	
 17976                           ;i2c_register.c: 536: } else {
 17977                           
 17978                           
 17979                           ;i2c_register.c: 538: X1_p = 8;
 17980  0C0C  3008               	movlw	8
 17981  0C0D  00BA               	movwf	_X1_p^(0+128)	;volatile
 17982                           
 17983                           ;i2c_register.c: 539: X1_n = 4;
 17984  0C0E  3004               	movlw	4
 17985  0C0F  00B9               	movwf	_X1_n^(0+128)	;volatile
 17986                           
 17987                           ;i2c_register.c: 541: X2_p = 7;
 17988  0C10  3007               	movlw	7
 17989  0C11  00B8               	movwf	_X2_p^(0+128)	;volatile
 17990                           
 17991                           ;i2c_register.c: 542: X2_n = 11;
 17992  0C12  300B               	movlw	11
 17993  0C13                     L9:
 17994  0C13  00B7               	movwf	_X2_n^(0+128)	;volatile
 17995                           
 17996                           ;i2c_register.c: 546: };i2c_register.c: 548: if (C_IPUD == 1) {
 17997  0C14  0B3E               	decfsz	_C_IPUD^(0+128),w	;volatile
 17998  0C15  2C19               	goto	i1l900
 17999                           
 18000                           ;i2c_register.c: 549: do { WPUBbits.WPUB5 = 0; } while(0);
 18001  0C16  0024               	movlb	4	; select bank4
 18002  0C17  128D               	bcf	13,5	;volatile
 18003  0C18  2C1B               	goto	i1l902
 18004  0C19                     i1l900:	
 18005                           ;i2c_register.c: 552: do { WPUBbits.WPUB5 = 1; } while(0);
 18006                           
 18007                           ;i2c_register.c: 550: do { LATBbits.LATB5 = 1; } while(0);
 18008                           
 18009  0C19  0024               	movlb	4	; select bank4
 18010  0C1A  168D               	bsf	13,5	;volatile
 18011  0C1B                     i1l902:	
 18012                           ;i2c_register.c: 553: do { LATBbits.LATB5 = 1; } while(0);
 18013                           
 18014  0C1B  0022               	movlb	2	; select bank2
 18015  0C1C  168D               	bsf	13,5	;volatile
 18016                           
 18017                           ;i2c_register.c: 555: };i2c_register.c: 557: if (C_RMOD == 0) {
 18018  0C1D  0021               	movlb	1	; select bank1
 18019  0C1E  083F               	movf	_C_RMOD^(0+128),w	;volatile
 18020  0C1F  1D03               	btfss	3,2
 18021  0C20  2C24               	goto	i1l5000
 18022                           
 18023                           ;i2c_register.c: 559: X2_n = 0xff;
 18024  0C21  30FF               	movlw	255
 18025  0C22  00B7               	movwf	_X2_n^(0+128)	;volatile
 18026                           
 18027                           ;i2c_register.c: 560: X2_p = 0xff;
 18028  0C23  00B8               	movwf	_X2_p^(0+128)	;volatile
 18029  0C24                     i1l5000:
 18030                           
 18031                           ;i2c_register.c: 562: };i2c_register.c: 564: if (C_DTYPE == 0) {
 18032  0C24  083C               	movf	_C_DTYPE^(0+128),w	;volatile
 18033  0C25  1D03               	btfss	3,2
 18034  0C26  2C2E               	goto	i1l5004
 18035                           
 18036                           ;i2c_register.c: 565: ISTEP.val = 1;
 18037  0C27  3001               	movlw	1
 18038  0C28  0020               	movlb	0	; select bank0
 18039  0C29  00A0               	movwf	_ISTEP	;volatile
 18040  0C2A  01A1               	clrf	_ISTEP+1	;volatile
 18041  0C2B  01A2               	clrf	_ISTEP+2	;volatile
 18042  0C2C  01A3               	clrf	_ISTEP+3	;volatile
 18043                           
 18044                           ;i2c_register.c: 566: } else {
 18045  0C2D  2C35               	goto	i1l5006
 18046  0C2E                     i1l5004:
 18047                           
 18048                           ;i2c_register.c: 567: ISTEP.fval = 1.0;
 18049  0C2E  303F               	movlw	63
 18050  0C2F  0020               	movlb	0	; select bank0
 18051  0C30  00A3               	movwf	_ISTEP+3	;volatile
 18052  0C31  3080               	movlw	128
 18053  0C32  00A2               	movwf	_ISTEP+2	;volatile
 18054  0C33  01A1               	clrf	_ISTEP+1	;volatile
 18055  0C34  01A0               	clrf	_ISTEP	;volatile
 18056  0C35                     i1l5006:
 18057                           
 18058                           ;i2c_register.c: 568: };i2c_register.c: 570: if (C_RESET == 1) {
 18059  0C35  0021               	movlb	1	; select bank1
 18060  0C36  0B41               	decfsz	_C_RESET^(0+128),w	;volatile
 18061  0C37  0008               	return
 18062  0C38  0001               	reset	;# 
 18063  0C39  0008               	return
 18064  0C3A                     __end_of_FirstConfig:
 18065  0C3A                     __ptext57:	
 18066 ;; *************** function _SecondConfig *****************
 18067 ;; Defined at:
 18068 ;;		line 578 in file "i2c_register.c"
 18069 ;; Parameters:    Size  Location     Type
 18070 ;;		None
 18071 ;; Auto vars:     Size  Location     Type
 18072 ;;		None
 18073 ;; Return value:  Size  Location     Type
 18074 ;;                  1    wreg      void 
 18075 ;; Registers used:
 18076 ;;		wreg, status,2, status,0, pclath, cstack
 18077 ;; Tracked objects:
 18078 ;;		On entry : 1F/0
 18079 ;;		On exit  : 1F/1
 18080 ;;		Unchanged: 0/0
 18081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18086 ;;Total ram usage:        0 bytes
 18087 ;; Hardware stack levels used:    1
 18088 ;; Hardware stack levels required when called:    1
 18089 ;; This function calls:
 18090 ;;		_I2C1_Initialize_ClockStreach
 18091 ;;		i1_I2C1_Initialize
 18092 ;; This function is called by:
 18093 ;;		_RegisterWrite
 18094 ;; This function uses a non-reentrant model
 18095 ;;
 18096                           
 18097                           
 18098                           ;psect for function _SecondConfig
 18099  0C3A                     _SecondConfig:
 18100                           
 18101                           ;i2c_register.c: 581: if (S_CKSRC == 1) {
 18102                           
 18103                           ;incstack = 0
 18104                           ; Regs used in _SecondConfig: [wreg+status,2+status,0+pclath+cstack]
 18105  0C3A  0021               	movlb	1	; select bank1
 18106  0C3B  0B3B               	decfsz	_S_CKSRC^(0+128),w	;volatile
 18107  0C3C  2C3F               	goto	i1l5202
 18108                           
 18109                           ;i2c_register.c: 582: I2C1_Initialize_ClockStreach();
 18110  0C3D  3192  2A36         	ljmp	i1l4726
 18111  0C3F                     i1l5202:	
 18112                           ;i2c_register.c: 583: } else {
 18113                           
 18114                           
 18115                           ;i2c_register.c: 584: I2C1_Initialize();
 18116  0C3F  3192  226C         	fcall	i1_I2C1_Initialize
 18117  0C41  0008               	return
 18118  0C42                     __end_of_SecondConfig:
 18119  0C42                     __ptext55:	
 18120 ;; *************** function _TMR0_Reload *****************
 18121 ;; Defined at:
 18122 ;;		line 86 in file "mcc_generated_files/tmr0.c"
 18123 ;; Parameters:    Size  Location     Type
 18124 ;;  periodVal       1    wreg     unsigned char 
 18125 ;; Auto vars:     Size  Location     Type
 18126 ;;  periodVal       1    0[COMMON] unsigned char 
 18127 ;; Return value:  Size  Location     Type
 18128 ;;                  1    wreg      void 
 18129 ;; Registers used:
 18130 ;;		wreg
 18131 ;; Tracked objects:
 18132 ;;		On entry : 1F/1
 18133 ;;		On exit  : 1F/0
 18134 ;;		Unchanged: 0/0
 18135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18139 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18140 ;;Total ram usage:        1 bytes
 18141 ;; Hardware stack levels used:    1
 18142 ;; This function calls:
 18143 ;;		Nothing
 18144 ;; This function is called by:
 18145 ;;		_RegisterWrite
 18146 ;; This function uses a non-reentrant model
 18147 ;;
 18148                           
 18149                           
 18150                           ;psect for function _TMR0_Reload
 18151  0C42                     _TMR0_Reload:
 18152                           
 18153                           ;incstack = 0
 18154                           ; Regs used in _TMR0_Reload: [wreg]
 18155                           ;TMR0_Reload@periodVal stored from wreg
 18156  0C42  00F0               	movwf	TMR0_Reload@periodVal
 18157                           
 18158                           ;tmr0.c: 89: TMR0H = periodVal;
 18159  0C43  0020               	movlb	0	; select bank0
 18160  0C44  0096               	movwf	22	;volatile
 18161  0C45  0008               	return
 18162  0C46                     __end_of_TMR0_Reload:
 18163  0C46                     __ptext72:	
 18164 ;; *************** function _Config_GP1 *****************
 18165 ;; Defined at:
 18166 ;;		line 192 in file "GPports.c"
 18167 ;; Parameters:    Size  Location     Type
 18168 ;;		None
 18169 ;; Auto vars:     Size  Location     Type
 18170 ;;		None
 18171 ;; Return value:  Size  Location     Type
 18172 ;;                  1    wreg      void 
 18173 ;; Registers used:
 18174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18175 ;; Tracked objects:
 18176 ;;		On entry : 1F/0
 18177 ;;		On exit  : 1B/0
 18178 ;;		Unchanged: 0/0
 18179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18182 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18183 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18184 ;;Total ram usage:        2 bytes
 18185 ;; Hardware stack levels used:    1
 18186 ;; Hardware stack levels required when called:    2
 18187 ;; This function calls:
 18188 ;;		_PWM5_Initialize
 18189 ;;		i1_PWM_GP1
 18190 ;; This function is called by:
 18191 ;;		_RegisterWrite
 18192 ;; This function uses a non-reentrant model
 18193 ;;
 18194                           
 18195                           
 18196                           ;psect for function _Config_GP1
 18197  0C46                     _Config_GP1:
 18198                           
 18199                           ;GPports.c: 194: PWM5CON = 0;
 18200                           
 18201                           ;incstack = 0
 18202                           ; Regs used in _Config_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18203  0C46  002C               	movlb	12	; select bank12
 18204  0C47  0199               	clrf	25	;volatile
 18205                           
 18206                           ;GPports.c: 195: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18207  0C48  3055               	movlw	85
 18208  0C49  003C               	movlb	28	; select bank28
 18209  0C4A  008F               	movwf	15	;volsfr
 18210  0C4B  30AA               	movlw	170
 18211  0C4C  008F               	movwf	15	;volsfr
 18212  0C4D  100F               	bcf	15,0	;volsfr
 18213                           
 18214                           ;GPports.c: 196: RC7PPSbits.RC7PPS = 0x00;
 18215  0C4E  30E0               	movlw	-32
 18216  0C4F  003D               	movlb	29	; select bank29
 18217  0C50  05A7               	andwf	39,f	;volatile
 18218                           
 18219                           ;GPports.c: 197: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18220  0C51  3055               	movlw	85
 18221  0C52  003C               	movlb	28	; select bank28
 18222  0C53  008F               	movwf	15	;volsfr
 18223  0C54  30AA               	movlw	170
 18224  0C55  008F               	movwf	15	;volsfr
 18225  0C56  140F               	bsf	15,0	;volsfr
 18226                           
 18227                           ;GPports.c: 199: switch (GP1CONF & 0x03) {
 18228  0C57  2C88               	goto	i1l5044
 18229  0C58                     i1l1102:	
 18230                           ;GPports.c: 201: do { ANSELCbits.ANSC7 = 0; } while(0);
 18231                           
 18232  0C58  0023               	movlb	3	; select bank3
 18233  0C59  138E               	bcf	14,7	;volatile
 18234                           
 18235                           ;GPports.c: 202: do { LATCbits.LATC7 = 1; } while(0);
 18236  0C5A  0022               	movlb	2	; select bank2
 18237  0C5B  178E               	bsf	14,7	;volatile
 18238                           
 18239                           ;GPports.c: 203: do { TRISCbits.TRISC7 = 0; } while(0);
 18240  0C5C  0021               	movlb	1	; select bank1
 18241  0C5D  138E               	bcf	14,7	;volatile
 18242                           
 18243                           ;GPports.c: 204: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18244  0C5E  3055               	movlw	85
 18245  0C5F  003C               	movlb	28	; select bank28
 18246  0C60  008F               	movwf	15	;volsfr
 18247  0C61  30AA               	movlw	170
 18248  0C62  008F               	movwf	15	;volsfr
 18249  0C63  100F               	bcf	15,0	;volsfr
 18250                           
 18251                           ;GPports.c: 205: RC7PPSbits.RC7PPS = 0x02;
 18252  0C64  003D               	movlb	29	; select bank29
 18253  0C65  0827               	movf	39,w	;volatile
 18254  0C66  39E0               	andlw	-32
 18255  0C67  3802               	iorlw	2
 18256  0C68  00A7               	movwf	39	;volatile
 18257                           
 18258                           ;GPports.c: 206: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18259  0C69  3055               	movlw	85
 18260  0C6A  003C               	movlb	28	; select bank28
 18261  0C6B  008F               	movwf	15	;volsfr
 18262  0C6C  30AA               	movlw	170
 18263  0C6D  008F               	movwf	15	;volsfr
 18264  0C6E  140F               	bsf	15,0	;volsfr
 18265                           
 18266                           ;GPports.c: 207: PWM5_Initialize();
 18267  0C6F  24B5  318B         	fcall	_PWM5_Initialize
 18268                           
 18269                           ;GPports.c: 208: PWM_GP1(0);
 18270  0C71  3000               	movlw	0
 18271  0C72  24BF  318B         	fcall	i1_PWM_GP1
 18272                           
 18273                           ;GPports.c: 209: break;
 18274  0C74  2CA2               	goto	i1l5048
 18275  0C75                     i1l1110:	
 18276                           ;GPports.c: 212: do { ANSELCbits.ANSC7 = 0; } while(0);
 18277                           
 18278  0C75  0023               	movlb	3	; select bank3
 18279  0C76  138E               	bcf	14,7	;volatile
 18280                           
 18281                           ;GPports.c: 213: do { TRISCbits.TRISC7 = 0; } while(0);
 18282  0C77  0021               	movlb	1	; select bank1
 18283  0C78  138E               	bcf	14,7	;volatile
 18284                           
 18285                           ;GPports.c: 214: do { ODCONCbits.ODCC7 = 0; } while(0);
 18286  0C79  0025               	movlb	5	; select bank5
 18287  0C7A  138E               	bcf	14,7	;volatile
 18288  0C7B  2CA2               	goto	i1l5048
 18289  0C7C                     i1l1117:	
 18290                           ;GPports.c: 218: do { TRISCbits.TRISC7 = 1; } while(0);
 18291                           
 18292  0C7C  0021               	movlb	1	; select bank1
 18293  0C7D  178E               	bsf	14,7	;volatile
 18294                           
 18295                           ;GPports.c: 219: do { ANSELCbits.ANSC7 = 1; } while(0);
 18296  0C7E  0023               	movlb	3	; select bank3
 18297  0C7F  178E               	bsf	14,7	;volatile
 18298                           
 18299                           ;GPports.c: 220: PMD2bits.ADCMD = 0;
 18300  0C80  0032               	movlb	18	; select bank18
 18301  0C81  1293               	bcf	19,5	;volatile
 18302                           
 18303                           ;GPports.c: 221: break;
 18304  0C82  2CA2               	goto	i1l5048
 18305  0C83                     i1l1122:	
 18306                           ;GPports.c: 223: do { ANSELCbits.ANSC7 = 0; } while(0);
 18307                           
 18308  0C83  0023               	movlb	3	; select bank3
 18309  0C84  138E               	bcf	14,7	;volatile
 18310                           
 18311                           ;GPports.c: 224: do { TRISCbits.TRISC7 = 1; } while(0);
 18312  0C85  0021               	movlb	1	; select bank1
 18313  0C86  178E               	bsf	14,7	;volatile
 18314  0C87  2CA2               	goto	i1l5048
 18315  0C88                     i1l5044:
 18316  0C88  0020               	movlb	0	; select bank0
 18317  0C89  0848               	movf	_GP1CONF,w	;volatile
 18318  0C8A  3903               	andlw	3
 18319  0C8B  00CD               	movwf	??_Config_GP1
 18320  0C8C  01CE               	clrf	??_Config_GP1+1
 18321                           
 18322                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18323                           ; Switch size 1, requested type "speed"
 18324                           ; Number of cases is 1, Range of values is 0 to 0
 18325                           ; switch strategies available:
 18326                           ; Name         Instructions Cycles
 18327                           ; simple_byte            4     3 (average)
 18328                           ; direct_byte            8     6 (fixed)
 18329                           ; jumptable            260     6 (fixed)
 18330                           ;	Chosen strategy is simple_byte
 18331  0C8D  084E               	movf	??_Config_GP1+1,w
 18332  0C8E  3A00               	xorlw	0	; case 0
 18333  0C8F  1903               	skipnz
 18334  0C90  2C92               	goto	i1l8448
 18335  0C91  2CA2               	goto	i1l5048
 18336  0C92                     i1l8448:
 18337                           
 18338                           ; Switch size 1, requested type "speed"
 18339                           ; Number of cases is 4, Range of values is 0 to 3
 18340                           ; switch strategies available:
 18341                           ; Name         Instructions Cycles
 18342                           ; direct_byte           14     6 (fixed)
 18343                           ; simple_byte           13     7 (average)
 18344                           ; jumptable            260     6 (fixed)
 18345                           ;	Chosen strategy is direct_byte
 18346  0C92  084D               	movf	??_Config_GP1,w
 18347  0C93  0084               	movwf	4
 18348  0C94  3004               	movlw	4
 18349  0C95  0204               	subwf	4,w
 18350  0C96  1803               	skipnc
 18351  0C97  2CA2               	goto	i1l5048
 18352  0C98  3192               	movlp	high i1S8450
 18353  0C99  3504               	lslf	4,w
 18354  0C9A  3EBD               	addlw	low i1S8450
 18355  0C9B  0082               	movwf	2
 18356  0C9C                     i1l1128:	
 18357                           ;GPports.c: 230: do { WPUCbits.WPUC7 = 0; } while(0);
 18358                           
 18359  0C9C  0024               	movlb	4	; select bank4
 18360  0C9D  138E               	bcf	14,7	;volatile
 18361  0C9E  0008               	return
 18362  0C9F                     i1l1132:	
 18363                           ;GPports.c: 233: do { WPUCbits.WPUC7 = 1; } while(0);
 18364                           
 18365  0C9F  0024               	movlb	4	; select bank4
 18366  0CA0  178E               	bsf	14,7	;volatile
 18367  0CA1  0008               	return
 18368  0CA2                     i1l5048:
 18369  0CA2  0020               	movlb	0	; select bank0
 18370  0CA3  0848               	movf	_GP1CONF,w	;volatile
 18371  0CA4  3904               	andlw	4
 18372  0CA5  00CD               	movwf	??_Config_GP1
 18373  0CA6  01CE               	clrf	??_Config_GP1+1
 18374                           
 18375                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18376                           ; Switch size 1, requested type "speed"
 18377                           ; Number of cases is 1, Range of values is 0 to 0
 18378                           ; switch strategies available:
 18379                           ; Name         Instructions Cycles
 18380                           ; simple_byte            4     3 (average)
 18381                           ; direct_byte            8     6 (fixed)
 18382                           ; jumptable            260     6 (fixed)
 18383                           ;	Chosen strategy is simple_byte
 18384  0CA7  084E               	movf	??_Config_GP1+1,w
 18385  0CA8  3A00               	xorlw	0	; case 0
 18386  0CA9  1903               	skipnz
 18387  0CAA  2CAC               	goto	i1l8452
 18388  0CAB  2CB4               	goto	i1l1134
 18389  0CAC                     i1l8452:
 18390                           
 18391                           ; Switch size 1, requested type "speed"
 18392                           ; Number of cases is 2, Range of values is 0 to 4
 18393                           ; switch strategies available:
 18394                           ; Name         Instructions Cycles
 18395                           ; simple_byte            7     4 (average)
 18396                           ; direct_byte           16     6 (fixed)
 18397                           ; jumptable            260     6 (fixed)
 18398                           ;	Chosen strategy is simple_byte
 18399  0CAC  084D               	movf	??_Config_GP1,w
 18400  0CAD  3A00               	xorlw	0	; case 0
 18401  0CAE  1903               	skipnz
 18402  0CAF  2C9C               	goto	i1l1128
 18403  0CB0  3A04               	xorlw	4	; case 4
 18404  0CB1  1903               	skipnz
 18405  0CB2  2C9F               	goto	i1l1132
 18406  0CB3  2CB4               	goto	i1l1134
 18407  0CB4                     i1l1134:
 18408  0CB4  0008               	return
 18409  0CB5                     __end_of_Config_GP1:
 18410  0CB5                     __ptext75:	
 18411 ;; *************** function _PWM5_Initialize *****************
 18412 ;; Defined at:
 18413 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 18414 ;; Parameters:    Size  Location     Type
 18415 ;;		None
 18416 ;; Auto vars:     Size  Location     Type
 18417 ;;		None
 18418 ;; Return value:  Size  Location     Type
 18419 ;;                  1    wreg      void 
 18420 ;; Registers used:
 18421 ;;		wreg, status,2, status,0
 18422 ;; Tracked objects:
 18423 ;;		On entry : 1F/1C
 18424 ;;		On exit  : 1F/C
 18425 ;;		Unchanged: 0/0
 18426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18431 ;;Total ram usage:        0 bytes
 18432 ;; Hardware stack levels used:    1
 18433 ;; This function calls:
 18434 ;;		Nothing
 18435 ;; This function is called by:
 18436 ;;		_Config_GP1
 18437 ;; This function uses a non-reentrant model
 18438 ;;
 18439                           
 18440                           
 18441                           ;psect for function _PWM5_Initialize
 18442  0CB5                     _PWM5_Initialize:
 18443                           
 18444                           ;pwm5.c: 62: PWM5CON = 0x80;
 18445                           
 18446                           ;incstack = 0
 18447                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 18448  0CB5  3080               	movlw	128
 18449  0CB6  002C               	movlb	12	; select bank12
 18450  0CB7  0099               	movwf	25	;volatile
 18451                           
 18452                           ;pwm5.c: 65: PWM5DCH = 0x00;
 18453  0CB8  0198               	clrf	24	;volatile
 18454                           
 18455                           ;pwm5.c: 68: PWM5DCL = 0x00;
 18456  0CB9  0197               	clrf	23	;volatile
 18457                           
 18458                           ;pwm5.c: 71: PWMTMRSbits.P5TSEL = 1;
 18459  0CBA  081F               	movf	31,w	;volatile
 18460  0CBB  39FC               	andlw	-4
 18461  0CBC  3801               	iorlw	1
 18462  0CBD  009F               	movwf	31	;volatile
 18463  0CBE  0008               	return
 18464  0CBF                     __end_of_PWM5_Initialize:
 18465  0CBF                     __ptext73:	
 18466 ;; *************** function i1_PWM_GP1 *****************
 18467 ;; Defined at:
 18468 ;;		line 30 in file "PWM.c"
 18469 ;; Parameters:    Size  Location     Type
 18470 ;;  duty            1    wreg     unsigned char 
 18471 ;; Auto vars:     Size  Location     Type
 18472 ;;  duty            1    0[BANK0 ] unsigned char 
 18473 ;; Return value:  Size  Location     Type
 18474 ;;                  1    wreg      void 
 18475 ;; Registers used:
 18476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18477 ;; Tracked objects:
 18478 ;;		On entry : 1F/C
 18479 ;;		On exit  : 1F/C
 18480 ;;		Unchanged: 0/0
 18481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18483 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18484 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18485 ;;      Totals:         8       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18486 ;;Total ram usage:        9 bytes
 18487 ;; Hardware stack levels used:    1
 18488 ;; Hardware stack levels required when called:    1
 18489 ;; This function calls:
 18490 ;;		i1___wmul
 18491 ;; This function is called by:
 18492 ;;		_Config_GP1
 18493 ;; This function uses a non-reentrant model
 18494 ;;
 18495                           
 18496                           
 18497                           ;psect for function i1_PWM_GP1
 18498  0CBF                     i1_PWM_GP1:
 18499                           
 18500                           ;incstack = 0
 18501                           ; Regs used in i1_PWM_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18502                           ;i1PWM_GP1@duty stored from wreg
 18503  0CBF  0020               	movlb	0	; select bank0
 18504  0CC0  00CC               	movwf	i1PWM_GP1@duty
 18505                           
 18506                           ;PWM.c: 32: if (duty == 0) {
 18507  0CC1  084C               	movf	i1PWM_GP1@duty,w
 18508  0CC2  1D03               	btfss	3,2
 18509  0CC3  2CD8               	goto	i1l4820
 18510                           
 18511                           ;PWM.c: 34: do { LATCbits.LATC7 = 1; } while(0);
 18512  0CC4  0022               	movlb	2	; select bank2
 18513  0CC5  178E               	bsf	14,7	;volatile
 18514                           
 18515                           ;PWM.c: 35: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18516  0CC6  3055               	movlw	85
 18517  0CC7  003C               	movlb	28	; select bank28
 18518  0CC8  008F               	movwf	15	;volsfr
 18519  0CC9  30AA               	movlw	170
 18520  0CCA  008F               	movwf	15	;volsfr
 18521  0CCB  100F               	bcf	15,0	;volsfr
 18522                           
 18523                           ;PWM.c: 36: RC7PPSbits.RC7PPS = 0x00;
 18524  0CCC  30E0               	movlw	-32
 18525  0CCD  003D               	movlb	29	; select bank29
 18526  0CCE  05A7               	andwf	39,f	;volatile
 18527                           
 18528                           ;PWM.c: 37: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18529  0CCF  3055               	movlw	85
 18530  0CD0  003C               	movlb	28	; select bank28
 18531  0CD1  008F               	movwf	15	;volsfr
 18532  0CD2  30AA               	movlw	170
 18533  0CD3  008F               	movwf	15	;volsfr
 18534  0CD4  140F               	bsf	15,0	;volsfr
 18535                           
 18536                           ;PWM.c: 38: PWM5CON = 0;
 18537  0CD5  002C               	movlb	12	; select bank12
 18538  0CD6  0199               	clrf	25	;volatile
 18539  0CD7  0008               	return
 18540  0CD8                     i1l4820:
 18541                           
 18542                           ;PWM.c: 40: };PWM.c: 42: if (PWM5CON == 0) {
 18543  0CD8  002C               	movlb	12	; select bank12
 18544  0CD9  0819               	movf	25,w	;volatile
 18545  0CDA  1D03               	btfss	3,2
 18546  0CDB  2CF0               	goto	i1l1493
 18547                           
 18548                           ;PWM.c: 43: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18549  0CDC  3055               	movlw	85
 18550  0CDD  003C               	movlb	28	; select bank28
 18551  0CDE  008F               	movwf	15	;volsfr
 18552  0CDF  30AA               	movlw	170
 18553  0CE0  008F               	movwf	15	;volsfr
 18554  0CE1  100F               	bcf	15,0	;volsfr
 18555                           
 18556                           ;PWM.c: 44: RC7PPSbits.RC7PPS = 0x02;
 18557  0CE2  003D               	movlb	29	; select bank29
 18558  0CE3  0827               	movf	39,w	;volatile
 18559  0CE4  39E0               	andlw	-32
 18560  0CE5  3802               	iorlw	2
 18561  0CE6  00A7               	movwf	39	;volatile
 18562                           
 18563                           ;PWM.c: 45: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18564  0CE7  3055               	movlw	85
 18565  0CE8  003C               	movlb	28	; select bank28
 18566  0CE9  008F               	movwf	15	;volsfr
 18567  0CEA  30AA               	movlw	170
 18568  0CEB  008F               	movwf	15	;volsfr
 18569  0CEC  140F               	bsf	15,0	;volsfr
 18570                           
 18571                           ;PWM.c: 46: PWM5CON = 0x80;
 18572  0CED  3080               	movlw	128
 18573  0CEE  002C               	movlb	12	; select bank12
 18574  0CEF  0099               	movwf	25	;volatile
 18575  0CF0                     i1l1493:
 18576                           
 18577                           ;PWM.c: 47: };PWM.c: 49: if (GAMMAGP1 == 0) {
 18578  0CF0  0020               	movlb	0	; select bank0
 18579  0CF1  083E               	movf	_GAMMAGP1,w	;volatile
 18580  0CF2  1D03               	btfss	3,2
 18581  0CF3  2CF9               	goto	i1l4840
 18582                           
 18583                           ;PWM.c: 50: PWM5DCH = 0xFFU - duty;
 18584  0CF4  094C               	comf	i1PWM_GP1@duty,w
 18585  0CF5  002C               	movlb	12	; select bank12
 18586  0CF6  0098               	movwf	24	;volatile
 18587                           
 18588                           ;PWM.c: 51: PWM5DCL = 0;
 18589  0CF7  0197               	clrf	23	;volatile
 18590                           
 18591                           ;PWM.c: 52: } else {
 18592  0CF8  0008               	return
 18593  0CF9                     i1l4840:
 18594                           
 18595                           ;PWM.c: 53: if (duty > 100)
 18596  0CF9  3065               	movlw	101
 18597  0CFA  024C               	subwf	i1PWM_GP1@duty,w
 18598  0CFB  1C03               	skipc
 18599  0CFC  2CFF               	goto	i1l4844
 18600                           
 18601                           ;PWM.c: 54: duty = 100;
 18602  0CFD  3064               	movlw	100
 18603  0CFE  00CC               	movwf	i1PWM_GP1@duty
 18604  0CFF                     i1l4844:
 18605                           
 18606                           ;PWM.c: 55: PWM5DCH = (gamma_table[GAMMAGP1 - 1U][(duty - 1U)] & 0x03FC) >> 2U;
 18607  0CFF  084C               	movf	i1PWM_GP1@duty,w
 18608  0D00  00F6               	movwf	??i1_PWM_GP1
 18609  0D01  01F7               	clrf	??i1_PWM_GP1+1
 18610  0D02  35F6               	lslf	??i1_PWM_GP1,f
 18611  0D03  0DF7               	rlf	??i1_PWM_GP1+1,f
 18612  0D04  083E               	movf	_GAMMAGP1,w	;volatile
 18613  0D05  00F0               	movwf	i1___wmul@multiplier
 18614  0D06  30C8               	movlw	200
 18615  0D07  01F1               	clrf	i1___wmul@multiplier+1
 18616  0D08  00F2               	movwf	i1___wmul@multiplicand
 18617  0D09  01F3               	clrf	i1___wmul@multiplicand+1
 18618  0D0A  254E  318B         	fcall	i1___wmul
 18619  0D0C  30AC               	movlw	low ((_gamma_table| (0+32768)+65334))
 18620  0D0D  00F8               	movwf	??i1_PWM_GP1+2
 18621  0D0E  3080               	movlw	high ((_gamma_table| (0+32768)+65334))
 18622  0D0F  00F9               	movwf	??i1_PWM_GP1+3
 18623  0D10  0870               	movf	?i1___wmul,w
 18624  0D11  0778               	addwf	??i1_PWM_GP1+2,w
 18625  0D12  00FA               	movwf	??i1_PWM_GP1+4
 18626  0D13  0871               	movf	?i1___wmul+1,w
 18627  0D14  3D79               	addwfc	??i1_PWM_GP1+3,w
 18628  0D15  00FB               	movwf	??i1_PWM_GP1+5
 18629  0D16  087A               	movf	??i1_PWM_GP1+4,w
 18630  0D17  0776               	addwf	??i1_PWM_GP1,w
 18631  0D18  0084               	movwf	4
 18632  0D19  087B               	movf	??i1_PWM_GP1+5,w
 18633  0D1A  3D77               	addwfc	??i1_PWM_GP1+1,w
 18634  0D1B  0085               	movwf	5
 18635  0D1C  3F00               	moviw [0]fsr0
 18636  0D1D  00FC               	movwf	??i1_PWM_GP1+6
 18637  0D1E  3F01               	moviw [1]fsr0
 18638  0D1F  00FD               	movwf	??i1_PWM_GP1+7
 18639  0D20  36FD               	lsrf	??i1_PWM_GP1+7,f
 18640  0D21  0CFC               	rrf	??i1_PWM_GP1+6,f
 18641  0D22  36FD               	lsrf	??i1_PWM_GP1+7,f
 18642  0D23  0CFC               	rrf	??i1_PWM_GP1+6,f
 18643  0D24  087C               	movf	??i1_PWM_GP1+6,w
 18644  0D25  002C               	movlb	12	; select bank12
 18645  0D26  0098               	movwf	24	;volatile
 18646                           
 18647                           ;PWM.c: 56: PWM5DCL = (gamma_table[GAMMAGP1 - 1U][(duty - 1U)] & 0x0003) << 6U;
 18648  0D27  0020               	movlb	0	; select bank0
 18649  0D28  084C               	movf	i1PWM_GP1@duty,w
 18650  0D29  00F6               	movwf	??i1_PWM_GP1
 18651  0D2A  01F7               	clrf	??i1_PWM_GP1+1
 18652  0D2B  35F6               	lslf	??i1_PWM_GP1,f
 18653  0D2C  0DF7               	rlf	??i1_PWM_GP1+1,f
 18654  0D2D  083E               	movf	_GAMMAGP1,w	;volatile
 18655  0D2E  00F0               	movwf	i1___wmul@multiplier
 18656  0D2F  30C8               	movlw	200
 18657  0D30  01F1               	clrf	i1___wmul@multiplier+1
 18658  0D31  00F2               	movwf	i1___wmul@multiplicand
 18659  0D32  01F3               	clrf	i1___wmul@multiplicand+1
 18660  0D33  254E               	fcall	i1___wmul
 18661  0D34  30AC               	movlw	low ((_gamma_table| (0+32768)+65334))
 18662  0D35  00F8               	movwf	??i1_PWM_GP1+2
 18663  0D36  3080               	movlw	high ((_gamma_table| (0+32768)+65334))
 18664  0D37  00F9               	movwf	??i1_PWM_GP1+3
 18665  0D38  0870               	movf	?i1___wmul,w
 18666  0D39  0778               	addwf	??i1_PWM_GP1+2,w
 18667  0D3A  00FA               	movwf	??i1_PWM_GP1+4
 18668  0D3B  0871               	movf	?i1___wmul+1,w
 18669  0D3C  3D79               	addwfc	??i1_PWM_GP1+3,w
 18670  0D3D  00FB               	movwf	??i1_PWM_GP1+5
 18671  0D3E  087A               	movf	??i1_PWM_GP1+4,w
 18672  0D3F  0776               	addwf	??i1_PWM_GP1,w
 18673  0D40  0084               	movwf	4
 18674  0D41  087B               	movf	??i1_PWM_GP1+5,w
 18675  0D42  3D77               	addwfc	??i1_PWM_GP1+1,w
 18676  0D43  0085               	movwf	5
 18677  0D44  0800               	movf	0,w	;code access
 18678  0D45  3903               	andlw	3
 18679  0D46  00FC               	movwf	??i1_PWM_GP1+6
 18680  0D47  0CFC               	rrf	??i1_PWM_GP1+6,f
 18681  0D48  0CFC               	rrf	??i1_PWM_GP1+6,f
 18682  0D49  0C7C               	rrf	??i1_PWM_GP1+6,w
 18683  0D4A  39C0               	andlw	192
 18684  0D4B  002C               	movlb	12	; select bank12
 18685  0D4C  0097               	movwf	23	;volatile
 18686  0D4D  0008               	return
 18687  0D4E                     __end_ofi1_PWM_GP1:
 18688  0D4E                     __ptext74:	
 18689 ;; *************** function i1___wmul *****************
 18690 ;; Defined at:
 18691 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
 18692 ;; Parameters:    Size  Location     Type
 18693 ;;  multiplier      2    0[COMMON] unsigned int 
 18694 ;;  multiplicand    2    2[COMMON] unsigned int 
 18695 ;; Auto vars:     Size  Location     Type
 18696 ;;  product         2    4[COMMON] unsigned int 
 18697 ;; Return value:  Size  Location     Type
 18698 ;;                  2    0[COMMON] unsigned int 
 18699 ;; Registers used:
 18700 ;;		wreg, status,2, status,0
 18701 ;; Tracked objects:
 18702 ;;		On entry : 1E/1
 18703 ;;		On exit  : 1E/0
 18704 ;;		Unchanged: 1E/0
 18705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18706 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18707 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18709 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18710 ;;Total ram usage:        6 bytes
 18711 ;; Hardware stack levels used:    1
 18712 ;; This function calls:
 18713 ;;		Nothing
 18714 ;; This function is called by:
 18715 ;;		_RegisterWrite
 18716 ;;		i1_PWM_GP1
 18717 ;;		i1_PWM_GP2
 18718 ;;		i1_PWM_GP3_RLED
 18719 ;; This function uses a non-reentrant model
 18720 ;;
 18721                           
 18722                           
 18723                           ;psect for function i1___wmul
 18724  0D4E                     i1___wmul:
 18725                           
 18726                           ;incstack = 0
 18727                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 18728  0D4E  01F4               	clrf	i1___wmul@product
 18729  0D4F  01F5               	clrf	i1___wmul@product+1
 18730  0D50                     i1l4712:
 18731  0D50  1C70               	btfss	i1___wmul@multiplier,0
 18732  0D51  2D56               	goto	i1l4716
 18733  0D52  0872               	movf	i1___wmul@multiplicand,w
 18734  0D53  07F4               	addwf	i1___wmul@product,f
 18735  0D54  0873               	movf	i1___wmul@multiplicand+1,w
 18736  0D55  3DF5               	addwfc	i1___wmul@product+1,f
 18737  0D56                     i1l4716:
 18738  0D56  35F2               	lslf	i1___wmul@multiplicand,f
 18739  0D57  0DF3               	rlf	i1___wmul@multiplicand+1,f
 18740  0D58  36F1               	lsrf	i1___wmul@multiplier+1,f
 18741  0D59  0CF0               	rrf	i1___wmul@multiplier,f
 18742  0D5A  0870               	movf	i1___wmul@multiplier,w
 18743  0D5B  0471               	iorwf	i1___wmul@multiplier+1,w
 18744  0D5C  1D03               	btfss	3,2
 18745  0D5D  2D50               	goto	i1l4712
 18746  0D5E  0875               	movf	i1___wmul@product+1,w
 18747  0D5F  00F1               	movwf	?i1___wmul+1
 18748  0D60  0874               	movf	i1___wmul@product,w
 18749  0D61  00F0               	movwf	?i1___wmul
 18750  0D62  0008               	return
 18751  0D63                     __end_ofi1___wmul:
 18752  0D63                     __ptext62:	
 18753 ;; *************** function _STD_EncoderMode *****************
 18754 ;; Defined at:
 18755 ;;		line 171 in file "GPports.c"
 18756 ;; Parameters:    Size  Location     Type
 18757 ;;		None
 18758 ;; Auto vars:     Size  Location     Type
 18759 ;;		None
 18760 ;; Return value:  Size  Location     Type
 18761 ;;                  1    wreg      void 
 18762 ;; Registers used:
 18763 ;;		status,2
 18764 ;; Tracked objects:
 18765 ;;		On entry : 1F/0
 18766 ;;		On exit  : 1F/1
 18767 ;;		Unchanged: 0/0
 18768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18773 ;;Total ram usage:        0 bytes
 18774 ;; Hardware stack levels used:    1
 18775 ;; This function calls:
 18776 ;;		Nothing
 18777 ;; This function is called by:
 18778 ;;		_FirstConfig
 18779 ;; This function uses a non-reentrant model
 18780 ;;
 18781                           
 18782                           
 18783                           ;psect for function _STD_EncoderMode
 18784  0D63                     _STD_EncoderMode:
 18785                           
 18786                           ;incstack = 0
 18787                           ; Regs used in _STD_EncoderMode: [status,2]
 18788                           ;GPports.c: 173: do { ANSELCbits.ANSC4 = 0; } while(0);
 18789  0D63  0023               	movlb	3	; select bank3
 18790  0D64  120E               	bcf	14,4	;volatile
 18791                           
 18792                           ;GPports.c: 174: do { WPUCbits.WPUC4 = 1; } while(0);
 18793  0D65  0024               	movlb	4	; select bank4
 18794  0D66  160E               	bsf	14,4	;volatile
 18795                           
 18796                           ;GPports.c: 175: do { TRISCbits.TRISC4 = 1; } while(0);
 18797  0D67  0021               	movlb	1	; select bank1
 18798  0D68  160E               	bsf	14,4	;volatile
 18799                           
 18800                           ;GPports.c: 177: do { ANSELCbits.ANSC3 = 0; } while(0);
 18801  0D69  0023               	movlb	3	; select bank3
 18802  0D6A  118E               	bcf	14,3	;volatile
 18803                           
 18804                           ;GPports.c: 178: do { ODCONCbits.ODCC3 = 0; } while(0);
 18805  0D6B  0025               	movlb	5	; select bank5
 18806  0D6C  118E               	bcf	14,3	;volatile
 18807                           
 18808                           ;GPports.c: 179: do { TRISCbits.TRISC3 = 0; } while(0);
 18809  0D6D  0021               	movlb	1	; select bank1
 18810  0D6E  118E               	bcf	14,3	;volatile
 18811                           
 18812                           ;GPports.c: 180: do { LATCbits.LATC3 = 0; } while(0);
 18813  0D6F  0022               	movlb	2	; select bank2
 18814  0D70  118E               	bcf	14,3	;volatile
 18815                           
 18816                           ;GPports.c: 182: CCP2CON = 0x00;
 18817  0D71  0025               	movlb	5	; select bank5
 18818  0D72  0197               	clrf	23	;volatile
 18819                           
 18820                           ;GPports.c: 183: CCP3CON = 0x00;
 18821  0D73  0026               	movlb	6	; select bank6
 18822  0D74  0193               	clrf	19	;volatile
 18823  0D75  0023               	movlb	3	; select bank3
 18824  0D76  110E               	bcf	14,2	;volatile
 18825  0D77  0021               	movlb	1	; select bank1
 18826  0D78  150E               	bsf	14,2	;volatile
 18827  0D79  0008               	return
 18828  0D7A                     __end_of_STD_EncoderMode:
 18829  0D7A                     __ptext56:	
 18830 ;; *************** function _SecondDataSplit *****************
 18831 ;; Defined at:
 18832 ;;		line 125 in file "DataVariable.c"
 18833 ;; Parameters:    Size  Location     Type
 18834 ;;		None
 18835 ;; Auto vars:     Size  Location     Type
 18836 ;;		None
 18837 ;; Return value:  Size  Location     Type
 18838 ;;                  1    wreg      void 
 18839 ;; Registers used:
 18840 ;;		wreg, status,2, status,0
 18841 ;; Tracked objects:
 18842 ;;		On entry : 1F/1
 18843 ;;		On exit  : 1F/0
 18844 ;;		Unchanged: 0/0
 18845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18850 ;;Total ram usage:        0 bytes
 18851 ;; Hardware stack levels used:    1
 18852 ;; This function calls:
 18853 ;;		Nothing
 18854 ;; This function is called by:
 18855 ;;		_RegisterWrite
 18856 ;; This function uses a non-reentrant model
 18857 ;;
 18858                           
 18859                           
 18860                           ;psect for function _SecondDataSplit
 18861  0D7A                     _SecondDataSplit:
 18862                           
 18863                           ;DataVariable.c: 127: S_CKSRC = GCONF2 & 0x01U;
 18864                           
 18865                           ;incstack = 0
 18866                           ; Regs used in _SecondDataSplit: [wreg+status,2+status,0]
 18867  0D7A  0842               	movf	_GCONF2^(0+128),w	;volatile
 18868  0D7B  00BB               	movwf	_S_CKSRC^(0+128)	;volatile
 18869  0D7C  3001               	movlw	1
 18870  0D7D  05BB               	andwf	_S_CKSRC^(0+128),f	;volatile
 18871                           
 18872                           ;DataVariable.c: 128: S_RELATIVE = (bool) (GCONF2 >> 1) & 0x01U;
 18873  0D7E  3642               	lsrf	_GCONF2^(0+128),w	;volatile
 18874  0D7F  0020               	movlb	0	; select bank0
 18875  0D80  00B7               	movwf	_S_RELATIVE	;volatile
 18876  0D81  3001               	movlw	1
 18877  0D82  05B7               	andwf	_S_RELATIVE,f	;volatile
 18878  0D83  0008               	return
 18879  0D84                     __end_of_SecondDataSplit:
 18880                           
 18881                           	psect	swtext6
 18882  1100                     __pswtext6:
 18883  1100                     i1S8434:
 18884  1100  318B  2B0D         	ljmp	i1l5462
 18885  1102  318B  2B15         	ljmp	i1l5468
 18886  1104  318B  2B1A         	ljmp	i1l5472
 18887  1106  318B  2B20         	ljmp	i1l5476
 18888  1108  318B  2B29         	ljmp	i1l5482
 18889  110A  318B  2BE1         	ljmp	i1l5584
 18890  110C  318B  2BE1         	ljmp	i1l5584
 18891  110E  318B  2BE1         	ljmp	i1l5584
 18892  1110  318B  2B2D         	ljmp	i1l5484
 18893  1112  318B  2B30         	ljmp	i1l5486
 18894  1114  318B  2B33         	ljmp	i1l5488
 18895  1116  318B  2B36         	ljmp	i1l5490
 18896  1118  318B  2B39         	ljmp	i1l5492
 18897  111A  318B  2B3C         	ljmp	i1l5494
 18898  111C  318B  2B3F         	ljmp	i1l5496
 18899  111E  318B  2B42         	ljmp	i1l5498
 18900  1120  318B  2B45         	ljmp	i1l5500
 18901  1122  318B  2B48         	ljmp	i1l5502
 18902  1124  318B  2B4B         	ljmp	i1l5504
 18903  1126  318B  2B4E         	ljmp	i1l5506
 18904  1128  318B  2B51         	ljmp	i1l5508
 18905  112A  318B  2B54         	ljmp	i1l5510
 18906  112C  318B  2B57         	ljmp	i1l5512
 18907  112E  318B  2B5A         	ljmp	i1l5514
 18908  1130  318B  2B5D         	ljmp	i1l5516
 18909  1132  318B  2B60         	ljmp	i1l5518
 18910  1134  318B  2B63         	ljmp	i1l5520
 18911  1136  318B  2B66         	ljmp	i1l5522
 18912  1138  318B  2B6C         	ljmp	i1l5526
 18913  113A  318B  2B72         	ljmp	i1l5530
 18914  113C  318B  2B7B         	ljmp	i1l5536
 18915  113E  318B  2B89         	ljmp	i1l5542
 18916  1140  318B  2B9A         	ljmp	i1l5546
 18917  1142  318B  2B9E         	ljmp	i1l5548
 18918  1144  318B  2BE1         	ljmp	i1l5584
 18919  1146  318B  2BE1         	ljmp	i1l5584
 18920  1148  318B  2BE1         	ljmp	i1l5584
 18921  114A  318B  2BE1         	ljmp	i1l5584
 18922  114C  318B  2BE1         	ljmp	i1l5584
 18923  114E  318B  2BA1         	ljmp	i1l5550
 18924  1150  318B  2BAA         	ljmp	i1l5554
 18925  1152  318B  2BB3         	ljmp	i1l5558
 18926  1154  318B  2BBC         	ljmp	i1l5562
 18927  1156  318B  2BC5         	ljmp	i1l5566
 18928  1158  318B  2BCE         	ljmp	i1l5570
 18929  115A  318B  2BE1         	ljmp	i1l5584
 18930  115C  318B  2BE1         	ljmp	i1l5584
 18931  115E  318B  2BE1         	ljmp	i1l5584
 18932  1160  318B  2BCF         	ljmp	i1l5574
 18933                           
 18934                           	psect	text51
 18935  0801                     __ptext51:	
 18936 ;; *************** function _eeprom_write *****************
 18937 ;; Defined at:
 18938 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\pic\__eewrite.c"
 18939 ;; Parameters:    Size  Location     Type
 18940 ;;  addr            1    wreg     unsigned char 
 18941 ;;  value           1    0[COMMON] unsigned char 
 18942 ;; Auto vars:     Size  Location     Type
 18943 ;;  addr            1    1[COMMON] unsigned char 
 18944 ;; Return value:  Size  Location     Type
 18945 ;;                  1    wreg      void 
 18946 ;; Registers used:
 18947 ;;		wreg, status,2
 18948 ;; Tracked objects:
 18949 ;;		On entry : 1F/0
 18950 ;;		On exit  : 1F/11
 18951 ;;		Unchanged: 0/0
 18952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18953 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18956 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18957 ;;Total ram usage:        2 bytes
 18958 ;; Hardware stack levels used:    1
 18959 ;; This function calls:
 18960 ;;		Nothing
 18961 ;; This function is called by:
 18962 ;;		_RegisterWrite
 18963 ;; This function uses a non-reentrant model
 18964 ;;
 18965                           
 18966                           
 18967                           ;psect for function _eeprom_write
 18968  0801                     _eeprom_write:
 18969                           
 18970                           ;incstack = 0
 18971                           ; Regs used in _eeprom_write: [wreg+status,2]
 18972                           ;eeprom_write@addr stored from wreg
 18973  0801  00F1               	movwf	eeprom_write@addr
 18974  0802                     i1l1717:	
 18975                           ;__eewrite.c: 8: do { while (NVMCON1bits.WR) { continue; } NVMCON1bits.NVMREGS = 1; NVMA
      +                          DRL = (addr) & 0xFFU; NVMADRH = 0x70; NVMDATH = 0; NVMDATL = (value) & 0xFFU; STATUSbits
      +                          .CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCONbits.GIE = 0; NVMCON1bit
      +                          s.W
 18976                           
 18977  0802  0031               	movlb	17	; select bank17
 18978  0803  1895               	btfsc	21,1	;volsfr
 18979  0804  2802               	goto	i1l1717
 18980  0805  1715               	bsf	21,6	;volsfr
 18981  0806  0871               	movf	eeprom_write@addr,w
 18982  0807  0091               	movwf	17	;volatile
 18983  0808  3070               	movlw	112
 18984  0809  0092               	movwf	18	;volatile
 18985  080A  0194               	clrf	20	;volatile
 18986  080B  0870               	movf	eeprom_write@value,w
 18987  080C  0093               	movwf	19	;volatile
 18988  080D  1003               	bcf	3,0	;volatile
 18989  080E  1B8B               	btfsc	11,7	;volatile
 18990  080F  1403               	bsf	3,0	;volatile
 18991  0810  138B               	bcf	11,7	;volatile
 18992  0811  1515               	bsf	21,2	;volsfr
 18993  0812  3055               	movlw	85
 18994  0813  0096               	movwf	22	;volsfr
 18995  0814  30AA               	movlw	170
 18996  0815  0096               	movwf	22	;volsfr
 18997  0816  1495               	bsf	21,1	;volsfr
 18998  0817                     i1l1721:
 18999  0817  1895               	btfsc	21,1	;volsfr
 19000  0818  2817               	goto	i1l1721
 19001  0819  1115               	bcf	21,2	;volsfr
 19002  081A  1803               	btfsc	3,0	;volatile
 19003  081B  178B               	bsf	11,7	;volatile
 19004  081C  0008               	return
 19005  081D                     __end_of_eeprom_write:
 19006                           
 19007                           	psect	text52
 19008  1222                     __ptext52:	
 19009 ;; *************** function _UpdateOut_GP3 *****************
 19010 ;; Defined at:
 19011 ;;		line 376 in file "GPports.c"
 19012 ;; Parameters:    Size  Location     Type
 19013 ;;		None
 19014 ;; Auto vars:     Size  Location     Type
 19015 ;;		None
 19016 ;; Return value:  Size  Location     Type
 19017 ;;                  1    wreg      void 
 19018 ;; Registers used:
 19019 ;;		wreg, status,2, status,0
 19020 ;; Tracked objects:
 19021 ;;		On entry : 1F/0
 19022 ;;		On exit  : 1D/0
 19023 ;;		Unchanged: 0/0
 19024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19027 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19028 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19029 ;;Total ram usage:        1 bytes
 19030 ;; Hardware stack levels used:    1
 19031 ;; This function calls:
 19032 ;;		Nothing
 19033 ;; This function is called by:
 19034 ;;		_RegisterWrite
 19035 ;; This function uses a non-reentrant model
 19036 ;;
 19037                           
 19038                           
 19039                           ;psect for function _UpdateOut_GP3
 19040  1222                     _UpdateOut_GP3:
 19041                           
 19042                           ;GPports.c: 377: if (C_ETYPE == 1)
 19043                           
 19044                           ;incstack = 0
 19045                           ; Regs used in _UpdateOut_GP3: [wreg+status,2+status,0]
 19046  1222  0B39               	decfsz	_C_ETYPE,w	;volatile
 19047  1223  2A25               	goto	i1l5190
 19048  1224  0008               	return
 19049  1225                     i1l5190:
 19050                           
 19051                           ;GPports.c: 380: if ((GP3CONF & 0x03) == 0x01) {
 19052  1225  3003               	movlw	3
 19053  1226  0546               	andwf	_GP3CONF,w	;volatile
 19054  1227  00F0               	movwf	??_UpdateOut_GP3
 19055  1228  0B70               	decfsz	??_UpdateOut_GP3,w
 19056  1229  0008               	return
 19057                           
 19058                           ;GPports.c: 381: if (GP3REG == 0) {
 19059  122A  0840               	movf	_GP3REG,w	;volatile
 19060  122B  1D03               	btfss	3,2
 19061  122C  2A30               	goto	i1l1226
 19062                           
 19063                           ;GPports.c: 382: LATCbits.LATC5 = 0;
 19064  122D  0022               	movlb	2	; select bank2
 19065  122E  128E               	bcf	14,5	;volatile
 19066                           
 19067                           ;GPports.c: 383: } else {
 19068  122F  0008               	return
 19069  1230                     i1l1226:
 19070                           
 19071                           ;GPports.c: 384: LATCbits.LATC5 = 1;
 19072  1230  0022               	movlb	2	; select bank2
 19073  1231  168E               	bsf	14,5	;volatile
 19074                           
 19075                           ;GPports.c: 385: GP3REG = 1;
 19076  1232  3001               	movlw	1
 19077  1233  0020               	movlb	0	; select bank0
 19078  1234  00C0               	movwf	_GP3REG	;volatile
 19079  1235  0008               	return
 19080  1236                     __end_of_UpdateOut_GP3:
 19081                           
 19082                           	psect	text53
 19083  124A                     __ptext53:	
 19084 ;; *************** function _UpdateOut_GP2 *****************
 19085 ;; Defined at:
 19086 ;;		line 360 in file "GPports.c"
 19087 ;; Parameters:    Size  Location     Type
 19088 ;;		None
 19089 ;; Auto vars:     Size  Location     Type
 19090 ;;		None
 19091 ;; Return value:  Size  Location     Type
 19092 ;;                  1    wreg      void 
 19093 ;; Registers used:
 19094 ;;		wreg, status,2, status,0
 19095 ;; Tracked objects:
 19096 ;;		On entry : 1F/0
 19097 ;;		On exit  : 1D/0
 19098 ;;		Unchanged: 0/0
 19099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19102 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19104 ;;Total ram usage:        1 bytes
 19105 ;; Hardware stack levels used:    1
 19106 ;; This function calls:
 19107 ;;		Nothing
 19108 ;; This function is called by:
 19109 ;;		_RegisterWrite
 19110 ;; This function uses a non-reentrant model
 19111 ;;
 19112                           
 19113                           
 19114                           ;psect for function _UpdateOut_GP2
 19115  124A                     _UpdateOut_GP2:
 19116                           
 19117                           ;GPports.c: 361: if ((GP2CONF & 0x03) == 0x01) {
 19118                           
 19119                           ;incstack = 0
 19120                           ; Regs used in _UpdateOut_GP2: [wreg+status,2+status,0]
 19121  124A  3003               	movlw	3
 19122  124B  0547               	andwf	_GP2CONF,w	;volatile
 19123  124C  00F0               	movwf	??_UpdateOut_GP2
 19124  124D  0B70               	decfsz	??_UpdateOut_GP2,w
 19125  124E  0008               	return
 19126                           
 19127                           ;GPports.c: 362: if (GP2REG == 0) {
 19128  124F  0841               	movf	_GP2REG,w	;volatile
 19129  1250  1D03               	btfss	3,2
 19130  1251  2A55               	goto	i1l1218
 19131                           
 19132                           ;GPports.c: 363: LATCbits.LATC6 = 0;
 19133  1252  0022               	movlb	2	; select bank2
 19134  1253  130E               	bcf	14,6	;volatile
 19135                           
 19136                           ;GPports.c: 364: } else {
 19137  1254  0008               	return
 19138  1255                     i1l1218:
 19139                           
 19140                           ;GPports.c: 366: LATCbits.LATC6 = 1;
 19141  1255  0022               	movlb	2	; select bank2
 19142  1256  170E               	bsf	14,6	;volatile
 19143                           
 19144                           ;GPports.c: 367: GP2REG = 1;
 19145  1257  3001               	movlw	1
 19146  1258  0020               	movlb	0	; select bank0
 19147  1259  00C1               	movwf	_GP2REG	;volatile
 19148  125A  0008               	return
 19149  125B                     __end_of_UpdateOut_GP2:
 19150                           
 19151                           	psect	text54
 19152  125B                     __ptext54:	
 19153 ;; *************** function _UpdateOut_GP1 *****************
 19154 ;; Defined at:
 19155 ;;		line 345 in file "GPports.c"
 19156 ;; Parameters:    Size  Location     Type
 19157 ;;		None
 19158 ;; Auto vars:     Size  Location     Type
 19159 ;;		None
 19160 ;; Return value:  Size  Location     Type
 19161 ;;                  1    wreg      void 
 19162 ;; Registers used:
 19163 ;;		wreg, status,2, status,0
 19164 ;; Tracked objects:
 19165 ;;		On entry : 1F/0
 19166 ;;		On exit  : 1D/0
 19167 ;;		Unchanged: 0/0
 19168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19171 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19172 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19173 ;;Total ram usage:        1 bytes
 19174 ;; Hardware stack levels used:    1
 19175 ;; This function calls:
 19176 ;;		Nothing
 19177 ;; This function is called by:
 19178 ;;		_RegisterWrite
 19179 ;; This function uses a non-reentrant model
 19180 ;;
 19181                           
 19182                           
 19183                           ;psect for function _UpdateOut_GP1
 19184  125B                     _UpdateOut_GP1:
 19185                           
 19186                           ;GPports.c: 346: if ((GP1CONF & 0x03) == 0x01) {
 19187                           
 19188                           ;incstack = 0
 19189                           ; Regs used in _UpdateOut_GP1: [wreg+status,2+status,0]
 19190  125B  3003               	movlw	3
 19191  125C  0548               	andwf	_GP1CONF,w	;volatile
 19192  125D  00F0               	movwf	??_UpdateOut_GP1
 19193  125E  0B70               	decfsz	??_UpdateOut_GP1,w
 19194  125F  0008               	return
 19195                           
 19196                           ;GPports.c: 347: if (GP1REG == 0) {
 19197  1260  0842               	movf	_GP1REG,w	;volatile
 19198  1261  1D03               	btfss	3,2
 19199  1262  2A66               	goto	i1l1212
 19200                           
 19201                           ;GPports.c: 348: LATCbits.LATC7 = 0;
 19202  1263  0022               	movlb	2	; select bank2
 19203  1264  138E               	bcf	14,7	;volatile
 19204                           
 19205                           ;GPports.c: 349: } else {
 19206  1265  0008               	return
 19207  1266                     i1l1212:
 19208                           
 19209                           ;GPports.c: 350: LATCbits.LATC7 = 1;
 19210  1266  0022               	movlb	2	; select bank2
 19211  1267  178E               	bsf	14,7	;volatile
 19212                           
 19213                           ;GPports.c: 351: GP1REG = 1;
 19214  1268  3001               	movlw	1
 19215  1269  0020               	movlb	0	; select bank0
 19216  126A  00C2               	movwf	_GP1REG	;volatile
 19217  126B  0008               	return
 19218  126C                     __end_of_UpdateOut_GP1:
 19219                           
 19220                           	psect	text58
 19221  126C                     __ptext58:	
 19222 ;; *************** function i1_I2C1_Initialize *****************
 19223 ;; Defined at:
 19224 ;;		line 75 in file "mcc_generated_files/i2c1.c"
 19225 ;; Parameters:    Size  Location     Type
 19226 ;;		None
 19227 ;; Auto vars:     Size  Location     Type
 19228 ;;		None
 19229 ;; Return value:  Size  Location     Type
 19230 ;;                  1    wreg      void 
 19231 ;; Registers used:
 19232 ;;		wreg, status,2
 19233 ;; Tracked objects:
 19234 ;;		On entry : 1F/1
 19235 ;;		On exit  : 1F/1
 19236 ;;		Unchanged: 0/0
 19237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19242 ;;Total ram usage:        0 bytes
 19243 ;; Hardware stack levels used:    1
 19244 ;; This function calls:
 19245 ;;		Nothing
 19246 ;; This function is called by:
 19247 ;;		_SecondConfig
 19248 ;; This function uses a non-reentrant model
 19249 ;;
 19250                           
 19251                           
 19252                           ;psect for function i1_I2C1_Initialize
 19253  126C                     i1_I2C1_Initialize:
 19254                           
 19255                           ;i2c1.c: 78: SSP1STAT = 0x00;
 19256                           
 19257                           ;incstack = 0
 19258                           ; Regs used in i1_I2C1_Initialize: [wreg+status,2]
 19259  126C  0024               	movlb	4	; select bank4
 19260  126D  0194               	clrf	20	;volatile
 19261                           
 19262                           ;i2c1.c: 80: SSP1CON1 = 0x26;
 19263  126E  3026               	movlw	38
 19264  126F  0095               	movwf	21	;volatile
 19265                           
 19266                           ;i2c1.c: 82: SSP1CON2 = 0x00;
 19267  1270  0196               	clrf	22	;volatile
 19268                           
 19269                           ;i2c1.c: 84: SSP1CON3 = 0x00;
 19270  1271  0197               	clrf	23	;volatile
 19271                           
 19272                           ;i2c1.c: 86: SSP1MSK = (0x7F << 1);
 19273  1272  30FE               	movlw	254
 19274  1273  0093               	movwf	19	;volatile
 19275                           
 19276                           ;i2c1.c: 88: SSP1ADD = i2c_address;
 19277  1274  0020               	movlb	0	; select bank0
 19278  1275  084B               	movf	_i2c_address,w	;volatile
 19279  1276  0024               	movlb	4	; select bank4
 19280  1277  0092               	movwf	18	;volatile
 19281                           
 19282                           ;i2c1.c: 91: PIR1bits.SSP1IF = 0;
 19283  1278  0020               	movlb	0	; select bank0
 19284  1279  1191               	bcf	17,3	;volatile
 19285                           
 19286                           ;i2c1.c: 93: PIE1bits.SSP1IE = 1;
 19287  127A  0021               	movlb	1	; select bank1
 19288  127B  1591               	bsf	17,3	;volatile
 19289  127C  0008               	return
 19290  127D                     __end_ofi1_I2C1_Initialize:
 19291                           
 19292                           	psect	text59
 19293  1236                     __ptext59:	
 19294 ;; *************** function _I2C1_Initialize_ClockStreach *****************
 19295 ;; Defined at:
 19296 ;;		line 97 in file "mcc_generated_files/i2c1.c"
 19297 ;; Parameters:    Size  Location     Type
 19298 ;;		None
 19299 ;; Auto vars:     Size  Location     Type
 19300 ;;		None
 19301 ;; Return value:  Size  Location     Type
 19302 ;;                  1    wreg      void 
 19303 ;; Registers used:
 19304 ;;		wreg, status,2
 19305 ;; Tracked objects:
 19306 ;;		On entry : 1F/1
 19307 ;;		On exit  : 1F/1
 19308 ;;		Unchanged: 0/0
 19309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19314 ;;Total ram usage:        0 bytes
 19315 ;; Hardware stack levels used:    1
 19316 ;; This function calls:
 19317 ;;		Nothing
 19318 ;; This function is called by:
 19319 ;;		_SecondConfig
 19320 ;; This function uses a non-reentrant model
 19321 ;;
 19322                           
 19323                           
 19324                           ;psect for function _I2C1_Initialize_ClockStreach
 19325  1236                     _I2C1_Initialize_ClockStreach:
 19326  1236                     i1l4726:	
 19327                           ;incstack = 0
 19328                           ; Regs used in _I2C1_Initialize_ClockStreach: [wreg+status,2]
 19329                           
 19330                           
 19331                           ;i2c1.c: 100: SSP1CON1 = 0x00;
 19332  1236  0024               	movlb	4	; select bank4
 19333  1237  0195               	clrf	21	;volatile
 19334                           
 19335                           ;i2c1.c: 101: SSP1CON2 = 0x00;
 19336  1238  0196               	clrf	22	;volatile
 19337                           
 19338                           ;i2c1.c: 103: SSP1STAT = 0x00;
 19339  1239  0194               	clrf	20	;volatile
 19340                           
 19341                           ;i2c1.c: 105: SSP1CON1 = 0x26;
 19342  123A  3026               	movlw	38
 19343  123B  0095               	movwf	21	;volatile
 19344                           
 19345                           ;i2c1.c: 107: SSP1CON2 = 0x01;
 19346  123C  3001               	movlw	1
 19347  123D  0096               	movwf	22	;volatile
 19348                           
 19349                           ;i2c1.c: 109: SSP1CON3 = 0x00;
 19350  123E  0197               	clrf	23	;volatile
 19351                           
 19352                           ;i2c1.c: 111: SSP1MSK = (0x7F << 1);
 19353  123F  30FE               	movlw	254
 19354  1240  0093               	movwf	19	;volatile
 19355                           
 19356                           ;i2c1.c: 113: SSP1ADD = i2c_address;
 19357  1241  0020               	movlb	0	; select bank0
 19358  1242  084B               	movf	_i2c_address,w	;volatile
 19359  1243  0024               	movlb	4	; select bank4
 19360  1244  0092               	movwf	18	;volatile
 19361                           
 19362                           ;i2c1.c: 116: PIR1bits.SSP1IF = 0;
 19363  1245  0020               	movlb	0	; select bank0
 19364  1246  1191               	bcf	17,3	;volatile
 19365                           
 19366                           ;i2c1.c: 118: PIE1bits.SSP1IE = 1;
 19367  1247  0021               	movlb	1	; select bank1
 19368  1248  1591               	bsf	17,3	;volatile
 19369  1249  0008               	return
 19370  124A                     __end_of_I2C1_Initialize_ClockStreach:
 19371                           
 19372                           	psect	text60
 19373  11C4                     __ptext60:	
 19374 ;; *************** function _FirstDataSplit *****************
 19375 ;; Defined at:
 19376 ;;		line 112 in file "DataVariable.c"
 19377 ;; Parameters:    Size  Location     Type
 19378 ;;		None
 19379 ;; Auto vars:     Size  Location     Type
 19380 ;;		None
 19381 ;; Return value:  Size  Location     Type
 19382 ;;                  1    wreg      void 
 19383 ;; Registers used:
 19384 ;;		wreg, status,2, status,0
 19385 ;; Tracked objects:
 19386 ;;		On entry : 1F/0
 19387 ;;		On exit  : 1F/1
 19388 ;;		Unchanged: 0/0
 19389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19392 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19393 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19394 ;;Total ram usage:        1 bytes
 19395 ;; Hardware stack levels used:    1
 19396 ;; This function calls:
 19397 ;;		Nothing
 19398 ;; This function is called by:
 19399 ;;		_RegisterWrite
 19400 ;; This function uses a non-reentrant model
 19401 ;;
 19402                           
 19403                           
 19404                           ;psect for function _FirstDataSplit
 19405  11C4                     _FirstDataSplit:
 19406                           
 19407                           ;DataVariable.c: 114: C_DTYPE = GCONF & 0x01U;
 19408                           
 19409                           ;incstack = 0
 19410                           ; Regs used in _FirstDataSplit: [wreg+status,2+status,0]
 19411  11C4  0849               	movf	_GCONF,w	;volatile
 19412  11C5  0021               	movlb	1	; select bank1
 19413  11C6  00BC               	movwf	_C_DTYPE^(0+128)	;volatile
 19414  11C7  3001               	movlw	1
 19415  11C8  05BC               	andwf	_C_DTYPE^(0+128),f	;volatile
 19416                           
 19417                           ;DataVariable.c: 115: C_WRAPE = (bool) (GCONF >> 1) & 0x01U;
 19418  11C9  0020               	movlb	0	; select bank0
 19419  11CA  3649               	lsrf	_GCONF,w	;volatile
 19420  11CB  00B8               	movwf	_C_WRAPE	;volatile
 19421  11CC  3001               	movlw	1
 19422  11CD  05B8               	andwf	_C_WRAPE,f	;volatile
 19423                           
 19424                           ;DataVariable.c: 116: C_DIRE = (bool) (GCONF >> 2) & 0x01U;
 19425  11CE  0849               	movf	_GCONF,w	;volatile
 19426  11CF  00F0               	movwf	??_FirstDataSplit
 19427  11D0  36F0               	lsrf	??_FirstDataSplit,f
 19428  11D1  36F0               	lsrf	??_FirstDataSplit,f
 19429  11D2  0870               	movf	??_FirstDataSplit,w
 19430  11D3  0021               	movlb	1	; select bank1
 19431  11D4  00BD               	movwf	_C_DIRE^(0+128)	;volatile
 19432  11D5  3001               	movlw	1
 19433  11D6  05BD               	andwf	_C_DIRE^(0+128),f	;volatile
 19434                           
 19435                           ;DataVariable.c: 117: C_IPUD = (bool) (GCONF >> 3) & 0x01U;
 19436  11D7  0020               	movlb	0	; select bank0
 19437  11D8  0849               	movf	_GCONF,w	;volatile
 19438  11D9  00F0               	movwf	??_FirstDataSplit
 19439  11DA  36F0               	lsrf	??_FirstDataSplit,f
 19440  11DB  36F0               	lsrf	??_FirstDataSplit,f
 19441  11DC  36F0               	lsrf	??_FirstDataSplit,f
 19442  11DD  0870               	movf	??_FirstDataSplit,w
 19443  11DE  0021               	movlb	1	; select bank1
 19444  11DF  00BE               	movwf	_C_IPUD^(0+128)	;volatile
 19445  11E0  3001               	movlw	1
 19446  11E1  05BE               	andwf	_C_IPUD^(0+128),f	;volatile
 19447                           
 19448                           ;DataVariable.c: 118: C_RMOD = (bool) (GCONF >> 4) & 0x01U;
 19449  11E2  0020               	movlb	0	; select bank0
 19450  11E3  0E49               	swapf	_GCONF,w	;volatile
 19451  11E4  390F               	andlw	15
 19452  11E5  0021               	movlb	1	; select bank1
 19453  11E6  00BF               	movwf	_C_RMOD^(0+128)	;volatile
 19454  11E7  3001               	movlw	1
 19455  11E8  05BF               	andwf	_C_RMOD^(0+128),f	;volatile
 19456                           
 19457                           ;DataVariable.c: 119: C_ETYPE = (bool) (GCONF >> 5) & 0x01U;
 19458  11E9  0020               	movlb	0	; select bank0
 19459  11EA  0849               	movf	_GCONF,w	;volatile
 19460  11EB  00F0               	movwf	??_FirstDataSplit
 19461  11EC  3005               	movlw	5
 19462  11ED                     u245_25:
 19463  11ED  36F0               	lsrf	??_FirstDataSplit,f
 19464  11EE  0B89               	decfsz	9,f
 19465  11EF  29ED               	goto	u245_25
 19466  11F0  0870               	movf	??_FirstDataSplit,w
 19467  11F1  00B9               	movwf	_C_ETYPE	;volatile
 19468  11F2  3001               	movlw	1
 19469  11F3  05B9               	andwf	_C_ETYPE,f	;volatile
 19470                           
 19471                           ;DataVariable.c: 120: C_MBANK = (bool) (GCONF >> 6) & 0x01U;
 19472  11F4  0849               	movf	_GCONF,w	;volatile
 19473  11F5  00F0               	movwf	??_FirstDataSplit
 19474  11F6  3006               	movlw	6
 19475  11F7                     u246_25:
 19476  11F7  36F0               	lsrf	??_FirstDataSplit,f
 19477  11F8  0B89               	decfsz	9,f
 19478  11F9  29F7               	goto	u246_25
 19479  11FA  0870               	movf	??_FirstDataSplit,w
 19480  11FB  0021               	movlb	1	; select bank1
 19481  11FC  00C0               	movwf	_C_MBANK^(0+128)	;volatile
 19482  11FD  3001               	movlw	1
 19483  11FE  05C0               	andwf	_C_MBANK^(0+128),f	;volatile
 19484                           
 19485                           ;DataVariable.c: 121: C_RESET = (bool) (GCONF >> 7) & 0x01U;
 19486  11FF  0020               	movlb	0	; select bank0
 19487  1200  0849               	movf	_GCONF,w	;volatile
 19488  1201  00F0               	movwf	??_FirstDataSplit
 19489  1202  3007               	movlw	7
 19490  1203                     u247_25:
 19491  1203  36F0               	lsrf	??_FirstDataSplit,f
 19492  1204  0B89               	decfsz	9,f
 19493  1205  2A03               	goto	u247_25
 19494  1206  0870               	movf	??_FirstDataSplit,w
 19495  1207  0021               	movlb	1	; select bank1
 19496  1208  00C1               	movwf	_C_RESET^(0+128)	;volatile
 19497  1209  3001               	movlw	1
 19498  120A  05C1               	andwf	_C_RESET^(0+128),f	;volatile
 19499  120B  0008               	return
 19500  120C                     __end_of_FirstDataSplit:
 19501                           
 19502                           	psect	text63
 19503  16C9                     __ptext63:	
 19504 ;; *************** function _RGB_EncoderMode *****************
 19505 ;; Defined at:
 19506 ;;		line 138 in file "GPports.c"
 19507 ;; Parameters:    Size  Location     Type
 19508 ;;		None
 19509 ;; Auto vars:     Size  Location     Type
 19510 ;;		None
 19511 ;; Return value:  Size  Location     Type
 19512 ;;                  1    wreg      void 
 19513 ;; Registers used:
 19514 ;;		wreg, status,2, status,0, pclath, cstack
 19515 ;; Tracked objects:
 19516 ;;		On entry : 1F/0
 19517 ;;		On exit  : 1F/5
 19518 ;;		Unchanged: 0/0
 19519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19524 ;;Total ram usage:        0 bytes
 19525 ;; Hardware stack levels used:    1
 19526 ;; Hardware stack levels required when called:    1
 19527 ;; This function calls:
 19528 ;;		_PWM1_Initialize
 19529 ;;		_PWM2_Initialize
 19530 ;;		_PWM3_Initialize
 19531 ;; This function is called by:
 19532 ;;		_FirstConfig
 19533 ;; This function uses a non-reentrant model
 19534 ;;
 19535                           
 19536                           
 19537                           ;psect for function _RGB_EncoderMode
 19538  16C9                     _RGB_EncoderMode:
 19539                           
 19540                           ;incstack = 0
 19541                           ; Regs used in _RGB_EncoderMode: [wreg+status,2+status,0+pclath+cstack]
 19542                           ;GPports.c: 140: do { ANSELCbits.ANSC3 = 0; } while(0);
 19543  16C9  0023               	movlb	3	; select bank3
 19544  16CA  118E               	bcf	14,3	;volatile
 19545                           
 19546                           ;GPports.c: 141: do { ODCONCbits.ODCC3 = 0; } while(0);
 19547  16CB  0025               	movlb	5	; select bank5
 19548  16CC  118E               	bcf	14,3	;volatile
 19549                           
 19550                           ;GPports.c: 142: do { WPUCbits.WPUC3 = 0; } while(0);
 19551  16CD  0024               	movlb	4	; select bank4
 19552  16CE  118E               	bcf	14,3	;volatile
 19553                           
 19554                           ;GPports.c: 143: do { TRISCbits.TRISC3 = 0; } while(0);
 19555  16CF  0021               	movlb	1	; select bank1
 19556  16D0  118E               	bcf	14,3	;volatile
 19557                           
 19558                           ;GPports.c: 145: do { ANSELCbits.ANSC4 = 0; } while(0);
 19559  16D1  0023               	movlb	3	; select bank3
 19560  16D2  120E               	bcf	14,4	;volatile
 19561                           
 19562                           ;GPports.c: 146: do { ODCONCbits.ODCC4 = 0; } while(0);
 19563  16D3  0025               	movlb	5	; select bank5
 19564  16D4  120E               	bcf	14,4	;volatile
 19565                           
 19566                           ;GPports.c: 147: do { WPUCbits.WPUC4 = 0; } while(0);
 19567  16D5  0024               	movlb	4	; select bank4
 19568  16D6  120E               	bcf	14,4	;volatile
 19569                           
 19570                           ;GPports.c: 148: do { TRISCbits.TRISC4 = 0; } while(0);
 19571  16D7  0021               	movlb	1	; select bank1
 19572  16D8  120E               	bcf	14,4	;volatile
 19573                           
 19574                           ;GPports.c: 150: do { ANSELCbits.ANSC5 = 0; } while(0);
 19575  16D9  0023               	movlb	3	; select bank3
 19576  16DA  128E               	bcf	14,5	;volatile
 19577                           
 19578                           ;GPports.c: 151: do { ODCONCbits.ODCC5 = 0; } while(0);
 19579  16DB  0025               	movlb	5	; select bank5
 19580  16DC  128E               	bcf	14,5	;volatile
 19581                           
 19582                           ;GPports.c: 152: do { TRISCbits.TRISC5 = 0; } while(0);
 19583  16DD  0021               	movlb	1	; select bank1
 19584  16DE  128E               	bcf	14,5	;volatile
 19585                           
 19586                           ;GPports.c: 154: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 19587  16DF  3055               	movlw	85
 19588  16E0  003C               	movlb	28	; select bank28
 19589  16E1  008F               	movwf	15	;volsfr
 19590  16E2  30AA               	movlw	170
 19591  16E3  008F               	movwf	15	;volsfr
 19592  16E4  100F               	bcf	15,0	;volsfr
 19593                           
 19594                           ;GPports.c: 155: RC5PPSbits.RC5PPS = 0x0C;
 19595  16E5  003D               	movlb	29	; select bank29
 19596  16E6  0825               	movf	37,w	;volatile
 19597  16E7  39E0               	andlw	-32
 19598  16E8  380C               	iorlw	12
 19599  16E9  00A5               	movwf	37	;volatile
 19600                           
 19601                           ;GPports.c: 156: RC4PPSbits.RC4PPS = 0x0D;
 19602  16EA  0824               	movf	36,w	;volatile
 19603  16EB  39E0               	andlw	-32
 19604  16EC  380D               	iorlw	13
 19605  16ED  00A4               	movwf	36	;volatile
 19606                           
 19607                           ;GPports.c: 157: RC3PPSbits.RC3PPS = 0x0E;
 19608  16EE  0823               	movf	35,w	;volatile
 19609  16EF  39E0               	andlw	-32
 19610  16F0  380E               	iorlw	14
 19611  16F1  00A3               	movwf	35	;volatile
 19612                           
 19613                           ;GPports.c: 158: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 19614  16F2  3055               	movlw	85
 19615  16F3  003C               	movlb	28	; select bank28
 19616  16F4  008F               	movwf	15	;volsfr
 19617  16F5  30AA               	movlw	170
 19618  16F6  008F               	movwf	15	;volsfr
 19619  16F7  140F               	bsf	15,0	;volsfr
 19620  16F8  0023               	movlb	3	; select bank3
 19621  16F9  110E               	bcf	14,2	;volatile
 19622  16FA  0021               	movlb	1	; select bank1
 19623  16FB  150E               	bsf	14,2	;volatile
 19624                           
 19625                           ;GPports.c: 163: PWM1_Initialize();
 19626  16FC  2770  3196         	fcall	_PWM1_Initialize
 19627                           
 19628                           ;GPports.c: 164: PWM2_Initialize();
 19629  16FE  27E8  3196         	fcall	_PWM2_Initialize
 19630                           
 19631                           ;GPports.c: 165: PWM3_Initialize();
 19632  1700  2FF3               	ljmp	i1l4698
 19633  1701                     __end_of_RGB_EncoderMode:
 19634  1701                     __ptext66:	
 19635 ;; *************** function _Config_GP3 *****************
 19636 ;; Defined at:
 19637 ;;		line 295 in file "GPports.c"
 19638 ;; Parameters:    Size  Location     Type
 19639 ;;		None
 19640 ;; Auto vars:     Size  Location     Type
 19641 ;;		None
 19642 ;; Return value:  Size  Location     Type
 19643 ;;                  1    wreg      void 
 19644 ;; Registers used:
 19645 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19646 ;; Tracked objects:
 19647 ;;		On entry : 1F/0
 19648 ;;		On exit  : 1B/0
 19649 ;;		Unchanged: 0/0
 19650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19653 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19654 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19655 ;;Total ram usage:        2 bytes
 19656 ;; Hardware stack levels used:    1
 19657 ;; Hardware stack levels required when called:    2
 19658 ;; This function calls:
 19659 ;;		_PWM1_Initialize
 19660 ;;		i1_PWM_GP3_RLED
 19661 ;; This function is called by:
 19662 ;;		_RegisterWrite
 19663 ;; This function uses a non-reentrant model
 19664 ;;
 19665                           
 19666                           
 19667                           ;psect for function _Config_GP3
 19668  1701                     _Config_GP3:
 19669                           
 19670                           ;GPports.c: 296: CCP1CON = 0;
 19671                           
 19672                           ;incstack = 0
 19673                           ; Regs used in _Config_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19674  1701  0025               	movlb	5	; select bank5
 19675  1702  0193               	clrf	19	;volatile
 19676                           
 19677                           ;GPports.c: 297: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 19678  1703  3055               	movlw	85
 19679  1704  003C               	movlb	28	; select bank28
 19680  1705  008F               	movwf	15	;volsfr
 19681  1706  30AA               	movlw	170
 19682  1707  008F               	movwf	15	;volsfr
 19683  1708  100F               	bcf	15,0	;volsfr
 19684                           
 19685                           ;GPports.c: 298: RC5PPSbits.RC5PPS = 0x00;
 19686  1709  30E0               	movlw	-32
 19687  170A  003D               	movlb	29	; select bank29
 19688  170B  05A5               	andwf	37,f	;volatile
 19689                           
 19690                           ;GPports.c: 299: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 19691  170C  3055               	movlw	85
 19692  170D  003C               	movlb	28	; select bank28
 19693  170E  008F               	movwf	15	;volsfr
 19694  170F  30AA               	movlw	170
 19695  1710  008F               	movwf	15	;volsfr
 19696  1711  140F               	bsf	15,0	;volsfr
 19697                           
 19698                           ;GPports.c: 301: switch (GP3CONF & 0x03) {
 19699  1712  2F43               	goto	i1l5148
 19700  1713                     i1l1176:	
 19701                           ;GPports.c: 303: do { ANSELCbits.ANSC5 = 0; } while(0);
 19702                           
 19703  1713  0023               	movlb	3	; select bank3
 19704  1714  128E               	bcf	14,5	;volatile
 19705                           
 19706                           ;GPports.c: 304: do { LATCbits.LATC5 = 1; } while(0);
 19707  1715  0022               	movlb	2	; select bank2
 19708  1716  168E               	bsf	14,5	;volatile
 19709                           
 19710                           ;GPports.c: 305: do { TRISCbits.TRISC5 = 0; } while(0);
 19711  1717  0021               	movlb	1	; select bank1
 19712  1718  128E               	bcf	14,5	;volatile
 19713                           
 19714                           ;GPports.c: 306: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 19715  1719  3055               	movlw	85
 19716  171A  003C               	movlb	28	; select bank28
 19717  171B  008F               	movwf	15	;volsfr
 19718  171C  30AA               	movlw	170
 19719  171D  008F               	movwf	15	;volsfr
 19720  171E  100F               	bcf	15,0	;volsfr
 19721                           
 19722                           ;GPports.c: 307: RC5PPSbits.RC5PPS = 0x0C;
 19723  171F  003D               	movlb	29	; select bank29
 19724  1720  0825               	movf	37,w	;volatile
 19725  1721  39E0               	andlw	-32
 19726  1722  380C               	iorlw	12
 19727  1723  00A5               	movwf	37	;volatile
 19728                           
 19729                           ;GPports.c: 308: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 19730  1724  3055               	movlw	85
 19731  1725  003C               	movlb	28	; select bank28
 19732  1726  008F               	movwf	15	;volsfr
 19733  1727  30AA               	movlw	170
 19734  1728  008F               	movwf	15	;volsfr
 19735  1729  140F               	bsf	15,0	;volsfr
 19736                           
 19737                           ;GPports.c: 309: PWM1_Initialize();
 19738  172A  2770  3196         	fcall	_PWM1_Initialize
 19739                           
 19740                           ;GPports.c: 310: PWM_GP3_RLED(0);
 19741  172C  3000               	movlw	0
 19742  172D  277C  3196         	fcall	i1_PWM_GP3_RLED
 19743                           
 19744                           ;GPports.c: 311: break;
 19745  172F  2F5D               	goto	i1l5152
 19746  1730                     i1l1184:	
 19747                           ;GPports.c: 314: do { ANSELCbits.ANSC5 = 0; } while(0);
 19748                           
 19749  1730  0023               	movlb	3	; select bank3
 19750  1731  128E               	bcf	14,5	;volatile
 19751                           
 19752                           ;GPports.c: 315: do { TRISCbits.TRISC5 = 0; } while(0);
 19753  1732  0021               	movlb	1	; select bank1
 19754  1733  128E               	bcf	14,5	;volatile
 19755                           
 19756                           ;GPports.c: 316: do { ODCONCbits.ODCC5 = 0; } while(0);
 19757  1734  0025               	movlb	5	; select bank5
 19758  1735  128E               	bcf	14,5	;volatile
 19759  1736  2F5D               	goto	i1l5152
 19760  1737                     i1l1191:	
 19761                           ;GPports.c: 320: do { TRISCbits.TRISC5 = 1; } while(0);
 19762                           
 19763  1737  0021               	movlb	1	; select bank1
 19764  1738  168E               	bsf	14,5	;volatile
 19765                           
 19766                           ;GPports.c: 321: do { ANSELCbits.ANSC5 = 1; } while(0);
 19767  1739  0023               	movlb	3	; select bank3
 19768  173A  168E               	bsf	14,5	;volatile
 19769                           
 19770                           ;GPports.c: 322: PMD2bits.ADCMD = 0;
 19771  173B  0032               	movlb	18	; select bank18
 19772  173C  1293               	bcf	19,5	;volatile
 19773                           
 19774                           ;GPports.c: 323: break;
 19775  173D  2F5D               	goto	i1l5152
 19776  173E                     i1l1196:	
 19777                           ;GPports.c: 326: do { ANSELCbits.ANSC5 = 0; } while(0);
 19778                           
 19779  173E  0023               	movlb	3	; select bank3
 19780  173F  128E               	bcf	14,5	;volatile
 19781                           
 19782                           ;GPports.c: 327: do { TRISCbits.TRISC5 = 1; } while(0);
 19783  1740  0021               	movlb	1	; select bank1
 19784  1741  168E               	bsf	14,5	;volatile
 19785  1742  2F5D               	goto	i1l5152
 19786  1743                     i1l5148:
 19787  1743  0020               	movlb	0	; select bank0
 19788  1744  0846               	movf	_GP3CONF,w	;volatile
 19789  1745  3903               	andlw	3
 19790  1746  00CC               	movwf	??_Config_GP3
 19791  1747  01CD               	clrf	??_Config_GP3+1
 19792                           
 19793                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19794                           ; Switch size 1, requested type "speed"
 19795                           ; Number of cases is 1, Range of values is 0 to 0
 19796                           ; switch strategies available:
 19797                           ; Name         Instructions Cycles
 19798                           ; simple_byte            4     3 (average)
 19799                           ; direct_byte            8     6 (fixed)
 19800                           ; jumptable            260     6 (fixed)
 19801                           ;	Chosen strategy is simple_byte
 19802  1748  084D               	movf	??_Config_GP3+1,w
 19803  1749  3A00               	xorlw	0	; case 0
 19804  174A  1903               	skipnz
 19805  174B  2F4D               	goto	i1l8436
 19806  174C  2F5D               	goto	i1l5152
 19807  174D                     i1l8436:
 19808                           
 19809                           ; Switch size 1, requested type "speed"
 19810                           ; Number of cases is 4, Range of values is 0 to 3
 19811                           ; switch strategies available:
 19812                           ; Name         Instructions Cycles
 19813                           ; direct_byte           14     6 (fixed)
 19814                           ; simple_byte           13     7 (average)
 19815                           ; jumptable            260     6 (fixed)
 19816                           ;	Chosen strategy is direct_byte
 19817  174D  084C               	movf	??_Config_GP3,w
 19818  174E  0084               	movwf	4
 19819  174F  3004               	movlw	4
 19820  1750  0204               	subwf	4,w
 19821  1751  1803               	skipnc
 19822  1752  2F5D               	goto	i1l5152
 19823  1753  3192               	movlp	high i1S8438
 19824  1754  3504               	lslf	4,w
 19825  1755  3EAD               	addlw	low i1S8438
 19826  1756  0082               	movwf	2
 19827  1757                     i1l1202:	
 19828                           ;GPports.c: 333: do { WPUCbits.WPUC5 = 0; } while(0);
 19829                           
 19830  1757  0024               	movlb	4	; select bank4
 19831  1758  128E               	bcf	14,5	;volatile
 19832  1759  0008               	return
 19833  175A                     i1l1206:	
 19834                           ;GPports.c: 336: do { WPUCbits.WPUC5 = 1; } while(0);
 19835                           
 19836  175A  0024               	movlb	4	; select bank4
 19837  175B  168E               	bsf	14,5	;volatile
 19838  175C  0008               	return
 19839  175D                     i1l5152:
 19840  175D  0020               	movlb	0	; select bank0
 19841  175E  0846               	movf	_GP3CONF,w	;volatile
 19842  175F  3904               	andlw	4
 19843  1760  00CC               	movwf	??_Config_GP3
 19844  1761  01CD               	clrf	??_Config_GP3+1
 19845                           
 19846                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19847                           ; Switch size 1, requested type "speed"
 19848                           ; Number of cases is 1, Range of values is 0 to 0
 19849                           ; switch strategies available:
 19850                           ; Name         Instructions Cycles
 19851                           ; simple_byte            4     3 (average)
 19852                           ; direct_byte            8     6 (fixed)
 19853                           ; jumptable            260     6 (fixed)
 19854                           ;	Chosen strategy is simple_byte
 19855  1762  084D               	movf	??_Config_GP3+1,w
 19856  1763  3A00               	xorlw	0	; case 0
 19857  1764  1903               	skipnz
 19858  1765  2F67               	goto	i1l8440
 19859  1766  2F6F               	goto	i1l1208
 19860  1767                     i1l8440:
 19861                           
 19862                           ; Switch size 1, requested type "speed"
 19863                           ; Number of cases is 2, Range of values is 0 to 4
 19864                           ; switch strategies available:
 19865                           ; Name         Instructions Cycles
 19866                           ; simple_byte            7     4 (average)
 19867                           ; direct_byte           16     6 (fixed)
 19868                           ; jumptable            260     6 (fixed)
 19869                           ;	Chosen strategy is simple_byte
 19870  1767  084C               	movf	??_Config_GP3,w
 19871  1768  3A00               	xorlw	0	; case 0
 19872  1769  1903               	skipnz
 19873  176A  2F57               	goto	i1l1202
 19874  176B  3A04               	xorlw	4	; case 4
 19875  176C  1903               	skipnz
 19876  176D  2F5A               	goto	i1l1206
 19877  176E  2F6F               	goto	i1l1208
 19878  176F                     i1l1208:
 19879  176F  0008               	return
 19880  1770                     __end_of_Config_GP3:
 19881  1770                     __ptext68:	
 19882 ;; *************** function _PWM1_Initialize *****************
 19883 ;; Defined at:
 19884 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 19885 ;; Parameters:    Size  Location     Type
 19886 ;;		None
 19887 ;; Auto vars:     Size  Location     Type
 19888 ;;		None
 19889 ;; Return value:  Size  Location     Type
 19890 ;;                  1    wreg      void 
 19891 ;; Registers used:
 19892 ;;		wreg, status,2, status,0
 19893 ;; Tracked objects:
 19894 ;;		On entry : 2/1
 19895 ;;		On exit  : 1F/5
 19896 ;;		Unchanged: 0/0
 19897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19902 ;;Total ram usage:        0 bytes
 19903 ;; Hardware stack levels used:    1
 19904 ;; This function calls:
 19905 ;;		Nothing
 19906 ;; This function is called by:
 19907 ;;		_RGB_EncoderMode
 19908 ;;		_Config_GP3
 19909 ;; This function uses a non-reentrant model
 19910 ;;
 19911                           
 19912                           
 19913                           ;psect for function _PWM1_Initialize
 19914  1770                     _PWM1_Initialize:
 19915                           
 19916                           ;pwm1.c: 69: CCP1CON = 0x8F;
 19917                           
 19918                           ;incstack = 0
 19919                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 19920  1770  308F               	movlw	143
 19921  1771  0025               	movlb	5	; select bank5
 19922  1772  0093               	movwf	19	;volatile
 19923                           
 19924                           ;pwm1.c: 72: CCPR1H = 0x03;
 19925  1773  3003               	movlw	3
 19926  1774  0092               	movwf	18	;volatile
 19927                           
 19928                           ;pwm1.c: 75: CCPR1L = 0xFF;
 19929  1775  30FF               	movlw	255
 19930  1776  0091               	movwf	17	;volatile
 19931                           
 19932                           ;pwm1.c: 78: CCPTMRSbits.C1TSEL = 0x1;
 19933  1777  081F               	movf	31,w	;volatile
 19934  1778  39FC               	andlw	-4
 19935  1779  3801               	iorlw	1
 19936  177A  009F               	movwf	31	;volatile
 19937  177B  0008               	return
 19938  177C                     __end_of_PWM1_Initialize:
 19939  177C                     __ptext67:	
 19940 ;; *************** function i1_PWM_GP3_RLED *****************
 19941 ;; Defined at:
 19942 ;;		line 95 in file "PWM.c"
 19943 ;; Parameters:    Size  Location     Type
 19944 ;;  duty            1    wreg     unsigned char 
 19945 ;; Auto vars:     Size  Location     Type
 19946 ;;  duty            1   12[COMMON] unsigned char 
 19947 ;; Return value:  Size  Location     Type
 19948 ;;                  1    wreg      void 
 19949 ;; Registers used:
 19950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19951 ;; Tracked objects:
 19952 ;;		On entry : 1F/5
 19953 ;;		On exit  : 1F/5
 19954 ;;		Unchanged: 0/0
 19955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19957 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19958 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19959 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19960 ;;Total ram usage:        7 bytes
 19961 ;; Hardware stack levels used:    1
 19962 ;; Hardware stack levels required when called:    1
 19963 ;; This function calls:
 19964 ;;		i1___wmul
 19965 ;; This function is called by:
 19966 ;;		_Config_GP3
 19967 ;; This function uses a non-reentrant model
 19968 ;;
 19969                           
 19970                           
 19971                           ;psect for function i1_PWM_GP3_RLED
 19972  177C                     i1_PWM_GP3_RLED:
 19973                           
 19974                           ;incstack = 0
 19975                           ; Regs used in i1_PWM_GP3_RLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19976                           ;i1PWM_GP3_RLED@duty stored from wreg
 19977  177C  00FC               	movwf	i1PWM_GP3_RLED@duty
 19978                           
 19979                           ;PWM.c: 97: if (duty == 0) {
 19980  177D  087C               	movf	i1PWM_GP3_RLED@duty,w
 19981  177E  1D03               	btfss	3,2
 19982  177F  2F94               	goto	i1l4908
 19983                           
 19984                           ;PWM.c: 99: do { LATCbits.LATC5 = 1; } while(0);
 19985  1780  0022               	movlb	2	; select bank2
 19986  1781  168E               	bsf	14,5	;volatile
 19987                           
 19988                           ;PWM.c: 100: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 19989  1782  3055               	movlw	85
 19990  1783  003C               	movlb	28	; select bank28
 19991  1784  008F               	movwf	15	;volsfr
 19992  1785  30AA               	movlw	170
 19993  1786  008F               	movwf	15	;volsfr
 19994  1787  100F               	bcf	15,0	;volsfr
 19995                           
 19996                           ;PWM.c: 101: RC5PPSbits.RC5PPS = 0x00;
 19997  1788  30E0               	movlw	-32
 19998  1789  003D               	movlb	29	; select bank29
 19999  178A  05A5               	andwf	37,f	;volatile
 20000                           
 20001                           ;PWM.c: 102: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 20002  178B  3055               	movlw	85
 20003  178C  003C               	movlb	28	; select bank28
 20004  178D  008F               	movwf	15	;volsfr
 20005  178E  30AA               	movlw	170
 20006  178F  008F               	movwf	15	;volsfr
 20007  1790  140F               	bsf	15,0	;volsfr
 20008                           
 20009                           ;PWM.c: 103: CCP1CON = 0;
 20010  1791  0025               	movlb	5	; select bank5
 20011  1792  0193               	clrf	19	;volatile
 20012  1793  0008               	return
 20013  1794                     i1l4908:
 20014                           
 20015                           ;PWM.c: 105: };PWM.c: 107: if (CCP1CON == 0) {
 20016  1794  0813               	movf	19,w	;volatile
 20017  1795  1D03               	btfss	3,2
 20018  1796  2FAE               	goto	i1l1513
 20019                           
 20020                           ;PWM.c: 108: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 20021  1797  3055               	movlw	85
 20022  1798  003C               	movlb	28	; select bank28
 20023  1799  008F               	movwf	15	;volsfr
 20024  179A  30AA               	movlw	170
 20025  179B  008F               	movwf	15	;volsfr
 20026  179C  100F               	bcf	15,0	;volsfr
 20027                           
 20028                           ;PWM.c: 109: RC5PPSbits.RC5PPS = 0x0C;
 20029  179D  003D               	movlb	29	; select bank29
 20030  179E  0825               	movf	37,w	;volatile
 20031  179F  39E0               	andlw	-32
 20032  17A0  380C               	iorlw	12
 20033  17A1  00A5               	movwf	37	;volatile
 20034                           
 20035                           ;PWM.c: 110: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 20036  17A2  3055               	movlw	85
 20037  17A3  003C               	movlb	28	; select bank28
 20038  17A4  008F               	movwf	15	;volsfr
 20039  17A5  30AA               	movlw	170
 20040  17A6  008F               	movwf	15	;volsfr
 20041  17A7  140F               	bsf	15,0	;volsfr
 20042                           
 20043                           ;PWM.c: 111: CCP1CON = 0x8F;
 20044  17A8  308F               	movlw	143
 20045  17A9  0025               	movlb	5	; select bank5
 20046  17AA  0093               	movwf	19	;volatile
 20047                           
 20048                           ;PWM.c: 112: CCPR1 = 0xFFFF;
 20049  17AB  30FF               	movlw	255
 20050  17AC  0092               	movwf	18	;volatile
 20051  17AD  0091               	movwf	17	;volatile
 20052  17AE                     i1l1513:
 20053                           
 20054                           ;PWM.c: 113: };PWM.c: 115: if (GAMMAGP3_RLED == 0) {
 20055  17AE  0020               	movlb	0	; select bank0
 20056  17AF  083C               	movf	_GAMMAGP3_RLED,w	;volatile
 20057  17B0  1D03               	btfss	3,2
 20058  17B1  2FBF               	goto	i1l4928
 20059                           
 20060                           ;PWM.c: 117: CCPR1 = (uint16_t) (0xff - duty) << 2;
 20061  17B2  097C               	comf	i1PWM_GP3_RLED@duty,w
 20062  17B3  00F6               	movwf	??i1_PWM_GP3_RLED
 20063  17B4  01F7               	clrf	??i1_PWM_GP3_RLED+1
 20064  17B5  35F6               	lslf	??i1_PWM_GP3_RLED,f
 20065  17B6  0DF7               	rlf	??i1_PWM_GP3_RLED+1,f
 20066  17B7  35F6               	lslf	??i1_PWM_GP3_RLED,f
 20067  17B8  0DF7               	rlf	??i1_PWM_GP3_RLED+1,f
 20068  17B9  0876               	movf	??i1_PWM_GP3_RLED,w
 20069  17BA  0025               	movlb	5	; select bank5
 20070  17BB  0091               	movwf	17	;volatile
 20071  17BC  0877               	movf	??i1_PWM_GP3_RLED+1,w
 20072  17BD  0092               	movwf	18	;volatile
 20073                           
 20074                           ;PWM.c: 119: } else {
 20075  17BE  0008               	return
 20076  17BF                     i1l4928:
 20077                           
 20078                           ;PWM.c: 120: if (duty > 100)
 20079  17BF  3065               	movlw	101
 20080  17C0  027C               	subwf	i1PWM_GP3_RLED@duty,w
 20081  17C1  1C03               	skipc
 20082  17C2  2FC5               	goto	i1l4932
 20083                           
 20084                           ;PWM.c: 121: duty = 100;
 20085  17C3  3064               	movlw	100
 20086  17C4  00FC               	movwf	i1PWM_GP3_RLED@duty
 20087  17C5                     i1l4932:
 20088                           
 20089                           ;PWM.c: 123: CCPR1 = gamma_table[GAMMAGP3_RLED - 1U][(duty - 1U)];
 20090  17C5  087C               	movf	i1PWM_GP3_RLED@duty,w
 20091  17C6  00F6               	movwf	??i1_PWM_GP3_RLED
 20092  17C7  01F7               	clrf	??i1_PWM_GP3_RLED+1
 20093  17C8  35F6               	lslf	??i1_PWM_GP3_RLED,f
 20094  17C9  0DF7               	rlf	??i1_PWM_GP3_RLED+1,f
 20095  17CA  083C               	movf	_GAMMAGP3_RLED,w	;volatile
 20096  17CB  00F0               	movwf	i1___wmul@multiplier
 20097  17CC  30C8               	movlw	200
 20098  17CD  01F1               	clrf	i1___wmul@multiplier+1
 20099  17CE  00F2               	movwf	i1___wmul@multiplicand
 20100  17CF  01F3               	clrf	i1___wmul@multiplicand+1
 20101  17D0  318D  254E         	fcall	i1___wmul
 20102  17D2  30AC               	movlw	low ((_gamma_table| (0+32768)+65334))
 20103  17D3  00F8               	movwf	??i1_PWM_GP3_RLED+2
 20104  17D4  3080               	movlw	high ((_gamma_table| (0+32768)+65334))
 20105  17D5  00F9               	movwf	??i1_PWM_GP3_RLED+3
 20106  17D6  0870               	movf	?i1___wmul,w
 20107  17D7  0778               	addwf	??i1_PWM_GP3_RLED+2,w
 20108  17D8  00FA               	movwf	??i1_PWM_GP3_RLED+4
 20109  17D9  0871               	movf	?i1___wmul+1,w
 20110  17DA  3D79               	addwfc	??i1_PWM_GP3_RLED+3,w
 20111  17DB  00FB               	movwf	??i1_PWM_GP3_RLED+5
 20112  17DC  087A               	movf	??i1_PWM_GP3_RLED+4,w
 20113  17DD  0776               	addwf	??i1_PWM_GP3_RLED,w
 20114  17DE  0084               	movwf	4
 20115  17DF  087B               	movf	??i1_PWM_GP3_RLED+5,w
 20116  17E0  3D77               	addwfc	??i1_PWM_GP3_RLED+1,w
 20117  17E1  0085               	movwf	5
 20118  17E2  3F00               	moviw [0]fsr0
 20119  17E3  0025               	movlb	5	; select bank5
 20120  17E4  0091               	movwf	17	;volatile
 20121  17E5  3F01               	moviw [1]fsr0
 20122  17E6  0092               	movwf	18	;volatile
 20123  17E7  0008               	return
 20124  17E8                     __end_ofi1_PWM_GP3_RLED:
 20125  17E8                     __ptext65:	
 20126 ;; *************** function _PWM2_Initialize *****************
 20127 ;; Defined at:
 20128 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 20129 ;; Parameters:    Size  Location     Type
 20130 ;;		None
 20131 ;; Auto vars:     Size  Location     Type
 20132 ;;		None
 20133 ;; Return value:  Size  Location     Type
 20134 ;;                  1    wreg      void 
 20135 ;; Registers used:
 20136 ;;		wreg, status,2, status,0
 20137 ;; Tracked objects:
 20138 ;;		On entry : 1F/5
 20139 ;;		On exit  : 1F/5
 20140 ;;		Unchanged: 0/0
 20141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20146 ;;Total ram usage:        0 bytes
 20147 ;; Hardware stack levels used:    1
 20148 ;; This function calls:
 20149 ;;		Nothing
 20150 ;; This function is called by:
 20151 ;;		_RGB_EncoderMode
 20152 ;; This function uses a non-reentrant model
 20153 ;;
 20154                           
 20155                           
 20156                           ;psect for function _PWM2_Initialize
 20157  17E8                     _PWM2_Initialize:
 20158                           
 20159                           ;pwm2.c: 69: CCP2CON = 0x8F;
 20160                           
 20161                           ;incstack = 0
 20162                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 20163  17E8  308F               	movlw	143
 20164  17E9  0097               	movwf	23	;volatile
 20165                           
 20166                           ;pwm2.c: 72: CCPR2H = 0x03;
 20167  17EA  3003               	movlw	3
 20168  17EB  0096               	movwf	22	;volatile
 20169                           
 20170                           ;pwm2.c: 75: CCPR2L = 0xFF;
 20171  17EC  30FF               	movlw	255
 20172  17ED  0095               	movwf	21	;volatile
 20173                           
 20174                           ;pwm2.c: 78: CCPTMRSbits.C2TSEL = 0x1;
 20175  17EE  081F               	movf	31,w	;volatile
 20176  17EF  39F3               	andlw	-13
 20177  17F0  3804               	iorlw	4
 20178  17F1  009F               	movwf	31	;volatile
 20179  17F2  0008               	return
 20180  17F3                     __end_of_PWM2_Initialize:
 20181  17F3                     __ptext64:	
 20182 ;; *************** function _PWM3_Initialize *****************
 20183 ;; Defined at:
 20184 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 20185 ;; Parameters:    Size  Location     Type
 20186 ;;		None
 20187 ;; Auto vars:     Size  Location     Type
 20188 ;;		None
 20189 ;; Return value:  Size  Location     Type
 20190 ;;                  1    wreg      void 
 20191 ;; Registers used:
 20192 ;;		wreg, status,2, status,0
 20193 ;; Tracked objects:
 20194 ;;		On entry : 1F/5
 20195 ;;		On exit  : 1F/5
 20196 ;;		Unchanged: 0/0
 20197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20202 ;;Total ram usage:        0 bytes
 20203 ;; Hardware stack levels used:    1
 20204 ;; This function calls:
 20205 ;;		Nothing
 20206 ;; This function is called by:
 20207 ;;		_RGB_EncoderMode
 20208 ;; This function uses a non-reentrant model
 20209 ;;
 20210                           
 20211                           
 20212                           ;psect for function _PWM3_Initialize
 20213  17F3                     _PWM3_Initialize:
 20214  17F3                     i1l4698:	
 20215                           ;incstack = 0
 20216                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 20217                           
 20218                           
 20219                           ;pwm3.c: 69: CCP3CON = 0x8F;
 20220  17F3  308F               	movlw	143
 20221  17F4  0026               	movlb	6	; select bank6
 20222  17F5  0093               	movwf	19	;volatile
 20223                           
 20224                           ;pwm3.c: 72: CCPR3H = 0x03;
 20225  17F6  3003               	movlw	3
 20226  17F7  0092               	movwf	18	;volatile
 20227                           
 20228                           ;pwm3.c: 75: CCPR3L = 0xFF;
 20229  17F8  30FF               	movlw	255
 20230  17F9  0091               	movwf	17	;volatile
 20231                           
 20232                           ;pwm3.c: 78: CCPTMRSbits.C3TSEL = 0x1;
 20233  17FA  0025               	movlb	5	; select bank5
 20234  17FB  081F               	movf	31,w	;volatile
 20235  17FC  39CF               	andlw	-49
 20236  17FD  3810               	iorlw	16
 20237  17FE  009F               	movwf	31	;volatile
 20238  17FF  0008               	return
 20239  1800                     __end_of_PWM3_Initialize:
 20240                           
 20241                           	psect	swtext7
 20242  12AD                     __pswtext7:
 20243  12AD                     i1S8438:
 20244  12AD  3197  2F13         	ljmp	i1l1176
 20245  12AF  3197  2F30         	ljmp	i1l1184
 20246  12B1  3197  2F37         	ljmp	i1l1191
 20247  12B3  3197  2F3E         	ljmp	i1l1196
 20248                           
 20249                           	psect	text69
 20250  06EE                     __ptext69:	
 20251 ;; *************** function _Config_GP2 *****************
 20252 ;; Defined at:
 20253 ;;		line 243 in file "GPports.c"
 20254 ;; Parameters:    Size  Location     Type
 20255 ;;		None
 20256 ;; Auto vars:     Size  Location     Type
 20257 ;;		None
 20258 ;; Return value:  Size  Location     Type
 20259 ;;                  1    wreg      void 
 20260 ;; Registers used:
 20261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 20262 ;; Tracked objects:
 20263 ;;		On entry : 1F/0
 20264 ;;		On exit  : 1B/0
 20265 ;;		Unchanged: 0/0
 20266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20269 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20270 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20271 ;;Total ram usage:        2 bytes
 20272 ;; Hardware stack levels used:    1
 20273 ;; Hardware stack levels required when called:    2
 20274 ;; This function calls:
 20275 ;;		_PWM4_Initialize
 20276 ;;		i1_PWM_GP2
 20277 ;; This function is called by:
 20278 ;;		_RegisterWrite
 20279 ;; This function uses a non-reentrant model
 20280 ;;
 20281                           
 20282                           
 20283                           ;psect for function _Config_GP2
 20284  06EE                     _Config_GP2:
 20285                           
 20286                           ;GPports.c: 245: CCP4CON = 0;
 20287                           
 20288                           ;incstack = 0
 20289                           ; Regs used in _Config_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 20290  06EE  0026               	movlb	6	; select bank6
 20291  06EF  0197               	clrf	23	;volatile
 20292                           
 20293                           ;GPports.c: 246: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 20294  06F0  3055               	movlw	85
 20295  06F1  003C               	movlb	28	; select bank28
 20296  06F2  008F               	movwf	15	;volsfr
 20297  06F3  30AA               	movlw	170
 20298  06F4  008F               	movwf	15	;volsfr
 20299  06F5  100F               	bcf	15,0	;volsfr
 20300                           
 20301                           ;GPports.c: 247: RC6PPSbits.RC6PPS = 0x00;
 20302  06F6  30E0               	movlw	-32
 20303  06F7  003D               	movlb	29	; select bank29
 20304  06F8  05A6               	andwf	38,f	;volatile
 20305                           
 20306                           ;GPports.c: 248: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 20307  06F9  3055               	movlw	85
 20308  06FA  003C               	movlb	28	; select bank28
 20309  06FB  008F               	movwf	15	;volsfr
 20310  06FC  30AA               	movlw	170
 20311  06FD  008F               	movwf	15	;volsfr
 20312  06FE  140F               	bsf	15,0	;volsfr
 20313                           
 20314                           ;GPports.c: 250: switch (GP2CONF & 0x03) {
 20315  06FF  2F30               	goto	i1l5096
 20316  0700                     i1l1139:	
 20317                           ;GPports.c: 252: do { ANSELCbits.ANSC6 = 0; } while(0);
 20318                           
 20319  0700  0023               	movlb	3	; select bank3
 20320  0701  130E               	bcf	14,6	;volatile
 20321                           
 20322                           ;GPports.c: 253: do { LATCbits.LATC6 = 1; } while(0);
 20323  0702  0022               	movlb	2	; select bank2
 20324  0703  170E               	bsf	14,6	;volatile
 20325                           
 20326                           ;GPports.c: 254: do { TRISCbits.TRISC6 = 0; } while(0);
 20327  0704  0021               	movlb	1	; select bank1
 20328  0705  130E               	bcf	14,6	;volatile
 20329                           
 20330                           ;GPports.c: 255: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 20331  0706  3055               	movlw	85
 20332  0707  003C               	movlb	28	; select bank28
 20333  0708  008F               	movwf	15	;volsfr
 20334  0709  30AA               	movlw	170
 20335  070A  008F               	movwf	15	;volsfr
 20336  070B  100F               	bcf	15,0	;volsfr
 20337                           
 20338                           ;GPports.c: 256: RC6PPSbits.RC6PPS = 0x0F;
 20339  070C  003D               	movlb	29	; select bank29
 20340  070D  0826               	movf	38,w	;volatile
 20341  070E  39E0               	andlw	-32
 20342  070F  380F               	iorlw	15
 20343  0710  00A6               	movwf	38	;volatile
 20344                           
 20345                           ;GPports.c: 257: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 20346  0711  3055               	movlw	85
 20347  0712  003C               	movlb	28	; select bank28
 20348  0713  008F               	movwf	15	;volsfr
 20349  0714  30AA               	movlw	170
 20350  0715  008F               	movwf	15	;volsfr
 20351  0716  140F               	bsf	15,0	;volsfr
 20352                           
 20353                           ;GPports.c: 258: PWM4_Initialize();
 20354  0717  275D  3186         	fcall	_PWM4_Initialize
 20355                           
 20356                           ;GPports.c: 259: PWM_GP2(0);
 20357  0719  3000               	movlw	0
 20358  071A  276A  3186         	fcall	i1_PWM_GP2
 20359                           
 20360                           ;GPports.c: 260: break;
 20361  071C  2F4A               	goto	i1l5100
 20362  071D                     i1l1147:	
 20363                           ;GPports.c: 263: do { ANSELCbits.ANSC6 = 0; } while(0);
 20364                           
 20365  071D  0023               	movlb	3	; select bank3
 20366  071E  130E               	bcf	14,6	;volatile
 20367                           
 20368                           ;GPports.c: 264: do { TRISCbits.TRISC6 = 0; } while(0);
 20369  071F  0021               	movlb	1	; select bank1
 20370  0720  130E               	bcf	14,6	;volatile
 20371                           
 20372                           ;GPports.c: 265: do { ODCONCbits.ODCC6 = 0; } while(0);
 20373  0721  0025               	movlb	5	; select bank5
 20374  0722  130E               	bcf	14,6	;volatile
 20375  0723  2F4A               	goto	i1l5100
 20376  0724                     i1l1154:	
 20377                           ;GPports.c: 269: do { TRISCbits.TRISC6 = 1; } while(0);
 20378                           
 20379  0724  0021               	movlb	1	; select bank1
 20380  0725  170E               	bsf	14,6	;volatile
 20381                           
 20382                           ;GPports.c: 270: do { ANSELCbits.ANSC6 = 1; } while(0);
 20383  0726  0023               	movlb	3	; select bank3
 20384  0727  170E               	bsf	14,6	;volatile
 20385                           
 20386                           ;GPports.c: 271: PMD2bits.ADCMD = 0;
 20387  0728  0032               	movlb	18	; select bank18
 20388  0729  1293               	bcf	19,5	;volatile
 20389                           
 20390                           ;GPports.c: 272: break;
 20391  072A  2F4A               	goto	i1l5100
 20392  072B                     i1l1159:	
 20393                           ;GPports.c: 275: do { ANSELCbits.ANSC6 = 0; } while(0);
 20394                           
 20395  072B  0023               	movlb	3	; select bank3
 20396  072C  130E               	bcf	14,6	;volatile
 20397                           
 20398                           ;GPports.c: 276: do { TRISCbits.TRISC6 = 1; } while(0);
 20399  072D  0021               	movlb	1	; select bank1
 20400  072E  170E               	bsf	14,6	;volatile
 20401  072F  2F4A               	goto	i1l5100
 20402  0730                     i1l5096:
 20403  0730  0020               	movlb	0	; select bank0
 20404  0731  0847               	movf	_GP2CONF,w	;volatile
 20405  0732  3903               	andlw	3
 20406  0733  00CC               	movwf	??_Config_GP2
 20407  0734  01CD               	clrf	??_Config_GP2+1
 20408                           
 20409                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20410                           ; Switch size 1, requested type "speed"
 20411                           ; Number of cases is 1, Range of values is 0 to 0
 20412                           ; switch strategies available:
 20413                           ; Name         Instructions Cycles
 20414                           ; simple_byte            4     3 (average)
 20415                           ; direct_byte            8     6 (fixed)
 20416                           ; jumptable            260     6 (fixed)
 20417                           ;	Chosen strategy is simple_byte
 20418  0735  084D               	movf	??_Config_GP2+1,w
 20419  0736  3A00               	xorlw	0	; case 0
 20420  0737  1903               	skipnz
 20421  0738  2F3A               	goto	i1l8442
 20422  0739  2F4A               	goto	i1l5100
 20423  073A                     i1l8442:
 20424                           
 20425                           ; Switch size 1, requested type "speed"
 20426                           ; Number of cases is 4, Range of values is 0 to 3
 20427                           ; switch strategies available:
 20428                           ; Name         Instructions Cycles
 20429                           ; direct_byte           14     6 (fixed)
 20430                           ; simple_byte           13     7 (average)
 20431                           ; jumptable            260     6 (fixed)
 20432                           ;	Chosen strategy is direct_byte
 20433  073A  084C               	movf	??_Config_GP2,w
 20434  073B  0084               	movwf	4
 20435  073C  3004               	movlw	4
 20436  073D  0204               	subwf	4,w
 20437  073E  1803               	skipnc
 20438  073F  2F4A               	goto	i1l5100
 20439  0740  3192               	movlp	high i1S8444
 20440  0741  3504               	lslf	4,w
 20441  0742  3EB5               	addlw	low i1S8444
 20442  0743  0082               	movwf	2
 20443  0744                     i1l1165:	
 20444                           ;GPports.c: 282: do { WPUCbits.WPUC6 = 0; } while(0);
 20445                           
 20446  0744  0024               	movlb	4	; select bank4
 20447  0745  130E               	bcf	14,6	;volatile
 20448  0746  0008               	return
 20449  0747                     i1l1169:	
 20450                           ;GPports.c: 285: do { WPUCbits.WPUC6 = 1; } while(0);
 20451                           
 20452  0747  0024               	movlb	4	; select bank4
 20453  0748  170E               	bsf	14,6	;volatile
 20454  0749  0008               	return
 20455  074A                     i1l5100:
 20456  074A  0020               	movlb	0	; select bank0
 20457  074B  0847               	movf	_GP2CONF,w	;volatile
 20458  074C  3904               	andlw	4
 20459  074D  00CC               	movwf	??_Config_GP2
 20460  074E  01CD               	clrf	??_Config_GP2+1
 20461                           
 20462                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20463                           ; Switch size 1, requested type "speed"
 20464                           ; Number of cases is 1, Range of values is 0 to 0
 20465                           ; switch strategies available:
 20466                           ; Name         Instructions Cycles
 20467                           ; simple_byte            4     3 (average)
 20468                           ; direct_byte            8     6 (fixed)
 20469                           ; jumptable            260     6 (fixed)
 20470                           ;	Chosen strategy is simple_byte
 20471  074F  084D               	movf	??_Config_GP2+1,w
 20472  0750  3A00               	xorlw	0	; case 0
 20473  0751  1903               	skipnz
 20474  0752  2F54               	goto	i1l8446
 20475  0753  2F5C               	goto	i1l1171
 20476  0754                     i1l8446:
 20477                           
 20478                           ; Switch size 1, requested type "speed"
 20479                           ; Number of cases is 2, Range of values is 0 to 4
 20480                           ; switch strategies available:
 20481                           ; Name         Instructions Cycles
 20482                           ; simple_byte            7     4 (average)
 20483                           ; direct_byte           16     6 (fixed)
 20484                           ; jumptable            260     6 (fixed)
 20485                           ;	Chosen strategy is simple_byte
 20486  0754  084C               	movf	??_Config_GP2,w
 20487  0755  3A00               	xorlw	0	; case 0
 20488  0756  1903               	skipnz
 20489  0757  2F44               	goto	i1l1165
 20490  0758  3A04               	xorlw	4	; case 4
 20491  0759  1903               	skipnz
 20492  075A  2F47               	goto	i1l1169
 20493  075B  2F5C               	goto	i1l1171
 20494  075C                     i1l1171:
 20495  075C  0008               	return
 20496  075D                     __end_of_Config_GP2:
 20497  075D                     __ptext71:	
 20498 ;; *************** function _PWM4_Initialize *****************
 20499 ;; Defined at:
 20500 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 20501 ;; Parameters:    Size  Location     Type
 20502 ;;		None
 20503 ;; Auto vars:     Size  Location     Type
 20504 ;;		None
 20505 ;; Return value:  Size  Location     Type
 20506 ;;                  1    wreg      void 
 20507 ;; Registers used:
 20508 ;;		wreg, status,2, status,0
 20509 ;; Tracked objects:
 20510 ;;		On entry : 1F/1C
 20511 ;;		On exit  : 1F/5
 20512 ;;		Unchanged: 0/0
 20513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20518 ;;Total ram usage:        0 bytes
 20519 ;; Hardware stack levels used:    1
 20520 ;; This function calls:
 20521 ;;		Nothing
 20522 ;; This function is called by:
 20523 ;;		_Config_GP2
 20524 ;; This function uses a non-reentrant model
 20525 ;;
 20526                           
 20527                           
 20528                           ;psect for function _PWM4_Initialize
 20529  075D                     _PWM4_Initialize:
 20530                           
 20531                           ;pwm4.c: 69: CCP4CON = 0x8F;
 20532                           
 20533                           ;incstack = 0
 20534                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 20535  075D  308F               	movlw	143
 20536  075E  0026               	movlb	6	; select bank6
 20537  075F  0097               	movwf	23	;volatile
 20538                           
 20539                           ;pwm4.c: 72: CCPR4H = 0x03;
 20540  0760  3003               	movlw	3
 20541  0761  0096               	movwf	22	;volatile
 20542                           
 20543                           ;pwm4.c: 75: CCPR4L = 0xFF;
 20544  0762  30FF               	movlw	255
 20545  0763  0095               	movwf	21	;volatile
 20546                           
 20547                           ;pwm4.c: 78: CCPTMRSbits.C4TSEL = 0x1;
 20548  0764  0025               	movlb	5	; select bank5
 20549  0765  081F               	movf	31,w	;volatile
 20550  0766  393F               	andlw	-193
 20551  0767  3840               	iorlw	64
 20552  0768  009F               	movwf	31	;volatile
 20553  0769  0008               	return
 20554  076A                     __end_of_PWM4_Initialize:
 20555  076A                     __ptext70:	
 20556 ;; *************** function i1_PWM_GP2 *****************
 20557 ;; Defined at:
 20558 ;;		line 64 in file "PWM.c"
 20559 ;; Parameters:    Size  Location     Type
 20560 ;;  duty            1    wreg     unsigned char 
 20561 ;; Auto vars:     Size  Location     Type
 20562 ;;  duty            1   12[COMMON] unsigned char 
 20563 ;; Return value:  Size  Location     Type
 20564 ;;                  1    wreg      void 
 20565 ;; Registers used:
 20566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 20567 ;; Tracked objects:
 20568 ;;		On entry : 1F/5
 20569 ;;		On exit  : 1F/6
 20570 ;;		Unchanged: 0/0
 20571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20573 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20574 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20575 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20576 ;;Total ram usage:        7 bytes
 20577 ;; Hardware stack levels used:    1
 20578 ;; Hardware stack levels required when called:    1
 20579 ;; This function calls:
 20580 ;;		i1___wmul
 20581 ;; This function is called by:
 20582 ;;		_Config_GP2
 20583 ;; This function uses a non-reentrant model
 20584 ;;
 20585                           
 20586                           
 20587                           ;psect for function i1_PWM_GP2
 20588  076A                     i1_PWM_GP2:
 20589                           
 20590                           ;incstack = 0
 20591                           ; Regs used in i1_PWM_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 20592                           ;i1PWM_GP2@duty stored from wreg
 20593  076A  00FC               	movwf	i1PWM_GP2@duty
 20594                           
 20595                           ;PWM.c: 66: if (duty == 0) {
 20596  076B  087C               	movf	i1PWM_GP2@duty,w
 20597  076C  1D03               	btfss	3,2
 20598  076D  2F82               	goto	i1l4866
 20599                           
 20600                           ;PWM.c: 68: do { LATCbits.LATC6 = 1; } while(0);
 20601  076E  0022               	movlb	2	; select bank2
 20602  076F  170E               	bsf	14,6	;volatile
 20603                           
 20604                           ;PWM.c: 69: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 20605  0770  3055               	movlw	85
 20606  0771  003C               	movlb	28	; select bank28
 20607  0772  008F               	movwf	15	;volsfr
 20608  0773  30AA               	movlw	170
 20609  0774  008F               	movwf	15	;volsfr
 20610  0775  100F               	bcf	15,0	;volsfr
 20611                           
 20612                           ;PWM.c: 70: RC6PPSbits.RC6PPS = 0x00;
 20613  0776  30E0               	movlw	-32
 20614  0777  003D               	movlb	29	; select bank29
 20615  0778  05A6               	andwf	38,f	;volatile
 20616                           
 20617                           ;PWM.c: 71: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 20618  0779  3055               	movlw	85
 20619  077A  003C               	movlb	28	; select bank28
 20620  077B  008F               	movwf	15	;volsfr
 20621  077C  30AA               	movlw	170
 20622  077D  008F               	movwf	15	;volsfr
 20623  077E  140F               	bsf	15,0	;volsfr
 20624                           
 20625                           ;PWM.c: 72: CCP4CON = 0;
 20626  077F  0026               	movlb	6	; select bank6
 20627  0780  0197               	clrf	23	;volatile
 20628  0781  0008               	return
 20629  0782                     i1l4866:
 20630                           
 20631                           ;PWM.c: 74: };PWM.c: 75: if (CCP4CON == 0) {
 20632  0782  0026               	movlb	6	; select bank6
 20633  0783  0817               	movf	23,w	;volatile
 20634  0784  1D03               	btfss	3,2
 20635  0785  2F9A               	goto	i1l1503
 20636                           
 20637                           ;PWM.c: 76: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 20638  0786  3055               	movlw	85
 20639  0787  003C               	movlb	28	; select bank28
 20640  0788  008F               	movwf	15	;volsfr
 20641  0789  30AA               	movlw	170
 20642  078A  008F               	movwf	15	;volsfr
 20643  078B  100F               	bcf	15,0	;volsfr
 20644                           
 20645                           ;PWM.c: 77: RC6PPSbits.RC6PPS = 0x0F;
 20646  078C  003D               	movlb	29	; select bank29
 20647  078D  0826               	movf	38,w	;volatile
 20648  078E  39E0               	andlw	-32
 20649  078F  380F               	iorlw	15
 20650  0790  00A6               	movwf	38	;volatile
 20651                           
 20652                           ;PWM.c: 78: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 20653  0791  3055               	movlw	85
 20654  0792  003C               	movlb	28	; select bank28
 20655  0793  008F               	movwf	15	;volsfr
 20656  0794  30AA               	movlw	170
 20657  0795  008F               	movwf	15	;volsfr
 20658  0796  140F               	bsf	15,0	;volsfr
 20659                           
 20660                           ;PWM.c: 79: CCP4CON = 0x8F;
 20661  0797  308F               	movlw	143
 20662  0798  0026               	movlb	6	; select bank6
 20663  0799  0097               	movwf	23	;volatile
 20664  079A                     i1l1503:
 20665                           
 20666                           ;PWM.c: 80: };PWM.c: 81: if (GAMMAGP2 == 0) {
 20667  079A  0020               	movlb	0	; select bank0
 20668  079B  083D               	movf	_GAMMAGP2,w	;volatile
 20669  079C  1D03               	btfss	3,2
 20670  079D  2FAB               	goto	i1l4884
 20671                           
 20672                           ;PWM.c: 83: CCPR4 = (uint16_t) (0xff - duty) << 2;
 20673  079E  097C               	comf	i1PWM_GP2@duty,w
 20674  079F  00F6               	movwf	??i1_PWM_GP2
 20675  07A0  01F7               	clrf	??i1_PWM_GP2+1
 20676  07A1  35F6               	lslf	??i1_PWM_GP2,f
 20677  07A2  0DF7               	rlf	??i1_PWM_GP2+1,f
 20678  07A3  35F6               	lslf	??i1_PWM_GP2,f
 20679  07A4  0DF7               	rlf	??i1_PWM_GP2+1,f
 20680  07A5  0876               	movf	??i1_PWM_GP2,w
 20681  07A6  0026               	movlb	6	; select bank6
 20682  07A7  0095               	movwf	21	;volatile
 20683  07A8  0877               	movf	??i1_PWM_GP2+1,w
 20684  07A9  0096               	movwf	22	;volatile
 20685                           
 20686                           ;PWM.c: 85: } else {
 20687  07AA  0008               	return
 20688  07AB                     i1l4884:
 20689                           
 20690                           ;PWM.c: 86: if (duty > 100)
 20691  07AB  3065               	movlw	101
 20692  07AC  027C               	subwf	i1PWM_GP2@duty,w
 20693  07AD  1C03               	skipc
 20694  07AE  2FB1               	goto	i1l4888
 20695                           
 20696                           ;PWM.c: 87: duty = 100;
 20697  07AF  3064               	movlw	100
 20698  07B0  00FC               	movwf	i1PWM_GP2@duty
 20699  07B1                     i1l4888:
 20700                           
 20701                           ;PWM.c: 88: CCPR4 = (uint16_t) gamma_table[GAMMAGP2 - 1U][(duty - 1U)];
 20702  07B1  087C               	movf	i1PWM_GP2@duty,w
 20703  07B2  00F6               	movwf	??i1_PWM_GP2
 20704  07B3  01F7               	clrf	??i1_PWM_GP2+1
 20705  07B4  35F6               	lslf	??i1_PWM_GP2,f
 20706  07B5  0DF7               	rlf	??i1_PWM_GP2+1,f
 20707  07B6  083D               	movf	_GAMMAGP2,w	;volatile
 20708  07B7  00F0               	movwf	i1___wmul@multiplier
 20709  07B8  30C8               	movlw	200
 20710  07B9  01F1               	clrf	i1___wmul@multiplier+1
 20711  07BA  00F2               	movwf	i1___wmul@multiplicand
 20712  07BB  01F3               	clrf	i1___wmul@multiplicand+1
 20713  07BC  318D  254E         	fcall	i1___wmul
 20714  07BE  30AC               	movlw	low ((_gamma_table| (0+32768)+65334))
 20715  07BF  00F8               	movwf	??i1_PWM_GP2+2
 20716  07C0  3080               	movlw	high ((_gamma_table| (0+32768)+65334))
 20717  07C1  00F9               	movwf	??i1_PWM_GP2+3
 20718  07C2  0870               	movf	?i1___wmul,w
 20719  07C3  0778               	addwf	??i1_PWM_GP2+2,w
 20720  07C4  00FA               	movwf	??i1_PWM_GP2+4
 20721  07C5  0871               	movf	?i1___wmul+1,w
 20722  07C6  3D79               	addwfc	??i1_PWM_GP2+3,w
 20723  07C7  00FB               	movwf	??i1_PWM_GP2+5
 20724  07C8  087A               	movf	??i1_PWM_GP2+4,w
 20725  07C9  0776               	addwf	??i1_PWM_GP2,w
 20726  07CA  0084               	movwf	4
 20727  07CB  087B               	movf	??i1_PWM_GP2+5,w
 20728  07CC  3D77               	addwfc	??i1_PWM_GP2+1,w
 20729  07CD  0085               	movwf	5
 20730  07CE  3F00               	moviw [0]fsr0
 20731  07CF  0026               	movlb	6	; select bank6
 20732  07D0  0095               	movwf	21	;volatile
 20733  07D1  3F01               	moviw [1]fsr0
 20734  07D2  0096               	movwf	22	;volatile
 20735  07D3  0008               	return
 20736  07D4                     __end_ofi1_PWM_GP2:
 20737                           
 20738                           	psect	swtext8
 20739  12B5                     __pswtext8:
 20740  12B5                     i1S8444:
 20741  12B5  3187  2F00         	ljmp	i1l1139
 20742  12B7  3187  2F1D         	ljmp	i1l1147
 20743  12B9  3187  2F24         	ljmp	i1l1154
 20744  12BB  3187  2F2B         	ljmp	i1l1159
 20745                           
 20746                           	psect	swtext9
 20747  12BD                     __pswtext9:
 20748  12BD                     i1S8450:
 20749  12BD  318C  2C58         	ljmp	i1l1102
 20750  12BF  318C  2C75         	ljmp	i1l1110
 20751  12C1  318C  2C7C         	ljmp	i1l1117
 20752  12C3  318C  2C83         	ljmp	i1l1122
 20753                           
 20754                           	psect	swtext10
 20755  1000                     __pswtext10:
 20756  1000                     i1S8454:
 20757  1000  3196  2E07         	ljmp	i1l5600
 20758  1002  3196  2E0A         	ljmp	i1l5602
 20759  1004  3196  2E0D         	ljmp	i1l5604
 20760  1006  3196  2E10         	ljmp	i1l5606
 20761  1008  3196  2E18         	ljmp	i1l5612
 20762  100A  3196  2E1A         	ljmp	i1l5614
 20763  100C  3196  2E21         	ljmp	i1l5620
 20764  100E  3196  2E25         	ljmp	i1l5624
 20765  1010  3196  2E27         	ljmp	i1l5626
 20766  1012  3196  2E2D         	ljmp	i1l5632
 20767  1014  3196  2E35         	ljmp	i1l5638
 20768  1016  3196  2E3E         	ljmp	i1l5644
 20769  1018  3196  2E48         	ljmp	i1l5650
 20770  101A  3196  2E4B         	ljmp	i1l5652
 20771  101C  3196  2E4E         	ljmp	i1l5654
 20772  101E  3196  2E51         	ljmp	i1l5656
 20773  1020  3196  2E54         	ljmp	i1l5658
 20774  1022  3196  2E57         	ljmp	i1l5660
 20775  1024  3196  2E5A         	ljmp	i1l5662
 20776  1026  3196  2E5D         	ljmp	i1l5664
 20777  1028  3196  2E60         	ljmp	i1l5666
 20778  102A  3196  2E63         	ljmp	i1l5668
 20779  102C  3196  2E66         	ljmp	i1l5670
 20780  102E  3196  2E69         	ljmp	i1l5672
 20781  1030  3196  2E6C         	ljmp	i1l5674
 20782  1032  3196  2E6F         	ljmp	i1l5676
 20783  1034  3196  2E72         	ljmp	i1l5678
 20784  1036  3196  2E75         	ljmp	i1l5680
 20785  1038  3196  2E78         	ljmp	i1l5682
 20786  103A  3196  2E7B         	ljmp	i1l5684
 20787  103C  3196  2E81         	ljmp	i1l5690
 20788  103E  3196  2E83         	ljmp	i1l5692
 20789  1040  3196  2E85         	ljmp	i1l5694
 20790  1042  3196  2E87         	ljmp	i1l5696
 20791  1044  3196  2E16         	ljmp	i1l5610
 20792  1046  3196  2E16         	ljmp	i1l5610
 20793  1048  3196  2E16         	ljmp	i1l5610
 20794  104A  3196  2E16         	ljmp	i1l5610
 20795  104C  3196  2E16         	ljmp	i1l5610
 20796  104E  3196  2E8A         	ljmp	i1l5698
 20797  1050  3196  2E8D         	ljmp	i1l5700
 20798  1052  3196  2E90         	ljmp	i1l5702
 20799  1054  3196  2E93         	ljmp	i1l5704
 20800  1056  3196  2E96         	ljmp	i1l5706
 20801  1058  3196  2E8A         	ljmp	i1l5698
 20802  105A  3196  2E16         	ljmp	i1l5610
 20803  105C  3196  2E16         	ljmp	i1l5610
 20804  105E  3196  2E16         	ljmp	i1l5610
 20805  1060  3196  2E99         	ljmp	i1l5710
 20806  1062  3196  2E16         	ljmp	i1l5610
 20807  1064  3196  2E16         	ljmp	i1l5610
 20808  1066  3196  2E16         	ljmp	i1l5610
 20809  1068  3196  2E16         	ljmp	i1l5610
 20810  106A  3196  2E16         	ljmp	i1l5610
 20811  106C  3196  2E16         	ljmp	i1l5610
 20812  106E  3196  2E16         	ljmp	i1l5610
 20813  1070  3196  2E16         	ljmp	i1l5610
 20814  1072  3196  2E16         	ljmp	i1l5610
 20815  1074  3196  2E16         	ljmp	i1l5610
 20816  1076  3196  2E16         	ljmp	i1l5610
 20817  1078  3196  2E16         	ljmp	i1l5610
 20818  107A  3196  2E16         	ljmp	i1l5610
 20819  107C  3196  2E16         	ljmp	i1l5610
 20820  107E  3196  2E16         	ljmp	i1l5610
 20821  1080  3196  2E16         	ljmp	i1l5610
 20822  1082  3196  2E16         	ljmp	i1l5610
 20823  1084  3196  2E16         	ljmp	i1l5610
 20824  1086  3196  2E16         	ljmp	i1l5610
 20825  1088  3196  2E16         	ljmp	i1l5610
 20826  108A  3196  2E16         	ljmp	i1l5610
 20827  108C  3196  2E16         	ljmp	i1l5610
 20828  108E  3196  2E16         	ljmp	i1l5610
 20829  1090  3196  2E16         	ljmp	i1l5610
 20830  1092  3196  2E16         	ljmp	i1l5610
 20831  1094  3196  2E16         	ljmp	i1l5610
 20832  1096  3196  2E16         	ljmp	i1l5610
 20833  1098  3196  2E16         	ljmp	i1l5610
 20834  109A  3196  2E16         	ljmp	i1l5610
 20835  109C  3196  2E16         	ljmp	i1l5610
 20836  109E  3196  2E16         	ljmp	i1l5610
 20837  10A0  3196  2E16         	ljmp	i1l5610
 20838  10A2  3196  2E16         	ljmp	i1l5610
 20839  10A4  3196  2E16         	ljmp	i1l5610
 20840  10A6  3196  2E16         	ljmp	i1l5610
 20841  10A8  3196  2E16         	ljmp	i1l5610
 20842  10AA  3196  2E16         	ljmp	i1l5610
 20843  10AC  3196  2E16         	ljmp	i1l5610
 20844  10AE  3196  2E16         	ljmp	i1l5610
 20845  10B0  3196  2E16         	ljmp	i1l5610
 20846  10B2  3196  2E16         	ljmp	i1l5610
 20847  10B4  3196  2E16         	ljmp	i1l5610
 20848  10B6  3196  2E16         	ljmp	i1l5610
 20849  10B8  3196  2E16         	ljmp	i1l5610
 20850  10BA  3196  2E16         	ljmp	i1l5610
 20851  10BC  3196  2E16         	ljmp	i1l5610
 20852  10BE  3196  2E16         	ljmp	i1l5610
 20853  10C0  3196  2E16         	ljmp	i1l5610
 20854  10C2  3196  2E16         	ljmp	i1l5610
 20855  10C4  3196  2E16         	ljmp	i1l5610
 20856  10C6  3196  2E16         	ljmp	i1l5610
 20857  10C8  3196  2E16         	ljmp	i1l5610
 20858  10CA  3196  2E16         	ljmp	i1l5610
 20859  10CC  3196  2E16         	ljmp	i1l5610
 20860  10CE  3196  2E16         	ljmp	i1l5610
 20861  10D0  3196  2E16         	ljmp	i1l5610
 20862  10D2  3196  2E16         	ljmp	i1l5610
 20863  10D4  3196  2E16         	ljmp	i1l5610
 20864  10D6  3196  2E16         	ljmp	i1l5610
 20865  10D8  3196  2E16         	ljmp	i1l5610
 20866  10DA  3196  2E16         	ljmp	i1l5610
 20867  10DC  3196  2E16         	ljmp	i1l5610
 20868  10DE  3196  2E16         	ljmp	i1l5610
 20869  10E0  3196  2E9B         	ljmp	i1l5712
 20870  10E2  3196  2E9D         	ljmp	i1l5714
 20871                           
 20872                           	psect	text78
 20873  0D84                     __ptext78:	
 20874 ;; *************** function _CLC2_ISR *****************
 20875 ;; Defined at:
 20876 ;;		line 91 in file "mcc_generated_files/clc2.c"
 20877 ;; Parameters:    Size  Location     Type
 20878 ;;		None
 20879 ;; Auto vars:     Size  Location     Type
 20880 ;;		None
 20881 ;; Return value:  Size  Location     Type
 20882 ;;                  1    wreg      void 
 20883 ;; Registers used:
 20884 ;;		wreg, status,2, status,0, pclath, cstack
 20885 ;; Tracked objects:
 20886 ;;		On entry : 1F/0
 20887 ;;		On exit  : 1F/0
 20888 ;;		Unchanged: 0/0
 20889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20894 ;;Total ram usage:        0 bytes
 20895 ;; Hardware stack levels used:    1
 20896 ;; Hardware stack levels required when called:    3
 20897 ;; This function calls:
 20898 ;;		_Encoder_AB_Interrupt
 20899 ;; This function is called by:
 20900 ;;		_INTERRUPT_InterruptManager
 20901 ;; This function uses a non-reentrant model
 20902 ;;
 20903                           
 20904                           
 20905                           ;psect for function _CLC2_ISR
 20906  0D84                     _CLC2_ISR:
 20907                           
 20908                           ;clc2.c: 94: Encoder_AB_Interrupt();
 20909                           
 20910                           ;incstack = 0
 20911                           ; Regs used in _CLC2_ISR: [wreg+status,2+status,0+pclath+cstack]
 20912  0D84  258C               	fcall	_Encoder_AB_Interrupt
 20913                           
 20914                           ;clc2.c: 95: PIR3bits.CLC2IF = 0;
 20915  0D85  0020               	movlb	0	; select bank0
 20916  0D86  1093               	bcf	19,1	;volatile
 20917  0D87  0008               	return
 20918  0D88                     __end_of_CLC2_ISR:
 20919  0D88                     __ptext79:	
 20920 ;; *************** function _CLC1_ISR *****************
 20921 ;; Defined at:
 20922 ;;		line 91 in file "mcc_generated_files/clc1.c"
 20923 ;; Parameters:    Size  Location     Type
 20924 ;;		None
 20925 ;; Auto vars:     Size  Location     Type
 20926 ;;		None
 20927 ;; Return value:  Size  Location     Type
 20928 ;;                  1    wreg      void 
 20929 ;; Registers used:
 20930 ;;		wreg, status,2, status,0, pclath, cstack
 20931 ;; Tracked objects:
 20932 ;;		On entry : 1F/0
 20933 ;;		On exit  : 1F/0
 20934 ;;		Unchanged: 0/0
 20935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20940 ;;Total ram usage:        0 bytes
 20941 ;; Hardware stack levels used:    1
 20942 ;; Hardware stack levels required when called:    3
 20943 ;; This function calls:
 20944 ;;		_Encoder_AB_Interrupt
 20945 ;; This function is called by:
 20946 ;;		_INTERRUPT_InterruptManager
 20947 ;; This function uses a non-reentrant model
 20948 ;;
 20949                           
 20950                           
 20951                           ;psect for function _CLC1_ISR
 20952  0D88                     _CLC1_ISR:
 20953                           
 20954                           ;clc1.c: 93: Encoder_AB_Interrupt();
 20955                           
 20956                           ;incstack = 0
 20957                           ; Regs used in _CLC1_ISR: [wreg+status,2+status,0+pclath+cstack]
 20958  0D88  258C               	fcall	_Encoder_AB_Interrupt
 20959                           
 20960                           ;clc1.c: 95: PIR3bits.CLC1IF = 0;
 20961  0D89  0020               	movlb	0	; select bank0
 20962  0D8A  1013               	bcf	19,0	;volatile
 20963  0D8B  0008               	return
 20964  0D8C                     __end_of_CLC1_ISR:
 20965  0D8C                     __ptext80:	
 20966 ;; *************** function _Encoder_AB_Interrupt *****************
 20967 ;; Defined at:
 20968 ;;		line 65 in file "Encoder.c"
 20969 ;; Parameters:    Size  Location     Type
 20970 ;;		None
 20971 ;; Auto vars:     Size  Location     Type
 20972 ;;		None
 20973 ;; Return value:  Size  Location     Type
 20974 ;;                  1    wreg      void 
 20975 ;; Registers used:
 20976 ;;		wreg, status,2, status,0, pclath, cstack
 20977 ;; Tracked objects:
 20978 ;;		On entry : 1F/0
 20979 ;;		On exit  : 1C/0
 20980 ;;		Unchanged: 0/0
 20981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20984 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20985 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20986 ;;Total ram usage:        4 bytes
 20987 ;; Hardware stack levels used:    1
 20988 ;; Hardware stack levels required when called:    2
 20989 ;; This function calls:
 20990 ;;		___fladd
 20991 ;;		___flge
 20992 ;;		___flsub
 20993 ;;		i1_EncoderStatusUpdate
 20994 ;;		i1_SetInterrupt
 20995 ;; This function is called by:
 20996 ;;		_CLC2_ISR
 20997 ;;		_CLC1_ISR
 20998 ;; This function uses a non-reentrant model
 20999 ;;
 21000                           
 21001                           
 21002                           ;psect for function _Encoder_AB_Interrupt
 21003  0D8C                     _Encoder_AB_Interrupt:
 21004                           
 21005                           ;Encoder.c: 67: enc_status = (enc_status << 2);
 21006                           
 21007                           ;incstack = 0
 21008                           ; Regs used in _Encoder_AB_Interrupt: [wreg+status,2+status,0+pclath+cstack]
 21009  0D8C  0830               	movf	_enc_status,w	;volatile
 21010  0D8D  0709               	addwf	9,w
 21011  0D8E  0709               	addwf	9,w
 21012  0D8F  00B0               	movwf	_enc_status	;volatile
 21013                           
 21014                           ;Encoder.c: 68: enc_status = enc_status | ((uint8_t) PORTC & 0x03);
 21015  0D90  080E               	movf	14,w	;volatile
 21016  0D91  3903               	andlw	3
 21017  0D92  04B0               	iorwf	_enc_status,f	;volatile
 21018                           
 21019                           ;Encoder.c: 69: enc_status = enc_status & 0x0f;
 21020  0D93  300F               	movlw	15
 21021  0D94  05B0               	andwf	_enc_status,f	;volatile
 21022                           
 21023                           ;Encoder.c: 71: if ((enc_status == X1_p) || (enc_status == X2_p)) {
 21024  0D95  0830               	movf	_enc_status,w	;volatile
 21025  0D96  0021               	movlb	1	; select bank1
 21026  0D97  063A               	xorwf	_X1_p^(0+128),w	;volatile
 21027  0D98  1903               	skipnz
 21028  0D99  2DA0               	goto	i1l6216
 21029  0D9A  0020               	movlb	0	; select bank0
 21030  0D9B  0830               	movf	_enc_status,w	;volatile
 21031  0D9C  0021               	movlb	1	; select bank1
 21032  0D9D  0638               	xorwf	_X2_p^(0+128),w	;volatile
 21033  0D9E  1D03               	skipz
 21034  0D9F  2E06               	goto	i1l6242
 21035  0DA0                     i1l6216:
 21036                           
 21037                           ;Encoder.c: 73: if (C_DTYPE == 0) {
 21038  0DA0  083C               	movf	_C_DTYPE^(0+128),w	;volatile
 21039  0DA1  1D03               	btfss	3,2
 21040  0DA2  2DCD               	goto	i1l6232
 21041                           
 21042                           ;Encoder.c: 74: CVAL.val = CVAL.val + ISTEP.val;
 21043  0DA3  0020               	movlb	0	; select bank0
 21044  0DA4  082C               	movf	_CVAL,w	;volatile
 21045  0DA5  0720               	addwf	_ISTEP,w	;volatile
 21046  0DA6  00DC               	movwf	??_Encoder_AB_Interrupt
 21047  0DA7  082D               	movf	_CVAL+1,w	;volatile
 21048  0DA8  3D21               	addwfc	_ISTEP+1,w	;volatile
 21049  0DA9  00DD               	movwf	??_Encoder_AB_Interrupt+1
 21050  0DAA  082E               	movf	_CVAL+2,w	;volatile
 21051  0DAB  3D22               	addwfc	_ISTEP+2,w	;volatile
 21052  0DAC  00DE               	movwf	??_Encoder_AB_Interrupt+2
 21053  0DAD  082F               	movf	_CVAL+3,w	;volatile
 21054  0DAE  3D23               	addwfc	_ISTEP+3,w	;volatile
 21055  0DAF  00DF               	movwf	??_Encoder_AB_Interrupt+3
 21056  0DB0  00AF               	movwf	_CVAL+3	;volatile
 21057  0DB1  085E               	movf	??_Encoder_AB_Interrupt+2,w
 21058  0DB2  00AE               	movwf	_CVAL+2	;volatile
 21059  0DB3  085D               	movf	??_Encoder_AB_Interrupt+1,w
 21060  0DB4  00AD               	movwf	_CVAL+1	;volatile
 21061  0DB5  085C               	movf	??_Encoder_AB_Interrupt,w
 21062  0DB6  00AC               	movwf	_CVAL	;volatile
 21063                           
 21064                           ;Encoder.c: 75: EncoderStatusUpdate(S_RINC);
 21065  0DB7  3008               	movlw	8
 21066  0DB8  2688  318D         	fcall	i1_EncoderStatusUpdate
 21067                           
 21068                           ;Encoder.c: 76: if (CVAL.val > CMAX.val) {
 21069  0DBA  082B               	movf	_CMAX+3,w	;volatile
 21070  0DBB  3A80               	xorlw	128
 21071  0DBC  00DC               	movwf	??_Encoder_AB_Interrupt
 21072  0DBD  082F               	movf	_CVAL+3,w	;volatile
 21073  0DBE  3A80               	xorlw	128
 21074  0DBF  025C               	subwf	??_Encoder_AB_Interrupt,w
 21075  0DC0  1D03               	skipz
 21076  0DC1  2DFE               	goto	L49
 21077  0DC2  082E               	movf	_CVAL+2,w	;volatile
 21078  0DC3  022A               	subwf	_CMAX+2,w	;volatile
 21079  0DC4  1D03               	skipz
 21080  0DC5  2DFE               	goto	L49
 21081  0DC6  082D               	movf	_CVAL+1,w	;volatile
 21082  0DC7  0229               	subwf	_CMAX+1,w	;volatile
 21083  0DC8  1D03               	skipz
 21084  0DC9  2DFE               	goto	L49
 21085  0DCA  082C               	movf	_CVAL,w	;volatile
 21086  0DCB  0228               	subwf	_CMAX,w	;volatile
 21087  0DCC  2DFE               	goto	L49
 21088  0DCD                     i1l6232:	
 21089                           ;Encoder.c: 81: CVAL.val = CMAX.val;
 21090                           
 21091                           ;Encoder.c: 80: } else {
 21092                           
 21093                           ;Encoder.c: 79: CVAL.val = CMIN.val;
 21094                           
 21095                           ;Encoder.c: 78: if (C_WRAPE == 1) {
 21096                           
 21097                           ;Encoder.c: 77: EncoderStatusUpdate(S_RMAX);
 21098                           
 21099                           
 21100                           ;Encoder.c: 85: CVAL.fval = CVAL.fval + ISTEP.fval;
 21101  0DCD  0020               	movlb	0	; select bank0
 21102  0DCE  0823               	movf	_ISTEP+3,w	;volatile
 21103  0DCF  00F3               	movwf	___fladd@b+3
 21104  0DD0  0822               	movf	_ISTEP+2,w	;volatile
 21105  0DD1  00F2               	movwf	___fladd@b+2
 21106  0DD2  0821               	movf	_ISTEP+1,w	;volatile
 21107  0DD3  00F1               	movwf	___fladd@b+1
 21108  0DD4  0820               	movf	_ISTEP,w	;volatile
 21109  0DD5  00F0               	movwf	___fladd@b
 21110  0DD6  082F               	movf	_CVAL+3,w	;volatile
 21111  0DD7  00F7               	movwf	___fladd@a+3
 21112  0DD8  082E               	movf	_CVAL+2,w	;volatile
 21113  0DD9  00F6               	movwf	___fladd@a+2
 21114  0DDA  082D               	movf	_CVAL+1,w	;volatile
 21115  0DDB  00F5               	movwf	___fladd@a+1
 21116  0DDC  082C               	movf	_CVAL,w	;volatile
 21117  0DDD  00F4               	movwf	___fladd@a
 21118  0DDE  268B  318D         	fcall	___fladd
 21119  0DE0  0873               	movf	?___fladd+3,w
 21120  0DE1  0020               	movlb	0	; select bank0
 21121  0DE2  00AF               	movwf	_CVAL+3	;volatile
 21122  0DE3  0872               	movf	?___fladd+2,w
 21123  0DE4  00AE               	movwf	_CVAL+2	;volatile
 21124  0DE5  0871               	movf	?___fladd+1,w
 21125  0DE6  00AD               	movwf	_CVAL+1	;volatile
 21126  0DE7  0870               	movf	?___fladd,w
 21127  0DE8  00AC               	movwf	_CVAL	;volatile
 21128                           
 21129                           ;Encoder.c: 86: EncoderStatusUpdate(S_RINC);
 21130  0DE9  3008               	movlw	8
 21131  0DEA  2688               	fcall	i1_EncoderStatusUpdate
 21132                           
 21133                           ;Encoder.c: 87: if (CVAL.fval > CMAX.fval) {
 21134  0DEB  082B               	movf	_CMAX+3,w	;volatile
 21135  0DEC  00F3               	movwf	___flge@ff1+3
 21136  0DED  082A               	movf	_CMAX+2,w	;volatile
 21137  0DEE  00F2               	movwf	___flge@ff1+2
 21138  0DEF  0829               	movf	_CMAX+1,w	;volatile
 21139  0DF0  00F1               	movwf	___flge@ff1+1
 21140  0DF1  0828               	movf	_CMAX,w	;volatile
 21141  0DF2  00F0               	movwf	___flge@ff1
 21142  0DF3  082F               	movf	_CVAL+3,w	;volatile
 21143  0DF4  00F7               	movwf	___flge@ff2+3
 21144  0DF5  082E               	movf	_CVAL+2,w	;volatile
 21145  0DF6  00F6               	movwf	___flge@ff2+2
 21146  0DF7  082D               	movf	_CVAL+1,w	;volatile
 21147  0DF8  00F5               	movwf	___flge@ff2+1
 21148  0DF9  082C               	movf	_CVAL,w	;volatile
 21149  0DFA  00F4               	movwf	___flge@ff2
 21150  0DFB  3191  2162  318D   	fcall	___flge
 21151  0DFE                     L49:
 21152  0DFE  1803               	btfsc	3,0
 21153  0DFF  2E86               	goto	i1l6272
 21154                           
 21155                           ;Encoder.c: 88: EncoderStatusUpdate(S_RMAX);
 21156  0E00  3020               	movlw	32
 21157  0E01  2688  318D         	fcall	i1_EncoderStatusUpdate
 21158                           
 21159                           ;Encoder.c: 89: if (C_WRAPE == 1) {
 21160  0E03  0B38               	decfsz	_C_WRAPE,w	;volatile
 21161  0E04  2E76               	goto	i1l6268
 21162  0E05  2E7E               	goto	i1l6270
 21163  0E06                     i1l6242:	
 21164                           ;Encoder.c: 92: CVAL.fval = CMAX.fval;
 21165                           
 21166                           ;Encoder.c: 91: } else {
 21167                           
 21168                           ;Encoder.c: 90: CVAL.fval = CMIN.fval;
 21169                           
 21170                           
 21171                           ;Encoder.c: 98: if ((enc_status == X1_n) || (enc_status == X2_n) ) {
 21172  0E06  0020               	movlb	0	; select bank0
 21173  0E07  0830               	movf	_enc_status,w	;volatile
 21174  0E08  0021               	movlb	1	; select bank1
 21175  0E09  0639               	xorwf	_X1_n^(0+128),w	;volatile
 21176  0E0A  1903               	skipnz
 21177  0E0B  2E12               	goto	i1l6246
 21178  0E0C  0020               	movlb	0	; select bank0
 21179  0E0D  0830               	movf	_enc_status,w	;volatile
 21180  0E0E  0021               	movlb	1	; select bank1
 21181  0E0F  0637               	xorwf	_X2_n^(0+128),w	;volatile
 21182  0E10  1D03               	skipz
 21183  0E11  2E86               	goto	i1l6272
 21184  0E12                     i1l6246:
 21185                           
 21186                           ;Encoder.c: 100: if (C_DTYPE == 0) {
 21187  0E12  083C               	movf	_C_DTYPE^(0+128),w	;volatile
 21188  0E13  1D03               	btfss	3,2
 21189  0E14  2E3F               	goto	i1l6262
 21190                           
 21191                           ;Encoder.c: 102: CVAL.val = CVAL.val - ISTEP.val;
 21192  0E15  0020               	movlb	0	; select bank0
 21193  0E16  0820               	movf	_ISTEP,w	;volatile
 21194  0E17  022C               	subwf	_CVAL,w	;volatile
 21195  0E18  00DC               	movwf	??_Encoder_AB_Interrupt
 21196  0E19  0821               	movf	_ISTEP+1,w	;volatile
 21197  0E1A  3B2D               	subwfb	_CVAL+1,w	;volatile
 21198  0E1B  00DD               	movwf	??_Encoder_AB_Interrupt+1
 21199  0E1C  0822               	movf	_ISTEP+2,w	;volatile
 21200  0E1D  3B2E               	subwfb	_CVAL+2,w	;volatile
 21201  0E1E  00DE               	movwf	??_Encoder_AB_Interrupt+2
 21202  0E1F  0823               	movf	_ISTEP+3,w	;volatile
 21203  0E20  3B2F               	subwfb	_CVAL+3,w	;volatile
 21204  0E21  00DF               	movwf	??_Encoder_AB_Interrupt+3
 21205  0E22  00AF               	movwf	_CVAL+3	;volatile
 21206  0E23  085E               	movf	??_Encoder_AB_Interrupt+2,w
 21207  0E24  00AE               	movwf	_CVAL+2	;volatile
 21208  0E25  085D               	movf	??_Encoder_AB_Interrupt+1,w
 21209  0E26  00AD               	movwf	_CVAL+1	;volatile
 21210  0E27  085C               	movf	??_Encoder_AB_Interrupt,w
 21211  0E28  00AC               	movwf	_CVAL	;volatile
 21212                           
 21213                           ;Encoder.c: 103: EncoderStatusUpdate(S_RDEC);
 21214  0E29  3010               	movlw	16
 21215  0E2A  2688  318D         	fcall	i1_EncoderStatusUpdate
 21216                           
 21217                           ;Encoder.c: 104: if (CVAL.val < CMIN.val) {
 21218  0E2C  082F               	movf	_CVAL+3,w	;volatile
 21219  0E2D  3A80               	xorlw	128
 21220  0E2E  00DC               	movwf	??_Encoder_AB_Interrupt
 21221  0E2F  0827               	movf	_CMIN+3,w	;volatile
 21222  0E30  3A80               	xorlw	128
 21223  0E31  025C               	subwf	??_Encoder_AB_Interrupt,w
 21224  0E32  1D03               	skipz
 21225  0E33  2E6F               	goto	L50
 21226  0E34  0826               	movf	_CMIN+2,w	;volatile
 21227  0E35  022E               	subwf	_CVAL+2,w	;volatile
 21228  0E36  1D03               	skipz
 21229  0E37  2E6F               	goto	L50
 21230  0E38  0825               	movf	_CMIN+1,w	;volatile
 21231  0E39  022D               	subwf	_CVAL+1,w	;volatile
 21232  0E3A  1D03               	skipz
 21233  0E3B  2E6F               	goto	L50
 21234  0E3C  0824               	movf	_CMIN,w	;volatile
 21235  0E3D  022C               	subwf	_CVAL,w	;volatile
 21236  0E3E  2E6F               	goto	L50
 21237  0E3F                     i1l6262:	
 21238                           ;Encoder.c: 109: CVAL.val = CMIN.val;
 21239                           
 21240                           ;Encoder.c: 108: } else {
 21241                           
 21242                           ;Encoder.c: 107: CVAL.val = CMAX.val;
 21243                           
 21244                           ;Encoder.c: 106: if (C_WRAPE == 1) {
 21245                           
 21246                           ;Encoder.c: 105: EncoderStatusUpdate(S_RMIN);
 21247                           
 21248                           
 21249                           ;Encoder.c: 113: CVAL.fval = CVAL.fval - ISTEP.fval;
 21250  0E3F  0020               	movlb	0	; select bank0
 21251  0E40  0823               	movf	_ISTEP+3,w	;volatile
 21252  0E41  00D7               	movwf	___flsub@a+3
 21253  0E42  0822               	movf	_ISTEP+2,w	;volatile
 21254  0E43  00D6               	movwf	___flsub@a+2
 21255  0E44  0821               	movf	_ISTEP+1,w	;volatile
 21256  0E45  00D5               	movwf	___flsub@a+1
 21257  0E46  0820               	movf	_ISTEP,w	;volatile
 21258  0E47  00D4               	movwf	___flsub@a
 21259  0E48  082F               	movf	_CVAL+3,w	;volatile
 21260  0E49  00DB               	movwf	___flsub@b+3
 21261  0E4A  082E               	movf	_CVAL+2,w	;volatile
 21262  0E4B  00DA               	movwf	___flsub@b+2
 21263  0E4C  082D               	movf	_CVAL+1,w	;volatile
 21264  0E4D  00D9               	movwf	___flsub@b+1
 21265  0E4E  082C               	movf	_CVAL,w	;volatile
 21266  0E4F  00D8               	movwf	___flsub@b
 21267  0E50  27DA  318D         	fcall	___flsub
 21268  0E52  0857               	movf	?___flsub+3,w
 21269  0E53  00AF               	movwf	_CVAL+3	;volatile
 21270  0E54  0856               	movf	?___flsub+2,w
 21271  0E55  00AE               	movwf	_CVAL+2	;volatile
 21272  0E56  0855               	movf	?___flsub+1,w
 21273  0E57  00AD               	movwf	_CVAL+1	;volatile
 21274  0E58  0854               	movf	?___flsub,w
 21275  0E59  00AC               	movwf	_CVAL	;volatile
 21276                           
 21277                           ;Encoder.c: 114: EncoderStatusUpdate(S_RDEC);
 21278  0E5A  3010               	movlw	16
 21279  0E5B  2688               	fcall	i1_EncoderStatusUpdate
 21280                           
 21281                           ;Encoder.c: 115: if (CVAL.fval < CMIN.fval) {
 21282  0E5C  082F               	movf	_CVAL+3,w	;volatile
 21283  0E5D  00F3               	movwf	___flge@ff1+3
 21284  0E5E  082E               	movf	_CVAL+2,w	;volatile
 21285  0E5F  00F2               	movwf	___flge@ff1+2
 21286  0E60  082D               	movf	_CVAL+1,w	;volatile
 21287  0E61  00F1               	movwf	___flge@ff1+1
 21288  0E62  082C               	movf	_CVAL,w	;volatile
 21289  0E63  00F0               	movwf	___flge@ff1
 21290  0E64  0827               	movf	_CMIN+3,w	;volatile
 21291  0E65  00F7               	movwf	___flge@ff2+3
 21292  0E66  0826               	movf	_CMIN+2,w	;volatile
 21293  0E67  00F6               	movwf	___flge@ff2+2
 21294  0E68  0825               	movf	_CMIN+1,w	;volatile
 21295  0E69  00F5               	movwf	___flge@ff2+1
 21296  0E6A  0824               	movf	_CMIN,w	;volatile
 21297  0E6B  00F4               	movwf	___flge@ff2
 21298  0E6C  3191  2162  318D   	fcall	___flge
 21299  0E6F                     L50:
 21300  0E6F  1803               	btfsc	3,0
 21301  0E70  2E86               	goto	i1l6272
 21302                           
 21303                           ;Encoder.c: 116: EncoderStatusUpdate(S_RMIN);
 21304  0E71  3040               	movlw	64
 21305  0E72  2688  318D         	fcall	i1_EncoderStatusUpdate
 21306                           
 21307                           ;Encoder.c: 117: if (C_WRAPE == 1) {
 21308  0E74  0B38               	decfsz	_C_WRAPE,w	;volatile
 21309  0E75  2E7E               	goto	i1l6270
 21310  0E76                     i1l6268:
 21311                           
 21312                           ;Encoder.c: 118: CVAL.fval = CMAX.fval;
 21313  0E76  082B               	movf	_CMAX+3,w	;volatile
 21314  0E77  00AF               	movwf	_CVAL+3	;volatile
 21315  0E78  082A               	movf	_CMAX+2,w	;volatile
 21316  0E79  00AE               	movwf	_CVAL+2	;volatile
 21317  0E7A  0829               	movf	_CMAX+1,w	;volatile
 21318  0E7B  00AD               	movwf	_CVAL+1	;volatile
 21319  0E7C  0828               	movf	_CMAX,w	;volatile
 21320  0E7D  2E85               	goto	L47
 21321  0E7E                     i1l6270:	
 21322                           ;Encoder.c: 119: } else {
 21323                           
 21324                           
 21325                           ;Encoder.c: 121: CVAL.fval = CMIN.fval;
 21326  0E7E  0827               	movf	_CMIN+3,w	;volatile
 21327  0E7F  00AF               	movwf	_CVAL+3	;volatile
 21328  0E80  0826               	movf	_CMIN+2,w	;volatile
 21329  0E81  00AE               	movwf	_CVAL+2	;volatile
 21330  0E82  0825               	movf	_CMIN+1,w	;volatile
 21331  0E83  00AD               	movwf	_CVAL+1	;volatile
 21332  0E84  0824               	movf	_CMIN,w	;volatile
 21333  0E85                     L47:
 21334  0E85  00AC               	movwf	_CVAL	;volatile
 21335  0E86                     i1l6272:
 21336                           
 21337                           ;Encoder.c: 122: };Encoder.c: 123: };Encoder.c: 124: };Encoder.c: 125: };Encoder.c: 126:
      +                           };Encoder.c: 128: SetInterrupt();
 21338  0E86  27F7               	fcall	i1_SetInterrupt
 21339  0E87  0008               	return
 21340  0E88                     __end_of_Encoder_AB_Interrupt:
 21341  0E88                     __ptext82:	
 21342 ;; *************** function i1_EncoderStatusUpdate *****************
 21343 ;; Defined at:
 21344 ;;		line 135 in file "DataVariable.c"
 21345 ;; Parameters:    Size  Location     Type
 21346 ;;  stat            1    wreg     enum E77
 21347 ;; Auto vars:     Size  Location     Type
 21348 ;;  stat            1    0[COMMON] enum E77
 21349 ;; Return value:  Size  Location     Type
 21350 ;;                  1    wreg      void 
 21351 ;; Registers used:
 21352 ;;		wreg, status,2, status,0
 21353 ;; Tracked objects:
 21354 ;;		On entry : 1F/0
 21355 ;;		On exit  : 1F/0
 21356 ;;		Unchanged: 0/0
 21357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21361 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21362 ;;Total ram usage:        1 bytes
 21363 ;; Hardware stack levels used:    1
 21364 ;; This function calls:
 21365 ;;		Nothing
 21366 ;; This function is called by:
 21367 ;;		_Encoder_AB_Interrupt
 21368 ;; This function uses a non-reentrant model
 21369 ;;
 21370                           
 21371                           
 21372                           ;psect for function i1_EncoderStatusUpdate
 21373  0E88                     i1_EncoderStatusUpdate:
 21374                           
 21375                           ;incstack = 0
 21376                           ; Regs used in i1_EncoderStatusUpdate: [wreg+status,2+status,0]
 21377                           ;i1EncoderStatusUpdate@stat stored from wreg
 21378  0E88  00F0               	movwf	i1EncoderStatusUpdate@stat
 21379                           
 21380                           ;DataVariable.c: 136: ESTATUS |= (uint8_t) stat;
 21381  0E89  04CA               	iorwf	_ESTATUS,f	;volatile
 21382  0E8A  0008               	return
 21383  0E8B                     __end_ofi1_EncoderStatusUpdate:
 21384  0E8B                     __ptext84:	
 21385 ;; *************** function ___fladd *****************
 21386 ;; Defined at:
 21387 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
 21388 ;; Parameters:    Size  Location     Type
 21389 ;;  b               4    0[COMMON] void 
 21390 ;;  a               4    4[COMMON] void 
 21391 ;; Auto vars:     Size  Location     Type
 21392 ;;  grs             1   11[COMMON] unsigned char 
 21393 ;;  bexp            1   10[COMMON] unsigned char 
 21394 ;;  aexp            1    9[COMMON] unsigned char 
 21395 ;;  signs           1    8[COMMON] unsigned char 
 21396 ;; Return value:  Size  Location     Type
 21397 ;;                  4    0[COMMON] unsigned char 
 21398 ;; Registers used:
 21399 ;;		wreg, status,2, status,0
 21400 ;; Tracked objects:
 21401 ;;		On entry : 1F/0
 21402 ;;		On exit  : 0/0
 21403 ;;		Unchanged: 0/0
 21404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21405 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21406 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21407 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21408 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21409 ;;Total ram usage:       20 bytes
 21410 ;; Hardware stack levels used:    1
 21411 ;; This function calls:
 21412 ;;		Nothing
 21413 ;; This function is called by:
 21414 ;;		_Encoder_AB_Interrupt
 21415 ;;		___flsub
 21416 ;; This function uses a non-reentrant model
 21417 ;;
 21418                           
 21419                           
 21420                           ;psect for function ___fladd
 21421  0E8B                     ___fladd:
 21422                           
 21423                           ;incstack = 0
 21424                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 21425  0E8B  0873               	movf	___fladd@b+3,w
 21426  0E8C  00F8               	movwf	___fladd@signs
 21427  0E8D  3080               	movlw	128
 21428  0E8E  05F8               	andwf	___fladd@signs,f
 21429  0E8F  3573               	lslf	___fladd@b+3,w
 21430  0E90  00FA               	movwf	___fladd@bexp
 21431  0E91  1BF2               	btfsc	___fladd@b+2,7
 21432  0E92  147A               	bsf	___fladd@bexp,0
 21433  0E93  087A               	movf	___fladd@bexp,w
 21434  0E94  1903               	btfsc	3,2
 21435  0E95  2E9E               	goto	i1l2021
 21436  0E96  0F7A               	incfsz	___fladd@bexp,w
 21437  0E97  2E9C               	goto	i1l2022
 21438  0E98  01F0               	clrf	___fladd@b
 21439  0E99  01F1               	clrf	___fladd@b+1
 21440  0E9A  01F2               	clrf	___fladd@b+2
 21441  0E9B  01F3               	clrf	___fladd@b+3
 21442  0E9C                     i1l2022:
 21443  0E9C  17F2               	bsf	___fladd@b+2,7
 21444  0E9D  2EA1               	goto	L51
 21445  0E9E                     i1l2021:
 21446  0E9E  01F0               	clrf	___fladd@b
 21447  0E9F  01F1               	clrf	___fladd@b+1
 21448  0EA0  01F2               	clrf	___fladd@b+2
 21449  0EA1                     L51:
 21450  0EA1  01F3               	clrf	___fladd@b+3
 21451  0EA2  0877               	movf	___fladd@a+3,w
 21452  0EA3  00F9               	movwf	___fladd@aexp
 21453  0EA4  3080               	movlw	128
 21454  0EA5  05F9               	andwf	___fladd@aexp,f
 21455  0EA6  0879               	movf	___fladd@aexp,w
 21456  0EA7  0678               	xorwf	___fladd@signs,w
 21457  0EA8  1D03               	btfss	3,2
 21458  0EA9  1778               	bsf	___fladd@signs,6
 21459  0EAA  3577               	lslf	___fladd@a+3,w
 21460  0EAB  00F9               	movwf	___fladd@aexp
 21461  0EAC  1BF6               	btfsc	___fladd@a+2,7
 21462  0EAD  1479               	bsf	___fladd@aexp,0
 21463  0EAE  0879               	movf	___fladd@aexp,w
 21464  0EAF  1903               	btfsc	3,2
 21465  0EB0  2EB9               	goto	i1l2026
 21466  0EB1  0F79               	incfsz	___fladd@aexp,w
 21467  0EB2  2EB7               	goto	i1l2027
 21468  0EB3  01F4               	clrf	___fladd@a
 21469  0EB4  01F5               	clrf	___fladd@a+1
 21470  0EB5  01F6               	clrf	___fladd@a+2
 21471  0EB6  01F7               	clrf	___fladd@a+3
 21472  0EB7                     i1l2027:
 21473  0EB7  17F6               	bsf	___fladd@a+2,7
 21474  0EB8  2EBC               	goto	L52
 21475  0EB9                     i1l2026:
 21476  0EB9  01F4               	clrf	___fladd@a
 21477  0EBA  01F5               	clrf	___fladd@a+1
 21478  0EBB  01F6               	clrf	___fladd@a+2
 21479  0EBC                     L52:
 21480  0EBC  01F7               	clrf	___fladd@a+3
 21481  0EBD  087A               	movf	___fladd@bexp,w
 21482  0EBE  0279               	subwf	___fladd@aexp,w
 21483  0EBF  1803               	skipnc
 21484  0EC0  2EE3               	goto	i1l5330
 21485  0EC1  1F78               	btfss	___fladd@signs,6
 21486  0EC2  2EC5               	goto	i1l5300
 21487  0EC3  3080               	movlw	128
 21488  0EC4  06F8               	xorwf	___fladd@signs,f
 21489  0EC5                     i1l5300:
 21490  0EC5  087A               	movf	___fladd@bexp,w
 21491  0EC6  00FB               	movwf	___fladd@grs
 21492  0EC7  0879               	movf	___fladd@aexp,w
 21493  0EC8  00FA               	movwf	___fladd@bexp
 21494  0EC9  087B               	movf	___fladd@grs,w
 21495  0ECA  00F9               	movwf	___fladd@aexp
 21496  0ECB  0870               	movf	___fladd@b,w
 21497  0ECC  00FB               	movwf	___fladd@grs
 21498  0ECD  0874               	movf	___fladd@a,w
 21499  0ECE  00F0               	movwf	___fladd@b
 21500  0ECF  087B               	movf	___fladd@grs,w
 21501  0ED0  00F4               	movwf	___fladd@a
 21502  0ED1  0871               	movf	___fladd@b+1,w
 21503  0ED2  00FB               	movwf	___fladd@grs
 21504  0ED3  0875               	movf	___fladd@a+1,w
 21505  0ED4  00F1               	movwf	___fladd@b+1
 21506  0ED5  087B               	movf	___fladd@grs,w
 21507  0ED6  00F5               	movwf	___fladd@a+1
 21508  0ED7  0872               	movf	___fladd@b+2,w
 21509  0ED8  00FB               	movwf	___fladd@grs
 21510  0ED9  0876               	movf	___fladd@a+2,w
 21511  0EDA  00F2               	movwf	___fladd@b+2
 21512  0EDB  087B               	movf	___fladd@grs,w
 21513  0EDC  00F6               	movwf	___fladd@a+2
 21514  0EDD  0873               	movf	___fladd@b+3,w
 21515  0EDE  00FB               	movwf	___fladd@grs
 21516  0EDF  0877               	movf	___fladd@a+3,w
 21517  0EE0  00F3               	movwf	___fladd@b+3
 21518  0EE1  087B               	movf	___fladd@grs,w
 21519  0EE2  00F7               	movwf	___fladd@a+3
 21520  0EE3                     i1l5330:
 21521  0EE3  01FB               	clrf	___fladd@grs
 21522  0EE4  0879               	movf	___fladd@aexp,w
 21523  0EE5  00CC               	movwf	??___fladd
 21524  0EE6  01CD               	clrf	??___fladd+1
 21525  0EE7  084D               	movf	??___fladd+1,w
 21526  0EE8  00CF               	movwf	??___fladd+3
 21527  0EE9  087A               	movf	___fladd@bexp,w
 21528  0EEA  024C               	subwf	??___fladd,w
 21529  0EEB  00CE               	movwf	??___fladd+2
 21530  0EEC  1C03               	skipc
 21531  0EED  03CF               	decf	??___fladd+3,f
 21532  0EEE  084F               	movf	??___fladd+3,w
 21533  0EEF  3A80               	xorlw	128
 21534  0EF0  00D0               	movwf	??___fladd+4
 21535  0EF1  3080               	movlw	128
 21536  0EF2  0250               	subwf	??___fladd+4,w
 21537  0EF3  1D03               	skipz
 21538  0EF4  2EF7               	goto	u279_25
 21539  0EF5  301A               	movlw	26
 21540  0EF6  024E               	subwf	??___fladd+2,w
 21541  0EF7                     u279_25:
 21542  0EF7  1C03               	skipc
 21543  0EF8  2F18               	goto	i1l5344
 21544  0EF9  0873               	movf	___fladd@b+3,w
 21545  0EFA  0472               	iorwf	___fladd@b+2,w
 21546  0EFB  0471               	iorwf	___fladd@b+1,w
 21547  0EFC  0470               	iorwf	___fladd@b,w
 21548  0EFD  1903               	btfsc	3,2
 21549  0EFE  2F01               	goto	u280_20
 21550  0EFF  3001               	movlw	1
 21551  0F00  2F02               	goto	u281_20
 21552  0F01                     u280_20:
 21553  0F01  3000               	movlw	0
 21554  0F02                     u281_20:
 21555  0F02  00FB               	movwf	___fladd@grs
 21556  0F03  01F0               	clrf	___fladd@b
 21557  0F04  01F1               	clrf	___fladd@b+1
 21558  0F05  01F2               	clrf	___fladd@b+2
 21559  0F06  01F3               	clrf	___fladd@b+3
 21560  0F07  0879               	movf	___fladd@aexp,w
 21561  0F08  00FA               	movwf	___fladd@bexp
 21562  0F09  2F1C               	goto	i1l2032
 21563  0F0A                     i1l2034:
 21564  0F0A  1C7B               	btfss	___fladd@grs,0
 21565  0F0B  2F10               	goto	i1l2035
 21566  0F0C  367B               	lsrf	___fladd@grs,w
 21567  0F0D  3801               	iorlw	1
 21568  0F0E  00FB               	movwf	___fladd@grs
 21569  0F0F  2F11               	goto	i1l2036
 21570  0F10                     i1l2035:
 21571  0F10  36FB               	lsrf	___fladd@grs,f
 21572  0F11                     i1l2036:
 21573  0F11  1870               	btfsc	___fladd@b,0
 21574  0F12  17FB               	bsf	___fladd@grs,7
 21575  0F13  37F3               	asrf	___fladd@b+3,f
 21576  0F14  0CF2               	rrf	___fladd@b+2,f
 21577  0F15  0CF1               	rrf	___fladd@b+1,f
 21578  0F16  0CF0               	rrf	___fladd@b,f
 21579  0F17  0AFA               	incf	___fladd@bexp,f
 21580  0F18                     i1l5344:
 21581  0F18  0879               	movf	___fladd@aexp,w
 21582  0F19  027A               	subwf	___fladd@bexp,w
 21583  0F1A  1C03               	skipc
 21584  0F1B  2F0A               	goto	i1l2034
 21585  0F1C                     i1l2032:
 21586  0F1C  1B78               	btfsc	___fladd@signs,6
 21587  0F1D  2F3F               	goto	i1l5362
 21588  0F1E  087A               	movf	___fladd@bexp,w
 21589  0F1F  1D03               	btfss	3,2
 21590  0F20  2F26               	goto	i1l5350
 21591  0F21  01F0               	clrf	?___fladd
 21592  0F22  01F1               	clrf	?___fladd+1
 21593  0F23  01F2               	clrf	?___fladd+2
 21594  0F24  01F3               	clrf	?___fladd+3
 21595  0F25  0008               	return
 21596  0F26                     i1l5350:
 21597  0F26  0874               	movf	___fladd@a,w
 21598  0F27  07F0               	addwf	___fladd@b,f
 21599  0F28  0875               	movf	___fladd@a+1,w
 21600  0F29  3DF1               	addwfc	___fladd@b+1,f
 21601  0F2A  0876               	movf	___fladd@a+2,w
 21602  0F2B  3DF2               	addwfc	___fladd@b+2,f
 21603  0F2C  0877               	movf	___fladd@a+3,w
 21604  0F2D  3DF3               	addwfc	___fladd@b+3,f
 21605  0F2E  1C73               	btfss	___fladd@b+3,0
 21606  0F2F  2FA8               	goto	i1l5392
 21607  0F30  1C7B               	btfss	___fladd@grs,0
 21608  0F31  2F36               	goto	i1l2043
 21609  0F32  367B               	lsrf	___fladd@grs,w
 21610  0F33  3801               	iorlw	1
 21611  0F34  00FB               	movwf	___fladd@grs
 21612  0F35  2F37               	goto	i1l2044
 21613  0F36                     i1l2043:
 21614  0F36  36FB               	lsrf	___fladd@grs,f
 21615  0F37                     i1l2044:
 21616  0F37  1870               	btfsc	___fladd@b,0
 21617  0F38  17FB               	bsf	___fladd@grs,7
 21618  0F39  37F3               	asrf	___fladd@b+3,f
 21619  0F3A  0CF2               	rrf	___fladd@b+2,f
 21620  0F3B  0CF1               	rrf	___fladd@b+1,f
 21621  0F3C  0CF0               	rrf	___fladd@b,f
 21622  0F3D  0AFA               	incf	___fladd@bexp,f
 21623  0F3E  2FA8               	goto	i1l5392
 21624  0F3F                     i1l5362:
 21625  0F3F  0873               	movf	___fladd@b+3,w
 21626  0F40  3A80               	xorlw	128
 21627  0F41  0020               	movlb	0	; select bank0
 21628  0F42  00CC               	movwf	??___fladd
 21629  0F43  0877               	movf	___fladd@a+3,w
 21630  0F44  3A80               	xorlw	128
 21631  0F45  024C               	subwf	??___fladd,w
 21632  0F46  1D03               	skipz
 21633  0F47  2F52               	goto	u290_23
 21634  0F48  0876               	movf	___fladd@a+2,w
 21635  0F49  0272               	subwf	___fladd@b+2,w
 21636  0F4A  1D03               	skipz
 21637  0F4B  2F52               	goto	u290_23
 21638  0F4C  0875               	movf	___fladd@a+1,w
 21639  0F4D  0271               	subwf	___fladd@b+1,w
 21640  0F4E  1D03               	skipz
 21641  0F4F  2F52               	goto	u290_23
 21642  0F50  0874               	movf	___fladd@a,w
 21643  0F51  0270               	subwf	___fladd@b,w
 21644  0F52                     u290_23:
 21645  0F52  1803               	skipnc
 21646  0F53  2F81               	goto	i1l5372
 21647  0F54  30FF               	movlw	255
 21648  0F55  00CC               	movwf	??___fladd
 21649  0F56  00CD               	movwf	??___fladd+1
 21650  0F57  00CE               	movwf	??___fladd+2
 21651  0F58  00CF               	movwf	??___fladd+3
 21652  0F59  0870               	movf	___fladd@b,w
 21653  0F5A  0274               	subwf	___fladd@a,w
 21654  0F5B  00D0               	movwf	??___fladd+4
 21655  0F5C  0871               	movf	___fladd@b+1,w
 21656  0F5D  3B75               	subwfb	___fladd@a+1,w
 21657  0F5E  00D1               	movwf	??___fladd+5
 21658  0F5F  0872               	movf	___fladd@b+2,w
 21659  0F60  3B76               	subwfb	___fladd@a+2,w
 21660  0F61  00D2               	movwf	??___fladd+6
 21661  0F62  0873               	movf	___fladd@b+3,w
 21662  0F63  3B77               	subwfb	___fladd@a+3,w
 21663  0F64  00D3               	movwf	??___fladd+7
 21664  0F65  0850               	movf	??___fladd+4,w
 21665  0F66  07CC               	addwf	??___fladd,f
 21666  0F67  0851               	movf	??___fladd+5,w
 21667  0F68  3DCD               	addwfc	??___fladd+1,f
 21668  0F69  0852               	movf	??___fladd+6,w
 21669  0F6A  3DCE               	addwfc	??___fladd+2,f
 21670  0F6B  0853               	movf	??___fladd+7,w
 21671  0F6C  3DCF               	addwfc	??___fladd+3,f
 21672  0F6D  084F               	movf	??___fladd+3,w
 21673  0F6E  00F3               	movwf	___fladd@b+3
 21674  0F6F  084E               	movf	??___fladd+2,w
 21675  0F70  00F2               	movwf	___fladd@b+2
 21676  0F71  084D               	movf	??___fladd+1,w
 21677  0F72  00F1               	movwf	___fladd@b+1
 21678  0F73  084C               	movf	??___fladd,w
 21679  0F74  00F0               	movwf	___fladd@b
 21680  0F75  3080               	movlw	128
 21681  0F76  06F8               	xorwf	___fladd@signs,f
 21682  0F77  09FB               	comf	___fladd@grs,f
 21683  0F78  0FFB               	incfsz	___fladd@grs,f
 21684  0F79  2F89               	goto	i1l2049
 21685  0F7A  3001               	movlw	1
 21686  0F7B  07F0               	addwf	___fladd@b,f
 21687  0F7C  3000               	movlw	0
 21688  0F7D  3DF1               	addwfc	___fladd@b+1,f
 21689  0F7E  3DF2               	addwfc	___fladd@b+2,f
 21690  0F7F  3DF3               	addwfc	___fladd@b+3,f
 21691  0F80  2F89               	goto	i1l2049
 21692  0F81                     i1l5372:
 21693  0F81  0874               	movf	___fladd@a,w
 21694  0F82  02F0               	subwf	___fladd@b,f
 21695  0F83  0875               	movf	___fladd@a+1,w
 21696  0F84  3BF1               	subwfb	___fladd@b+1,f
 21697  0F85  0876               	movf	___fladd@a+2,w
 21698  0F86  3BF2               	subwfb	___fladd@b+2,f
 21699  0F87  0877               	movf	___fladd@a+3,w
 21700  0F88  3BF3               	subwfb	___fladd@b+3,f
 21701  0F89                     i1l2049:
 21702  0F89  0873               	movf	___fladd@b+3,w
 21703  0F8A  0472               	iorwf	___fladd@b+2,w
 21704  0F8B  0471               	iorwf	___fladd@b+1,w
 21705  0F8C  0470               	iorwf	___fladd@b,w
 21706  0F8D  1D03               	skipz
 21707  0F8E  2FA6               	goto	i1l5390
 21708  0F8F  087B               	movf	___fladd@grs,w
 21709  0F90  1D03               	btfss	3,2
 21710  0F91  2FA6               	goto	i1l5390
 21711  0F92  01F0               	clrf	?___fladd
 21712  0F93  01F1               	clrf	?___fladd+1
 21713  0F94  01F2               	clrf	?___fladd+2
 21714  0F95  01F3               	clrf	?___fladd+3
 21715  0F96  0008               	return
 21716  0F97                     i1l5378:
 21717  0F97  35F0               	lslf	___fladd@b,f
 21718  0F98  0DF1               	rlf	___fladd@b+1,f
 21719  0F99  0DF2               	rlf	___fladd@b+2,f
 21720  0F9A  0DF3               	rlf	___fladd@b+3,f
 21721  0F9B  1BFB               	btfsc	___fladd@grs,7
 21722  0F9C  1470               	bsf	___fladd@b,0
 21723  0F9D  1C7B               	btfss	___fladd@grs,0
 21724  0F9E  2FA2               	goto	i1l2054
 21725  0F9F  1403               	setc
 21726  0FA0  0DFB               	rlf	___fladd@grs,f
 21727  0FA1  2FA3               	goto	i1l5386
 21728  0FA2                     i1l2054:
 21729  0FA2  35FB               	lslf	___fladd@grs,f
 21730  0FA3                     i1l5386:
 21731  0FA3  087A               	movf	___fladd@bexp,w
 21732  0FA4  1D03               	btfss	3,2
 21733  0FA5  03FA               	decf	___fladd@bexp,f
 21734  0FA6                     i1l5390:
 21735  0FA6  1FF2               	btfss	___fladd@b+2,7
 21736  0FA7  2F97               	goto	i1l5378
 21737  0FA8                     i1l5392:
 21738  0FA8  01F9               	clrf	___fladd@aexp
 21739  0FA9  1FFB               	btfss	___fladd@grs,7
 21740  0FAA  2FB3               	goto	i1l5402
 21741  0FAB  087B               	movf	___fladd@grs,w
 21742  0FAC  397F               	andlw	127
 21743  0FAD  1903               	btfsc	3,2
 21744  0FAE  1870               	btfsc	___fladd@b,0
 21745  0FAF  2FB1               	goto	i1l5398
 21746  0FB0  2FB3               	goto	i1l5402
 21747  0FB1                     i1l5398:
 21748  0FB1  01F9               	clrf	___fladd@aexp
 21749  0FB2  0AF9               	incf	___fladd@aexp,f
 21750  0FB3                     i1l5402:
 21751  0FB3  0879               	movf	___fladd@aexp,w
 21752  0FB4  1903               	btfsc	3,2
 21753  0FB5  2FC4               	goto	i1l5414
 21754  0FB6  3001               	movlw	1
 21755  0FB7  07F0               	addwf	___fladd@b,f
 21756  0FB8  3000               	movlw	0
 21757  0FB9  3DF1               	addwfc	___fladd@b+1,f
 21758  0FBA  3DF2               	addwfc	___fladd@b+2,f
 21759  0FBB  3DF3               	addwfc	___fladd@b+3,f
 21760  0FBC  1C73               	btfss	___fladd@b+3,0
 21761  0FBD  2FC4               	goto	i1l5414
 21762  0FBE  37F3               	asrf	___fladd@b+3,f
 21763  0FBF  0CF2               	rrf	___fladd@b+2,f
 21764  0FC0  0CF1               	rrf	___fladd@b+1,f
 21765  0FC1  0CF0               	rrf	___fladd@b,f
 21766  0FC2  0F7A               	incfsz	___fladd@bexp,w
 21767  0FC3  0AFA               	incf	___fladd@bexp,f
 21768  0FC4                     i1l5414:
 21769  0FC4  0A7A               	incf	___fladd@bexp,w
 21770  0FC5  1D03               	btfss	3,2
 21771  0FC6  087A               	movf	___fladd@bexp,w
 21772  0FC7  1D03               	btfss	3,2
 21773  0FC8  2FD0               	goto	i1l5422
 21774  0FC9  01F0               	clrf	___fladd@b
 21775  0FCA  01F1               	clrf	___fladd@b+1
 21776  0FCB  01F2               	clrf	___fladd@b+2
 21777  0FCC  01F3               	clrf	___fladd@b+3
 21778  0FCD  087A               	movf	___fladd@bexp,w
 21779  0FCE  1903               	btfsc	3,2
 21780  0FCF  01F8               	clrf	___fladd@signs
 21781  0FD0                     i1l5422:
 21782  0FD0  1C7A               	btfss	___fladd@bexp,0
 21783  0FD1  2FD4               	goto	i1l2069
 21784  0FD2  17F2               	bsf	___fladd@b+2,7
 21785  0FD3  2FD5               	goto	i1l5426
 21786  0FD4                     i1l2069:
 21787  0FD4  13F2               	bcf	___fladd@b+2,7
 21788  0FD5                     i1l5426:
 21789  0FD5  367A               	lsrf	___fladd@bexp,w
 21790  0FD6  00F3               	movwf	___fladd@b+3
 21791  0FD7  1BF8               	btfsc	___fladd@signs,7
 21792  0FD8  17F3               	bsf	___fladd@b+3,7
 21793  0FD9  0008               	return
 21794  0FDA                     __end_of___fladd:
 21795  0FDA                     __ptext83:	
 21796 ;; *************** function ___flsub *****************
 21797 ;; Defined at:
 21798 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
 21799 ;; Parameters:    Size  Location     Type
 21800 ;;  a               4    8[BANK0 ] void 
 21801 ;;  b               4   12[BANK0 ] void 
 21802 ;; Auto vars:     Size  Location     Type
 21803 ;;		None
 21804 ;; Return value:  Size  Location     Type
 21805 ;;                  4    8[BANK0 ] void 
 21806 ;; Registers used:
 21807 ;;		wreg, status,2, status,0, pclath, cstack
 21808 ;; Tracked objects:
 21809 ;;		On entry : 1F/0
 21810 ;;		On exit  : 1F/0
 21811 ;;		Unchanged: 0/0
 21812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21813 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21816 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21817 ;;Total ram usage:        8 bytes
 21818 ;; Hardware stack levels used:    1
 21819 ;; Hardware stack levels required when called:    1
 21820 ;; This function calls:
 21821 ;;		___fladd
 21822 ;; This function is called by:
 21823 ;;		_Encoder_AB_Interrupt
 21824 ;; This function uses a non-reentrant model
 21825 ;;
 21826                           
 21827                           
 21828                           ;psect for function ___flsub
 21829  0FDA                     ___flsub:
 21830                           
 21831                           ;incstack = 0
 21832                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 21833  0FDA  3080               	movlw	128
 21834  0FDB  06D7               	xorwf	___flsub@a+3,f
 21835  0FDC  085B               	movf	___flsub@b+3,w
 21836  0FDD  00F3               	movwf	___fladd@b+3
 21837  0FDE  085A               	movf	___flsub@b+2,w
 21838  0FDF  00F2               	movwf	___fladd@b+2
 21839  0FE0  0859               	movf	___flsub@b+1,w
 21840  0FE1  00F1               	movwf	___fladd@b+1
 21841  0FE2  0858               	movf	___flsub@b,w
 21842  0FE3  00F0               	movwf	___fladd@b
 21843  0FE4  0857               	movf	___flsub@a+3,w
 21844  0FE5  00F7               	movwf	___fladd@a+3
 21845  0FE6  0856               	movf	___flsub@a+2,w
 21846  0FE7  00F6               	movwf	___fladd@a+2
 21847  0FE8  0855               	movf	___flsub@a+1,w
 21848  0FE9  00F5               	movwf	___fladd@a+1
 21849  0FEA  0854               	movf	___flsub@a,w
 21850  0FEB  00F4               	movwf	___fladd@a
 21851  0FEC  268B               	fcall	___fladd
 21852  0FED  0873               	movf	?___fladd+3,w
 21853  0FEE  0020               	movlb	0	; select bank0
 21854  0FEF  00D7               	movwf	?___flsub+3
 21855  0FF0  0872               	movf	?___fladd+2,w
 21856  0FF1  00D6               	movwf	?___flsub+2
 21857  0FF2  0871               	movf	?___fladd+1,w
 21858  0FF3  00D5               	movwf	?___flsub+1
 21859  0FF4  0870               	movf	?___fladd,w
 21860  0FF5  00D4               	movwf	?___flsub
 21861  0FF6  0008               	return
 21862  0FF7                     __end_of___flsub:
 21863  0FF7                     __ptext81:	
 21864 ;; *************** function i1_SetInterrupt *****************
 21865 ;; Defined at:
 21866 ;;		line 56 in file "main.c"
 21867 ;; Parameters:    Size  Location     Type
 21868 ;;		None
 21869 ;; Auto vars:     Size  Location     Type
 21870 ;;		None
 21871 ;; Return value:  Size  Location     Type
 21872 ;;                  1    wreg      void 
 21873 ;; Registers used:
 21874 ;;		wreg, status,2, status,0
 21875 ;; Tracked objects:
 21876 ;;		On entry : 1E/0
 21877 ;;		On exit  : 1C/0
 21878 ;;		Unchanged: 0/0
 21879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21884 ;;Total ram usage:        0 bytes
 21885 ;; Hardware stack levels used:    1
 21886 ;; This function calls:
 21887 ;;		Nothing
 21888 ;; This function is called by:
 21889 ;;		_Encoder_AB_Interrupt
 21890 ;; This function uses a non-reentrant model
 21891 ;;
 21892                           
 21893                           
 21894                           ;psect for function i1_SetInterrupt
 21895  0FF7                     i1_SetInterrupt:
 21896                           
 21897                           ;main.c: 58: if ((ESTATUS & INTCONF) != 0) {
 21898                           
 21899                           ;incstack = 0
 21900                           ; Regs used in i1_SetInterrupt: [wreg+status,2+status,0]
 21901  0FF7  0020               	movlb	0	; select bank0
 21902  0FF8  084A               	movf	_ESTATUS,w	;volatile
 21903  0FF9  0021               	movlb	1	; select bank1
 21904  0FFA  0549               	andwf	_INTCONF^(0+128),w	;volatile
 21905  0FFB  1903               	btfsc	3,2
 21906  0FFC  0008               	return
 21907                           
 21908                           ;main.c: 59: do { LATBbits.LATB5 = 0; } while(0);
 21909  0FFD  0022               	movlb	2	; select bank2
 21910  0FFE  128D               	bcf	13,5	;volatile
 21911  0FFF  0008               	return
 21912  1000                     __end_ofi1_SetInterrupt:
 21913                           
 21914                           	psect	text85
 21915  1162                     __ptext85:	
 21916 ;; *************** function ___flge *****************
 21917 ;; Defined at:
 21918 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
 21919 ;; Parameters:    Size  Location     Type
 21920 ;;  ff1             4    0[COMMON] unsigned char 
 21921 ;;  ff2             4    4[COMMON] unsigned char 
 21922 ;; Auto vars:     Size  Location     Type
 21923 ;;		None
 21924 ;; Return value:  Size  Location     Type
 21925 ;;		None               void
 21926 ;; Registers used:
 21927 ;;		wreg, status,2, status,0
 21928 ;; Tracked objects:
 21929 ;;		On entry : 1F/0
 21930 ;;		On exit  : 1F/0
 21931 ;;		Unchanged: 1F/0
 21932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21933 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21935 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21936 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21937 ;;Total ram usage:       12 bytes
 21938 ;; Hardware stack levels used:    1
 21939 ;; This function calls:
 21940 ;;		Nothing
 21941 ;; This function is called by:
 21942 ;;		_Encoder_AB_Interrupt
 21943 ;; This function uses a non-reentrant model
 21944 ;;
 21945                           
 21946                           
 21947                           ;psect for function ___flge
 21948  1162                     ___flge:
 21949                           
 21950                           ;incstack = 0
 21951                           ; Regs used in ___flge: [wreg+status,2+status,0]
 21952  1162  3080               	movlw	128
 21953  1163  01F8               	clrf	??___flge
 21954  1164  01F9               	clrf	??___flge+1
 21955  1165  0572               	andwf	___flge@ff1+2,w
 21956  1166  00FA               	movwf	??___flge+2
 21957  1167  307F               	movlw	127
 21958  1168  0573               	andwf	___flge@ff1+3,w
 21959  1169  00FB               	movwf	??___flge+3
 21960  116A  047A               	iorwf	??___flge+2,w
 21961  116B  0479               	iorwf	??___flge+1,w
 21962  116C  0478               	iorwf	??___flge,w
 21963  116D  1D03               	skipz
 21964  116E  2973               	goto	i1l5978
 21965  116F  01F0               	clrf	___flge@ff1
 21966  1170  01F1               	clrf	___flge@ff1+1
 21967  1171  01F2               	clrf	___flge@ff1+2
 21968  1172  01F3               	clrf	___flge@ff1+3
 21969  1173                     i1l5978:
 21970  1173  3080               	movlw	128
 21971  1174  01F8               	clrf	??___flge
 21972  1175  01F9               	clrf	??___flge+1
 21973  1176  0576               	andwf	___flge@ff2+2,w
 21974  1177  00FA               	movwf	??___flge+2
 21975  1178  307F               	movlw	127
 21976  1179  0577               	andwf	___flge@ff2+3,w
 21977  117A  00FB               	movwf	??___flge+3
 21978  117B  047A               	iorwf	??___flge+2,w
 21979  117C  0479               	iorwf	??___flge+1,w
 21980  117D  0478               	iorwf	??___flge,w
 21981  117E  1D03               	skipz
 21982  117F  2984               	goto	i1l1910
 21983  1180  01F4               	clrf	___flge@ff2
 21984  1181  01F5               	clrf	___flge@ff2+1
 21985  1182  01F6               	clrf	___flge@ff2+2
 21986  1183  01F7               	clrf	___flge@ff2+3
 21987  1184                     i1l1910:
 21988  1184  1FF3               	btfss	___flge@ff1+3,7
 21989  1185  299B               	goto	i1l5984
 21990  1186  3080               	movlw	128
 21991  1187  01F8               	clrf	??___flge
 21992  1188  01F9               	clrf	??___flge+1
 21993  1189  01FA               	clrf	??___flge+2
 21994  118A  00FB               	movwf	??___flge+3
 21995  118B  0870               	movf	___flge@ff1,w
 21996  118C  02F8               	subwf	??___flge,f
 21997  118D  0871               	movf	___flge@ff1+1,w
 21998  118E  3BF9               	subwfb	??___flge+1,f
 21999  118F  0872               	movf	___flge@ff1+2,w
 22000  1190  3BFA               	subwfb	??___flge+2,f
 22001  1191  0873               	movf	___flge@ff1+3,w
 22002  1192  3BFB               	subwfb	??___flge+3,f
 22003  1193  087B               	movf	??___flge+3,w
 22004  1194  00F3               	movwf	___flge@ff1+3
 22005  1195  087A               	movf	??___flge+2,w
 22006  1196  00F2               	movwf	___flge@ff1+2
 22007  1197  0879               	movf	??___flge+1,w
 22008  1198  00F1               	movwf	___flge@ff1+1
 22009  1199  0878               	movf	??___flge,w
 22010  119A  00F0               	movwf	___flge@ff1
 22011  119B                     i1l5984:
 22012  119B  1FF7               	btfss	___flge@ff2+3,7
 22013  119C  29B2               	goto	i1l1912
 22014  119D  3080               	movlw	128
 22015  119E  01F8               	clrf	??___flge
 22016  119F  01F9               	clrf	??___flge+1
 22017  11A0  01FA               	clrf	??___flge+2
 22018  11A1  00FB               	movwf	??___flge+3
 22019  11A2  0874               	movf	___flge@ff2,w
 22020  11A3  02F8               	subwf	??___flge,f
 22021  11A4  0875               	movf	___flge@ff2+1,w
 22022  11A5  3BF9               	subwfb	??___flge+1,f
 22023  11A6  0876               	movf	___flge@ff2+2,w
 22024  11A7  3BFA               	subwfb	??___flge+2,f
 22025  11A8  0877               	movf	___flge@ff2+3,w
 22026  11A9  3BFB               	subwfb	??___flge+3,f
 22027  11AA  087B               	movf	??___flge+3,w
 22028  11AB  00F7               	movwf	___flge@ff2+3
 22029  11AC  087A               	movf	??___flge+2,w
 22030  11AD  00F6               	movwf	___flge@ff2+2
 22031  11AE  0879               	movf	??___flge+1,w
 22032  11AF  00F5               	movwf	___flge@ff2+1
 22033  11B0  0878               	movf	??___flge,w
 22034  11B1  00F4               	movwf	___flge@ff2
 22035  11B2                     i1l1912:
 22036  11B2  3080               	movlw	128
 22037  11B3  06F3               	xorwf	___flge@ff1+3,f
 22038  11B4  06F7               	xorwf	___flge@ff2+3,f
 22039  11B5  0877               	movf	___flge@ff2+3,w
 22040  11B6  0273               	subwf	___flge@ff1+3,w
 22041  11B7  1D03               	skipz
 22042  11B8  0008               	return
 22043  11B9  0876               	movf	___flge@ff2+2,w
 22044  11BA  0272               	subwf	___flge@ff1+2,w
 22045  11BB  1D03               	skipz
 22046  11BC  0008               	return
 22047  11BD  0875               	movf	___flge@ff2+1,w
 22048  11BE  0271               	subwf	___flge@ff1+1,w
 22049  11BF  1D03               	skipz
 22050  11C0  0008               	return
 22051  11C1  0874               	movf	___flge@ff2,w
 22052  11C2  0270               	subwf	___flge@ff1,w
 22053  11C3  0008               	return
 22054  11C4                     __end_of___flge:
 22055  007E                     btemp	set	126	;btemp
 22056  007E                     int$flags	set	126
 22057  007E                     wtemp0	set	126
 22058                           
 22059                           	psect	config
 22060                           
 22061                           ;Config register CONFIG1 @ 0x8007
 22062                           ;	FEXTOSC External Oscillator mode Selection bits
 22063                           ;	FEXTOSC = OFF, Oscillator not enabled
 22064                           ;	Power-up default value for COSC bits
 22065                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 22066                           ;	Clock Out Enable bit
 22067                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 22068                           ;	Clock Switch Enable bit
 22069                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 22070                           ;	Fail-Safe Clock Monitor Enable
 22071                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 22072  8007                     	org	32775
 22073  8007  3F8C               	dw	16268
 22074                           
 22075                           ;Config register CONFIG2 @ 0x8008
 22076                           ;	Master Clear Enable bit
 22077                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input; MCLR internally disabled; Weak pu
      +                          ll-up under control of port pin's WPU control bit.
 22078                           ;	Power-up Timer Enable bit
 22079                           ;	PWRTE = OFF, PWRT disabled
 22080                           ;	Watchdog Timer Enable bits
 22081                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 22082                           ;	Low-power BOR enable bit
 22083                           ;	LPBOREN = OFF, ULPBOR disabled
 22084                           ;	Brown-out Reset Enable bits
 22085                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 22086                           ;	Brown-out Reset Voltage selection bit
 22087                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 22088                           ;	PPSLOCK bit One-Way Set Enable bit
 22089                           ;	PPS1WAY = OFF, The PPSLOCK bit can be set and cleared repeatedly (subject to the unloc
      +                          k sequence)
 22090                           ;	Stack Overflow/Underflow Reset Enable bit
 22091                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 22092                           ;	Debugger enable bit
 22093                           ;	DEBUG = OFF, Background debugger disabled
 22094  8008                     	org	32776
 22095  8008  37F2               	dw	14322
 22096                           
 22097                           ;Config register CONFIG3 @ 0x8009
 22098                           ;	User NVM self-write protection bits
 22099                           ;	WRT = OFF, Write protection off
 22100                           ;	Low Voltage Programming Enable bit
 22101                           ;	LVP = OFF, High Voltage on MCLR/VPP must be used for programming.
 22102  8009                     	org	32777
 22103  8009  1FFF               	dw	8191
 22104                           
 22105                           ;Config register CONFIG4 @ 0x800A
 22106                           ;	User NVM Program Memory Code Protection bit
 22107                           ;	CP = OFF, User NVM code protection disabled
 22108                           ;	Data NVM Memory Code Protection bit
 22109                           ;	CPD = OFF, Data NVM code protection disabled
 22110  800A                     	org	32778
 22111  800A  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    1400
    Data        1
    BSS         86
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      64
    BANK1            80     16      59
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR3_ISR->_TMR3_WriteTimer
    _Config_GP3->i1_PWM_GP3_RLED
    i1_PWM_GP3_RLED->i1___wmul
    _Config_GP2->i1_PWM_GP2
    i1_PWM_GP2->i1___wmul
    _Config_GP1->i1_PWM_GP1
    i1_PWM_GP1->i1___wmul
    _RegisterRead->_eeprom_read
    _Encoder_AB_Interrupt->___fladd
    _Encoder_AB_Interrupt->___flge
    ___flsub->___fladd

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _I2C1_ISR->_I2C1_StatusCallback
    _I2C1_StatusCallback->_RegisterWrite
    _RegisterWrite->_Config_GP1
    _Config_GP1->i1_PWM_GP1
    _CLC2_ISR->_Encoder_AB_Interrupt
    _CLC1_ISR->_Encoder_AB_Interrupt
    _Encoder_AB_Interrupt->___flsub
    ___flsub->___fladd

Critical Paths under _main in BANK1

    _main->_GP_Ports_FSM
    _GP3_FSM->_ADC_GetConversion
    _GP2_FSM->_ADC_GetConversion
    _GP1_FSM->_ADC_GetConversion
    _FADE_GP3->_PWM_GP3_RLED
    _FADE_GP2->_PWM_GP2
    _PWM_GP2->___wmul
    _FADE_GP1->_PWM_GP1
    _PWM_GP1->___wmul
    _FADE_LEDS->_PWM_BLED
    _FADE_LEDS->_PWM_GLED
    _FADE_LEDS->_PWM_GP3_RLED
    _PWM_GP3_RLED->___wmul
    _PWM_GLED->___wmul
    _PWM_BLED->___wmul
    _FadeProcessClear->_Int2StatusUpdate
    _Int2StatusUpdate->_EncoderStatusUpdate
    _Encoder_PushButton_FSM->_EncoderStatusUpdate

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9555
                     _ClearInterrupt
                        _DataInitSet
                        _Encoder_FSM
                       _GP_Ports_FSM
                  _SYSTEM_Initialize
                    _TMR0_StartTimer
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _CLC1_Initialize
                    _CLC2_Initialize
                    _CLC3_Initialize
                    _CLC4_Initialize
                    _I2C1_AddressSet
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_AddressSet                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GP_Ports_FSM                                         1     1      0    5041
                                             15 BANK1      1     1      0
                           _FADE_GP1
                           _FADE_GP2
                           _FADE_GP3
                            _GP1_FSM
                            _GP2_FSM
                            _GP3_FSM
 ---------------------------------------------------------------------------------
 (2) _GP3_FSM                                              2     2      0      93
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _GP2_FSM                                              2     2      0      93
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _GP1_FSM                                              2     2      0      93
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    4     2      2      31
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _FADE_GP3                                             0     0      0    1577
                   _FadeProcessClear
                     _FadeProcessSet
                       _PWM_GP3_RLED
 ---------------------------------------------------------------------------------
 (2) _FADE_GP2                                             0     0      0    1577
                   _FadeProcessClear
                     _FadeProcessSet
                            _PWM_GP2
 ---------------------------------------------------------------------------------
 (3) _PWM_GP2                                              7     7      0    1453
                                              6 BANK1      7     7      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _FADE_GP1                                             0     0      0    1608
                   _FadeProcessClear
                     _FadeProcessSet
                            _PWM_GP1
 ---------------------------------------------------------------------------------
 (3) _PWM_GP1                                              9     9      0    1484
                                              6 BANK1      9     9      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _Encoder_FSM                                          0     0      0    4514
             _Encoder_PushButton_FSM
                          _FADE_LEDS
 ---------------------------------------------------------------------------------
 (2) _FADE_LEDS                                            0     0      0    4483
                   _FadeProcessClear
                     _FadeProcessSet
                           _PWM_BLED
                           _PWM_GLED
                       _PWM_GP3_RLED
 ---------------------------------------------------------------------------------
 (3) _PWM_GP3_RLED                                         7     7      0    1453
                                              6 BANK1      7     7      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _PWM_GLED                                             7     7      0    1453
                                              6 BANK1      7     7      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _PWM_BLED                                             7     7      0    1453
                                              6 BANK1      7     7      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1326
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _FadeProcessSet                                       1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _FadeProcessClear                                     1     1      0      93
                                              2 BANK1      1     1      0
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (3) _Int2StatusUpdate                                     1     1      0      62
                                              1 BANK1      1     1      0
                _EncoderStatusUpdate
 ---------------------------------------------------------------------------------
 (2) _Encoder_PushButton_FSM                               0     0      0      31
                _EncoderStatusUpdate
     _EncoderSwitch_GetValueFiltered
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (3) _SetInterrupt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EncoderSwitch_GetValueFiltered                       0     0      0       0
             _EncoderSwitch_GetValue
 ---------------------------------------------------------------------------------
 (4) _EncoderSwitch_GetValue                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EncoderStatusUpdate                                  1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DataInitSet                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearInterrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0   13834
                           _CLC1_ISR
                           _CLC2_ISR
                           _I2C1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR3_ISR                                             0     0      0     166
                    _TMR3_WriteTimer
                           _TimerInt
 ---------------------------------------------------------------------------------
 (8) _TimerInt                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TMR3_WriteTimer                                      2     0      2     166
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             1     1      0    3186
                                              6 BANK0      1     1      0
                _I2C1_StatusCallback
 ---------------------------------------------------------------------------------
 (8) _I2C1_StatusCallback                                  1     1      0    3162
                                              5 BANK0      1     1      0
                       _RegisterRead
                      _RegisterWrite
 ---------------------------------------------------------------------------------
 (9) _RegisterWrite                                        2     1      1    2959
                                              3 BANK0      2     1      1
                         _Config_GP1
                         _Config_GP2
                         _Config_GP3
                        _FirstConfig
                     _FirstDataSplit
                       _SecondConfig
                    _SecondDataSplit
                        _TMR0_Reload
                      _UpdateOut_GP1
                      _UpdateOut_GP2
                      _UpdateOut_GP3
                       _eeprom_write
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) _eeprom_write                                        2     1      1     196
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP3                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP2                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP1                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _TMR0_Reload                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _SecondDataSplit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _SecondConfig                                        0     0      0       0
       _I2C1_Initialize_ClockStreach
                  i1_I2C1_Initialize
 ---------------------------------------------------------------------------------
 (11) i1_I2C1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_Initialize_ClockStreach                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _FirstDataSplit                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _FirstConfig                                         0     0      0       0
                    _RGB_EncoderMode
                    _STD_EncoderMode
 ---------------------------------------------------------------------------------
 (11) _STD_EncoderMode                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RGB_EncoderMode                                     0     0      0       0
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
 ---------------------------------------------------------------------------------
 (12) _PWM3_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _PWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP3                                          2     2      0     441
                                              0 BANK0      2     2      0
                    _PWM1_Initialize
                     i1_PWM_GP3_RLED
 ---------------------------------------------------------------------------------
 (11) i1_PWM_GP3_RLED                                      7     7      0     441
                                              6 COMMON     7     7      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (12) _PWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP2                                          2     2      0     441
                                              0 BANK0      2     2      0
                    _PWM4_Initialize
                          i1_PWM_GP2
 ---------------------------------------------------------------------------------
 (11) i1_PWM_GP2                                           7     7      0     441
                                              6 COMMON     7     7      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (11) _PWM4_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP1                                          2     2      0     463
                                              1 BANK0      2     2      0
                    _PWM5_Initialize
                          i1_PWM_GP1
 ---------------------------------------------------------------------------------
 (11) i1_PWM_GP1                                           9     9      0     463
                                              6 COMMON     8     8      0
                                              0 BANK0      1     1      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___wmul                                            6     2      4     352
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (11) _PWM5_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _RegisterRead                                         2     2      0     181
                                              1 COMMON     2     2      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (10) _eeprom_read                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _CLC2_ISR                                             0     0      0    5241
               _Encoder_AB_Interrupt
 ---------------------------------------------------------------------------------
 (7) _CLC1_ISR                                             0     0      0    5241
               _Encoder_AB_Interrupt
 ---------------------------------------------------------------------------------
 (8) _Encoder_AB_Interrupt                                 4     4      0    5241
                                             16 BANK0      4     4      0
                            ___fladd
                             ___flge
                            ___flsub
              i1_EncoderStatusUpdate
                     i1_SetInterrupt
 ---------------------------------------------------------------------------------
 (9) i1_SetInterrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i1_EncoderStatusUpdate                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) ___flsub                                              8     0      8    2465
                                              8 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (10) ___fladd                                            20    12      8    2268
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (9) ___flge                                              12     4      8     486
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearInterrupt
   _DataInitSet
   _Encoder_FSM
     _Encoder_PushButton_FSM
       _EncoderStatusUpdate
       _EncoderSwitch_GetValueFiltered
         _EncoderSwitch_GetValue
       _SetInterrupt
     _FADE_LEDS
       _FadeProcessClear
         _Int2StatusUpdate
           _EncoderStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_BLED
         ___wmul
       _PWM_GLED
         ___wmul
       _PWM_GP3_RLED
         ___wmul
   _GP_Ports_FSM
     _FADE_GP1
       _FadeProcessClear
         _Int2StatusUpdate
           _EncoderStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_GP1
         ___wmul
     _FADE_GP2
       _FadeProcessClear
         _Int2StatusUpdate
           _EncoderStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_GP2
         ___wmul
     _FADE_GP3
       _FadeProcessClear
         _Int2StatusUpdate
           _EncoderStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_GP3_RLED
         ___wmul
     _GP1_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _EncoderStatusUpdate
       _SetInterrupt
     _GP2_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _EncoderStatusUpdate
       _SetInterrupt
     _GP3_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _EncoderStatusUpdate
       _SetInterrupt
   _SYSTEM_Initialize
     _CLC1_Initialize
     _CLC2_Initialize
     _CLC3_Initialize
     _CLC4_Initialize
     _I2C1_AddressSet
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
     _WDT_Initialize
   _TMR0_StartTimer
   _TMR3_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _CLC1_ISR
     _Encoder_AB_Interrupt
       ___fladd
       ___flge
       ___flsub
         ___fladd
       i1_EncoderStatusUpdate
       i1_SetInterrupt
   _CLC2_ISR
     _Encoder_AB_Interrupt
       ___fladd
       ___flge
       ___flsub
         ___fladd
       i1_EncoderStatusUpdate
       i1_SetInterrupt
   _I2C1_ISR
     _I2C1_StatusCallback
       _RegisterRead
         _eeprom_read
       _RegisterWrite
         _Config_GP1
           _PWM5_Initialize
           i1_PWM_GP1
             i1___wmul
         _Config_GP2
           _PWM4_Initialize
           i1_PWM_GP2
             i1___wmul
         _Config_GP3
           _PWM1_Initialize
           i1_PWM_GP3_RLED
             i1___wmul
         _FirstConfig
           _RGB_EncoderMode
             _PWM1_Initialize
             _PWM2_Initialize
             _PWM3_Initialize
           _STD_EncoderMode
         _FirstDataSplit
         _SecondConfig
           _I2C1_Initialize_ClockStreach
           i1_I2C1_Initialize
         _SecondDataSplit
         _TMR0_Reload
         _UpdateOut_GP1
         _UpdateOut_GP2
         _UpdateOut_GP3
         _eeprom_write
         i1___wmul
   _TMR3_ISR
     _TMR3_WriteTimer
     _TimerInt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     10      3B       7       73.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      89      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      89      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Sep 20 11:47:59 2021

                                      pc 0002                       __size_of_FADE_LEDS 007C  
                   TMR0_Reload@periodVal 0070                      ___wmul@multiplicand 00CC  
                       i1___wmul@product 0074                          ??_UpdateOut_GP1 0070  
                        ??_UpdateOut_GP2 0070                          ??_UpdateOut_GP3 0070  
                                    l249 09A8                                      _PR2 001E  
                __size_of_PMD_Initialize 000E                            ??_FirstConfig 0070  
                        _PWM4_Initialize 075D                          _TMR2_Initialize 129D  
                      ??_CLC2_Initialize 00CA                                      wreg 0009  
                        __end_of_GP1_FSM 08FA                          __end_of_GP2_FSM 0947  
                        __end_of_GP3_FSM 0997                 RegisterRead@return_value 0072  
                                   S8430 07F1                                     S8424 10E4  
                                   S8426 10EC                                     S8428 10F4  
                             _S_RELATIVE 0037                         __end_of_I2C1_ISR 15D2  
                                   l1240 08E3                                     l1252 0920  
                                   l1237 08D5                                     l1503 14D4  
                                   l1255 092F                                     l1271 097F  
                                   l1513 1576                                     l1523 0A76  
                        _timer3ReloadVal 00A8                                     l1268 0970  
                                   l1533 0851                                     l1493 140F  
                                   l8002 13AA                                     l7160 13D8  
                                   l7146 0AB5                                     l7170 0ACF  
                                   l7314 155B                                     l7250 1420  
                                   l7226 13F7                                     l7180 09B2  
                                   l8052 0048                                     l7166 0AC9  
                                   l7334 158A                                     l7246 1419  
                                   l7352 13CF                                     l7272 14BC  
                                   l7442 086C                                     l7418 0836  
                                   l7338 1591                                     l7290 14E8  
                                   l7348 13C6                                     l7438 0865  
                                   l7374 0A5B                                     l7294 14EF  
                                   l8078 005D                                     l7624 0AEC  
                                   l7394 0A8A                                     l7722 08BB  
                                   l7714 08B0                                     l7724 08C3  
                                   l7804 0947                                     l7398 0A91  
                                   l7902 0A01                                     l7822 0962  
                                   l7920 0A1D                                     l7728 08C7  
                                   l7752 08EF                                     l7760 08FB  
                                   l7832 097B                                     l7816 0956  
                                   l7808 094B                                     l7658 1484  
                                   l7738 08DF                                     l7770 090E  
                                   l7818 095E                                     l7594 127D  
                                   l7908 0A0B                                     l7692 1523  
                                   l7950 1363                                     l7942 1355  
                                   l7870 09D5                                     l7774 0912  
                                   l7846 098B                                     l7944 1359  
                                   l7864 09CC                                     l7784 092B  
                                   l7768 0906                                     l7954 136B  
                                   l7938 1349                                     l7890 09EE  
                                   l7990 13A0                                     l7974 138E  
                                   l7966 1380                                     l7958 1373  
                                   l7878 09DE                                     l7798 093B  
                                   _BLED 0043                                     l7976 1392  
                                   l7968 1382                                     l7994 13A7  
                                   _CMAX 0028                                     _CMIN 0024  
                __end_of_PWM1_Initialize 177C                                     _GLED 0044  
                                   _CVAL 002C                                     _LATA 010C  
                                   _LATB 010D                                     _LATC 010E  
                                   _PMD0 0911                                     _PMD1 0912  
                                   _PMD2 0913                                     _PMD3 0914  
                                   _PMD4 0915                                     _PMD5 0916  
                                   u5615 1350                                     i1l90 0026  
                                   i1l86 0012                                     i1l95 002E  
                                   u5727 09A3                                     i1l88 001C  
                                   u5665 138A                                     _RLED 0045  
                        ?_ClearInterrupt 0070                                     _TMR2 001D  
                                   _X1_n 00B9                                     _X1_p 00BA  
                                   _X2_n 00B7                                     _X2_p 00B8  
                                   _WPUA 020C                                     _WPUB 020D  
                                   _WPUC 020E                           ??_eeprom_write 0071  
                         i1_PWM_GP3_RLED 177C                  __end_of_RGB_EncoderMode 1701  
                                   _main 0048  EncoderSwitch_GetValueFiltered@pb_status 00AA  
                        _TMR0_StartTimer 12CE                          __end_of_PWM_GP1 1475  
                        __end_of_PWM_GP2 1514                                     fsr0h 0005  
                                   indf0 0000                                     fsr0l 0004  
                                   btemp 007E                         __end_of_FADE_GP1 0B0A  
                       __end_of_FADE_GP2 14A3                         __end_of_FADE_GP3 1542  
                       __end_of_CLC1_ISR 0D8C                         __end_of_CLC2_ISR 0D88  
                                   start 0030                          _PWM5_Initialize 0CB5  
                        _TMR3_Initialize 120C                        ??_CLC3_Initialize 00CA  
                    __end_of_Encoder_FSM 00B0                             PWM_BLED@duty 00D6  
                    _I2C1_StatusCallback 15D2                              _DataInitSet 006C  
                          i1PWM_GP1@duty 004C                  __end_of_PWM2_Initialize 17F3  
                __end_of_TMR0_Initialize 0172                            i1PWM_GP2@duty 007C  
         __size_of_OSCILLATOR_Initialize 0009            __end_of_OSCILLATOR_Initialize 0125  
                           PWM_GLED@duty 00D6                                    _ADACT 009F  
                        __end_of___fladd 0FDA                                    ?_main 0070  
                                  _CCPR1 0291                                    _CCPR2 0295  
                                  _CCPR3 0311                                    _CCPR4 0315  
                        __end_of___flsub 0FF7                                    _GCONF 0049  
                                  _T2CON 001F                                    _T3CON 0413  
                     __size_ofi1_PWM_GP1 008F                       __size_ofi1_PWM_GP2 006A  
                                  i1l134 15C5                                    i1l900 0C19  
                                  i1l805 0B81                                    i1l902 0C1B  
                                  i1l770 1604                               _Config_GP1 0C46  
                                  i1l759 15D5                               _Config_GP2 06EE  
                             _Config_GP3 1701                               _EncoderReg 00B6  
                                  _ISTEP 0020                                    _OSCEN 091D  
                                  _TMR0H 0016                                    _TMR0L 0015  
                                  _TMR3H 0412                                    _TMR3L 0411  
                                  _PORTC 000E                                    _TRISA 008C  
                                  _TRISB 008D                                    _TRISC 008E  
                     FadeProcessSet@stat 00CA                        ??_CLC4_Initialize 00CA  
                      ??_I2C1_Initialize 00CA                     ?_I2C1_StatusCallback 0070  
                       __end_of_TMR3_ISR 07DE                          _STD_EncoderMode 0D63  
                         _WDT_Initialize 0172                   __end_ofi1_PWM_GP3_RLED 17E8  
                       __end_of_PWM_BLED 0891                         __end_of_PWM_GLED 0AB5  
               __size_of_SecondDataSplit 000A          __size_of_Encoder_PushButton_FSM 006C  
                      __end_of_FADE_LEDS 0A36                  __end_of_PWM3_Initialize 1800  
                    __end_of_FirstConfig 0C3A                               _DoublePush 00A4  
                       __end_ofi1___wmul 0D63                                    status 0003  
                    i1___wmul@multiplier 0070                                    wtemp0 007E  
                    _EncoderStatusUpdate 0AC3               __size_ofi1_I2C1_Initialize 0011  
                        __initialization 0032                             __end_of_main 0069  
               __end_of_Int2StatusUpdate 0AC3                  __end_of_PWM4_Initialize 076A  
                __end_of_TMR2_Initialize 12A5              ?_INTERRUPT_InterruptManager 0070  
                                 ??_main 00DA                                ??_GP1_FSM 00CE  
                              ??_GP2_FSM 00CE                                ??_GP3_FSM 00CE  
                   ?_EncoderStatusUpdate 0070                          _TMR3_StartTimer 12CB  
               __end_of_FadeProcessClear 0A3E                         __end_of_TimerInt 07F1  
                       ??i1_SetInterrupt 0070                   __end_of_WDT_Initialize 0176  
                  ??_I2C1_StatusCallback 007E                  __end_of_TMR0_StartTimer 12D1  
                                 _ADCON0 009D                                   _ADCON1 009E  
                                 _FADEGP 003F                                   _ADRESH 009C  
                                 _ADRESL 009B                                   i1S8432 12A5  
                                 i1S8450 12BD                                   i1S8434 1100  
                                 i1S8444 12B5                                   i1S8454 1000  
                                 i1S8438 12AD                                   _CCPR1H 0292  
                                 _CCPR2H 0296                                   _CCPR3H 0312  
                                 _CCPR1L 0291                                ??_PWM_GP1 00D0  
                                 _CCPR4H 0316                                   _CCPR2L 0295  
                              ??_PWM_GP2 00D0                                   _CCPR3L 0311  
                                 _CCPR4L 0315                          ?i1_PWM_GP3_RLED 0070  
                                 _GCONF2 00C2                                   _GP1REG 0042  
                                 _ANSELA 018C                                   _ANSELB 018D  
                                 _ANSELC 018E                                   _GP2REG 0041  
                                 _GP3REG 0040                                   _T0CON0 0017  
                                 _T0CON1 0018                                   _T3GCON 0414  
        ?_EncoderSwitch_GetValueFiltered 0070         ??_EncoderSwitch_GetValueFiltered 00CA  
                                 i1l1110 0C75                                   i1l1102 0C58  
                                 i1l1122 0C83                                   i1l1202 1757  
                                 i1l1132 0C9F                                   i1l1212 1266  
                                 i1l2021 0E9E                                   i1l1117 0C7C  
                                 i1l2022 0E9C                                   i1l1134 0CB4  
                                 i1l1206 175A                         ?_PWM1_Initialize 0070  
                                 i1l2032 0F1C                                   i1l1128 0C9C  
                                 i1l1208 176F                                   i1l2034 0F0A  
                                 i1l2026 0EB9                                   i1l1154 0724  
                                 i1l1218 1255                                   i1l1226 1230  
                                 i1l2043 0F36                                   i1l2035 0F10  
                                 i1l2027 0EB7                                   i1l1171 075C  
                                 i1l1147 071D                                   i1l1139 0700  
                                 i1l2044 0F37                                   i1l2036 0F11  
                                 i1l1165 0744                                   i1l2054 0FA2  
                                 i1l1503 079A                                   i1l1159 072B  
                                 i1l1191 1737                                   i1l1184 1730  
                                 i1l1176 1713                                   i1l2049 0F89  
                                 i1l1169 0747                                   i1l1513 17AE  
                                 _ODCONA 028C                                   _ODCONB 028D  
                                 _ODCONC 028E                                   i1l1196 173E  
                                 i1l2069 0FD4                                   i1l5000 0C24  
                                 i1l1721 0817                                   i1l5100 074A  
                                 i1l5004 0C2E                                   i1l1493 0CF0  
                                 i1l1717 0802                                   i1l1910 1184  
                                 i1l5006 0C35                                   i1l1912 11B2  
                                 i1l5202 0C3F                                   i1l5300 0EC5  
                __end_of_PWM5_Initialize 0CBF                                   i1l5044 0C88  
                __end_of_TMR3_Initialize 1222                                   i1l1695 16BD  
                                 i1l5048 0CA2                                   i1l5152 175D  
                                 i1l5402 0FB3                                   i1l5330 0EE3  
                                 i1l5148 1743                                   i1l5500 0B45  
                                 i1l5422 0FD0                                   i1l5414 0FC4  
                                 i1l5350 0F26                                   i1l5190 1225  
                                 i1l5510 0B54                                   i1l5502 0B48  
                                 i1l6206 07E8                                   i1l5344 0F18  
                                 i1l6232 0DCD                                   i1l6216 0DA0  
                                 i1l5600 1607                                   i1l4712 0D50  
                                 i1l5096 0730                                   i1l5520 0B63  
                                 i1l5512 0B57                                   i1l5504 0B4B  
                                 i1l5426 0FD5                                   i1l5362 0F3F  
                                 i1l6242 0E06                                   i1l5610 1616  
                                 i1l5602 160A                                   i1l5530 0B72  
                                 i1l5522 0B66                                   i1l5514 0B5A  
                                 i1l5506 0B4E                                   i1l5372 0F81  
                                 i1l5700 168D                                   i1l5620 1621  
                                 i1l5612 1618                                   i1l5604 160D  
                                 i1l4716 0D56                                   i1l4820 0CD8  
                                 i1l5516 0B5D                                   i1l5508 0B51  
                                 i1l6180 15E7                                   i1l6172 15D9  
                                 i1l5390 0FA6                                   i1l6270 0E7E  
                                 i1l6262 0E3F                                   i1l6246 0E12  
                                 i1l5710 1699                                   i1l5702 1690  
                                 i1l5614 161A                                   i1l5606 1610  
                                 i1l4726 1236                                   i1l5550 0BA1  
                                 i1l5542 0B89                                   i1l5526 0B6C  
                                 i1l5518 0B60                                   i1l5462 0B0D  
                                 i1l6174 15DC                                   i1l6182 15F0  
                                 i1l6190 15FA                                   i1l5392 0FA8  
                                 i1l6272 0E86                                   i1l5712 169B  
                                 i1l5704 1693                                   i1l5632 162D  
                                 i1l5624 1625                                   i1l5720 16A0  
                                 i1l4840 0CF9                                   i1l5536 0B7B  
                                 i1l5472 0B1A                                   i1l6184 15F2  
                                 i1l5386 0FA3                                   i1l5378 0F97  
                                 i1l5730 16B8                                   i1l5714 169D  
                                 i1l5706 1696                                   i1l5650 1648  
                                 i1l5626 1627                                   i1l5722 16AA  
                                 i1l5570 0BCE                                   i1l5562 0BBC  
                                 i1l5554 0BAA                                   i1l5546 0B9A  
                                 i1l5490 0B36                                   i1l5482 0B29  
                                 i1l6268 0E76                                   i1l5660 1657  
                                 i1l5652 164B                                   i1l5644 163E  
                                 i1l4844 0CFF                                   i1l4932 17C5  
                                 i1l4908 1794                                   i1l5548 0B9E  
                                 i1l5492 0B39                                   i1l5484 0B2D  
                                 i1l5476 0B20                                   i1l5468 0B15  
                                 _C_DIRE 00BD                                   i1l5398 0FB1  
                                 i1l5670 1666                                   i1l5662 165A  
                                 i1l5654 164E                                   i1l5638 1635  
                                 i1l5590 0BF1                                   i1l5574 0BCF  
                                 i1l5566 0BC5                                   i1l5558 0BB3  
                                 i1l5494 0B3C                                   i1l5486 0B30  
                                 i1l5582 0BD7                                   i1l6198 07DE  
                                 i1l5728 16B5                                   i1l5680 1675  
                                 i1l5672 1669                                   i1l5664 165D  
                                 i1l5656 1651                                   i1l4928 17BF  
                                 i1l5496 0B3F                                   i1l5488 0B33  
                                 i1l5584 0BE1                                   i1l5690 1681  
                                 i1l5682 1678                                   i1l5674 166C  
                                 i1l5666 1660                                   i1l5658 1654  
                                 i1l4866 0782                                   i1l4698 17F3  
                                 i1l5498 0B42                                   i1l5692 1683  
                                 i1l5684 167B                                   i1l5676 166F  
                                 i1l5668 1663                                   i1l4884 07AB  
                                 i1l5694 1685                                   i1l5678 1672  
                                 i1l5696 1687                                   i1l4888 07B1  
                                 i1l8440 1767                                   i1l4992 0C0C  
                                 i1l5698 168A                                   i1l8442 073A  
                                 i1l4986 0BFF                                   i1l8452 0CAC  
                                 i1l8436 174D                                   i1l4988 0C01  
                                 i1l8446 0754                                   i1l6694 15C3  
                                 i1l5984 119B                                   i1l8448 0C92  
                                 i1l5978 1173                                   i1l6698 15C9  
                            _Encoder_FSM 00AB                                   u245_25 11ED  
                                 u246_25 11F7                                   _C_IPUD 00BE  
                                 u247_25 1203                                   u280_20 0F01  
                                 u281_20 0F02                                   u266_21 16BC  
                                 u290_23 0F52                                   _C_RMOD 00BF  
                                 u279_25 0EF7                                   _OSCFRQ 091F  
                                 _WDTCON 0097                         ?_RGB_EncoderMode 0070  
                      __end_ofi1_PWM_GP1 0D4E                        __end_ofi1_PWM_GP2 07D4  
                        _TMR3_WriteTimer 07DE                     __size_of_eeprom_read 000F  
                       ??_FirstDataSplit 0070                             ?_TMR0_Reload 0070  
                                 ___flge 1162                                ??___fladd 004C  
                                 ___wmul 0AC7                                ??___flsub 007C  
                 _Encoder_PushButton_FSM 1349                                   _pb_cnt 00AC  
                                 _pb_fsm 00AD                         ?_PWM2_Initialize 0070  
                       ?_TMR0_Initialize 0070                                ?_I2C1_ISR 0070  
                   __end_of_eeprom_write 081D                    ??_EncoderStatusUpdate 00CA  
                __end_of_STD_EncoderMode 0D7A                            ?_SecondConfig 0070  
                        _I2C1_AddressSet 00F8                              ?_Config_GP1 0070  
                            ?_Config_GP2 0070                              ?_Config_GP3 0070  
                         _PMD_Initialize 015B                                ?_FADE_GP1 0070  
                              ?_FADE_GP2 0070                                ?_FADE_GP3 0070  
                              ?_CLC1_ISR 0070                                ?_CLC2_ISR 0070  
                            _FirstConfig 0BF7                          ?_WDT_Initialize 0070  
               ADC_GetConversion@channel 00CD                            ?_RegisterRead 0070  
                        _CLC1_Initialize 00C9     __end_of_I2C1_Initialize_ClockStreach 124A  
  __size_of_I2C1_Initialize_ClockStreach 0014             _I2C1_Initialize_ClockStreach 1236  
                          ?_SetInterrupt 0070           __size_ofi1_EncoderStatusUpdate 0003  
          __end_ofi1_EncoderStatusUpdate 0E8B                               ___flge@ff1 0070  
                             ___flge@ff2 0074                         ?_PWM3_Initialize 0070  
                            _i2c_address 004B                        _SYSTEM_Initialize 00B0  
                __end_of__initialization 0045                          eeprom_read@addr 0070  
                     ?_SYSTEM_Initialize 0070                 ??_EncoderSwitch_GetValue 00CA  
                      ??_SecondDataSplit 0070                     FadeProcessClear@stat 00CC  
                         __pcstackCOMMON 0070                             __pidataBANK1 0000  
                    ??_SYSTEM_Initialize 00CA                  __end_of_TMR3_StartTimer 12CE  
                        _CLC2_Initialize 00E0                                ?_TMR3_ISR 0070  
                             ??_I2C1_ISR 007E                         ?_PWM4_Initialize 0070  
                       ?_TMR2_Initialize 0070                                ?_PWM_BLED 0070  
                              ?_PWM_GLED 0070                   __end_of_PMD_Initialize 0169  
                __size_of_FadeProcessSet 0004                           ??_SecondConfig 0070  
                              ?i1___wmul 0070                               ??_FADE_GP1 00D9  
                             ??_FADE_GP2 00D7             __end_of_Encoder_AB_Interrupt 0E88  
                             ??_FADE_GP3 00D7                               ??_CLC1_ISR 007C  
                             ??_CLC2_ISR 007C                         ??_ClearInterrupt 00CA  
                      eeprom_write@value 0070                           ??_RegisterRead 0071  
                       ?_TMR0_StartTimer 0070                           ??_SetInterrupt 00CA  
              __end_of_SYSTEM_Initialize 00C9                          _CLC3_Initialize 128D  
                __end_of_TMR3_WriteTimer 07ED                               __pbssBANK0 0020  
                             __pbssBANK1 00A0                         ?_PWM5_Initialize 0070  
                       ?_TMR3_Initialize 0070                   __size_of_RegisterWrite 00ED  
                    __size_of_Config_GP1 006F                      __size_of_Config_GP2 006F  
                    __size_of_Config_GP3 006F                           _SSP1DATPPSbits 0E21  
                             __pmaintext 0048                            ?_GP_Ports_FSM 0070  
                              ?_TimerInt 0070                                  ?___flge 0070  
                          _CLCIN2PPSbits 0E2A                                  ?___wmul 00CA  
                __end_of_I2C1_AddressSet 010B                            _CLCIN3PPSbits 0E2B  
                             ??_TMR3_ISR 0072                             ?_DataInitSet 0070  
                        _CLC4_Initialize 127D                               __pintentry 0004  
                        _I2C1_Initialize 010B                                  _CCP1CON 0293  
                                _CCP2CON 0297                                  _CCP3CON 0313  
                                _CCP4CON 0317                                  _CLC1CON 0F10  
                                _CLC2CON 0F1A                                  _CLC3CON 0F24  
                                _CLC4CON 0F2E                                  _FADERGB 00C3  
                                _CLC1POL 0F11                                  _CLC2POL 0F1B  
                                _CLC3POL 0F25                                  _CLC4POL 0F2F  
                             ??_PWM_BLED 00D0                               ??_PWM_GLED 00D0  
                                _GP1CONF 0048                                  _GP2CONF 0047  
                         _SSP1CLKPPSbits 0E20                                  _GP3CONF 0046  
                        ?_PMD_Initialize 0070                  __size_of_ADC_Initialize 0008  
                             ??i1___wmul 0074                         ?_STD_EncoderMode 0070  
                                _GP1_FSM 08AF                                  _GP2_FSM 08FA  
                                _GP3_FSM 0947                  __end_of_CLC1_Initialize 00E0  
                             _enc_status 0030                    __end_of_UpdateOut_GP1 126C  
                  __end_of_UpdateOut_GP2 125B                    __end_of_UpdateOut_GP3 1236  
                                _ESTATUS 004A                         PWM_GP3_RLED@duty 00D6  
                                _C_MBANK 00C0                                  _FSTATUS 00C6  
                                _INTCONF 00C9        I2C1_StatusCallback@slaveWriteType 00B3  
                                _C_DTYPE 00BC                                  _C_ETYPE 0039  
                                _C_RESET 00C1                                  _OSCCON1 0919  
                                _OSCCON3 091B                                  _C_WRAPE 0038  
                                _NVMADRH 0892                                  _NVMADRL 0891  
                                _NVMDATH 0894                                  _OSCTUNE 091E  
                                _NVMDATL 0893                                  _NVMCON2 0896  
                                _PWM5DCH 0618                                  _PWM5DCL 0617  
                                _PWM5CON 0619                                  _SSP1ADD 0212  
                                _PPSLOCK 0E0F                                  _SSP1BUF 0211  
                             __pswtext10 1000                                  _SSP1MSK 0213  
                                _PWM_GP1 13DE                                  _PWM_GP2 14A3  
                        _double_push_cnt 00A2                                  _S_CKSRC 00BB  
                __end_of_CLC2_Initialize 00F8                                _FADE_LEDS 09BA  
        __size_of_EncoderSwitch_GetValue 000D                           ??_GP_Ports_FSM 00D9  
                              _GAMMABLED 003A                                _GAMMAGLED 003B  
                             ??_TimerInt 0070                    __size_of_eeprom_write 001C  
                        RegisterRead@add 0071                          __size_of___flge 0062  
                                ___fladd 0E8B                         ?_TMR3_StartTimer 0070  
                                ___flsub 0FDA                          __size_of___wmul 0015  
                                _gp1_fsm 00B1                                  _gp2_fsm 00B0  
                                _gp3_fsm 00AF                        ?_Int2StatusUpdate 0070  
                          _GAMMAGP3_RLED 003C                     __size_of_TMR0_Reload 0004  
                     ??_Int2StatusUpdate 00CB                                  __ptext1 12CB  
                                __ptext2 12CE                                  __ptext3 00B0  
                                __ptext4 0172                                  __ptext5 120C  
                                __ptext6 129D                                  __ptext7 0169  
                                __ptext8 015B                                  __ptext9 0125  
                          _RegisterWrite 0B0A                  __end_of_CLC3_Initialize 129D  
                  _OSCILLATOR_Initialize 011C                                  _fsm_tmr 00C8  
                       ??i1_PWM_GP3_RLED 0076                                _T3CONbits 0413  
               ??_PIN_MANAGER_Initialize 00CA                        ?_FadeProcessClear 0070  
                     ??_FadeProcessClear 00CC               __size_of_SYSTEM_Initialize 0019  
                                clrloop0 12C6                     end_of_initialization 0045  
                       ?_TMR3_WriteTimer 0070                             ?_Encoder_FSM 0070  
                           _eeprom_write 0801                     __end_of_SecondConfig 0C42  
                             ?_FADE_LEDS 0070                  __end_of_CLC4_Initialize 128D  
                __end_of_I2C1_Initialize 011C                  ?_Encoder_PushButton_FSM 0070  
                   _Encoder_AB_Interrupt 0D8C                                i1_PWM_GP1 0CBF  
                              i1_PWM_GP2 076A                               _temp_green 0032  
                   __end_of_RegisterRead 16BA                         ?_I2C1_AddressSet 0070  
                   __end_of_SetInterrupt 0ABE                    i1___wmul@multiplicand 0072  
                         _FadeProcessSet 0A3E                           ?_RegisterWrite 004F  
            __end_of_I2C1_StatusCallback 1605                         ??_WDT_Initialize 00CA  
                              _PORTAbits 000C                                _PORTBbits 000D  
                              _PORTCbits 000E                             ??_Config_GP1 004D  
                           ??_Config_GP2 004C                             ??_Config_GP3 004C  
                      __size_of_I2C1_ISR 001C                         ?_CLC1_Initialize 0070  
                            ___fladd@grs 007B                  EncoderStatusUpdate@stat 00CA  
                 _EncoderSwitch_GetValue 13D1                             ?_FirstConfig 0070  
                              _TRISCbits 008E                        _double_push_delay 00A0  
                        _SecondDataSplit 0D7A                        __size_of_FADE_GP1 002E  
                      __size_of_FADE_GP2 002E                        __size_of_FADE_GP3 002E  
                      __size_of_CLC1_ISR 0004                        __size_of_CLC2_ISR 0004  
                          ?_PWM_GP3_RLED 0070                i1EncoderStatusUpdate@stat 0070  
                          ??_eeprom_read 0070           __end_of_Encoder_PushButton_FSM 13B5  
                       ?_CLC2_Initialize 0070                    ?_Encoder_AB_Interrupt 0070  
                     __end_of_Config_GP1 0CB5                       __end_of_Config_GP2 075D  
                     __end_of_Config_GP3 1770                 __size_of_PWM1_Initialize 000C  
                             ?i1_PWM_GP1 0070                               ?i1_PWM_GP2 0070  
            __end_of_EncoderStatusUpdate 0AC7                     Int2StatusUpdate@stat 00CB  
               __size_of_RGB_EncoderMode 0038                              PWM_GP1@duty 00D8  
                            PWM_GP2@duty 00D6                   __end_of_FadeProcessSet 0A42  
                         __end_of___flge 11C4                       i1PWM_GP3_RLED@duty 007C  
                         __end_of___wmul 0ADC                        __size_of_TMR3_ISR 000A  
                   __size_of_DataInitSet 003F                           _ADC_Initialize 09B2  
                 ?_OSCILLATOR_Initialize 0070                        __size_of_PWM_BLED 0074  
                      __size_of_PWM_GLED 0073                         ?_CLC3_Initialize 0070  
                    start_initialization 0032                        __size_ofi1___wmul 0015  
                    __end_of_gamma_table 06EE                 __size_of_PWM2_Initialize 000B  
               __size_of_TMR0_Initialize 0009          __size_of_PIN_MANAGER_Initialize 0036  
                   __end_of_GP_Ports_FSM 08AF                           ??_PWM_GP3_RLED 00D0  
                  i1_EncoderStatusUpdate 0E88                  __size_ofi1_SetInterrupt 0009  
                            ??_FADE_LEDS 00D7                         ?_CLC4_Initialize 0070  
                       ?_I2C1_Initialize 0070                 __size_of_PWM3_Initialize 000D  
                               ??___flge 0078                         ??_PMD_Initialize 00CA  
                       I2C1_ISR@i2c_data 0052                                 ??___wmul 00CE  
                    __end_of_eeprom_read 16C9                              _CCPTMRSbits 029F  
                        ?_FadeProcessSet 0070                          ??_RegisterWrite 007E  
                 __end_of_ADC_Initialize 09BA                              __pdataBANK1 00DA  
                      __size_of_TimerInt 0004                                 ?_GP1_FSM 0070  
                               ?_GP2_FSM 0070                                 ?_GP3_FSM 0070  
                __end_of_SecondDataSplit 0D84                                ___fladd@a 0074  
                              ___fladd@b 0070                  __size_of_FirstDataSplit 0048  
                              ___flsub@a 0054                                ___flsub@b 0058  
                              ___latbits 0002                            __pcstackBANK0 004C  
                          __pcstackBANK1 00CA         I2C1_StatusCallback@i2c_bus_state 0051  
               __size_of_PWM4_Initialize 000D                 __size_of_TMR2_Initialize 0008  
                               ?_PWM_GP1 0070                                 ?_PWM_GP2 0070  
                  __size_of_SecondConfig 0008                         eeprom_write@addr 0071  
                   __size_of_Encoder_FSM 0005                   ??_Encoder_AB_Interrupt 005C  
                  __size_of_RegisterRead 00B5                 __size_of_TMR0_StartTimer 0003  
                  __size_of_SetInterrupt 0009                   _PIN_MANAGER_Initialize 0125  
               __size_of_PWM5_Initialize 000A                 __size_of_TMR3_Initialize 0016  
                            ??i1_PWM_GP1 0076                              ??i1_PWM_GP2 0076  
                               ?___fladd 0070                                 ?___flsub 0054  
                        ?_ADC_Initialize 0070                                 _I2C1_ISR 15B6  
                            _gamma_table 0176                        ??_PWM1_Initialize 0070  
           ??_INTERRUPT_InterruptManager 007E                                _int2clear 00B4  
                              __pswtext1 10E4                                __pswtext2 10EC  
                              __pswtext3 10F4                                __pswtext4 07F1  
                              __pswtext5 12A5                                __pswtext6 1100  
                              __pswtext7 12AD                                __pswtext8 12B5  
                              __pswtext9 12BD                        ??_RGB_EncoderMode 0070  
                           _SecondConfig 0C3A                                 _CLC1GLS0 0F16  
                               _CLC1GLS1 0F17                                 _CLC1GLS2 0F18  
                               _CLC1GLS3 0F19                                 _CLC2GLS0 0F20  
                               _CLC2GLS1 0F21                                 _CLC2GLS2 0F22  
                               _CLC2GLS3 0F23                                 _CLC3GLS0 0F2A  
                               _CLC3GLS1 0F2B                                 _CLC3GLS2 0F2C  
                               _CLC3GLS3 0F2D                                 _CLC4GLS0 0F34  
                               _CLC4GLS1 0F35                                 _CLC4GLS2 0F36  
                               _CLC4GLS3 0F37                                 _CLC1SEL0 0F12  
                               _CLC1SEL1 0F13                                 _CLC1SEL2 0F14  
                               _CLC1SEL3 0F15                                 _CLC2SEL0 0F1C  
                               _CLC2SEL1 0F1D                                 _CLC2SEL2 0F1E  
                               _CLC2SEL3 0F1F                                 _CLC3SEL0 0F26  
                               _CLC3SEL1 0F27                                 _CLC3SEL2 0F28  
                               _CLC3SEL3 0F29                                 _CLC4SEL0 0F30  
                               _CLC4SEL1 0F31                                 _CLC4SEL2 0F32  
                               _CLC4SEL3 0F33                                 _I2STATUS 00C7  
                               _FADE_GP1 0ADC                                 _FADE_GP2 1475  
                               _FADE_GP3 1514                                 _CLC1_ISR 0D88  
                               _CLC2_ISR 0D84                                 _DEBOUNCE 00A6  
                               _GAMMAGP1 003E                                 _GAMMAGP2 003D  
                               _ANTBOUNC 00C5                __size_of_Int2StatusUpdate 0005  
                   __size_of_FirstConfig 0043                 __size_of_STD_EncoderMode 0017  
                            _CPUDOZEbits 0918                             _RegisterRead 1605  
                           _SetInterrupt 0AB5                                 _DPPERIOD 00C4  
                 ?i1_EncoderStatusUpdate 0070                        ??_PWM2_Initialize 0070  
                      ??_TMR0_Initialize 00CA                           ___wmul@product 00CE  
                               _LATBbits 010D                                 _LATCbits 010E  
                __size_of_ClearInterrupt 0003                                clear_ram0 12C5  
                            _eeprom_read 16BA            ?_I2C1_Initialize_ClockStreach 0070  
                               _PIE1bits 0091                                 _PIE3bits 0093  
              __size_of_FadeProcessClear 0008                                 _PMD2bits 0913  
                 __size_of_UpdateOut_GP1 0011                   __size_of_UpdateOut_GP2 0011  
                 __size_of_UpdateOut_GP3 0014      __size_of_INTERRUPT_InterruptManager 002C  
                               _PIR0bits 0010                                 _PIR1bits 0011  
                               _PIR3bits 0013                              _gp_fade_cnt 00AE  
                          ??_TMR0_Reload 0070                     __end_of_PWM_GP3_RLED 15B6  
                               _SSP1CON1 0215                                 _SSP1CON2 0216  
                               _SSP1CON3 0217                                 _TMR3_ISR 07D4  
                               _SSP1STAT 0214                      _I2C1_slaveWriteData 00DA  
                               _PWM_BLED 081D                                 _PWM_GLED 0A42  
                ?_EncoderSwitch_GetValue 0070                        ??_PWM3_Initialize 0070  
                             _ADCON0bits 009D                    __size_of_GP_Ports_FSM 001E  
                      ___wmul@multiplier 00CA                                 i1___wmul 0D4E  
                       ?_SecondDataSplit 0070                         __size_of_GP1_FSM 004B  
                       __size_of_GP2_FSM 004D                         __size_of_GP3_FSM 0050  
                               _WPUBbits 020D                                 _WPUCbits 020E  
               __size_of_TMR3_StartTimer 0003                        RegisterWrite@data 004F  
                       __size_of_PWM_GP1 0097                         __size_of_PWM_GP2 0071  
                      ??_PWM4_Initialize 0070                        ??_TMR2_Initialize 00CA  
                         i1_SetInterrupt 0FF7                 __size_of_TMR3_WriteTimer 000F  
                      _ADC_GetConversion 0997                                 _TimerInt 07ED  
                           _GP_Ports_FSM 0891                  ??_OSCILLATOR_Initialize 00CA  
         __end_of_EncoderSwitch_GetValue 13DE                       ?_ADC_GetConversion 00CA  
                      ??_TMR0_StartTimer 00CA                         __size_of___fladd 014F  
                       __size_of___flsub 001D                        ??_PWM5_Initialize 0070  
                      ??_TMR3_Initialize 00CA                      __end_of_TMR0_Reload 0C46  
                             _ANSELCbits 018E                           _FirstDataSplit 11C4  
                    ??_ADC_GetConversion 00CC                                 _fade_cnt 00AB  
               __size_of_I2C1_AddressSet 0013                               _T0CON0bits 0017  
                          _UpdateOut_GP1 125B                            _UpdateOut_GP2 124A  
                          _UpdateOut_GP3 1222             __size_of_I2C1_StatusCallback 0033  
                               __ptext10 011C                                 __ptext11 010B  
                               __ptext20 08AF                                 __ptext12 00F8  
                               __ptext21 09B2                                 __ptext13 127D  
                               __ptext30 1542                                 __ptext22 0997  
                               __ptext14 128D                                 __ptext31 0A42  
                               __ptext23 1514                                 __ptext15 00E0  
                               __ptext40 13D1                                 __ptext32 081D  
                               __ptext24 1475                                 __ptext16 00C9  
                               __ptext41 0AC3                                 __ptext33 0AC7  
                               __ptext25 14A3                                 __ptext17 0891  
                               __ptext50 0B0A                                 __ptext42 006C  
                               __ptext34 0A3E                                 __ptext26 0ADC  
                               __ptext18 0947                                 __ptext51 0801  
                               __ptext43 0069                                 __ptext35 0A36  
                               __ptext27 13DE                                 __ptext19 08FA  
                               __ptext60 11C4                                 __ptext52 1222  
                               __ptext36 0ABE                                 __ptext28 00AB  
                               __ptext61 0BF7                                 __ptext53 124A  
                               __ptext45 07D4                                 __ptext37 1349  
                               __ptext29 09BA                                 __ptext70 076A  
                               __ptext62 0D63                                 __ptext54 125B  
                               __ptext46 07ED                                 __ptext38 0AB5  
                               __ptext71 075D                                 __ptext63 16C9  
                               __ptext55 0C42                                 __ptext47 07DE  
                               __ptext39 13B5                                 __ptext80 0D8C  
                               __ptext72 0C46                                 __ptext64 17F3  
                               __ptext56 0D7A                                 __ptext48 15B6  
                               __ptext81 0FF7                                 __ptext73 0CBF  
                               __ptext65 17E8                                 __ptext57 0C3A  
                               __ptext49 15D2                                 __ptext82 0E88  
                               __ptext74 0D4E                                 __ptext66 1701  
                               __ptext58 126C                                 __ptext83 0FDA  
                               __ptext75 0CB5                                 __ptext67 177C  
                               __ptext59 1236                                 __ptext84 0E8B  
                               __ptext76 1605                                 __ptext68 1770  
                               __ptext85 1162                                 __ptext77 16BA  
                               __ptext69 06EE                                 __ptext78 0D84  
                               __ptext79 0D88                             _SSP1CON1bits 0215  
                           _SSP1CON2bits 0216                   __end_ofi1_SetInterrupt 1000  
               __size_of_CLC1_Initialize 0017                  TMR3_WriteTimer@timerVal 0070  
                               _gp_timer 00B2                  __size_ofi1_PWM_GP3_RLED 006C  
                          __size_of_main 0021                                 _intclear 00B5  
                      ??_STD_EncoderMode 0070                __end_of_ADC_GetConversion 09B2  
                       ??_FadeProcessSet 00CA                                 _temp_gp1 0036  
                               _temp_gp2 0035                                 _temp_gp3 0034  
                               _temp_blu 0031                                 _temp_red 0033  
                             _RC3PPSbits 0EA3                               _RB6PPSbits 0E9E  
                             _RC4PPSbits 0EA4           ??_I2C1_Initialize_ClockStreach 0070  
                          ??_DataInitSet 00CA                                 int$flags 007E  
                             _RB7PPSbits 0E9F                               _RC5PPSbits 0EA5  
                             _RC6PPSbits 0EA6                               _ODCONCbits 028E  
                             _RC7PPSbits 0EA7       __end_of_INTERRUPT_InterruptManager 0030  
             _INTERRUPT_InterruptManager 0004                 __size_of_CLC2_Initialize 0018  
                       RegisterWrite@add 0050                             _SSP1STATbits 0214  
                 __end_of_FirstDataSplit 120C   __end_of_EncoderSwitch_GetValueFiltered 13D1  
__size_of_EncoderSwitch_GetValueFiltered 001C           _EncoderSwitch_GetValueFiltered 13B5  
           __size_of_EncoderStatusUpdate 0004                           ?_UpdateOut_GP1 0070  
                         ?_UpdateOut_GP2 0070                           ?_UpdateOut_GP3 0070  
                             _INTCONbits 000B                              _NVMCON1bits 0895  
                       _Int2StatusUpdate 0ABE                  __size_of_WDT_Initialize 0004  
                      ??_TMR3_StartTimer 00CA                          ?i1_SetInterrupt 0070  
                               intlevel1 0000                 __size_of_CLC3_Initialize 0010  
                ?_PIN_MANAGER_Initialize 0070                           _ClearInterrupt 0069  
                            _PPSLOCKbits 0E0F                    __size_of_PWM_GP3_RLED 0074  
                        _PWM1_Initialize 1770                         _FadeProcessClear 0A36  
                       ??_ADC_Initialize 00CA                          _RGB_EncoderMode 16C9  
                      i1_I2C1_Initialize 126C                              _TMR0_Reload 0C42  
                     ?i1_I2C1_Initialize 0070                 __size_of_CLC4_Initialize 0010  
                      ??_TMR3_WriteTimer 0072                 __size_of_I2C1_Initialize 0011  
                  __end_of_RegisterWrite 0BF7                          ?_FirstDataSplit 0070  
                          __pstringtext1 0176                      __end_of_DataInitSet 00AB  
                    ??i1_I2C1_Initialize 0070                          _PWM2_Initialize 17E8  
                        _TMR0_Initialize 0169                  ??i1_EncoderStatusUpdate 0070  
               ??_Encoder_PushButton_FSM 00CB                            ___fladd@signs 0078  
                           _PWM_GP3_RLED 1542                            ??_Encoder_FSM 00D7  
                 __end_of_ClearInterrupt 006C                        ??_I2C1_AddressSet 00CA  
         __end_of_PIN_MANAGER_Initialize 015B                              _PWMTMRSbits 061F  
                          ?_eeprom_write 0070                             ___fladd@aexp 0079  
                           ___fladd@bexp 007A                               _STATUSbits 0003  
                           ?_eeprom_read 0070               __size_of_ADC_GetConversion 001B  
              __end_ofi1_I2C1_Initialize 127D                          _PWM3_Initialize 17F3  
                      ??_CLC1_Initialize 00CA            __size_of_Encoder_AB_Interrupt 00FC  
