

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Apr 11 12:19:56 2020

Microchip MPLAB XC8 C Compiler v2.10 (Pro license) build 20190730164152 Og9f 
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	plic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	swtext1,local,class=CONST,delta=2
    15                           	psect	swtext2,local,class=CONST,delta=2
    16                           	psect	swtext3,local,class=CONST,delta=2
    17                           	psect	swtext4,local,class=CONST,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text42,local,class=CODE,merge=1,delta=2
    20                           	psect	text45,local,class=CODE,merge=1,delta=2
    21                           	psect	text46,local,class=CODE,merge=1,delta=2
    22                           	psect	text47,local,class=CODE,merge=1,delta=2
    23                           	psect	swtext5,local,class=CONST,delta=2
    24                           	psect	swtext6,local,class=CONST,delta=2
    25                           	psect	text50,local,class=CODE,merge=1,delta=2
    26                           	psect	text51,local,class=CODE,merge=1,delta=2
    27                           	psect	text52,local,class=CODE,merge=1,delta=2
    28                           	psect	text56,local,class=CODE,merge=1,delta=2
    29                           	psect	text57,local,class=CODE,merge=1,delta=2
    30                           	psect	text58,local,class=CODE,merge=1,delta=2
    31                           	psect	text59,local,class=CODE,merge=1,delta=2
    32                           	psect	swtext7,local,class=CONST,delta=2
    33                           	psect	swtext8,local,class=CONST,delta=2
    34                           	psect	swtext9,local,class=CONST,delta=2
    35                           	psect	text71,local,class=CODE,merge=1,delta=2
    36                           	psect	swtext10,local,class=CONST,delta=2
    37                           	psect	text76,local,class=CODE,merge=1,delta=2
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.10
    41                           ; Generated 31/07/2019 GMT
    42                           ; 
    43                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F18345 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0097                     	;# 
   117  009B                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  0111                     	;# 
   127  0112                     	;# 
   128  0113                     	;# 
   129  0114                     	;# 
   130  0115                     	;# 
   131  0116                     	;# 
   132  0117                     	;# 
   133  0118                     	;# 
   134  0119                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  018E                     	;# 
   138  0197                     	;# 
   139  0199                     	;# 
   140  0199                     	;# 
   141  0199                     	;# 
   142  019A                     	;# 
   143  019A                     	;# 
   144  019A                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019C                     	;# 
   151  019C                     	;# 
   152  019C                     	;# 
   153  019D                     	;# 
   154  019D                     	;# 
   155  019D                     	;# 
   156  019E                     	;# 
   157  019E                     	;# 
   158  019E                     	;# 
   159  019F                     	;# 
   160  019F                     	;# 
   161  019F                     	;# 
   162  019F                     	;# 
   163  019F                     	;# 
   164  020C                     	;# 
   165  020D                     	;# 
   166  020E                     	;# 
   167  0211                     	;# 
   168  0211                     	;# 
   169  0212                     	;# 
   170  0212                     	;# 
   171  0213                     	;# 
   172  0213                     	;# 
   173  0214                     	;# 
   174  0214                     	;# 
   175  0215                     	;# 
   176  0215                     	;# 
   177  0215                     	;# 
   178  0215                     	;# 
   179  0216                     	;# 
   180  0216                     	;# 
   181  0217                     	;# 
   182  0217                     	;# 
   183  0219                     	;# 
   184  021A                     	;# 
   185  021B                     	;# 
   186  021C                     	;# 
   187  021D                     	;# 
   188  021D                     	;# 
   189  021E                     	;# 
   190  021F                     	;# 
   191  028C                     	;# 
   192  028D                     	;# 
   193  028E                     	;# 
   194  0291                     	;# 
   195  0291                     	;# 
   196  0292                     	;# 
   197  0293                     	;# 
   198  0294                     	;# 
   199  0295                     	;# 
   200  0295                     	;# 
   201  0296                     	;# 
   202  0297                     	;# 
   203  0298                     	;# 
   204  029F                     	;# 
   205  030C                     	;# 
   206  030D                     	;# 
   207  030E                     	;# 
   208  0311                     	;# 
   209  0311                     	;# 
   210  0312                     	;# 
   211  0313                     	;# 
   212  0314                     	;# 
   213  0315                     	;# 
   214  0315                     	;# 
   215  0316                     	;# 
   216  0317                     	;# 
   217  0318                     	;# 
   218  038C                     	;# 
   219  038D                     	;# 
   220  038E                     	;# 
   221  0391                     	;# 
   222  0392                     	;# 
   223  0393                     	;# 
   224  0394                     	;# 
   225  0395                     	;# 
   226  0396                     	;# 
   227  0397                     	;# 
   228  0398                     	;# 
   229  0399                     	;# 
   230  039A                     	;# 
   231  039C                     	;# 
   232  039D                     	;# 
   233  039E                     	;# 
   234  039F                     	;# 
   235  0411                     	;# 
   236  0411                     	;# 
   237  0412                     	;# 
   238  0413                     	;# 
   239  0414                     	;# 
   240  0415                     	;# 
   241  0416                     	;# 
   242  0417                     	;# 
   243  0418                     	;# 
   244  0418                     	;# 
   245  0419                     	;# 
   246  041A                     	;# 
   247  041B                     	;# 
   248  041C                     	;# 
   249  041D                     	;# 
   250  041E                     	;# 
   251  041F                     	;# 
   252  0498                     	;# 
   253  0498                     	;# 
   254  0499                     	;# 
   255  049A                     	;# 
   256  049B                     	;# 
   257  049B                     	;# 
   258  049C                     	;# 
   259  049D                     	;# 
   260  049E                     	;# 
   261  049F                     	;# 
   262  0617                     	;# 
   263  0618                     	;# 
   264  0619                     	;# 
   265  0619                     	;# 
   266  061A                     	;# 
   267  061B                     	;# 
   268  061C                     	;# 
   269  061C                     	;# 
   270  061F                     	;# 
   271  0691                     	;# 
   272  0692                     	;# 
   273  0693                     	;# 
   274  0694                     	;# 
   275  0695                     	;# 
   276  0696                     	;# 
   277  0697                     	;# 
   278  0698                     	;# 
   279  0699                     	;# 
   280  0711                     	;# 
   281  0712                     	;# 
   282  0713                     	;# 
   283  0714                     	;# 
   284  0715                     	;# 
   285  0716                     	;# 
   286  0717                     	;# 
   287  0718                     	;# 
   288  0719                     	;# 
   289  0891                     	;# 
   290  0891                     	;# 
   291  0891                     	;# 
   292  0891                     	;# 
   293  0891                     	;# 
   294  0891                     	;# 
   295  0892                     	;# 
   296  0892                     	;# 
   297  0892                     	;# 
   298  0893                     	;# 
   299  0893                     	;# 
   300  0893                     	;# 
   301  0893                     	;# 
   302  0893                     	;# 
   303  0893                     	;# 
   304  0894                     	;# 
   305  0894                     	;# 
   306  0894                     	;# 
   307  0895                     	;# 
   308  0895                     	;# 
   309  0895                     	;# 
   310  0896                     	;# 
   311  0896                     	;# 
   312  0896                     	;# 
   313  089B                     	;# 
   314  0911                     	;# 
   315  0912                     	;# 
   316  0913                     	;# 
   317  0914                     	;# 
   318  0915                     	;# 
   319  0916                     	;# 
   320  0918                     	;# 
   321  0919                     	;# 
   322  091A                     	;# 
   323  091B                     	;# 
   324  091C                     	;# 
   325  091D                     	;# 
   326  091E                     	;# 
   327  091F                     	;# 
   328  0E0F                     	;# 
   329  0E10                     	;# 
   330  0E11                     	;# 
   331  0E12                     	;# 
   332  0E13                     	;# 
   333  0E14                     	;# 
   334  0E15                     	;# 
   335  0E16                     	;# 
   336  0E17                     	;# 
   337  0E18                     	;# 
   338  0E19                     	;# 
   339  0E1A                     	;# 
   340  0E1B                     	;# 
   341  0E1C                     	;# 
   342  0E1D                     	;# 
   343  0E1E                     	;# 
   344  0E1F                     	;# 
   345  0E20                     	;# 
   346  0E21                     	;# 
   347  0E22                     	;# 
   348  0E24                     	;# 
   349  0E25                     	;# 
   350  0E28                     	;# 
   351  0E29                     	;# 
   352  0E2A                     	;# 
   353  0E2B                     	;# 
   354  0E2C                     	;# 
   355  0E2D                     	;# 
   356  0E2E                     	;# 
   357  0E2F                     	;# 
   358  0E90                     	;# 
   359  0E91                     	;# 
   360  0E92                     	;# 
   361  0E94                     	;# 
   362  0E95                     	;# 
   363  0E9C                     	;# 
   364  0E9D                     	;# 
   365  0E9E                     	;# 
   366  0E9F                     	;# 
   367  0EA0                     	;# 
   368  0EA1                     	;# 
   369  0EA2                     	;# 
   370  0EA3                     	;# 
   371  0EA4                     	;# 
   372  0EA5                     	;# 
   373  0EA6                     	;# 
   374  0EA7                     	;# 
   375  0F0F                     	;# 
   376  0F10                     	;# 
   377  0F11                     	;# 
   378  0F12                     	;# 
   379  0F13                     	;# 
   380  0F14                     	;# 
   381  0F15                     	;# 
   382  0F16                     	;# 
   383  0F17                     	;# 
   384  0F18                     	;# 
   385  0F19                     	;# 
   386  0F1A                     	;# 
   387  0F1B                     	;# 
   388  0F1C                     	;# 
   389  0F1D                     	;# 
   390  0F1E                     	;# 
   391  0F1F                     	;# 
   392  0F20                     	;# 
   393  0F21                     	;# 
   394  0F22                     	;# 
   395  0F23                     	;# 
   396  0F24                     	;# 
   397  0F25                     	;# 
   398  0F26                     	;# 
   399  0F27                     	;# 
   400  0F28                     	;# 
   401  0F29                     	;# 
   402  0F2A                     	;# 
   403  0F2B                     	;# 
   404  0F2C                     	;# 
   405  0F2D                     	;# 
   406  0F2E                     	;# 
   407  0F2F                     	;# 
   408  0F30                     	;# 
   409  0F31                     	;# 
   410  0F32                     	;# 
   411  0F33                     	;# 
   412  0F34                     	;# 
   413  0F35                     	;# 
   414  0F36                     	;# 
   415  0F37                     	;# 
   416  0FE4                     	;# 
   417  0FE5                     	;# 
   418  0FE6                     	;# 
   419  0FE7                     	;# 
   420  0FE8                     	;# 
   421  0FE9                     	;# 
   422  0FEA                     	;# 
   423  0FEB                     	;# 
   424  0FED                     	;# 
   425  0FEE                     	;# 
   426  0FEF                     	;# 
   427  0000                     	;# 
   428  0001                     	;# 
   429  0002                     	;# 
   430  0003                     	;# 
   431  0004                     	;# 
   432  0005                     	;# 
   433  0006                     	;# 
   434  0007                     	;# 
   435  0008                     	;# 
   436  0009                     	;# 
   437  000A                     	;# 
   438  000B                     	;# 
   439  000C                     	;# 
   440  000D                     	;# 
   441  000E                     	;# 
   442  0010                     	;# 
   443  0011                     	;# 
   444  0012                     	;# 
   445  0013                     	;# 
   446  0014                     	;# 
   447  0015                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0016                     	;# 
   451  0017                     	;# 
   452  0018                     	;# 
   453  0019                     	;# 
   454  0019                     	;# 
   455  001A                     	;# 
   456  001B                     	;# 
   457  001C                     	;# 
   458  001D                     	;# 
   459  001E                     	;# 
   460  001F                     	;# 
   461  008C                     	;# 
   462  008D                     	;# 
   463  008E                     	;# 
   464  0090                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0097                     	;# 
   470  009B                     	;# 
   471  009B                     	;# 
   472  009C                     	;# 
   473  009D                     	;# 
   474  009E                     	;# 
   475  009F                     	;# 
   476  010C                     	;# 
   477  010D                     	;# 
   478  010E                     	;# 
   479  0111                     	;# 
   480  0112                     	;# 
   481  0113                     	;# 
   482  0114                     	;# 
   483  0115                     	;# 
   484  0116                     	;# 
   485  0117                     	;# 
   486  0118                     	;# 
   487  0119                     	;# 
   488  018C                     	;# 
   489  018D                     	;# 
   490  018E                     	;# 
   491  0197                     	;# 
   492  0199                     	;# 
   493  0199                     	;# 
   494  0199                     	;# 
   495  019A                     	;# 
   496  019A                     	;# 
   497  019A                     	;# 
   498  019B                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019B                     	;# 
   502  019B                     	;# 
   503  019C                     	;# 
   504  019C                     	;# 
   505  019C                     	;# 
   506  019D                     	;# 
   507  019D                     	;# 
   508  019D                     	;# 
   509  019E                     	;# 
   510  019E                     	;# 
   511  019E                     	;# 
   512  019F                     	;# 
   513  019F                     	;# 
   514  019F                     	;# 
   515  019F                     	;# 
   516  019F                     	;# 
   517  020C                     	;# 
   518  020D                     	;# 
   519  020E                     	;# 
   520  0211                     	;# 
   521  0211                     	;# 
   522  0212                     	;# 
   523  0212                     	;# 
   524  0213                     	;# 
   525  0213                     	;# 
   526  0214                     	;# 
   527  0214                     	;# 
   528  0215                     	;# 
   529  0215                     	;# 
   530  0215                     	;# 
   531  0215                     	;# 
   532  0216                     	;# 
   533  0216                     	;# 
   534  0217                     	;# 
   535  0217                     	;# 
   536  0219                     	;# 
   537  021A                     	;# 
   538  021B                     	;# 
   539  021C                     	;# 
   540  021D                     	;# 
   541  021D                     	;# 
   542  021E                     	;# 
   543  021F                     	;# 
   544  028C                     	;# 
   545  028D                     	;# 
   546  028E                     	;# 
   547  0291                     	;# 
   548  0291                     	;# 
   549  0292                     	;# 
   550  0293                     	;# 
   551  0294                     	;# 
   552  0295                     	;# 
   553  0295                     	;# 
   554  0296                     	;# 
   555  0297                     	;# 
   556  0298                     	;# 
   557  029F                     	;# 
   558  030C                     	;# 
   559  030D                     	;# 
   560  030E                     	;# 
   561  0311                     	;# 
   562  0311                     	;# 
   563  0312                     	;# 
   564  0313                     	;# 
   565  0314                     	;# 
   566  0315                     	;# 
   567  0315                     	;# 
   568  0316                     	;# 
   569  0317                     	;# 
   570  0318                     	;# 
   571  038C                     	;# 
   572  038D                     	;# 
   573  038E                     	;# 
   574  0391                     	;# 
   575  0392                     	;# 
   576  0393                     	;# 
   577  0394                     	;# 
   578  0395                     	;# 
   579  0396                     	;# 
   580  0397                     	;# 
   581  0398                     	;# 
   582  0399                     	;# 
   583  039A                     	;# 
   584  039C                     	;# 
   585  039D                     	;# 
   586  039E                     	;# 
   587  039F                     	;# 
   588  0411                     	;# 
   589  0411                     	;# 
   590  0412                     	;# 
   591  0413                     	;# 
   592  0414                     	;# 
   593  0415                     	;# 
   594  0416                     	;# 
   595  0417                     	;# 
   596  0418                     	;# 
   597  0418                     	;# 
   598  0419                     	;# 
   599  041A                     	;# 
   600  041B                     	;# 
   601  041C                     	;# 
   602  041D                     	;# 
   603  041E                     	;# 
   604  041F                     	;# 
   605  0498                     	;# 
   606  0498                     	;# 
   607  0499                     	;# 
   608  049A                     	;# 
   609  049B                     	;# 
   610  049B                     	;# 
   611  049C                     	;# 
   612  049D                     	;# 
   613  049E                     	;# 
   614  049F                     	;# 
   615  0617                     	;# 
   616  0618                     	;# 
   617  0619                     	;# 
   618  0619                     	;# 
   619  061A                     	;# 
   620  061B                     	;# 
   621  061C                     	;# 
   622  061C                     	;# 
   623  061F                     	;# 
   624  0691                     	;# 
   625  0692                     	;# 
   626  0693                     	;# 
   627  0694                     	;# 
   628  0695                     	;# 
   629  0696                     	;# 
   630  0697                     	;# 
   631  0698                     	;# 
   632  0699                     	;# 
   633  0711                     	;# 
   634  0712                     	;# 
   635  0713                     	;# 
   636  0714                     	;# 
   637  0715                     	;# 
   638  0716                     	;# 
   639  0717                     	;# 
   640  0718                     	;# 
   641  0719                     	;# 
   642  0891                     	;# 
   643  0891                     	;# 
   644  0891                     	;# 
   645  0891                     	;# 
   646  0891                     	;# 
   647  0891                     	;# 
   648  0892                     	;# 
   649  0892                     	;# 
   650  0892                     	;# 
   651  0893                     	;# 
   652  0893                     	;# 
   653  0893                     	;# 
   654  0893                     	;# 
   655  0893                     	;# 
   656  0893                     	;# 
   657  0894                     	;# 
   658  0894                     	;# 
   659  0894                     	;# 
   660  0895                     	;# 
   661  0895                     	;# 
   662  0895                     	;# 
   663  0896                     	;# 
   664  0896                     	;# 
   665  0896                     	;# 
   666  089B                     	;# 
   667  0911                     	;# 
   668  0912                     	;# 
   669  0913                     	;# 
   670  0914                     	;# 
   671  0915                     	;# 
   672  0916                     	;# 
   673  0918                     	;# 
   674  0919                     	;# 
   675  091A                     	;# 
   676  091B                     	;# 
   677  091C                     	;# 
   678  091D                     	;# 
   679  091E                     	;# 
   680  091F                     	;# 
   681  0E0F                     	;# 
   682  0E10                     	;# 
   683  0E11                     	;# 
   684  0E12                     	;# 
   685  0E13                     	;# 
   686  0E14                     	;# 
   687  0E15                     	;# 
   688  0E16                     	;# 
   689  0E17                     	;# 
   690  0E18                     	;# 
   691  0E19                     	;# 
   692  0E1A                     	;# 
   693  0E1B                     	;# 
   694  0E1C                     	;# 
   695  0E1D                     	;# 
   696  0E1E                     	;# 
   697  0E1F                     	;# 
   698  0E20                     	;# 
   699  0E21                     	;# 
   700  0E22                     	;# 
   701  0E24                     	;# 
   702  0E25                     	;# 
   703  0E28                     	;# 
   704  0E29                     	;# 
   705  0E2A                     	;# 
   706  0E2B                     	;# 
   707  0E2C                     	;# 
   708  0E2D                     	;# 
   709  0E2E                     	;# 
   710  0E2F                     	;# 
   711  0E90                     	;# 
   712  0E91                     	;# 
   713  0E92                     	;# 
   714  0E94                     	;# 
   715  0E95                     	;# 
   716  0E9C                     	;# 
   717  0E9D                     	;# 
   718  0E9E                     	;# 
   719  0E9F                     	;# 
   720  0EA0                     	;# 
   721  0EA1                     	;# 
   722  0EA2                     	;# 
   723  0EA3                     	;# 
   724  0EA4                     	;# 
   725  0EA5                     	;# 
   726  0EA6                     	;# 
   727  0EA7                     	;# 
   728  0F0F                     	;# 
   729  0F10                     	;# 
   730  0F11                     	;# 
   731  0F12                     	;# 
   732  0F13                     	;# 
   733  0F14                     	;# 
   734  0F15                     	;# 
   735  0F16                     	;# 
   736  0F17                     	;# 
   737  0F18                     	;# 
   738  0F19                     	;# 
   739  0F1A                     	;# 
   740  0F1B                     	;# 
   741  0F1C                     	;# 
   742  0F1D                     	;# 
   743  0F1E                     	;# 
   744  0F1F                     	;# 
   745  0F20                     	;# 
   746  0F21                     	;# 
   747  0F22                     	;# 
   748  0F23                     	;# 
   749  0F24                     	;# 
   750  0F25                     	;# 
   751  0F26                     	;# 
   752  0F27                     	;# 
   753  0F28                     	;# 
   754  0F29                     	;# 
   755  0F2A                     	;# 
   756  0F2B                     	;# 
   757  0F2C                     	;# 
   758  0F2D                     	;# 
   759  0F2E                     	;# 
   760  0F2F                     	;# 
   761  0F30                     	;# 
   762  0F31                     	;# 
   763  0F32                     	;# 
   764  0F33                     	;# 
   765  0F34                     	;# 
   766  0F35                     	;# 
   767  0F36                     	;# 
   768  0F37                     	;# 
   769  0FE4                     	;# 
   770  0FE5                     	;# 
   771  0FE6                     	;# 
   772  0FE7                     	;# 
   773  0FE8                     	;# 
   774  0FE9                     	;# 
   775  0FEA                     	;# 
   776  0FEB                     	;# 
   777  0FED                     	;# 
   778  0FEE                     	;# 
   779  0FEF                     	;# 
   780  0000                     	;# 
   781  0001                     	;# 
   782  0002                     	;# 
   783  0003                     	;# 
   784  0004                     	;# 
   785  0005                     	;# 
   786  0006                     	;# 
   787  0007                     	;# 
   788  0008                     	;# 
   789  0009                     	;# 
   790  000A                     	;# 
   791  000B                     	;# 
   792  000C                     	;# 
   793  000D                     	;# 
   794  000E                     	;# 
   795  0010                     	;# 
   796  0011                     	;# 
   797  0012                     	;# 
   798  0013                     	;# 
   799  0014                     	;# 
   800  0015                     	;# 
   801  0015                     	;# 
   802  0016                     	;# 
   803  0016                     	;# 
   804  0017                     	;# 
   805  0018                     	;# 
   806  0019                     	;# 
   807  0019                     	;# 
   808  001A                     	;# 
   809  001B                     	;# 
   810  001C                     	;# 
   811  001D                     	;# 
   812  001E                     	;# 
   813  001F                     	;# 
   814  008C                     	;# 
   815  008D                     	;# 
   816  008E                     	;# 
   817  0090                     	;# 
   818  0091                     	;# 
   819  0092                     	;# 
   820  0093                     	;# 
   821  0094                     	;# 
   822  0097                     	;# 
   823  009B                     	;# 
   824  009B                     	;# 
   825  009C                     	;# 
   826  009D                     	;# 
   827  009E                     	;# 
   828  009F                     	;# 
   829  010C                     	;# 
   830  010D                     	;# 
   831  010E                     	;# 
   832  0111                     	;# 
   833  0112                     	;# 
   834  0113                     	;# 
   835  0114                     	;# 
   836  0115                     	;# 
   837  0116                     	;# 
   838  0117                     	;# 
   839  0118                     	;# 
   840  0119                     	;# 
   841  018C                     	;# 
   842  018D                     	;# 
   843  018E                     	;# 
   844  0197                     	;# 
   845  0199                     	;# 
   846  0199                     	;# 
   847  0199                     	;# 
   848  019A                     	;# 
   849  019A                     	;# 
   850  019A                     	;# 
   851  019B                     	;# 
   852  019B                     	;# 
   853  019B                     	;# 
   854  019B                     	;# 
   855  019B                     	;# 
   856  019C                     	;# 
   857  019C                     	;# 
   858  019C                     	;# 
   859  019D                     	;# 
   860  019D                     	;# 
   861  019D                     	;# 
   862  019E                     	;# 
   863  019E                     	;# 
   864  019E                     	;# 
   865  019F                     	;# 
   866  019F                     	;# 
   867  019F                     	;# 
   868  019F                     	;# 
   869  019F                     	;# 
   870  020C                     	;# 
   871  020D                     	;# 
   872  020E                     	;# 
   873  0211                     	;# 
   874  0211                     	;# 
   875  0212                     	;# 
   876  0212                     	;# 
   877  0213                     	;# 
   878  0213                     	;# 
   879  0214                     	;# 
   880  0214                     	;# 
   881  0215                     	;# 
   882  0215                     	;# 
   883  0215                     	;# 
   884  0215                     	;# 
   885  0216                     	;# 
   886  0216                     	;# 
   887  0217                     	;# 
   888  0217                     	;# 
   889  0219                     	;# 
   890  021A                     	;# 
   891  021B                     	;# 
   892  021C                     	;# 
   893  021D                     	;# 
   894  021D                     	;# 
   895  021E                     	;# 
   896  021F                     	;# 
   897  028C                     	;# 
   898  028D                     	;# 
   899  028E                     	;# 
   900  0291                     	;# 
   901  0291                     	;# 
   902  0292                     	;# 
   903  0293                     	;# 
   904  0294                     	;# 
   905  0295                     	;# 
   906  0295                     	;# 
   907  0296                     	;# 
   908  0297                     	;# 
   909  0298                     	;# 
   910  029F                     	;# 
   911  030C                     	;# 
   912  030D                     	;# 
   913  030E                     	;# 
   914  0311                     	;# 
   915  0311                     	;# 
   916  0312                     	;# 
   917  0313                     	;# 
   918  0314                     	;# 
   919  0315                     	;# 
   920  0315                     	;# 
   921  0316                     	;# 
   922  0317                     	;# 
   923  0318                     	;# 
   924  038C                     	;# 
   925  038D                     	;# 
   926  038E                     	;# 
   927  0391                     	;# 
   928  0392                     	;# 
   929  0393                     	;# 
   930  0394                     	;# 
   931  0395                     	;# 
   932  0396                     	;# 
   933  0397                     	;# 
   934  0398                     	;# 
   935  0399                     	;# 
   936  039A                     	;# 
   937  039C                     	;# 
   938  039D                     	;# 
   939  039E                     	;# 
   940  039F                     	;# 
   941  0411                     	;# 
   942  0411                     	;# 
   943  0412                     	;# 
   944  0413                     	;# 
   945  0414                     	;# 
   946  0415                     	;# 
   947  0416                     	;# 
   948  0417                     	;# 
   949  0418                     	;# 
   950  0418                     	;# 
   951  0419                     	;# 
   952  041A                     	;# 
   953  041B                     	;# 
   954  041C                     	;# 
   955  041D                     	;# 
   956  041E                     	;# 
   957  041F                     	;# 
   958  0498                     	;# 
   959  0498                     	;# 
   960  0499                     	;# 
   961  049A                     	;# 
   962  049B                     	;# 
   963  049B                     	;# 
   964  049C                     	;# 
   965  049D                     	;# 
   966  049E                     	;# 
   967  049F                     	;# 
   968  0617                     	;# 
   969  0618                     	;# 
   970  0619                     	;# 
   971  0619                     	;# 
   972  061A                     	;# 
   973  061B                     	;# 
   974  061C                     	;# 
   975  061C                     	;# 
   976  061F                     	;# 
   977  0691                     	;# 
   978  0692                     	;# 
   979  0693                     	;# 
   980  0694                     	;# 
   981  0695                     	;# 
   982  0696                     	;# 
   983  0697                     	;# 
   984  0698                     	;# 
   985  0699                     	;# 
   986  0711                     	;# 
   987  0712                     	;# 
   988  0713                     	;# 
   989  0714                     	;# 
   990  0715                     	;# 
   991  0716                     	;# 
   992  0717                     	;# 
   993  0718                     	;# 
   994  0719                     	;# 
   995  0891                     	;# 
   996  0891                     	;# 
   997  0891                     	;# 
   998  0891                     	;# 
   999  0891                     	;# 
  1000  0891                     	;# 
  1001  0892                     	;# 
  1002  0892                     	;# 
  1003  0892                     	;# 
  1004  0893                     	;# 
  1005  0893                     	;# 
  1006  0893                     	;# 
  1007  0893                     	;# 
  1008  0893                     	;# 
  1009  0893                     	;# 
  1010  0894                     	;# 
  1011  0894                     	;# 
  1012  0894                     	;# 
  1013  0895                     	;# 
  1014  0895                     	;# 
  1015  0895                     	;# 
  1016  0896                     	;# 
  1017  0896                     	;# 
  1018  0896                     	;# 
  1019  089B                     	;# 
  1020  0911                     	;# 
  1021  0912                     	;# 
  1022  0913                     	;# 
  1023  0914                     	;# 
  1024  0915                     	;# 
  1025  0916                     	;# 
  1026  0918                     	;# 
  1027  0919                     	;# 
  1028  091A                     	;# 
  1029  091B                     	;# 
  1030  091C                     	;# 
  1031  091D                     	;# 
  1032  091E                     	;# 
  1033  091F                     	;# 
  1034  0E0F                     	;# 
  1035  0E10                     	;# 
  1036  0E11                     	;# 
  1037  0E12                     	;# 
  1038  0E13                     	;# 
  1039  0E14                     	;# 
  1040  0E15                     	;# 
  1041  0E16                     	;# 
  1042  0E17                     	;# 
  1043  0E18                     	;# 
  1044  0E19                     	;# 
  1045  0E1A                     	;# 
  1046  0E1B                     	;# 
  1047  0E1C                     	;# 
  1048  0E1D                     	;# 
  1049  0E1E                     	;# 
  1050  0E1F                     	;# 
  1051  0E20                     	;# 
  1052  0E21                     	;# 
  1053  0E22                     	;# 
  1054  0E24                     	;# 
  1055  0E25                     	;# 
  1056  0E28                     	;# 
  1057  0E29                     	;# 
  1058  0E2A                     	;# 
  1059  0E2B                     	;# 
  1060  0E2C                     	;# 
  1061  0E2D                     	;# 
  1062  0E2E                     	;# 
  1063  0E2F                     	;# 
  1064  0E90                     	;# 
  1065  0E91                     	;# 
  1066  0E92                     	;# 
  1067  0E94                     	;# 
  1068  0E95                     	;# 
  1069  0E9C                     	;# 
  1070  0E9D                     	;# 
  1071  0E9E                     	;# 
  1072  0E9F                     	;# 
  1073  0EA0                     	;# 
  1074  0EA1                     	;# 
  1075  0EA2                     	;# 
  1076  0EA3                     	;# 
  1077  0EA4                     	;# 
  1078  0EA5                     	;# 
  1079  0EA6                     	;# 
  1080  0EA7                     	;# 
  1081  0F0F                     	;# 
  1082  0F10                     	;# 
  1083  0F11                     	;# 
  1084  0F12                     	;# 
  1085  0F13                     	;# 
  1086  0F14                     	;# 
  1087  0F15                     	;# 
  1088  0F16                     	;# 
  1089  0F17                     	;# 
  1090  0F18                     	;# 
  1091  0F19                     	;# 
  1092  0F1A                     	;# 
  1093  0F1B                     	;# 
  1094  0F1C                     	;# 
  1095  0F1D                     	;# 
  1096  0F1E                     	;# 
  1097  0F1F                     	;# 
  1098  0F20                     	;# 
  1099  0F21                     	;# 
  1100  0F22                     	;# 
  1101  0F23                     	;# 
  1102  0F24                     	;# 
  1103  0F25                     	;# 
  1104  0F26                     	;# 
  1105  0F27                     	;# 
  1106  0F28                     	;# 
  1107  0F29                     	;# 
  1108  0F2A                     	;# 
  1109  0F2B                     	;# 
  1110  0F2C                     	;# 
  1111  0F2D                     	;# 
  1112  0F2E                     	;# 
  1113  0F2F                     	;# 
  1114  0F30                     	;# 
  1115  0F31                     	;# 
  1116  0F32                     	;# 
  1117  0F33                     	;# 
  1118  0F34                     	;# 
  1119  0F35                     	;# 
  1120  0F36                     	;# 
  1121  0F37                     	;# 
  1122  0FE4                     	;# 
  1123  0FE5                     	;# 
  1124  0FE6                     	;# 
  1125  0FE7                     	;# 
  1126  0FE8                     	;# 
  1127  0FE9                     	;# 
  1128  0FEA                     	;# 
  1129  0FEB                     	;# 
  1130  0FED                     	;# 
  1131  0FEE                     	;# 
  1132  0FEF                     	;# 
  1133  0000                     	;# 
  1134  0001                     	;# 
  1135  0002                     	;# 
  1136  0003                     	;# 
  1137  0004                     	;# 
  1138  0005                     	;# 
  1139  0006                     	;# 
  1140  0007                     	;# 
  1141  0008                     	;# 
  1142  0009                     	;# 
  1143  000A                     	;# 
  1144  000B                     	;# 
  1145  000C                     	;# 
  1146  000D                     	;# 
  1147  000E                     	;# 
  1148  0010                     	;# 
  1149  0011                     	;# 
  1150  0012                     	;# 
  1151  0013                     	;# 
  1152  0014                     	;# 
  1153  0015                     	;# 
  1154  0015                     	;# 
  1155  0016                     	;# 
  1156  0016                     	;# 
  1157  0017                     	;# 
  1158  0018                     	;# 
  1159  0019                     	;# 
  1160  0019                     	;# 
  1161  001A                     	;# 
  1162  001B                     	;# 
  1163  001C                     	;# 
  1164  001D                     	;# 
  1165  001E                     	;# 
  1166  001F                     	;# 
  1167  008C                     	;# 
  1168  008D                     	;# 
  1169  008E                     	;# 
  1170  0090                     	;# 
  1171  0091                     	;# 
  1172  0092                     	;# 
  1173  0093                     	;# 
  1174  0094                     	;# 
  1175  0097                     	;# 
  1176  009B                     	;# 
  1177  009B                     	;# 
  1178  009C                     	;# 
  1179  009D                     	;# 
  1180  009E                     	;# 
  1181  009F                     	;# 
  1182  010C                     	;# 
  1183  010D                     	;# 
  1184  010E                     	;# 
  1185  0111                     	;# 
  1186  0112                     	;# 
  1187  0113                     	;# 
  1188  0114                     	;# 
  1189  0115                     	;# 
  1190  0116                     	;# 
  1191  0117                     	;# 
  1192  0118                     	;# 
  1193  0119                     	;# 
  1194  018C                     	;# 
  1195  018D                     	;# 
  1196  018E                     	;# 
  1197  0197                     	;# 
  1198  0199                     	;# 
  1199  0199                     	;# 
  1200  0199                     	;# 
  1201  019A                     	;# 
  1202  019A                     	;# 
  1203  019A                     	;# 
  1204  019B                     	;# 
  1205  019B                     	;# 
  1206  019B                     	;# 
  1207  019B                     	;# 
  1208  019B                     	;# 
  1209  019C                     	;# 
  1210  019C                     	;# 
  1211  019C                     	;# 
  1212  019D                     	;# 
  1213  019D                     	;# 
  1214  019D                     	;# 
  1215  019E                     	;# 
  1216  019E                     	;# 
  1217  019E                     	;# 
  1218  019F                     	;# 
  1219  019F                     	;# 
  1220  019F                     	;# 
  1221  019F                     	;# 
  1222  019F                     	;# 
  1223  020C                     	;# 
  1224  020D                     	;# 
  1225  020E                     	;# 
  1226  0211                     	;# 
  1227  0211                     	;# 
  1228  0212                     	;# 
  1229  0212                     	;# 
  1230  0213                     	;# 
  1231  0213                     	;# 
  1232  0214                     	;# 
  1233  0214                     	;# 
  1234  0215                     	;# 
  1235  0215                     	;# 
  1236  0215                     	;# 
  1237  0215                     	;# 
  1238  0216                     	;# 
  1239  0216                     	;# 
  1240  0217                     	;# 
  1241  0217                     	;# 
  1242  0219                     	;# 
  1243  021A                     	;# 
  1244  021B                     	;# 
  1245  021C                     	;# 
  1246  021D                     	;# 
  1247  021D                     	;# 
  1248  021E                     	;# 
  1249  021F                     	;# 
  1250  028C                     	;# 
  1251  028D                     	;# 
  1252  028E                     	;# 
  1253  0291                     	;# 
  1254  0291                     	;# 
  1255  0292                     	;# 
  1256  0293                     	;# 
  1257  0294                     	;# 
  1258  0295                     	;# 
  1259  0295                     	;# 
  1260  0296                     	;# 
  1261  0297                     	;# 
  1262  0298                     	;# 
  1263  029F                     	;# 
  1264  030C                     	;# 
  1265  030D                     	;# 
  1266  030E                     	;# 
  1267  0311                     	;# 
  1268  0311                     	;# 
  1269  0312                     	;# 
  1270  0313                     	;# 
  1271  0314                     	;# 
  1272  0315                     	;# 
  1273  0315                     	;# 
  1274  0316                     	;# 
  1275  0317                     	;# 
  1276  0318                     	;# 
  1277  038C                     	;# 
  1278  038D                     	;# 
  1279  038E                     	;# 
  1280  0391                     	;# 
  1281  0392                     	;# 
  1282  0393                     	;# 
  1283  0394                     	;# 
  1284  0395                     	;# 
  1285  0396                     	;# 
  1286  0397                     	;# 
  1287  0398                     	;# 
  1288  0399                     	;# 
  1289  039A                     	;# 
  1290  039C                     	;# 
  1291  039D                     	;# 
  1292  039E                     	;# 
  1293  039F                     	;# 
  1294  0411                     	;# 
  1295  0411                     	;# 
  1296  0412                     	;# 
  1297  0413                     	;# 
  1298  0414                     	;# 
  1299  0415                     	;# 
  1300  0416                     	;# 
  1301  0417                     	;# 
  1302  0418                     	;# 
  1303  0418                     	;# 
  1304  0419                     	;# 
  1305  041A                     	;# 
  1306  041B                     	;# 
  1307  041C                     	;# 
  1308  041D                     	;# 
  1309  041E                     	;# 
  1310  041F                     	;# 
  1311  0498                     	;# 
  1312  0498                     	;# 
  1313  0499                     	;# 
  1314  049A                     	;# 
  1315  049B                     	;# 
  1316  049B                     	;# 
  1317  049C                     	;# 
  1318  049D                     	;# 
  1319  049E                     	;# 
  1320  049F                     	;# 
  1321  0617                     	;# 
  1322  0618                     	;# 
  1323  0619                     	;# 
  1324  0619                     	;# 
  1325  061A                     	;# 
  1326  061B                     	;# 
  1327  061C                     	;# 
  1328  061C                     	;# 
  1329  061F                     	;# 
  1330  0691                     	;# 
  1331  0692                     	;# 
  1332  0693                     	;# 
  1333  0694                     	;# 
  1334  0695                     	;# 
  1335  0696                     	;# 
  1336  0697                     	;# 
  1337  0698                     	;# 
  1338  0699                     	;# 
  1339  0711                     	;# 
  1340  0712                     	;# 
  1341  0713                     	;# 
  1342  0714                     	;# 
  1343  0715                     	;# 
  1344  0716                     	;# 
  1345  0717                     	;# 
  1346  0718                     	;# 
  1347  0719                     	;# 
  1348  0891                     	;# 
  1349  0891                     	;# 
  1350  0891                     	;# 
  1351  0891                     	;# 
  1352  0891                     	;# 
  1353  0891                     	;# 
  1354  0892                     	;# 
  1355  0892                     	;# 
  1356  0892                     	;# 
  1357  0893                     	;# 
  1358  0893                     	;# 
  1359  0893                     	;# 
  1360  0893                     	;# 
  1361  0893                     	;# 
  1362  0893                     	;# 
  1363  0894                     	;# 
  1364  0894                     	;# 
  1365  0894                     	;# 
  1366  0895                     	;# 
  1367  0895                     	;# 
  1368  0895                     	;# 
  1369  0896                     	;# 
  1370  0896                     	;# 
  1371  0896                     	;# 
  1372  089B                     	;# 
  1373  0911                     	;# 
  1374  0912                     	;# 
  1375  0913                     	;# 
  1376  0914                     	;# 
  1377  0915                     	;# 
  1378  0916                     	;# 
  1379  0918                     	;# 
  1380  0919                     	;# 
  1381  091A                     	;# 
  1382  091B                     	;# 
  1383  091C                     	;# 
  1384  091D                     	;# 
  1385  091E                     	;# 
  1386  091F                     	;# 
  1387  0E0F                     	;# 
  1388  0E10                     	;# 
  1389  0E11                     	;# 
  1390  0E12                     	;# 
  1391  0E13                     	;# 
  1392  0E14                     	;# 
  1393  0E15                     	;# 
  1394  0E16                     	;# 
  1395  0E17                     	;# 
  1396  0E18                     	;# 
  1397  0E19                     	;# 
  1398  0E1A                     	;# 
  1399  0E1B                     	;# 
  1400  0E1C                     	;# 
  1401  0E1D                     	;# 
  1402  0E1E                     	;# 
  1403  0E1F                     	;# 
  1404  0E20                     	;# 
  1405  0E21                     	;# 
  1406  0E22                     	;# 
  1407  0E24                     	;# 
  1408  0E25                     	;# 
  1409  0E28                     	;# 
  1410  0E29                     	;# 
  1411  0E2A                     	;# 
  1412  0E2B                     	;# 
  1413  0E2C                     	;# 
  1414  0E2D                     	;# 
  1415  0E2E                     	;# 
  1416  0E2F                     	;# 
  1417  0E90                     	;# 
  1418  0E91                     	;# 
  1419  0E92                     	;# 
  1420  0E94                     	;# 
  1421  0E95                     	;# 
  1422  0E9C                     	;# 
  1423  0E9D                     	;# 
  1424  0E9E                     	;# 
  1425  0E9F                     	;# 
  1426  0EA0                     	;# 
  1427  0EA1                     	;# 
  1428  0EA2                     	;# 
  1429  0EA3                     	;# 
  1430  0EA4                     	;# 
  1431  0EA5                     	;# 
  1432  0EA6                     	;# 
  1433  0EA7                     	;# 
  1434  0F0F                     	;# 
  1435  0F10                     	;# 
  1436  0F11                     	;# 
  1437  0F12                     	;# 
  1438  0F13                     	;# 
  1439  0F14                     	;# 
  1440  0F15                     	;# 
  1441  0F16                     	;# 
  1442  0F17                     	;# 
  1443  0F18                     	;# 
  1444  0F19                     	;# 
  1445  0F1A                     	;# 
  1446  0F1B                     	;# 
  1447  0F1C                     	;# 
  1448  0F1D                     	;# 
  1449  0F1E                     	;# 
  1450  0F1F                     	;# 
  1451  0F20                     	;# 
  1452  0F21                     	;# 
  1453  0F22                     	;# 
  1454  0F23                     	;# 
  1455  0F24                     	;# 
  1456  0F25                     	;# 
  1457  0F26                     	;# 
  1458  0F27                     	;# 
  1459  0F28                     	;# 
  1460  0F29                     	;# 
  1461  0F2A                     	;# 
  1462  0F2B                     	;# 
  1463  0F2C                     	;# 
  1464  0F2D                     	;# 
  1465  0F2E                     	;# 
  1466  0F2F                     	;# 
  1467  0F30                     	;# 
  1468  0F31                     	;# 
  1469  0F32                     	;# 
  1470  0F33                     	;# 
  1471  0F34                     	;# 
  1472  0F35                     	;# 
  1473  0F36                     	;# 
  1474  0F37                     	;# 
  1475  0FE4                     	;# 
  1476  0FE5                     	;# 
  1477  0FE6                     	;# 
  1478  0FE7                     	;# 
  1479  0FE8                     	;# 
  1480  0FE9                     	;# 
  1481  0FEA                     	;# 
  1482  0FEB                     	;# 
  1483  0FED                     	;# 
  1484  0FEE                     	;# 
  1485  0FEF                     	;# 
  1486  0000                     	;# 
  1487  0001                     	;# 
  1488  0002                     	;# 
  1489  0003                     	;# 
  1490  0004                     	;# 
  1491  0005                     	;# 
  1492  0006                     	;# 
  1493  0007                     	;# 
  1494  0008                     	;# 
  1495  0009                     	;# 
  1496  000A                     	;# 
  1497  000B                     	;# 
  1498  000C                     	;# 
  1499  000D                     	;# 
  1500  000E                     	;# 
  1501  0010                     	;# 
  1502  0011                     	;# 
  1503  0012                     	;# 
  1504  0013                     	;# 
  1505  0014                     	;# 
  1506  0015                     	;# 
  1507  0015                     	;# 
  1508  0016                     	;# 
  1509  0016                     	;# 
  1510  0017                     	;# 
  1511  0018                     	;# 
  1512  0019                     	;# 
  1513  0019                     	;# 
  1514  001A                     	;# 
  1515  001B                     	;# 
  1516  001C                     	;# 
  1517  001D                     	;# 
  1518  001E                     	;# 
  1519  001F                     	;# 
  1520  008C                     	;# 
  1521  008D                     	;# 
  1522  008E                     	;# 
  1523  0090                     	;# 
  1524  0091                     	;# 
  1525  0092                     	;# 
  1526  0093                     	;# 
  1527  0094                     	;# 
  1528  0097                     	;# 
  1529  009B                     	;# 
  1530  009B                     	;# 
  1531  009C                     	;# 
  1532  009D                     	;# 
  1533  009E                     	;# 
  1534  009F                     	;# 
  1535  010C                     	;# 
  1536  010D                     	;# 
  1537  010E                     	;# 
  1538  0111                     	;# 
  1539  0112                     	;# 
  1540  0113                     	;# 
  1541  0114                     	;# 
  1542  0115                     	;# 
  1543  0116                     	;# 
  1544  0117                     	;# 
  1545  0118                     	;# 
  1546  0119                     	;# 
  1547  018C                     	;# 
  1548  018D                     	;# 
  1549  018E                     	;# 
  1550  0197                     	;# 
  1551  0199                     	;# 
  1552  0199                     	;# 
  1553  0199                     	;# 
  1554  019A                     	;# 
  1555  019A                     	;# 
  1556  019A                     	;# 
  1557  019B                     	;# 
  1558  019B                     	;# 
  1559  019B                     	;# 
  1560  019B                     	;# 
  1561  019B                     	;# 
  1562  019C                     	;# 
  1563  019C                     	;# 
  1564  019C                     	;# 
  1565  019D                     	;# 
  1566  019D                     	;# 
  1567  019D                     	;# 
  1568  019E                     	;# 
  1569  019E                     	;# 
  1570  019E                     	;# 
  1571  019F                     	;# 
  1572  019F                     	;# 
  1573  019F                     	;# 
  1574  019F                     	;# 
  1575  019F                     	;# 
  1576  020C                     	;# 
  1577  020D                     	;# 
  1578  020E                     	;# 
  1579  0211                     	;# 
  1580  0211                     	;# 
  1581  0212                     	;# 
  1582  0212                     	;# 
  1583  0213                     	;# 
  1584  0213                     	;# 
  1585  0214                     	;# 
  1586  0214                     	;# 
  1587  0215                     	;# 
  1588  0215                     	;# 
  1589  0215                     	;# 
  1590  0215                     	;# 
  1591  0216                     	;# 
  1592  0216                     	;# 
  1593  0217                     	;# 
  1594  0217                     	;# 
  1595  0219                     	;# 
  1596  021A                     	;# 
  1597  021B                     	;# 
  1598  021C                     	;# 
  1599  021D                     	;# 
  1600  021D                     	;# 
  1601  021E                     	;# 
  1602  021F                     	;# 
  1603  028C                     	;# 
  1604  028D                     	;# 
  1605  028E                     	;# 
  1606  0291                     	;# 
  1607  0291                     	;# 
  1608  0292                     	;# 
  1609  0293                     	;# 
  1610  0294                     	;# 
  1611  0295                     	;# 
  1612  0295                     	;# 
  1613  0296                     	;# 
  1614  0297                     	;# 
  1615  0298                     	;# 
  1616  029F                     	;# 
  1617  030C                     	;# 
  1618  030D                     	;# 
  1619  030E                     	;# 
  1620  0311                     	;# 
  1621  0311                     	;# 
  1622  0312                     	;# 
  1623  0313                     	;# 
  1624  0314                     	;# 
  1625  0315                     	;# 
  1626  0315                     	;# 
  1627  0316                     	;# 
  1628  0317                     	;# 
  1629  0318                     	;# 
  1630  038C                     	;# 
  1631  038D                     	;# 
  1632  038E                     	;# 
  1633  0391                     	;# 
  1634  0392                     	;# 
  1635  0393                     	;# 
  1636  0394                     	;# 
  1637  0395                     	;# 
  1638  0396                     	;# 
  1639  0397                     	;# 
  1640  0398                     	;# 
  1641  0399                     	;# 
  1642  039A                     	;# 
  1643  039C                     	;# 
  1644  039D                     	;# 
  1645  039E                     	;# 
  1646  039F                     	;# 
  1647  0411                     	;# 
  1648  0411                     	;# 
  1649  0412                     	;# 
  1650  0413                     	;# 
  1651  0414                     	;# 
  1652  0415                     	;# 
  1653  0416                     	;# 
  1654  0417                     	;# 
  1655  0418                     	;# 
  1656  0418                     	;# 
  1657  0419                     	;# 
  1658  041A                     	;# 
  1659  041B                     	;# 
  1660  041C                     	;# 
  1661  041D                     	;# 
  1662  041E                     	;# 
  1663  041F                     	;# 
  1664  0498                     	;# 
  1665  0498                     	;# 
  1666  0499                     	;# 
  1667  049A                     	;# 
  1668  049B                     	;# 
  1669  049B                     	;# 
  1670  049C                     	;# 
  1671  049D                     	;# 
  1672  049E                     	;# 
  1673  049F                     	;# 
  1674  0617                     	;# 
  1675  0618                     	;# 
  1676  0619                     	;# 
  1677  0619                     	;# 
  1678  061A                     	;# 
  1679  061B                     	;# 
  1680  061C                     	;# 
  1681  061C                     	;# 
  1682  061F                     	;# 
  1683  0691                     	;# 
  1684  0692                     	;# 
  1685  0693                     	;# 
  1686  0694                     	;# 
  1687  0695                     	;# 
  1688  0696                     	;# 
  1689  0697                     	;# 
  1690  0698                     	;# 
  1691  0699                     	;# 
  1692  0711                     	;# 
  1693  0712                     	;# 
  1694  0713                     	;# 
  1695  0714                     	;# 
  1696  0715                     	;# 
  1697  0716                     	;# 
  1698  0717                     	;# 
  1699  0718                     	;# 
  1700  0719                     	;# 
  1701  0891                     	;# 
  1702  0891                     	;# 
  1703  0891                     	;# 
  1704  0891                     	;# 
  1705  0891                     	;# 
  1706  0891                     	;# 
  1707  0892                     	;# 
  1708  0892                     	;# 
  1709  0892                     	;# 
  1710  0893                     	;# 
  1711  0893                     	;# 
  1712  0893                     	;# 
  1713  0893                     	;# 
  1714  0893                     	;# 
  1715  0893                     	;# 
  1716  0894                     	;# 
  1717  0894                     	;# 
  1718  0894                     	;# 
  1719  0895                     	;# 
  1720  0895                     	;# 
  1721  0895                     	;# 
  1722  0896                     	;# 
  1723  0896                     	;# 
  1724  0896                     	;# 
  1725  089B                     	;# 
  1726  0911                     	;# 
  1727  0912                     	;# 
  1728  0913                     	;# 
  1729  0914                     	;# 
  1730  0915                     	;# 
  1731  0916                     	;# 
  1732  0918                     	;# 
  1733  0919                     	;# 
  1734  091A                     	;# 
  1735  091B                     	;# 
  1736  091C                     	;# 
  1737  091D                     	;# 
  1738  091E                     	;# 
  1739  091F                     	;# 
  1740  0E0F                     	;# 
  1741  0E10                     	;# 
  1742  0E11                     	;# 
  1743  0E12                     	;# 
  1744  0E13                     	;# 
  1745  0E14                     	;# 
  1746  0E15                     	;# 
  1747  0E16                     	;# 
  1748  0E17                     	;# 
  1749  0E18                     	;# 
  1750  0E19                     	;# 
  1751  0E1A                     	;# 
  1752  0E1B                     	;# 
  1753  0E1C                     	;# 
  1754  0E1D                     	;# 
  1755  0E1E                     	;# 
  1756  0E1F                     	;# 
  1757  0E20                     	;# 
  1758  0E21                     	;# 
  1759  0E22                     	;# 
  1760  0E24                     	;# 
  1761  0E25                     	;# 
  1762  0E28                     	;# 
  1763  0E29                     	;# 
  1764  0E2A                     	;# 
  1765  0E2B                     	;# 
  1766  0E2C                     	;# 
  1767  0E2D                     	;# 
  1768  0E2E                     	;# 
  1769  0E2F                     	;# 
  1770  0E90                     	;# 
  1771  0E91                     	;# 
  1772  0E92                     	;# 
  1773  0E94                     	;# 
  1774  0E95                     	;# 
  1775  0E9C                     	;# 
  1776  0E9D                     	;# 
  1777  0E9E                     	;# 
  1778  0E9F                     	;# 
  1779  0EA0                     	;# 
  1780  0EA1                     	;# 
  1781  0EA2                     	;# 
  1782  0EA3                     	;# 
  1783  0EA4                     	;# 
  1784  0EA5                     	;# 
  1785  0EA6                     	;# 
  1786  0EA7                     	;# 
  1787  0F0F                     	;# 
  1788  0F10                     	;# 
  1789  0F11                     	;# 
  1790  0F12                     	;# 
  1791  0F13                     	;# 
  1792  0F14                     	;# 
  1793  0F15                     	;# 
  1794  0F16                     	;# 
  1795  0F17                     	;# 
  1796  0F18                     	;# 
  1797  0F19                     	;# 
  1798  0F1A                     	;# 
  1799  0F1B                     	;# 
  1800  0F1C                     	;# 
  1801  0F1D                     	;# 
  1802  0F1E                     	;# 
  1803  0F1F                     	;# 
  1804  0F20                     	;# 
  1805  0F21                     	;# 
  1806  0F22                     	;# 
  1807  0F23                     	;# 
  1808  0F24                     	;# 
  1809  0F25                     	;# 
  1810  0F26                     	;# 
  1811  0F27                     	;# 
  1812  0F28                     	;# 
  1813  0F29                     	;# 
  1814  0F2A                     	;# 
  1815  0F2B                     	;# 
  1816  0F2C                     	;# 
  1817  0F2D                     	;# 
  1818  0F2E                     	;# 
  1819  0F2F                     	;# 
  1820  0F30                     	;# 
  1821  0F31                     	;# 
  1822  0F32                     	;# 
  1823  0F33                     	;# 
  1824  0F34                     	;# 
  1825  0F35                     	;# 
  1826  0F36                     	;# 
  1827  0F37                     	;# 
  1828  0FE4                     	;# 
  1829  0FE5                     	;# 
  1830  0FE6                     	;# 
  1831  0FE7                     	;# 
  1832  0FE8                     	;# 
  1833  0FE9                     	;# 
  1834  0FEA                     	;# 
  1835  0FEB                     	;# 
  1836  0FED                     	;# 
  1837  0FEE                     	;# 
  1838  0FEF                     	;# 
  1839  0000                     	;# 
  1840  0001                     	;# 
  1841  0002                     	;# 
  1842  0003                     	;# 
  1843  0004                     	;# 
  1844  0005                     	;# 
  1845  0006                     	;# 
  1846  0007                     	;# 
  1847  0008                     	;# 
  1848  0009                     	;# 
  1849  000A                     	;# 
  1850  000B                     	;# 
  1851  000C                     	;# 
  1852  000D                     	;# 
  1853  000E                     	;# 
  1854  0010                     	;# 
  1855  0011                     	;# 
  1856  0012                     	;# 
  1857  0013                     	;# 
  1858  0014                     	;# 
  1859  0015                     	;# 
  1860  0015                     	;# 
  1861  0016                     	;# 
  1862  0016                     	;# 
  1863  0017                     	;# 
  1864  0018                     	;# 
  1865  0019                     	;# 
  1866  0019                     	;# 
  1867  001A                     	;# 
  1868  001B                     	;# 
  1869  001C                     	;# 
  1870  001D                     	;# 
  1871  001E                     	;# 
  1872  001F                     	;# 
  1873  008C                     	;# 
  1874  008D                     	;# 
  1875  008E                     	;# 
  1876  0090                     	;# 
  1877  0091                     	;# 
  1878  0092                     	;# 
  1879  0093                     	;# 
  1880  0094                     	;# 
  1881  0097                     	;# 
  1882  009B                     	;# 
  1883  009B                     	;# 
  1884  009C                     	;# 
  1885  009D                     	;# 
  1886  009E                     	;# 
  1887  009F                     	;# 
  1888  010C                     	;# 
  1889  010D                     	;# 
  1890  010E                     	;# 
  1891  0111                     	;# 
  1892  0112                     	;# 
  1893  0113                     	;# 
  1894  0114                     	;# 
  1895  0115                     	;# 
  1896  0116                     	;# 
  1897  0117                     	;# 
  1898  0118                     	;# 
  1899  0119                     	;# 
  1900  018C                     	;# 
  1901  018D                     	;# 
  1902  018E                     	;# 
  1903  0197                     	;# 
  1904  0199                     	;# 
  1905  0199                     	;# 
  1906  0199                     	;# 
  1907  019A                     	;# 
  1908  019A                     	;# 
  1909  019A                     	;# 
  1910  019B                     	;# 
  1911  019B                     	;# 
  1912  019B                     	;# 
  1913  019B                     	;# 
  1914  019B                     	;# 
  1915  019C                     	;# 
  1916  019C                     	;# 
  1917  019C                     	;# 
  1918  019D                     	;# 
  1919  019D                     	;# 
  1920  019D                     	;# 
  1921  019E                     	;# 
  1922  019E                     	;# 
  1923  019E                     	;# 
  1924  019F                     	;# 
  1925  019F                     	;# 
  1926  019F                     	;# 
  1927  019F                     	;# 
  1928  019F                     	;# 
  1929  020C                     	;# 
  1930  020D                     	;# 
  1931  020E                     	;# 
  1932  0211                     	;# 
  1933  0211                     	;# 
  1934  0212                     	;# 
  1935  0212                     	;# 
  1936  0213                     	;# 
  1937  0213                     	;# 
  1938  0214                     	;# 
  1939  0214                     	;# 
  1940  0215                     	;# 
  1941  0215                     	;# 
  1942  0215                     	;# 
  1943  0215                     	;# 
  1944  0216                     	;# 
  1945  0216                     	;# 
  1946  0217                     	;# 
  1947  0217                     	;# 
  1948  0219                     	;# 
  1949  021A                     	;# 
  1950  021B                     	;# 
  1951  021C                     	;# 
  1952  021D                     	;# 
  1953  021D                     	;# 
  1954  021E                     	;# 
  1955  021F                     	;# 
  1956  028C                     	;# 
  1957  028D                     	;# 
  1958  028E                     	;# 
  1959  0291                     	;# 
  1960  0291                     	;# 
  1961  0292                     	;# 
  1962  0293                     	;# 
  1963  0294                     	;# 
  1964  0295                     	;# 
  1965  0295                     	;# 
  1966  0296                     	;# 
  1967  0297                     	;# 
  1968  0298                     	;# 
  1969  029F                     	;# 
  1970  030C                     	;# 
  1971  030D                     	;# 
  1972  030E                     	;# 
  1973  0311                     	;# 
  1974  0311                     	;# 
  1975  0312                     	;# 
  1976  0313                     	;# 
  1977  0314                     	;# 
  1978  0315                     	;# 
  1979  0315                     	;# 
  1980  0316                     	;# 
  1981  0317                     	;# 
  1982  0318                     	;# 
  1983  038C                     	;# 
  1984  038D                     	;# 
  1985  038E                     	;# 
  1986  0391                     	;# 
  1987  0392                     	;# 
  1988  0393                     	;# 
  1989  0394                     	;# 
  1990  0395                     	;# 
  1991  0396                     	;# 
  1992  0397                     	;# 
  1993  0398                     	;# 
  1994  0399                     	;# 
  1995  039A                     	;# 
  1996  039C                     	;# 
  1997  039D                     	;# 
  1998  039E                     	;# 
  1999  039F                     	;# 
  2000  0411                     	;# 
  2001  0411                     	;# 
  2002  0412                     	;# 
  2003  0413                     	;# 
  2004  0414                     	;# 
  2005  0415                     	;# 
  2006  0416                     	;# 
  2007  0417                     	;# 
  2008  0418                     	;# 
  2009  0418                     	;# 
  2010  0419                     	;# 
  2011  041A                     	;# 
  2012  041B                     	;# 
  2013  041C                     	;# 
  2014  041D                     	;# 
  2015  041E                     	;# 
  2016  041F                     	;# 
  2017  0498                     	;# 
  2018  0498                     	;# 
  2019  0499                     	;# 
  2020  049A                     	;# 
  2021  049B                     	;# 
  2022  049B                     	;# 
  2023  049C                     	;# 
  2024  049D                     	;# 
  2025  049E                     	;# 
  2026  049F                     	;# 
  2027  0617                     	;# 
  2028  0618                     	;# 
  2029  0619                     	;# 
  2030  0619                     	;# 
  2031  061A                     	;# 
  2032  061B                     	;# 
  2033  061C                     	;# 
  2034  061C                     	;# 
  2035  061F                     	;# 
  2036  0691                     	;# 
  2037  0692                     	;# 
  2038  0693                     	;# 
  2039  0694                     	;# 
  2040  0695                     	;# 
  2041  0696                     	;# 
  2042  0697                     	;# 
  2043  0698                     	;# 
  2044  0699                     	;# 
  2045  0711                     	;# 
  2046  0712                     	;# 
  2047  0713                     	;# 
  2048  0714                     	;# 
  2049  0715                     	;# 
  2050  0716                     	;# 
  2051  0717                     	;# 
  2052  0718                     	;# 
  2053  0719                     	;# 
  2054  0891                     	;# 
  2055  0891                     	;# 
  2056  0891                     	;# 
  2057  0891                     	;# 
  2058  0891                     	;# 
  2059  0891                     	;# 
  2060  0892                     	;# 
  2061  0892                     	;# 
  2062  0892                     	;# 
  2063  0893                     	;# 
  2064  0893                     	;# 
  2065  0893                     	;# 
  2066  0893                     	;# 
  2067  0893                     	;# 
  2068  0893                     	;# 
  2069  0894                     	;# 
  2070  0894                     	;# 
  2071  0894                     	;# 
  2072  0895                     	;# 
  2073  0895                     	;# 
  2074  0895                     	;# 
  2075  0896                     	;# 
  2076  0896                     	;# 
  2077  0896                     	;# 
  2078  089B                     	;# 
  2079  0911                     	;# 
  2080  0912                     	;# 
  2081  0913                     	;# 
  2082  0914                     	;# 
  2083  0915                     	;# 
  2084  0916                     	;# 
  2085  0918                     	;# 
  2086  0919                     	;# 
  2087  091A                     	;# 
  2088  091B                     	;# 
  2089  091C                     	;# 
  2090  091D                     	;# 
  2091  091E                     	;# 
  2092  091F                     	;# 
  2093  0E0F                     	;# 
  2094  0E10                     	;# 
  2095  0E11                     	;# 
  2096  0E12                     	;# 
  2097  0E13                     	;# 
  2098  0E14                     	;# 
  2099  0E15                     	;# 
  2100  0E16                     	;# 
  2101  0E17                     	;# 
  2102  0E18                     	;# 
  2103  0E19                     	;# 
  2104  0E1A                     	;# 
  2105  0E1B                     	;# 
  2106  0E1C                     	;# 
  2107  0E1D                     	;# 
  2108  0E1E                     	;# 
  2109  0E1F                     	;# 
  2110  0E20                     	;# 
  2111  0E21                     	;# 
  2112  0E22                     	;# 
  2113  0E24                     	;# 
  2114  0E25                     	;# 
  2115  0E28                     	;# 
  2116  0E29                     	;# 
  2117  0E2A                     	;# 
  2118  0E2B                     	;# 
  2119  0E2C                     	;# 
  2120  0E2D                     	;# 
  2121  0E2E                     	;# 
  2122  0E2F                     	;# 
  2123  0E90                     	;# 
  2124  0E91                     	;# 
  2125  0E92                     	;# 
  2126  0E94                     	;# 
  2127  0E95                     	;# 
  2128  0E9C                     	;# 
  2129  0E9D                     	;# 
  2130  0E9E                     	;# 
  2131  0E9F                     	;# 
  2132  0EA0                     	;# 
  2133  0EA1                     	;# 
  2134  0EA2                     	;# 
  2135  0EA3                     	;# 
  2136  0EA4                     	;# 
  2137  0EA5                     	;# 
  2138  0EA6                     	;# 
  2139  0EA7                     	;# 
  2140  0F0F                     	;# 
  2141  0F10                     	;# 
  2142  0F11                     	;# 
  2143  0F12                     	;# 
  2144  0F13                     	;# 
  2145  0F14                     	;# 
  2146  0F15                     	;# 
  2147  0F16                     	;# 
  2148  0F17                     	;# 
  2149  0F18                     	;# 
  2150  0F19                     	;# 
  2151  0F1A                     	;# 
  2152  0F1B                     	;# 
  2153  0F1C                     	;# 
  2154  0F1D                     	;# 
  2155  0F1E                     	;# 
  2156  0F1F                     	;# 
  2157  0F20                     	;# 
  2158  0F21                     	;# 
  2159  0F22                     	;# 
  2160  0F23                     	;# 
  2161  0F24                     	;# 
  2162  0F25                     	;# 
  2163  0F26                     	;# 
  2164  0F27                     	;# 
  2165  0F28                     	;# 
  2166  0F29                     	;# 
  2167  0F2A                     	;# 
  2168  0F2B                     	;# 
  2169  0F2C                     	;# 
  2170  0F2D                     	;# 
  2171  0F2E                     	;# 
  2172  0F2F                     	;# 
  2173  0F30                     	;# 
  2174  0F31                     	;# 
  2175  0F32                     	;# 
  2176  0F33                     	;# 
  2177  0F34                     	;# 
  2178  0F35                     	;# 
  2179  0F36                     	;# 
  2180  0F37                     	;# 
  2181  0FE4                     	;# 
  2182  0FE5                     	;# 
  2183  0FE6                     	;# 
  2184  0FE7                     	;# 
  2185  0FE8                     	;# 
  2186  0FE9                     	;# 
  2187  0FEA                     	;# 
  2188  0FEB                     	;# 
  2189  0FED                     	;# 
  2190  0FEE                     	;# 
  2191  0FEF                     	;# 
  2192  0000                     	;# 
  2193  0001                     	;# 
  2194  0002                     	;# 
  2195  0003                     	;# 
  2196  0004                     	;# 
  2197  0005                     	;# 
  2198  0006                     	;# 
  2199  0007                     	;# 
  2200  0008                     	;# 
  2201  0009                     	;# 
  2202  000A                     	;# 
  2203  000B                     	;# 
  2204  000C                     	;# 
  2205  000D                     	;# 
  2206  000E                     	;# 
  2207  0010                     	;# 
  2208  0011                     	;# 
  2209  0012                     	;# 
  2210  0013                     	;# 
  2211  0014                     	;# 
  2212  0015                     	;# 
  2213  0015                     	;# 
  2214  0016                     	;# 
  2215  0016                     	;# 
  2216  0017                     	;# 
  2217  0018                     	;# 
  2218  0019                     	;# 
  2219  0019                     	;# 
  2220  001A                     	;# 
  2221  001B                     	;# 
  2222  001C                     	;# 
  2223  001D                     	;# 
  2224  001E                     	;# 
  2225  001F                     	;# 
  2226  008C                     	;# 
  2227  008D                     	;# 
  2228  008E                     	;# 
  2229  0090                     	;# 
  2230  0091                     	;# 
  2231  0092                     	;# 
  2232  0093                     	;# 
  2233  0094                     	;# 
  2234  0097                     	;# 
  2235  009B                     	;# 
  2236  009B                     	;# 
  2237  009C                     	;# 
  2238  009D                     	;# 
  2239  009E                     	;# 
  2240  009F                     	;# 
  2241  010C                     	;# 
  2242  010D                     	;# 
  2243  010E                     	;# 
  2244  0111                     	;# 
  2245  0112                     	;# 
  2246  0113                     	;# 
  2247  0114                     	;# 
  2248  0115                     	;# 
  2249  0116                     	;# 
  2250  0117                     	;# 
  2251  0118                     	;# 
  2252  0119                     	;# 
  2253  018C                     	;# 
  2254  018D                     	;# 
  2255  018E                     	;# 
  2256  0197                     	;# 
  2257  0199                     	;# 
  2258  0199                     	;# 
  2259  0199                     	;# 
  2260  019A                     	;# 
  2261  019A                     	;# 
  2262  019A                     	;# 
  2263  019B                     	;# 
  2264  019B                     	;# 
  2265  019B                     	;# 
  2266  019B                     	;# 
  2267  019B                     	;# 
  2268  019C                     	;# 
  2269  019C                     	;# 
  2270  019C                     	;# 
  2271  019D                     	;# 
  2272  019D                     	;# 
  2273  019D                     	;# 
  2274  019E                     	;# 
  2275  019E                     	;# 
  2276  019E                     	;# 
  2277  019F                     	;# 
  2278  019F                     	;# 
  2279  019F                     	;# 
  2280  019F                     	;# 
  2281  019F                     	;# 
  2282  020C                     	;# 
  2283  020D                     	;# 
  2284  020E                     	;# 
  2285  0211                     	;# 
  2286  0211                     	;# 
  2287  0212                     	;# 
  2288  0212                     	;# 
  2289  0213                     	;# 
  2290  0213                     	;# 
  2291  0214                     	;# 
  2292  0214                     	;# 
  2293  0215                     	;# 
  2294  0215                     	;# 
  2295  0215                     	;# 
  2296  0215                     	;# 
  2297  0216                     	;# 
  2298  0216                     	;# 
  2299  0217                     	;# 
  2300  0217                     	;# 
  2301  0219                     	;# 
  2302  021A                     	;# 
  2303  021B                     	;# 
  2304  021C                     	;# 
  2305  021D                     	;# 
  2306  021D                     	;# 
  2307  021E                     	;# 
  2308  021F                     	;# 
  2309  028C                     	;# 
  2310  028D                     	;# 
  2311  028E                     	;# 
  2312  0291                     	;# 
  2313  0291                     	;# 
  2314  0292                     	;# 
  2315  0293                     	;# 
  2316  0294                     	;# 
  2317  0295                     	;# 
  2318  0295                     	;# 
  2319  0296                     	;# 
  2320  0297                     	;# 
  2321  0298                     	;# 
  2322  029F                     	;# 
  2323  030C                     	;# 
  2324  030D                     	;# 
  2325  030E                     	;# 
  2326  0311                     	;# 
  2327  0311                     	;# 
  2328  0312                     	;# 
  2329  0313                     	;# 
  2330  0314                     	;# 
  2331  0315                     	;# 
  2332  0315                     	;# 
  2333  0316                     	;# 
  2334  0317                     	;# 
  2335  0318                     	;# 
  2336  038C                     	;# 
  2337  038D                     	;# 
  2338  038E                     	;# 
  2339  0391                     	;# 
  2340  0392                     	;# 
  2341  0393                     	;# 
  2342  0394                     	;# 
  2343  0395                     	;# 
  2344  0396                     	;# 
  2345  0397                     	;# 
  2346  0398                     	;# 
  2347  0399                     	;# 
  2348  039A                     	;# 
  2349  039C                     	;# 
  2350  039D                     	;# 
  2351  039E                     	;# 
  2352  039F                     	;# 
  2353  0411                     	;# 
  2354  0411                     	;# 
  2355  0412                     	;# 
  2356  0413                     	;# 
  2357  0414                     	;# 
  2358  0415                     	;# 
  2359  0416                     	;# 
  2360  0417                     	;# 
  2361  0418                     	;# 
  2362  0418                     	;# 
  2363  0419                     	;# 
  2364  041A                     	;# 
  2365  041B                     	;# 
  2366  041C                     	;# 
  2367  041D                     	;# 
  2368  041E                     	;# 
  2369  041F                     	;# 
  2370  0498                     	;# 
  2371  0498                     	;# 
  2372  0499                     	;# 
  2373  049A                     	;# 
  2374  049B                     	;# 
  2375  049B                     	;# 
  2376  049C                     	;# 
  2377  049D                     	;# 
  2378  049E                     	;# 
  2379  049F                     	;# 
  2380  0617                     	;# 
  2381  0618                     	;# 
  2382  0619                     	;# 
  2383  0619                     	;# 
  2384  061A                     	;# 
  2385  061B                     	;# 
  2386  061C                     	;# 
  2387  061C                     	;# 
  2388  061F                     	;# 
  2389  0691                     	;# 
  2390  0692                     	;# 
  2391  0693                     	;# 
  2392  0694                     	;# 
  2393  0695                     	;# 
  2394  0696                     	;# 
  2395  0697                     	;# 
  2396  0698                     	;# 
  2397  0699                     	;# 
  2398  0711                     	;# 
  2399  0712                     	;# 
  2400  0713                     	;# 
  2401  0714                     	;# 
  2402  0715                     	;# 
  2403  0716                     	;# 
  2404  0717                     	;# 
  2405  0718                     	;# 
  2406  0719                     	;# 
  2407  0891                     	;# 
  2408  0891                     	;# 
  2409  0891                     	;# 
  2410  0891                     	;# 
  2411  0891                     	;# 
  2412  0891                     	;# 
  2413  0892                     	;# 
  2414  0892                     	;# 
  2415  0892                     	;# 
  2416  0893                     	;# 
  2417  0893                     	;# 
  2418  0893                     	;# 
  2419  0893                     	;# 
  2420  0893                     	;# 
  2421  0893                     	;# 
  2422  0894                     	;# 
  2423  0894                     	;# 
  2424  0894                     	;# 
  2425  0895                     	;# 
  2426  0895                     	;# 
  2427  0895                     	;# 
  2428  0896                     	;# 
  2429  0896                     	;# 
  2430  0896                     	;# 
  2431  089B                     	;# 
  2432  0911                     	;# 
  2433  0912                     	;# 
  2434  0913                     	;# 
  2435  0914                     	;# 
  2436  0915                     	;# 
  2437  0916                     	;# 
  2438  0918                     	;# 
  2439  0919                     	;# 
  2440  091A                     	;# 
  2441  091B                     	;# 
  2442  091C                     	;# 
  2443  091D                     	;# 
  2444  091E                     	;# 
  2445  091F                     	;# 
  2446  0E0F                     	;# 
  2447  0E10                     	;# 
  2448  0E11                     	;# 
  2449  0E12                     	;# 
  2450  0E13                     	;# 
  2451  0E14                     	;# 
  2452  0E15                     	;# 
  2453  0E16                     	;# 
  2454  0E17                     	;# 
  2455  0E18                     	;# 
  2456  0E19                     	;# 
  2457  0E1A                     	;# 
  2458  0E1B                     	;# 
  2459  0E1C                     	;# 
  2460  0E1D                     	;# 
  2461  0E1E                     	;# 
  2462  0E1F                     	;# 
  2463  0E20                     	;# 
  2464  0E21                     	;# 
  2465  0E22                     	;# 
  2466  0E24                     	;# 
  2467  0E25                     	;# 
  2468  0E28                     	;# 
  2469  0E29                     	;# 
  2470  0E2A                     	;# 
  2471  0E2B                     	;# 
  2472  0E2C                     	;# 
  2473  0E2D                     	;# 
  2474  0E2E                     	;# 
  2475  0E2F                     	;# 
  2476  0E90                     	;# 
  2477  0E91                     	;# 
  2478  0E92                     	;# 
  2479  0E94                     	;# 
  2480  0E95                     	;# 
  2481  0E9C                     	;# 
  2482  0E9D                     	;# 
  2483  0E9E                     	;# 
  2484  0E9F                     	;# 
  2485  0EA0                     	;# 
  2486  0EA1                     	;# 
  2487  0EA2                     	;# 
  2488  0EA3                     	;# 
  2489  0EA4                     	;# 
  2490  0EA5                     	;# 
  2491  0EA6                     	;# 
  2492  0EA7                     	;# 
  2493  0F0F                     	;# 
  2494  0F10                     	;# 
  2495  0F11                     	;# 
  2496  0F12                     	;# 
  2497  0F13                     	;# 
  2498  0F14                     	;# 
  2499  0F15                     	;# 
  2500  0F16                     	;# 
  2501  0F17                     	;# 
  2502  0F18                     	;# 
  2503  0F19                     	;# 
  2504  0F1A                     	;# 
  2505  0F1B                     	;# 
  2506  0F1C                     	;# 
  2507  0F1D                     	;# 
  2508  0F1E                     	;# 
  2509  0F1F                     	;# 
  2510  0F20                     	;# 
  2511  0F21                     	;# 
  2512  0F22                     	;# 
  2513  0F23                     	;# 
  2514  0F24                     	;# 
  2515  0F25                     	;# 
  2516  0F26                     	;# 
  2517  0F27                     	;# 
  2518  0F28                     	;# 
  2519  0F29                     	;# 
  2520  0F2A                     	;# 
  2521  0F2B                     	;# 
  2522  0F2C                     	;# 
  2523  0F2D                     	;# 
  2524  0F2E                     	;# 
  2525  0F2F                     	;# 
  2526  0F30                     	;# 
  2527  0F31                     	;# 
  2528  0F32                     	;# 
  2529  0F33                     	;# 
  2530  0F34                     	;# 
  2531  0F35                     	;# 
  2532  0F36                     	;# 
  2533  0F37                     	;# 
  2534  0FE4                     	;# 
  2535  0FE5                     	;# 
  2536  0FE6                     	;# 
  2537  0FE7                     	;# 
  2538  0FE8                     	;# 
  2539  0FE9                     	;# 
  2540  0FEA                     	;# 
  2541  0FEB                     	;# 
  2542  0FED                     	;# 
  2543  0FEE                     	;# 
  2544  0FEF                     	;# 
  2545  0000                     	;# 
  2546  0001                     	;# 
  2547  0002                     	;# 
  2548  0003                     	;# 
  2549  0004                     	;# 
  2550  0005                     	;# 
  2551  0006                     	;# 
  2552  0007                     	;# 
  2553  0008                     	;# 
  2554  0009                     	;# 
  2555  000A                     	;# 
  2556  000B                     	;# 
  2557  000C                     	;# 
  2558  000D                     	;# 
  2559  000E                     	;# 
  2560  0010                     	;# 
  2561  0011                     	;# 
  2562  0012                     	;# 
  2563  0013                     	;# 
  2564  0014                     	;# 
  2565  0015                     	;# 
  2566  0015                     	;# 
  2567  0016                     	;# 
  2568  0016                     	;# 
  2569  0017                     	;# 
  2570  0018                     	;# 
  2571  0019                     	;# 
  2572  0019                     	;# 
  2573  001A                     	;# 
  2574  001B                     	;# 
  2575  001C                     	;# 
  2576  001D                     	;# 
  2577  001E                     	;# 
  2578  001F                     	;# 
  2579  008C                     	;# 
  2580  008D                     	;# 
  2581  008E                     	;# 
  2582  0090                     	;# 
  2583  0091                     	;# 
  2584  0092                     	;# 
  2585  0093                     	;# 
  2586  0094                     	;# 
  2587  0097                     	;# 
  2588  009B                     	;# 
  2589  009B                     	;# 
  2590  009C                     	;# 
  2591  009D                     	;# 
  2592  009E                     	;# 
  2593  009F                     	;# 
  2594  010C                     	;# 
  2595  010D                     	;# 
  2596  010E                     	;# 
  2597  0111                     	;# 
  2598  0112                     	;# 
  2599  0113                     	;# 
  2600  0114                     	;# 
  2601  0115                     	;# 
  2602  0116                     	;# 
  2603  0117                     	;# 
  2604  0118                     	;# 
  2605  0119                     	;# 
  2606  018C                     	;# 
  2607  018D                     	;# 
  2608  018E                     	;# 
  2609  0197                     	;# 
  2610  0199                     	;# 
  2611  0199                     	;# 
  2612  0199                     	;# 
  2613  019A                     	;# 
  2614  019A                     	;# 
  2615  019A                     	;# 
  2616  019B                     	;# 
  2617  019B                     	;# 
  2618  019B                     	;# 
  2619  019B                     	;# 
  2620  019B                     	;# 
  2621  019C                     	;# 
  2622  019C                     	;# 
  2623  019C                     	;# 
  2624  019D                     	;# 
  2625  019D                     	;# 
  2626  019D                     	;# 
  2627  019E                     	;# 
  2628  019E                     	;# 
  2629  019E                     	;# 
  2630  019F                     	;# 
  2631  019F                     	;# 
  2632  019F                     	;# 
  2633  019F                     	;# 
  2634  019F                     	;# 
  2635  020C                     	;# 
  2636  020D                     	;# 
  2637  020E                     	;# 
  2638  0211                     	;# 
  2639  0211                     	;# 
  2640  0212                     	;# 
  2641  0212                     	;# 
  2642  0213                     	;# 
  2643  0213                     	;# 
  2644  0214                     	;# 
  2645  0214                     	;# 
  2646  0215                     	;# 
  2647  0215                     	;# 
  2648  0215                     	;# 
  2649  0215                     	;# 
  2650  0216                     	;# 
  2651  0216                     	;# 
  2652  0217                     	;# 
  2653  0217                     	;# 
  2654  0219                     	;# 
  2655  021A                     	;# 
  2656  021B                     	;# 
  2657  021C                     	;# 
  2658  021D                     	;# 
  2659  021D                     	;# 
  2660  021E                     	;# 
  2661  021F                     	;# 
  2662  028C                     	;# 
  2663  028D                     	;# 
  2664  028E                     	;# 
  2665  0291                     	;# 
  2666  0291                     	;# 
  2667  0292                     	;# 
  2668  0293                     	;# 
  2669  0294                     	;# 
  2670  0295                     	;# 
  2671  0295                     	;# 
  2672  0296                     	;# 
  2673  0297                     	;# 
  2674  0298                     	;# 
  2675  029F                     	;# 
  2676  030C                     	;# 
  2677  030D                     	;# 
  2678  030E                     	;# 
  2679  0311                     	;# 
  2680  0311                     	;# 
  2681  0312                     	;# 
  2682  0313                     	;# 
  2683  0314                     	;# 
  2684  0315                     	;# 
  2685  0315                     	;# 
  2686  0316                     	;# 
  2687  0317                     	;# 
  2688  0318                     	;# 
  2689  038C                     	;# 
  2690  038D                     	;# 
  2691  038E                     	;# 
  2692  0391                     	;# 
  2693  0392                     	;# 
  2694  0393                     	;# 
  2695  0394                     	;# 
  2696  0395                     	;# 
  2697  0396                     	;# 
  2698  0397                     	;# 
  2699  0398                     	;# 
  2700  0399                     	;# 
  2701  039A                     	;# 
  2702  039C                     	;# 
  2703  039D                     	;# 
  2704  039E                     	;# 
  2705  039F                     	;# 
  2706  0411                     	;# 
  2707  0411                     	;# 
  2708  0412                     	;# 
  2709  0413                     	;# 
  2710  0414                     	;# 
  2711  0415                     	;# 
  2712  0416                     	;# 
  2713  0417                     	;# 
  2714  0418                     	;# 
  2715  0418                     	;# 
  2716  0419                     	;# 
  2717  041A                     	;# 
  2718  041B                     	;# 
  2719  041C                     	;# 
  2720  041D                     	;# 
  2721  041E                     	;# 
  2722  041F                     	;# 
  2723  0498                     	;# 
  2724  0498                     	;# 
  2725  0499                     	;# 
  2726  049A                     	;# 
  2727  049B                     	;# 
  2728  049B                     	;# 
  2729  049C                     	;# 
  2730  049D                     	;# 
  2731  049E                     	;# 
  2732  049F                     	;# 
  2733  0617                     	;# 
  2734  0618                     	;# 
  2735  0619                     	;# 
  2736  0619                     	;# 
  2737  061A                     	;# 
  2738  061B                     	;# 
  2739  061C                     	;# 
  2740  061C                     	;# 
  2741  061F                     	;# 
  2742  0691                     	;# 
  2743  0692                     	;# 
  2744  0693                     	;# 
  2745  0694                     	;# 
  2746  0695                     	;# 
  2747  0696                     	;# 
  2748  0697                     	;# 
  2749  0698                     	;# 
  2750  0699                     	;# 
  2751  0711                     	;# 
  2752  0712                     	;# 
  2753  0713                     	;# 
  2754  0714                     	;# 
  2755  0715                     	;# 
  2756  0716                     	;# 
  2757  0717                     	;# 
  2758  0718                     	;# 
  2759  0719                     	;# 
  2760  0891                     	;# 
  2761  0891                     	;# 
  2762  0891                     	;# 
  2763  0891                     	;# 
  2764  0891                     	;# 
  2765  0891                     	;# 
  2766  0892                     	;# 
  2767  0892                     	;# 
  2768  0892                     	;# 
  2769  0893                     	;# 
  2770  0893                     	;# 
  2771  0893                     	;# 
  2772  0893                     	;# 
  2773  0893                     	;# 
  2774  0893                     	;# 
  2775  0894                     	;# 
  2776  0894                     	;# 
  2777  0894                     	;# 
  2778  0895                     	;# 
  2779  0895                     	;# 
  2780  0895                     	;# 
  2781  0896                     	;# 
  2782  0896                     	;# 
  2783  0896                     	;# 
  2784  089B                     	;# 
  2785  0911                     	;# 
  2786  0912                     	;# 
  2787  0913                     	;# 
  2788  0914                     	;# 
  2789  0915                     	;# 
  2790  0916                     	;# 
  2791  0918                     	;# 
  2792  0919                     	;# 
  2793  091A                     	;# 
  2794  091B                     	;# 
  2795  091C                     	;# 
  2796  091D                     	;# 
  2797  091E                     	;# 
  2798  091F                     	;# 
  2799  0E0F                     	;# 
  2800  0E10                     	;# 
  2801  0E11                     	;# 
  2802  0E12                     	;# 
  2803  0E13                     	;# 
  2804  0E14                     	;# 
  2805  0E15                     	;# 
  2806  0E16                     	;# 
  2807  0E17                     	;# 
  2808  0E18                     	;# 
  2809  0E19                     	;# 
  2810  0E1A                     	;# 
  2811  0E1B                     	;# 
  2812  0E1C                     	;# 
  2813  0E1D                     	;# 
  2814  0E1E                     	;# 
  2815  0E1F                     	;# 
  2816  0E20                     	;# 
  2817  0E21                     	;# 
  2818  0E22                     	;# 
  2819  0E24                     	;# 
  2820  0E25                     	;# 
  2821  0E28                     	;# 
  2822  0E29                     	;# 
  2823  0E2A                     	;# 
  2824  0E2B                     	;# 
  2825  0E2C                     	;# 
  2826  0E2D                     	;# 
  2827  0E2E                     	;# 
  2828  0E2F                     	;# 
  2829  0E90                     	;# 
  2830  0E91                     	;# 
  2831  0E92                     	;# 
  2832  0E94                     	;# 
  2833  0E95                     	;# 
  2834  0E9C                     	;# 
  2835  0E9D                     	;# 
  2836  0E9E                     	;# 
  2837  0E9F                     	;# 
  2838  0EA0                     	;# 
  2839  0EA1                     	;# 
  2840  0EA2                     	;# 
  2841  0EA3                     	;# 
  2842  0EA4                     	;# 
  2843  0EA5                     	;# 
  2844  0EA6                     	;# 
  2845  0EA7                     	;# 
  2846  0F0F                     	;# 
  2847  0F10                     	;# 
  2848  0F11                     	;# 
  2849  0F12                     	;# 
  2850  0F13                     	;# 
  2851  0F14                     	;# 
  2852  0F15                     	;# 
  2853  0F16                     	;# 
  2854  0F17                     	;# 
  2855  0F18                     	;# 
  2856  0F19                     	;# 
  2857  0F1A                     	;# 
  2858  0F1B                     	;# 
  2859  0F1C                     	;# 
  2860  0F1D                     	;# 
  2861  0F1E                     	;# 
  2862  0F1F                     	;# 
  2863  0F20                     	;# 
  2864  0F21                     	;# 
  2865  0F22                     	;# 
  2866  0F23                     	;# 
  2867  0F24                     	;# 
  2868  0F25                     	;# 
  2869  0F26                     	;# 
  2870  0F27                     	;# 
  2871  0F28                     	;# 
  2872  0F29                     	;# 
  2873  0F2A                     	;# 
  2874  0F2B                     	;# 
  2875  0F2C                     	;# 
  2876  0F2D                     	;# 
  2877  0F2E                     	;# 
  2878  0F2F                     	;# 
  2879  0F30                     	;# 
  2880  0F31                     	;# 
  2881  0F32                     	;# 
  2882  0F33                     	;# 
  2883  0F34                     	;# 
  2884  0F35                     	;# 
  2885  0F36                     	;# 
  2886  0F37                     	;# 
  2887  0FE4                     	;# 
  2888  0FE5                     	;# 
  2889  0FE6                     	;# 
  2890  0FE7                     	;# 
  2891  0FE8                     	;# 
  2892  0FE9                     	;# 
  2893  0FEA                     	;# 
  2894  0FEB                     	;# 
  2895  0FED                     	;# 
  2896  0FEE                     	;# 
  2897  0FEF                     	;# 
  2898  0000                     	;# 
  2899  0001                     	;# 
  2900  0002                     	;# 
  2901  0003                     	;# 
  2902  0004                     	;# 
  2903  0005                     	;# 
  2904  0006                     	;# 
  2905  0007                     	;# 
  2906  0008                     	;# 
  2907  0009                     	;# 
  2908  000A                     	;# 
  2909  000B                     	;# 
  2910  000C                     	;# 
  2911  000D                     	;# 
  2912  000E                     	;# 
  2913  0010                     	;# 
  2914  0011                     	;# 
  2915  0012                     	;# 
  2916  0013                     	;# 
  2917  0014                     	;# 
  2918  0015                     	;# 
  2919  0015                     	;# 
  2920  0016                     	;# 
  2921  0016                     	;# 
  2922  0017                     	;# 
  2923  0018                     	;# 
  2924  0019                     	;# 
  2925  0019                     	;# 
  2926  001A                     	;# 
  2927  001B                     	;# 
  2928  001C                     	;# 
  2929  001D                     	;# 
  2930  001E                     	;# 
  2931  001F                     	;# 
  2932  008C                     	;# 
  2933  008D                     	;# 
  2934  008E                     	;# 
  2935  0090                     	;# 
  2936  0091                     	;# 
  2937  0092                     	;# 
  2938  0093                     	;# 
  2939  0094                     	;# 
  2940  0097                     	;# 
  2941  009B                     	;# 
  2942  009B                     	;# 
  2943  009C                     	;# 
  2944  009D                     	;# 
  2945  009E                     	;# 
  2946  009F                     	;# 
  2947  010C                     	;# 
  2948  010D                     	;# 
  2949  010E                     	;# 
  2950  0111                     	;# 
  2951  0112                     	;# 
  2952  0113                     	;# 
  2953  0114                     	;# 
  2954  0115                     	;# 
  2955  0116                     	;# 
  2956  0117                     	;# 
  2957  0118                     	;# 
  2958  0119                     	;# 
  2959  018C                     	;# 
  2960  018D                     	;# 
  2961  018E                     	;# 
  2962  0197                     	;# 
  2963  0199                     	;# 
  2964  0199                     	;# 
  2965  0199                     	;# 
  2966  019A                     	;# 
  2967  019A                     	;# 
  2968  019A                     	;# 
  2969  019B                     	;# 
  2970  019B                     	;# 
  2971  019B                     	;# 
  2972  019B                     	;# 
  2973  019B                     	;# 
  2974  019C                     	;# 
  2975  019C                     	;# 
  2976  019C                     	;# 
  2977  019D                     	;# 
  2978  019D                     	;# 
  2979  019D                     	;# 
  2980  019E                     	;# 
  2981  019E                     	;# 
  2982  019E                     	;# 
  2983  019F                     	;# 
  2984  019F                     	;# 
  2985  019F                     	;# 
  2986  019F                     	;# 
  2987  019F                     	;# 
  2988  020C                     	;# 
  2989  020D                     	;# 
  2990  020E                     	;# 
  2991  0211                     	;# 
  2992  0211                     	;# 
  2993  0212                     	;# 
  2994  0212                     	;# 
  2995  0213                     	;# 
  2996  0213                     	;# 
  2997  0214                     	;# 
  2998  0214                     	;# 
  2999  0215                     	;# 
  3000  0215                     	;# 
  3001  0215                     	;# 
  3002  0215                     	;# 
  3003  0216                     	;# 
  3004  0216                     	;# 
  3005  0217                     	;# 
  3006  0217                     	;# 
  3007  0219                     	;# 
  3008  021A                     	;# 
  3009  021B                     	;# 
  3010  021C                     	;# 
  3011  021D                     	;# 
  3012  021D                     	;# 
  3013  021E                     	;# 
  3014  021F                     	;# 
  3015  028C                     	;# 
  3016  028D                     	;# 
  3017  028E                     	;# 
  3018  0291                     	;# 
  3019  0291                     	;# 
  3020  0292                     	;# 
  3021  0293                     	;# 
  3022  0294                     	;# 
  3023  0295                     	;# 
  3024  0295                     	;# 
  3025  0296                     	;# 
  3026  0297                     	;# 
  3027  0298                     	;# 
  3028  029F                     	;# 
  3029  030C                     	;# 
  3030  030D                     	;# 
  3031  030E                     	;# 
  3032  0311                     	;# 
  3033  0311                     	;# 
  3034  0312                     	;# 
  3035  0313                     	;# 
  3036  0314                     	;# 
  3037  0315                     	;# 
  3038  0315                     	;# 
  3039  0316                     	;# 
  3040  0317                     	;# 
  3041  0318                     	;# 
  3042  038C                     	;# 
  3043  038D                     	;# 
  3044  038E                     	;# 
  3045  0391                     	;# 
  3046  0392                     	;# 
  3047  0393                     	;# 
  3048  0394                     	;# 
  3049  0395                     	;# 
  3050  0396                     	;# 
  3051  0397                     	;# 
  3052  0398                     	;# 
  3053  0399                     	;# 
  3054  039A                     	;# 
  3055  039C                     	;# 
  3056  039D                     	;# 
  3057  039E                     	;# 
  3058  039F                     	;# 
  3059  0411                     	;# 
  3060  0411                     	;# 
  3061  0412                     	;# 
  3062  0413                     	;# 
  3063  0414                     	;# 
  3064  0415                     	;# 
  3065  0416                     	;# 
  3066  0417                     	;# 
  3067  0418                     	;# 
  3068  0418                     	;# 
  3069  0419                     	;# 
  3070  041A                     	;# 
  3071  041B                     	;# 
  3072  041C                     	;# 
  3073  041D                     	;# 
  3074  041E                     	;# 
  3075  041F                     	;# 
  3076  0498                     	;# 
  3077  0498                     	;# 
  3078  0499                     	;# 
  3079  049A                     	;# 
  3080  049B                     	;# 
  3081  049B                     	;# 
  3082  049C                     	;# 
  3083  049D                     	;# 
  3084  049E                     	;# 
  3085  049F                     	;# 
  3086  0617                     	;# 
  3087  0618                     	;# 
  3088  0619                     	;# 
  3089  0619                     	;# 
  3090  061A                     	;# 
  3091  061B                     	;# 
  3092  061C                     	;# 
  3093  061C                     	;# 
  3094  061F                     	;# 
  3095  0691                     	;# 
  3096  0692                     	;# 
  3097  0693                     	;# 
  3098  0694                     	;# 
  3099  0695                     	;# 
  3100  0696                     	;# 
  3101  0697                     	;# 
  3102  0698                     	;# 
  3103  0699                     	;# 
  3104  0711                     	;# 
  3105  0712                     	;# 
  3106  0713                     	;# 
  3107  0714                     	;# 
  3108  0715                     	;# 
  3109  0716                     	;# 
  3110  0717                     	;# 
  3111  0718                     	;# 
  3112  0719                     	;# 
  3113  0891                     	;# 
  3114  0891                     	;# 
  3115  0891                     	;# 
  3116  0891                     	;# 
  3117  0891                     	;# 
  3118  0891                     	;# 
  3119  0892                     	;# 
  3120  0892                     	;# 
  3121  0892                     	;# 
  3122  0893                     	;# 
  3123  0893                     	;# 
  3124  0893                     	;# 
  3125  0893                     	;# 
  3126  0893                     	;# 
  3127  0893                     	;# 
  3128  0894                     	;# 
  3129  0894                     	;# 
  3130  0894                     	;# 
  3131  0895                     	;# 
  3132  0895                     	;# 
  3133  0895                     	;# 
  3134  0896                     	;# 
  3135  0896                     	;# 
  3136  0896                     	;# 
  3137  089B                     	;# 
  3138  0911                     	;# 
  3139  0912                     	;# 
  3140  0913                     	;# 
  3141  0914                     	;# 
  3142  0915                     	;# 
  3143  0916                     	;# 
  3144  0918                     	;# 
  3145  0919                     	;# 
  3146  091A                     	;# 
  3147  091B                     	;# 
  3148  091C                     	;# 
  3149  091D                     	;# 
  3150  091E                     	;# 
  3151  091F                     	;# 
  3152  0E0F                     	;# 
  3153  0E10                     	;# 
  3154  0E11                     	;# 
  3155  0E12                     	;# 
  3156  0E13                     	;# 
  3157  0E14                     	;# 
  3158  0E15                     	;# 
  3159  0E16                     	;# 
  3160  0E17                     	;# 
  3161  0E18                     	;# 
  3162  0E19                     	;# 
  3163  0E1A                     	;# 
  3164  0E1B                     	;# 
  3165  0E1C                     	;# 
  3166  0E1D                     	;# 
  3167  0E1E                     	;# 
  3168  0E1F                     	;# 
  3169  0E20                     	;# 
  3170  0E21                     	;# 
  3171  0E22                     	;# 
  3172  0E24                     	;# 
  3173  0E25                     	;# 
  3174  0E28                     	;# 
  3175  0E29                     	;# 
  3176  0E2A                     	;# 
  3177  0E2B                     	;# 
  3178  0E2C                     	;# 
  3179  0E2D                     	;# 
  3180  0E2E                     	;# 
  3181  0E2F                     	;# 
  3182  0E90                     	;# 
  3183  0E91                     	;# 
  3184  0E92                     	;# 
  3185  0E94                     	;# 
  3186  0E95                     	;# 
  3187  0E9C                     	;# 
  3188  0E9D                     	;# 
  3189  0E9E                     	;# 
  3190  0E9F                     	;# 
  3191  0EA0                     	;# 
  3192  0EA1                     	;# 
  3193  0EA2                     	;# 
  3194  0EA3                     	;# 
  3195  0EA4                     	;# 
  3196  0EA5                     	;# 
  3197  0EA6                     	;# 
  3198  0EA7                     	;# 
  3199  0F0F                     	;# 
  3200  0F10                     	;# 
  3201  0F11                     	;# 
  3202  0F12                     	;# 
  3203  0F13                     	;# 
  3204  0F14                     	;# 
  3205  0F15                     	;# 
  3206  0F16                     	;# 
  3207  0F17                     	;# 
  3208  0F18                     	;# 
  3209  0F19                     	;# 
  3210  0F1A                     	;# 
  3211  0F1B                     	;# 
  3212  0F1C                     	;# 
  3213  0F1D                     	;# 
  3214  0F1E                     	;# 
  3215  0F1F                     	;# 
  3216  0F20                     	;# 
  3217  0F21                     	;# 
  3218  0F22                     	;# 
  3219  0F23                     	;# 
  3220  0F24                     	;# 
  3221  0F25                     	;# 
  3222  0F26                     	;# 
  3223  0F27                     	;# 
  3224  0F28                     	;# 
  3225  0F29                     	;# 
  3226  0F2A                     	;# 
  3227  0F2B                     	;# 
  3228  0F2C                     	;# 
  3229  0F2D                     	;# 
  3230  0F2E                     	;# 
  3231  0F2F                     	;# 
  3232  0F30                     	;# 
  3233  0F31                     	;# 
  3234  0F32                     	;# 
  3235  0F33                     	;# 
  3236  0F34                     	;# 
  3237  0F35                     	;# 
  3238  0F36                     	;# 
  3239  0F37                     	;# 
  3240  0FE4                     	;# 
  3241  0FE5                     	;# 
  3242  0FE6                     	;# 
  3243  0FE7                     	;# 
  3244  0FE8                     	;# 
  3245  0FE9                     	;# 
  3246  0FEA                     	;# 
  3247  0FEB                     	;# 
  3248  0FED                     	;# 
  3249  0FEE                     	;# 
  3250  0FEF                     	;# 
  3251  0000                     	;# 
  3252  0001                     	;# 
  3253  0002                     	;# 
  3254  0003                     	;# 
  3255  0004                     	;# 
  3256  0005                     	;# 
  3257  0006                     	;# 
  3258  0007                     	;# 
  3259  0008                     	;# 
  3260  0009                     	;# 
  3261  000A                     	;# 
  3262  000B                     	;# 
  3263  000C                     	;# 
  3264  000D                     	;# 
  3265  000E                     	;# 
  3266  0010                     	;# 
  3267  0011                     	;# 
  3268  0012                     	;# 
  3269  0013                     	;# 
  3270  0014                     	;# 
  3271  0015                     	;# 
  3272  0015                     	;# 
  3273  0016                     	;# 
  3274  0016                     	;# 
  3275  0017                     	;# 
  3276  0018                     	;# 
  3277  0019                     	;# 
  3278  0019                     	;# 
  3279  001A                     	;# 
  3280  001B                     	;# 
  3281  001C                     	;# 
  3282  001D                     	;# 
  3283  001E                     	;# 
  3284  001F                     	;# 
  3285  008C                     	;# 
  3286  008D                     	;# 
  3287  008E                     	;# 
  3288  0090                     	;# 
  3289  0091                     	;# 
  3290  0092                     	;# 
  3291  0093                     	;# 
  3292  0094                     	;# 
  3293  0097                     	;# 
  3294  009B                     	;# 
  3295  009B                     	;# 
  3296  009C                     	;# 
  3297  009D                     	;# 
  3298  009E                     	;# 
  3299  009F                     	;# 
  3300  010C                     	;# 
  3301  010D                     	;# 
  3302  010E                     	;# 
  3303  0111                     	;# 
  3304  0112                     	;# 
  3305  0113                     	;# 
  3306  0114                     	;# 
  3307  0115                     	;# 
  3308  0116                     	;# 
  3309  0117                     	;# 
  3310  0118                     	;# 
  3311  0119                     	;# 
  3312  018C                     	;# 
  3313  018D                     	;# 
  3314  018E                     	;# 
  3315  0197                     	;# 
  3316  0199                     	;# 
  3317  0199                     	;# 
  3318  0199                     	;# 
  3319  019A                     	;# 
  3320  019A                     	;# 
  3321  019A                     	;# 
  3322  019B                     	;# 
  3323  019B                     	;# 
  3324  019B                     	;# 
  3325  019B                     	;# 
  3326  019B                     	;# 
  3327  019C                     	;# 
  3328  019C                     	;# 
  3329  019C                     	;# 
  3330  019D                     	;# 
  3331  019D                     	;# 
  3332  019D                     	;# 
  3333  019E                     	;# 
  3334  019E                     	;# 
  3335  019E                     	;# 
  3336  019F                     	;# 
  3337  019F                     	;# 
  3338  019F                     	;# 
  3339  019F                     	;# 
  3340  019F                     	;# 
  3341  020C                     	;# 
  3342  020D                     	;# 
  3343  020E                     	;# 
  3344  0211                     	;# 
  3345  0211                     	;# 
  3346  0212                     	;# 
  3347  0212                     	;# 
  3348  0213                     	;# 
  3349  0213                     	;# 
  3350  0214                     	;# 
  3351  0214                     	;# 
  3352  0215                     	;# 
  3353  0215                     	;# 
  3354  0215                     	;# 
  3355  0215                     	;# 
  3356  0216                     	;# 
  3357  0216                     	;# 
  3358  0217                     	;# 
  3359  0217                     	;# 
  3360  0219                     	;# 
  3361  021A                     	;# 
  3362  021B                     	;# 
  3363  021C                     	;# 
  3364  021D                     	;# 
  3365  021D                     	;# 
  3366  021E                     	;# 
  3367  021F                     	;# 
  3368  028C                     	;# 
  3369  028D                     	;# 
  3370  028E                     	;# 
  3371  0291                     	;# 
  3372  0291                     	;# 
  3373  0292                     	;# 
  3374  0293                     	;# 
  3375  0294                     	;# 
  3376  0295                     	;# 
  3377  0295                     	;# 
  3378  0296                     	;# 
  3379  0297                     	;# 
  3380  0298                     	;# 
  3381  029F                     	;# 
  3382  030C                     	;# 
  3383  030D                     	;# 
  3384  030E                     	;# 
  3385  0311                     	;# 
  3386  0311                     	;# 
  3387  0312                     	;# 
  3388  0313                     	;# 
  3389  0314                     	;# 
  3390  0315                     	;# 
  3391  0315                     	;# 
  3392  0316                     	;# 
  3393  0317                     	;# 
  3394  0318                     	;# 
  3395  038C                     	;# 
  3396  038D                     	;# 
  3397  038E                     	;# 
  3398  0391                     	;# 
  3399  0392                     	;# 
  3400  0393                     	;# 
  3401  0394                     	;# 
  3402  0395                     	;# 
  3403  0396                     	;# 
  3404  0397                     	;# 
  3405  0398                     	;# 
  3406  0399                     	;# 
  3407  039A                     	;# 
  3408  039C                     	;# 
  3409  039D                     	;# 
  3410  039E                     	;# 
  3411  039F                     	;# 
  3412  0411                     	;# 
  3413  0411                     	;# 
  3414  0412                     	;# 
  3415  0413                     	;# 
  3416  0414                     	;# 
  3417  0415                     	;# 
  3418  0416                     	;# 
  3419  0417                     	;# 
  3420  0418                     	;# 
  3421  0418                     	;# 
  3422  0419                     	;# 
  3423  041A                     	;# 
  3424  041B                     	;# 
  3425  041C                     	;# 
  3426  041D                     	;# 
  3427  041E                     	;# 
  3428  041F                     	;# 
  3429  0498                     	;# 
  3430  0498                     	;# 
  3431  0499                     	;# 
  3432  049A                     	;# 
  3433  049B                     	;# 
  3434  049B                     	;# 
  3435  049C                     	;# 
  3436  049D                     	;# 
  3437  049E                     	;# 
  3438  049F                     	;# 
  3439  0617                     	;# 
  3440  0618                     	;# 
  3441  0619                     	;# 
  3442  0619                     	;# 
  3443  061A                     	;# 
  3444  061B                     	;# 
  3445  061C                     	;# 
  3446  061C                     	;# 
  3447  061F                     	;# 
  3448  0691                     	;# 
  3449  0692                     	;# 
  3450  0693                     	;# 
  3451  0694                     	;# 
  3452  0695                     	;# 
  3453  0696                     	;# 
  3454  0697                     	;# 
  3455  0698                     	;# 
  3456  0699                     	;# 
  3457  0711                     	;# 
  3458  0712                     	;# 
  3459  0713                     	;# 
  3460  0714                     	;# 
  3461  0715                     	;# 
  3462  0716                     	;# 
  3463  0717                     	;# 
  3464  0718                     	;# 
  3465  0719                     	;# 
  3466  0891                     	;# 
  3467  0891                     	;# 
  3468  0891                     	;# 
  3469  0891                     	;# 
  3470  0891                     	;# 
  3471  0891                     	;# 
  3472  0892                     	;# 
  3473  0892                     	;# 
  3474  0892                     	;# 
  3475  0893                     	;# 
  3476  0893                     	;# 
  3477  0893                     	;# 
  3478  0893                     	;# 
  3479  0893                     	;# 
  3480  0893                     	;# 
  3481  0894                     	;# 
  3482  0894                     	;# 
  3483  0894                     	;# 
  3484  0895                     	;# 
  3485  0895                     	;# 
  3486  0895                     	;# 
  3487  0896                     	;# 
  3488  0896                     	;# 
  3489  0896                     	;# 
  3490  089B                     	;# 
  3491  0911                     	;# 
  3492  0912                     	;# 
  3493  0913                     	;# 
  3494  0914                     	;# 
  3495  0915                     	;# 
  3496  0916                     	;# 
  3497  0918                     	;# 
  3498  0919                     	;# 
  3499  091A                     	;# 
  3500  091B                     	;# 
  3501  091C                     	;# 
  3502  091D                     	;# 
  3503  091E                     	;# 
  3504  091F                     	;# 
  3505  0E0F                     	;# 
  3506  0E10                     	;# 
  3507  0E11                     	;# 
  3508  0E12                     	;# 
  3509  0E13                     	;# 
  3510  0E14                     	;# 
  3511  0E15                     	;# 
  3512  0E16                     	;# 
  3513  0E17                     	;# 
  3514  0E18                     	;# 
  3515  0E19                     	;# 
  3516  0E1A                     	;# 
  3517  0E1B                     	;# 
  3518  0E1C                     	;# 
  3519  0E1D                     	;# 
  3520  0E1E                     	;# 
  3521  0E1F                     	;# 
  3522  0E20                     	;# 
  3523  0E21                     	;# 
  3524  0E22                     	;# 
  3525  0E24                     	;# 
  3526  0E25                     	;# 
  3527  0E28                     	;# 
  3528  0E29                     	;# 
  3529  0E2A                     	;# 
  3530  0E2B                     	;# 
  3531  0E2C                     	;# 
  3532  0E2D                     	;# 
  3533  0E2E                     	;# 
  3534  0E2F                     	;# 
  3535  0E90                     	;# 
  3536  0E91                     	;# 
  3537  0E92                     	;# 
  3538  0E94                     	;# 
  3539  0E95                     	;# 
  3540  0E9C                     	;# 
  3541  0E9D                     	;# 
  3542  0E9E                     	;# 
  3543  0E9F                     	;# 
  3544  0EA0                     	;# 
  3545  0EA1                     	;# 
  3546  0EA2                     	;# 
  3547  0EA3                     	;# 
  3548  0EA4                     	;# 
  3549  0EA5                     	;# 
  3550  0EA6                     	;# 
  3551  0EA7                     	;# 
  3552  0F0F                     	;# 
  3553  0F10                     	;# 
  3554  0F11                     	;# 
  3555  0F12                     	;# 
  3556  0F13                     	;# 
  3557  0F14                     	;# 
  3558  0F15                     	;# 
  3559  0F16                     	;# 
  3560  0F17                     	;# 
  3561  0F18                     	;# 
  3562  0F19                     	;# 
  3563  0F1A                     	;# 
  3564  0F1B                     	;# 
  3565  0F1C                     	;# 
  3566  0F1D                     	;# 
  3567  0F1E                     	;# 
  3568  0F1F                     	;# 
  3569  0F20                     	;# 
  3570  0F21                     	;# 
  3571  0F22                     	;# 
  3572  0F23                     	;# 
  3573  0F24                     	;# 
  3574  0F25                     	;# 
  3575  0F26                     	;# 
  3576  0F27                     	;# 
  3577  0F28                     	;# 
  3578  0F29                     	;# 
  3579  0F2A                     	;# 
  3580  0F2B                     	;# 
  3581  0F2C                     	;# 
  3582  0F2D                     	;# 
  3583  0F2E                     	;# 
  3584  0F2F                     	;# 
  3585  0F30                     	;# 
  3586  0F31                     	;# 
  3587  0F32                     	;# 
  3588  0F33                     	;# 
  3589  0F34                     	;# 
  3590  0F35                     	;# 
  3591  0F36                     	;# 
  3592  0F37                     	;# 
  3593  0FE4                     	;# 
  3594  0FE5                     	;# 
  3595  0FE6                     	;# 
  3596  0FE7                     	;# 
  3597  0FE8                     	;# 
  3598  0FE9                     	;# 
  3599  0FEA                     	;# 
  3600  0FEB                     	;# 
  3601  0FED                     	;# 
  3602  0FEE                     	;# 
  3603  0FEF                     	;# 
  3604  0000                     	;# 
  3605  0001                     	;# 
  3606  0002                     	;# 
  3607  0003                     	;# 
  3608  0004                     	;# 
  3609  0005                     	;# 
  3610  0006                     	;# 
  3611  0007                     	;# 
  3612  0008                     	;# 
  3613  0009                     	;# 
  3614  000A                     	;# 
  3615  000B                     	;# 
  3616  000C                     	;# 
  3617  000D                     	;# 
  3618  000E                     	;# 
  3619  0010                     	;# 
  3620  0011                     	;# 
  3621  0012                     	;# 
  3622  0013                     	;# 
  3623  0014                     	;# 
  3624  0015                     	;# 
  3625  0015                     	;# 
  3626  0016                     	;# 
  3627  0016                     	;# 
  3628  0017                     	;# 
  3629  0018                     	;# 
  3630  0019                     	;# 
  3631  0019                     	;# 
  3632  001A                     	;# 
  3633  001B                     	;# 
  3634  001C                     	;# 
  3635  001D                     	;# 
  3636  001E                     	;# 
  3637  001F                     	;# 
  3638  008C                     	;# 
  3639  008D                     	;# 
  3640  008E                     	;# 
  3641  0090                     	;# 
  3642  0091                     	;# 
  3643  0092                     	;# 
  3644  0093                     	;# 
  3645  0094                     	;# 
  3646  0097                     	;# 
  3647  009B                     	;# 
  3648  009B                     	;# 
  3649  009C                     	;# 
  3650  009D                     	;# 
  3651  009E                     	;# 
  3652  009F                     	;# 
  3653  010C                     	;# 
  3654  010D                     	;# 
  3655  010E                     	;# 
  3656  0111                     	;# 
  3657  0112                     	;# 
  3658  0113                     	;# 
  3659  0114                     	;# 
  3660  0115                     	;# 
  3661  0116                     	;# 
  3662  0117                     	;# 
  3663  0118                     	;# 
  3664  0119                     	;# 
  3665  018C                     	;# 
  3666  018D                     	;# 
  3667  018E                     	;# 
  3668  0197                     	;# 
  3669  0199                     	;# 
  3670  0199                     	;# 
  3671  0199                     	;# 
  3672  019A                     	;# 
  3673  019A                     	;# 
  3674  019A                     	;# 
  3675  019B                     	;# 
  3676  019B                     	;# 
  3677  019B                     	;# 
  3678  019B                     	;# 
  3679  019B                     	;# 
  3680  019C                     	;# 
  3681  019C                     	;# 
  3682  019C                     	;# 
  3683  019D                     	;# 
  3684  019D                     	;# 
  3685  019D                     	;# 
  3686  019E                     	;# 
  3687  019E                     	;# 
  3688  019E                     	;# 
  3689  019F                     	;# 
  3690  019F                     	;# 
  3691  019F                     	;# 
  3692  019F                     	;# 
  3693  019F                     	;# 
  3694  020C                     	;# 
  3695  020D                     	;# 
  3696  020E                     	;# 
  3697  0211                     	;# 
  3698  0211                     	;# 
  3699  0212                     	;# 
  3700  0212                     	;# 
  3701  0213                     	;# 
  3702  0213                     	;# 
  3703  0214                     	;# 
  3704  0214                     	;# 
  3705  0215                     	;# 
  3706  0215                     	;# 
  3707  0215                     	;# 
  3708  0215                     	;# 
  3709  0216                     	;# 
  3710  0216                     	;# 
  3711  0217                     	;# 
  3712  0217                     	;# 
  3713  0219                     	;# 
  3714  021A                     	;# 
  3715  021B                     	;# 
  3716  021C                     	;# 
  3717  021D                     	;# 
  3718  021D                     	;# 
  3719  021E                     	;# 
  3720  021F                     	;# 
  3721  028C                     	;# 
  3722  028D                     	;# 
  3723  028E                     	;# 
  3724  0291                     	;# 
  3725  0291                     	;# 
  3726  0292                     	;# 
  3727  0293                     	;# 
  3728  0294                     	;# 
  3729  0295                     	;# 
  3730  0295                     	;# 
  3731  0296                     	;# 
  3732  0297                     	;# 
  3733  0298                     	;# 
  3734  029F                     	;# 
  3735  030C                     	;# 
  3736  030D                     	;# 
  3737  030E                     	;# 
  3738  0311                     	;# 
  3739  0311                     	;# 
  3740  0312                     	;# 
  3741  0313                     	;# 
  3742  0314                     	;# 
  3743  0315                     	;# 
  3744  0315                     	;# 
  3745  0316                     	;# 
  3746  0317                     	;# 
  3747  0318                     	;# 
  3748  038C                     	;# 
  3749  038D                     	;# 
  3750  038E                     	;# 
  3751  0391                     	;# 
  3752  0392                     	;# 
  3753  0393                     	;# 
  3754  0394                     	;# 
  3755  0395                     	;# 
  3756  0396                     	;# 
  3757  0397                     	;# 
  3758  0398                     	;# 
  3759  0399                     	;# 
  3760  039A                     	;# 
  3761  039C                     	;# 
  3762  039D                     	;# 
  3763  039E                     	;# 
  3764  039F                     	;# 
  3765  0411                     	;# 
  3766  0411                     	;# 
  3767  0412                     	;# 
  3768  0413                     	;# 
  3769  0414                     	;# 
  3770  0415                     	;# 
  3771  0416                     	;# 
  3772  0417                     	;# 
  3773  0418                     	;# 
  3774  0418                     	;# 
  3775  0419                     	;# 
  3776  041A                     	;# 
  3777  041B                     	;# 
  3778  041C                     	;# 
  3779  041D                     	;# 
  3780  041E                     	;# 
  3781  041F                     	;# 
  3782  0498                     	;# 
  3783  0498                     	;# 
  3784  0499                     	;# 
  3785  049A                     	;# 
  3786  049B                     	;# 
  3787  049B                     	;# 
  3788  049C                     	;# 
  3789  049D                     	;# 
  3790  049E                     	;# 
  3791  049F                     	;# 
  3792  0617                     	;# 
  3793  0618                     	;# 
  3794  0619                     	;# 
  3795  0619                     	;# 
  3796  061A                     	;# 
  3797  061B                     	;# 
  3798  061C                     	;# 
  3799  061C                     	;# 
  3800  061F                     	;# 
  3801  0691                     	;# 
  3802  0692                     	;# 
  3803  0693                     	;# 
  3804  0694                     	;# 
  3805  0695                     	;# 
  3806  0696                     	;# 
  3807  0697                     	;# 
  3808  0698                     	;# 
  3809  0699                     	;# 
  3810  0711                     	;# 
  3811  0712                     	;# 
  3812  0713                     	;# 
  3813  0714                     	;# 
  3814  0715                     	;# 
  3815  0716                     	;# 
  3816  0717                     	;# 
  3817  0718                     	;# 
  3818  0719                     	;# 
  3819  0891                     	;# 
  3820  0891                     	;# 
  3821  0891                     	;# 
  3822  0891                     	;# 
  3823  0891                     	;# 
  3824  0891                     	;# 
  3825  0892                     	;# 
  3826  0892                     	;# 
  3827  0892                     	;# 
  3828  0893                     	;# 
  3829  0893                     	;# 
  3830  0893                     	;# 
  3831  0893                     	;# 
  3832  0893                     	;# 
  3833  0893                     	;# 
  3834  0894                     	;# 
  3835  0894                     	;# 
  3836  0894                     	;# 
  3837  0895                     	;# 
  3838  0895                     	;# 
  3839  0895                     	;# 
  3840  0896                     	;# 
  3841  0896                     	;# 
  3842  0896                     	;# 
  3843  089B                     	;# 
  3844  0911                     	;# 
  3845  0912                     	;# 
  3846  0913                     	;# 
  3847  0914                     	;# 
  3848  0915                     	;# 
  3849  0916                     	;# 
  3850  0918                     	;# 
  3851  0919                     	;# 
  3852  091A                     	;# 
  3853  091B                     	;# 
  3854  091C                     	;# 
  3855  091D                     	;# 
  3856  091E                     	;# 
  3857  091F                     	;# 
  3858  0E0F                     	;# 
  3859  0E10                     	;# 
  3860  0E11                     	;# 
  3861  0E12                     	;# 
  3862  0E13                     	;# 
  3863  0E14                     	;# 
  3864  0E15                     	;# 
  3865  0E16                     	;# 
  3866  0E17                     	;# 
  3867  0E18                     	;# 
  3868  0E19                     	;# 
  3869  0E1A                     	;# 
  3870  0E1B                     	;# 
  3871  0E1C                     	;# 
  3872  0E1D                     	;# 
  3873  0E1E                     	;# 
  3874  0E1F                     	;# 
  3875  0E20                     	;# 
  3876  0E21                     	;# 
  3877  0E22                     	;# 
  3878  0E24                     	;# 
  3879  0E25                     	;# 
  3880  0E28                     	;# 
  3881  0E29                     	;# 
  3882  0E2A                     	;# 
  3883  0E2B                     	;# 
  3884  0E2C                     	;# 
  3885  0E2D                     	;# 
  3886  0E2E                     	;# 
  3887  0E2F                     	;# 
  3888  0E90                     	;# 
  3889  0E91                     	;# 
  3890  0E92                     	;# 
  3891  0E94                     	;# 
  3892  0E95                     	;# 
  3893  0E9C                     	;# 
  3894  0E9D                     	;# 
  3895  0E9E                     	;# 
  3896  0E9F                     	;# 
  3897  0EA0                     	;# 
  3898  0EA1                     	;# 
  3899  0EA2                     	;# 
  3900  0EA3                     	;# 
  3901  0EA4                     	;# 
  3902  0EA5                     	;# 
  3903  0EA6                     	;# 
  3904  0EA7                     	;# 
  3905  0F0F                     	;# 
  3906  0F10                     	;# 
  3907  0F11                     	;# 
  3908  0F12                     	;# 
  3909  0F13                     	;# 
  3910  0F14                     	;# 
  3911  0F15                     	;# 
  3912  0F16                     	;# 
  3913  0F17                     	;# 
  3914  0F18                     	;# 
  3915  0F19                     	;# 
  3916  0F1A                     	;# 
  3917  0F1B                     	;# 
  3918  0F1C                     	;# 
  3919  0F1D                     	;# 
  3920  0F1E                     	;# 
  3921  0F1F                     	;# 
  3922  0F20                     	;# 
  3923  0F21                     	;# 
  3924  0F22                     	;# 
  3925  0F23                     	;# 
  3926  0F24                     	;# 
  3927  0F25                     	;# 
  3928  0F26                     	;# 
  3929  0F27                     	;# 
  3930  0F28                     	;# 
  3931  0F29                     	;# 
  3932  0F2A                     	;# 
  3933  0F2B                     	;# 
  3934  0F2C                     	;# 
  3935  0F2D                     	;# 
  3936  0F2E                     	;# 
  3937  0F2F                     	;# 
  3938  0F30                     	;# 
  3939  0F31                     	;# 
  3940  0F32                     	;# 
  3941  0F33                     	;# 
  3942  0F34                     	;# 
  3943  0F35                     	;# 
  3944  0F36                     	;# 
  3945  0F37                     	;# 
  3946  0FE4                     	;# 
  3947  0FE5                     	;# 
  3948  0FE6                     	;# 
  3949  0FE7                     	;# 
  3950  0FE8                     	;# 
  3951  0FE9                     	;# 
  3952  0FEA                     	;# 
  3953  0FEB                     	;# 
  3954  0FED                     	;# 
  3955  0FEE                     	;# 
  3956  0FEF                     	;# 
  3957  0000                     	;# 
  3958  0001                     	;# 
  3959  0002                     	;# 
  3960  0003                     	;# 
  3961  0004                     	;# 
  3962  0005                     	;# 
  3963  0006                     	;# 
  3964  0007                     	;# 
  3965  0008                     	;# 
  3966  0009                     	;# 
  3967  000A                     	;# 
  3968  000B                     	;# 
  3969  000C                     	;# 
  3970  000D                     	;# 
  3971  000E                     	;# 
  3972  0010                     	;# 
  3973  0011                     	;# 
  3974  0012                     	;# 
  3975  0013                     	;# 
  3976  0014                     	;# 
  3977  0015                     	;# 
  3978  0015                     	;# 
  3979  0016                     	;# 
  3980  0016                     	;# 
  3981  0017                     	;# 
  3982  0018                     	;# 
  3983  0019                     	;# 
  3984  0019                     	;# 
  3985  001A                     	;# 
  3986  001B                     	;# 
  3987  001C                     	;# 
  3988  001D                     	;# 
  3989  001E                     	;# 
  3990  001F                     	;# 
  3991  008C                     	;# 
  3992  008D                     	;# 
  3993  008E                     	;# 
  3994  0090                     	;# 
  3995  0091                     	;# 
  3996  0092                     	;# 
  3997  0093                     	;# 
  3998  0094                     	;# 
  3999  0097                     	;# 
  4000  009B                     	;# 
  4001  009B                     	;# 
  4002  009C                     	;# 
  4003  009D                     	;# 
  4004  009E                     	;# 
  4005  009F                     	;# 
  4006  010C                     	;# 
  4007  010D                     	;# 
  4008  010E                     	;# 
  4009  0111                     	;# 
  4010  0112                     	;# 
  4011  0113                     	;# 
  4012  0114                     	;# 
  4013  0115                     	;# 
  4014  0116                     	;# 
  4015  0117                     	;# 
  4016  0118                     	;# 
  4017  0119                     	;# 
  4018  018C                     	;# 
  4019  018D                     	;# 
  4020  018E                     	;# 
  4021  0197                     	;# 
  4022  0199                     	;# 
  4023  0199                     	;# 
  4024  0199                     	;# 
  4025  019A                     	;# 
  4026  019A                     	;# 
  4027  019A                     	;# 
  4028  019B                     	;# 
  4029  019B                     	;# 
  4030  019B                     	;# 
  4031  019B                     	;# 
  4032  019B                     	;# 
  4033  019C                     	;# 
  4034  019C                     	;# 
  4035  019C                     	;# 
  4036  019D                     	;# 
  4037  019D                     	;# 
  4038  019D                     	;# 
  4039  019E                     	;# 
  4040  019E                     	;# 
  4041  019E                     	;# 
  4042  019F                     	;# 
  4043  019F                     	;# 
  4044  019F                     	;# 
  4045  019F                     	;# 
  4046  019F                     	;# 
  4047  020C                     	;# 
  4048  020D                     	;# 
  4049  020E                     	;# 
  4050  0211                     	;# 
  4051  0211                     	;# 
  4052  0212                     	;# 
  4053  0212                     	;# 
  4054  0213                     	;# 
  4055  0213                     	;# 
  4056  0214                     	;# 
  4057  0214                     	;# 
  4058  0215                     	;# 
  4059  0215                     	;# 
  4060  0215                     	;# 
  4061  0215                     	;# 
  4062  0216                     	;# 
  4063  0216                     	;# 
  4064  0217                     	;# 
  4065  0217                     	;# 
  4066  0219                     	;# 
  4067  021A                     	;# 
  4068  021B                     	;# 
  4069  021C                     	;# 
  4070  021D                     	;# 
  4071  021D                     	;# 
  4072  021E                     	;# 
  4073  021F                     	;# 
  4074  028C                     	;# 
  4075  028D                     	;# 
  4076  028E                     	;# 
  4077  0291                     	;# 
  4078  0291                     	;# 
  4079  0292                     	;# 
  4080  0293                     	;# 
  4081  0294                     	;# 
  4082  0295                     	;# 
  4083  0295                     	;# 
  4084  0296                     	;# 
  4085  0297                     	;# 
  4086  0298                     	;# 
  4087  029F                     	;# 
  4088  030C                     	;# 
  4089  030D                     	;# 
  4090  030E                     	;# 
  4091  0311                     	;# 
  4092  0311                     	;# 
  4093  0312                     	;# 
  4094  0313                     	;# 
  4095  0314                     	;# 
  4096  0315                     	;# 
  4097  0315                     	;# 
  4098  0316                     	;# 
  4099  0317                     	;# 
  4100  0318                     	;# 
  4101  038C                     	;# 
  4102  038D                     	;# 
  4103  038E                     	;# 
  4104  0391                     	;# 
  4105  0392                     	;# 
  4106  0393                     	;# 
  4107  0394                     	;# 
  4108  0395                     	;# 
  4109  0396                     	;# 
  4110  0397                     	;# 
  4111  0398                     	;# 
  4112  0399                     	;# 
  4113  039A                     	;# 
  4114  039C                     	;# 
  4115  039D                     	;# 
  4116  039E                     	;# 
  4117  039F                     	;# 
  4118  0411                     	;# 
  4119  0411                     	;# 
  4120  0412                     	;# 
  4121  0413                     	;# 
  4122  0414                     	;# 
  4123  0415                     	;# 
  4124  0416                     	;# 
  4125  0417                     	;# 
  4126  0418                     	;# 
  4127  0418                     	;# 
  4128  0419                     	;# 
  4129  041A                     	;# 
  4130  041B                     	;# 
  4131  041C                     	;# 
  4132  041D                     	;# 
  4133  041E                     	;# 
  4134  041F                     	;# 
  4135  0498                     	;# 
  4136  0498                     	;# 
  4137  0499                     	;# 
  4138  049A                     	;# 
  4139  049B                     	;# 
  4140  049B                     	;# 
  4141  049C                     	;# 
  4142  049D                     	;# 
  4143  049E                     	;# 
  4144  049F                     	;# 
  4145  0617                     	;# 
  4146  0618                     	;# 
  4147  0619                     	;# 
  4148  0619                     	;# 
  4149  061A                     	;# 
  4150  061B                     	;# 
  4151  061C                     	;# 
  4152  061C                     	;# 
  4153  061F                     	;# 
  4154  0691                     	;# 
  4155  0692                     	;# 
  4156  0693                     	;# 
  4157  0694                     	;# 
  4158  0695                     	;# 
  4159  0696                     	;# 
  4160  0697                     	;# 
  4161  0698                     	;# 
  4162  0699                     	;# 
  4163  0711                     	;# 
  4164  0712                     	;# 
  4165  0713                     	;# 
  4166  0714                     	;# 
  4167  0715                     	;# 
  4168  0716                     	;# 
  4169  0717                     	;# 
  4170  0718                     	;# 
  4171  0719                     	;# 
  4172  0891                     	;# 
  4173  0891                     	;# 
  4174  0891                     	;# 
  4175  0891                     	;# 
  4176  0891                     	;# 
  4177  0891                     	;# 
  4178  0892                     	;# 
  4179  0892                     	;# 
  4180  0892                     	;# 
  4181  0893                     	;# 
  4182  0893                     	;# 
  4183  0893                     	;# 
  4184  0893                     	;# 
  4185  0893                     	;# 
  4186  0893                     	;# 
  4187  0894                     	;# 
  4188  0894                     	;# 
  4189  0894                     	;# 
  4190  0895                     	;# 
  4191  0895                     	;# 
  4192  0895                     	;# 
  4193  0896                     	;# 
  4194  0896                     	;# 
  4195  0896                     	;# 
  4196  089B                     	;# 
  4197  0911                     	;# 
  4198  0912                     	;# 
  4199  0913                     	;# 
  4200  0914                     	;# 
  4201  0915                     	;# 
  4202  0916                     	;# 
  4203  0918                     	;# 
  4204  0919                     	;# 
  4205  091A                     	;# 
  4206  091B                     	;# 
  4207  091C                     	;# 
  4208  091D                     	;# 
  4209  091E                     	;# 
  4210  091F                     	;# 
  4211  0E0F                     	;# 
  4212  0E10                     	;# 
  4213  0E11                     	;# 
  4214  0E12                     	;# 
  4215  0E13                     	;# 
  4216  0E14                     	;# 
  4217  0E15                     	;# 
  4218  0E16                     	;# 
  4219  0E17                     	;# 
  4220  0E18                     	;# 
  4221  0E19                     	;# 
  4222  0E1A                     	;# 
  4223  0E1B                     	;# 
  4224  0E1C                     	;# 
  4225  0E1D                     	;# 
  4226  0E1E                     	;# 
  4227  0E1F                     	;# 
  4228  0E20                     	;# 
  4229  0E21                     	;# 
  4230  0E22                     	;# 
  4231  0E24                     	;# 
  4232  0E25                     	;# 
  4233  0E28                     	;# 
  4234  0E29                     	;# 
  4235  0E2A                     	;# 
  4236  0E2B                     	;# 
  4237  0E2C                     	;# 
  4238  0E2D                     	;# 
  4239  0E2E                     	;# 
  4240  0E2F                     	;# 
  4241  0E90                     	;# 
  4242  0E91                     	;# 
  4243  0E92                     	;# 
  4244  0E94                     	;# 
  4245  0E95                     	;# 
  4246  0E9C                     	;# 
  4247  0E9D                     	;# 
  4248  0E9E                     	;# 
  4249  0E9F                     	;# 
  4250  0EA0                     	;# 
  4251  0EA1                     	;# 
  4252  0EA2                     	;# 
  4253  0EA3                     	;# 
  4254  0EA4                     	;# 
  4255  0EA5                     	;# 
  4256  0EA6                     	;# 
  4257  0EA7                     	;# 
  4258  0F0F                     	;# 
  4259  0F10                     	;# 
  4260  0F11                     	;# 
  4261  0F12                     	;# 
  4262  0F13                     	;# 
  4263  0F14                     	;# 
  4264  0F15                     	;# 
  4265  0F16                     	;# 
  4266  0F17                     	;# 
  4267  0F18                     	;# 
  4268  0F19                     	;# 
  4269  0F1A                     	;# 
  4270  0F1B                     	;# 
  4271  0F1C                     	;# 
  4272  0F1D                     	;# 
  4273  0F1E                     	;# 
  4274  0F1F                     	;# 
  4275  0F20                     	;# 
  4276  0F21                     	;# 
  4277  0F22                     	;# 
  4278  0F23                     	;# 
  4279  0F24                     	;# 
  4280  0F25                     	;# 
  4281  0F26                     	;# 
  4282  0F27                     	;# 
  4283  0F28                     	;# 
  4284  0F29                     	;# 
  4285  0F2A                     	;# 
  4286  0F2B                     	;# 
  4287  0F2C                     	;# 
  4288  0F2D                     	;# 
  4289  0F2E                     	;# 
  4290  0F2F                     	;# 
  4291  0F30                     	;# 
  4292  0F31                     	;# 
  4293  0F32                     	;# 
  4294  0F33                     	;# 
  4295  0F34                     	;# 
  4296  0F35                     	;# 
  4297  0F36                     	;# 
  4298  0F37                     	;# 
  4299  0FE4                     	;# 
  4300  0FE5                     	;# 
  4301  0FE6                     	;# 
  4302  0FE7                     	;# 
  4303  0FE8                     	;# 
  4304  0FE9                     	;# 
  4305  0FEA                     	;# 
  4306  0FEB                     	;# 
  4307  0FED                     	;# 
  4308  0FEE                     	;# 
  4309  0FEF                     	;# 
  4310  0000                     	;# 
  4311  0001                     	;# 
  4312  0002                     	;# 
  4313  0003                     	;# 
  4314  0004                     	;# 
  4315  0005                     	;# 
  4316  0006                     	;# 
  4317  0007                     	;# 
  4318  0008                     	;# 
  4319  0009                     	;# 
  4320  000A                     	;# 
  4321  000B                     	;# 
  4322  000C                     	;# 
  4323  000D                     	;# 
  4324  000E                     	;# 
  4325  0010                     	;# 
  4326  0011                     	;# 
  4327  0012                     	;# 
  4328  0013                     	;# 
  4329  0014                     	;# 
  4330  0015                     	;# 
  4331  0015                     	;# 
  4332  0016                     	;# 
  4333  0016                     	;# 
  4334  0017                     	;# 
  4335  0018                     	;# 
  4336  0019                     	;# 
  4337  0019                     	;# 
  4338  001A                     	;# 
  4339  001B                     	;# 
  4340  001C                     	;# 
  4341  001D                     	;# 
  4342  001E                     	;# 
  4343  001F                     	;# 
  4344  008C                     	;# 
  4345  008D                     	;# 
  4346  008E                     	;# 
  4347  0090                     	;# 
  4348  0091                     	;# 
  4349  0092                     	;# 
  4350  0093                     	;# 
  4351  0094                     	;# 
  4352  0097                     	;# 
  4353  009B                     	;# 
  4354  009B                     	;# 
  4355  009C                     	;# 
  4356  009D                     	;# 
  4357  009E                     	;# 
  4358  009F                     	;# 
  4359  010C                     	;# 
  4360  010D                     	;# 
  4361  010E                     	;# 
  4362  0111                     	;# 
  4363  0112                     	;# 
  4364  0113                     	;# 
  4365  0114                     	;# 
  4366  0115                     	;# 
  4367  0116                     	;# 
  4368  0117                     	;# 
  4369  0118                     	;# 
  4370  0119                     	;# 
  4371  018C                     	;# 
  4372  018D                     	;# 
  4373  018E                     	;# 
  4374  0197                     	;# 
  4375  0199                     	;# 
  4376  0199                     	;# 
  4377  0199                     	;# 
  4378  019A                     	;# 
  4379  019A                     	;# 
  4380  019A                     	;# 
  4381  019B                     	;# 
  4382  019B                     	;# 
  4383  019B                     	;# 
  4384  019B                     	;# 
  4385  019B                     	;# 
  4386  019C                     	;# 
  4387  019C                     	;# 
  4388  019C                     	;# 
  4389  019D                     	;# 
  4390  019D                     	;# 
  4391  019D                     	;# 
  4392  019E                     	;# 
  4393  019E                     	;# 
  4394  019E                     	;# 
  4395  019F                     	;# 
  4396  019F                     	;# 
  4397  019F                     	;# 
  4398  019F                     	;# 
  4399  019F                     	;# 
  4400  020C                     	;# 
  4401  020D                     	;# 
  4402  020E                     	;# 
  4403  0211                     	;# 
  4404  0211                     	;# 
  4405  0212                     	;# 
  4406  0212                     	;# 
  4407  0213                     	;# 
  4408  0213                     	;# 
  4409  0214                     	;# 
  4410  0214                     	;# 
  4411  0215                     	;# 
  4412  0215                     	;# 
  4413  0215                     	;# 
  4414  0215                     	;# 
  4415  0216                     	;# 
  4416  0216                     	;# 
  4417  0217                     	;# 
  4418  0217                     	;# 
  4419  0219                     	;# 
  4420  021A                     	;# 
  4421  021B                     	;# 
  4422  021C                     	;# 
  4423  021D                     	;# 
  4424  021D                     	;# 
  4425  021E                     	;# 
  4426  021F                     	;# 
  4427  028C                     	;# 
  4428  028D                     	;# 
  4429  028E                     	;# 
  4430  0291                     	;# 
  4431  0291                     	;# 
  4432  0292                     	;# 
  4433  0293                     	;# 
  4434  0294                     	;# 
  4435  0295                     	;# 
  4436  0295                     	;# 
  4437  0296                     	;# 
  4438  0297                     	;# 
  4439  0298                     	;# 
  4440  029F                     	;# 
  4441  030C                     	;# 
  4442  030D                     	;# 
  4443  030E                     	;# 
  4444  0311                     	;# 
  4445  0311                     	;# 
  4446  0312                     	;# 
  4447  0313                     	;# 
  4448  0314                     	;# 
  4449  0315                     	;# 
  4450  0315                     	;# 
  4451  0316                     	;# 
  4452  0317                     	;# 
  4453  0318                     	;# 
  4454  038C                     	;# 
  4455  038D                     	;# 
  4456  038E                     	;# 
  4457  0391                     	;# 
  4458  0392                     	;# 
  4459  0393                     	;# 
  4460  0394                     	;# 
  4461  0395                     	;# 
  4462  0396                     	;# 
  4463  0397                     	;# 
  4464  0398                     	;# 
  4465  0399                     	;# 
  4466  039A                     	;# 
  4467  039C                     	;# 
  4468  039D                     	;# 
  4469  039E                     	;# 
  4470  039F                     	;# 
  4471  0411                     	;# 
  4472  0411                     	;# 
  4473  0412                     	;# 
  4474  0413                     	;# 
  4475  0414                     	;# 
  4476  0415                     	;# 
  4477  0416                     	;# 
  4478  0417                     	;# 
  4479  0418                     	;# 
  4480  0418                     	;# 
  4481  0419                     	;# 
  4482  041A                     	;# 
  4483  041B                     	;# 
  4484  041C                     	;# 
  4485  041D                     	;# 
  4486  041E                     	;# 
  4487  041F                     	;# 
  4488  0498                     	;# 
  4489  0498                     	;# 
  4490  0499                     	;# 
  4491  049A                     	;# 
  4492  049B                     	;# 
  4493  049B                     	;# 
  4494  049C                     	;# 
  4495  049D                     	;# 
  4496  049E                     	;# 
  4497  049F                     	;# 
  4498  0617                     	;# 
  4499  0618                     	;# 
  4500  0619                     	;# 
  4501  0619                     	;# 
  4502  061A                     	;# 
  4503  061B                     	;# 
  4504  061C                     	;# 
  4505  061C                     	;# 
  4506  061F                     	;# 
  4507  0691                     	;# 
  4508  0692                     	;# 
  4509  0693                     	;# 
  4510  0694                     	;# 
  4511  0695                     	;# 
  4512  0696                     	;# 
  4513  0697                     	;# 
  4514  0698                     	;# 
  4515  0699                     	;# 
  4516  0711                     	;# 
  4517  0712                     	;# 
  4518  0713                     	;# 
  4519  0714                     	;# 
  4520  0715                     	;# 
  4521  0716                     	;# 
  4522  0717                     	;# 
  4523  0718                     	;# 
  4524  0719                     	;# 
  4525  0891                     	;# 
  4526  0891                     	;# 
  4527  0891                     	;# 
  4528  0891                     	;# 
  4529  0891                     	;# 
  4530  0891                     	;# 
  4531  0892                     	;# 
  4532  0892                     	;# 
  4533  0892                     	;# 
  4534  0893                     	;# 
  4535  0893                     	;# 
  4536  0893                     	;# 
  4537  0893                     	;# 
  4538  0893                     	;# 
  4539  0893                     	;# 
  4540  0894                     	;# 
  4541  0894                     	;# 
  4542  0894                     	;# 
  4543  0895                     	;# 
  4544  0895                     	;# 
  4545  0895                     	;# 
  4546  0896                     	;# 
  4547  0896                     	;# 
  4548  0896                     	;# 
  4549  089B                     	;# 
  4550  0911                     	;# 
  4551  0912                     	;# 
  4552  0913                     	;# 
  4553  0914                     	;# 
  4554  0915                     	;# 
  4555  0916                     	;# 
  4556  0918                     	;# 
  4557  0919                     	;# 
  4558  091A                     	;# 
  4559  091B                     	;# 
  4560  091C                     	;# 
  4561  091D                     	;# 
  4562  091E                     	;# 
  4563  091F                     	;# 
  4564  0E0F                     	;# 
  4565  0E10                     	;# 
  4566  0E11                     	;# 
  4567  0E12                     	;# 
  4568  0E13                     	;# 
  4569  0E14                     	;# 
  4570  0E15                     	;# 
  4571  0E16                     	;# 
  4572  0E17                     	;# 
  4573  0E18                     	;# 
  4574  0E19                     	;# 
  4575  0E1A                     	;# 
  4576  0E1B                     	;# 
  4577  0E1C                     	;# 
  4578  0E1D                     	;# 
  4579  0E1E                     	;# 
  4580  0E1F                     	;# 
  4581  0E20                     	;# 
  4582  0E21                     	;# 
  4583  0E22                     	;# 
  4584  0E24                     	;# 
  4585  0E25                     	;# 
  4586  0E28                     	;# 
  4587  0E29                     	;# 
  4588  0E2A                     	;# 
  4589  0E2B                     	;# 
  4590  0E2C                     	;# 
  4591  0E2D                     	;# 
  4592  0E2E                     	;# 
  4593  0E2F                     	;# 
  4594  0E90                     	;# 
  4595  0E91                     	;# 
  4596  0E92                     	;# 
  4597  0E94                     	;# 
  4598  0E95                     	;# 
  4599  0E9C                     	;# 
  4600  0E9D                     	;# 
  4601  0E9E                     	;# 
  4602  0E9F                     	;# 
  4603  0EA0                     	;# 
  4604  0EA1                     	;# 
  4605  0EA2                     	;# 
  4606  0EA3                     	;# 
  4607  0EA4                     	;# 
  4608  0EA5                     	;# 
  4609  0EA6                     	;# 
  4610  0EA7                     	;# 
  4611  0F0F                     	;# 
  4612  0F10                     	;# 
  4613  0F11                     	;# 
  4614  0F12                     	;# 
  4615  0F13                     	;# 
  4616  0F14                     	;# 
  4617  0F15                     	;# 
  4618  0F16                     	;# 
  4619  0F17                     	;# 
  4620  0F18                     	;# 
  4621  0F19                     	;# 
  4622  0F1A                     	;# 
  4623  0F1B                     	;# 
  4624  0F1C                     	;# 
  4625  0F1D                     	;# 
  4626  0F1E                     	;# 
  4627  0F1F                     	;# 
  4628  0F20                     	;# 
  4629  0F21                     	;# 
  4630  0F22                     	;# 
  4631  0F23                     	;# 
  4632  0F24                     	;# 
  4633  0F25                     	;# 
  4634  0F26                     	;# 
  4635  0F27                     	;# 
  4636  0F28                     	;# 
  4637  0F29                     	;# 
  4638  0F2A                     	;# 
  4639  0F2B                     	;# 
  4640  0F2C                     	;# 
  4641  0F2D                     	;# 
  4642  0F2E                     	;# 
  4643  0F2F                     	;# 
  4644  0F30                     	;# 
  4645  0F31                     	;# 
  4646  0F32                     	;# 
  4647  0F33                     	;# 
  4648  0F34                     	;# 
  4649  0F35                     	;# 
  4650  0F36                     	;# 
  4651  0F37                     	;# 
  4652  0FE4                     	;# 
  4653  0FE5                     	;# 
  4654  0FE6                     	;# 
  4655  0FE7                     	;# 
  4656  0FE8                     	;# 
  4657  0FE9                     	;# 
  4658  0FEA                     	;# 
  4659  0FEB                     	;# 
  4660  0FED                     	;# 
  4661  0FEE                     	;# 
  4662  0FEF                     	;# 
  4663  0000                     	;# 
  4664  0001                     	;# 
  4665  0002                     	;# 
  4666  0003                     	;# 
  4667  0004                     	;# 
  4668  0005                     	;# 
  4669  0006                     	;# 
  4670  0007                     	;# 
  4671  0008                     	;# 
  4672  0009                     	;# 
  4673  000A                     	;# 
  4674  000B                     	;# 
  4675  000C                     	;# 
  4676  000D                     	;# 
  4677  000E                     	;# 
  4678  0010                     	;# 
  4679  0011                     	;# 
  4680  0012                     	;# 
  4681  0013                     	;# 
  4682  0014                     	;# 
  4683  0015                     	;# 
  4684  0015                     	;# 
  4685  0016                     	;# 
  4686  0016                     	;# 
  4687  0017                     	;# 
  4688  0018                     	;# 
  4689  0019                     	;# 
  4690  0019                     	;# 
  4691  001A                     	;# 
  4692  001B                     	;# 
  4693  001C                     	;# 
  4694  001D                     	;# 
  4695  001E                     	;# 
  4696  001F                     	;# 
  4697  008C                     	;# 
  4698  008D                     	;# 
  4699  008E                     	;# 
  4700  0090                     	;# 
  4701  0091                     	;# 
  4702  0092                     	;# 
  4703  0093                     	;# 
  4704  0094                     	;# 
  4705  0097                     	;# 
  4706  009B                     	;# 
  4707  009B                     	;# 
  4708  009C                     	;# 
  4709  009D                     	;# 
  4710  009E                     	;# 
  4711  009F                     	;# 
  4712  010C                     	;# 
  4713  010D                     	;# 
  4714  010E                     	;# 
  4715  0111                     	;# 
  4716  0112                     	;# 
  4717  0113                     	;# 
  4718  0114                     	;# 
  4719  0115                     	;# 
  4720  0116                     	;# 
  4721  0117                     	;# 
  4722  0118                     	;# 
  4723  0119                     	;# 
  4724  018C                     	;# 
  4725  018D                     	;# 
  4726  018E                     	;# 
  4727  0197                     	;# 
  4728  0199                     	;# 
  4729  0199                     	;# 
  4730  0199                     	;# 
  4731  019A                     	;# 
  4732  019A                     	;# 
  4733  019A                     	;# 
  4734  019B                     	;# 
  4735  019B                     	;# 
  4736  019B                     	;# 
  4737  019B                     	;# 
  4738  019B                     	;# 
  4739  019C                     	;# 
  4740  019C                     	;# 
  4741  019C                     	;# 
  4742  019D                     	;# 
  4743  019D                     	;# 
  4744  019D                     	;# 
  4745  019E                     	;# 
  4746  019E                     	;# 
  4747  019E                     	;# 
  4748  019F                     	;# 
  4749  019F                     	;# 
  4750  019F                     	;# 
  4751  019F                     	;# 
  4752  019F                     	;# 
  4753  020C                     	;# 
  4754  020D                     	;# 
  4755  020E                     	;# 
  4756  0211                     	;# 
  4757  0211                     	;# 
  4758  0212                     	;# 
  4759  0212                     	;# 
  4760  0213                     	;# 
  4761  0213                     	;# 
  4762  0214                     	;# 
  4763  0214                     	;# 
  4764  0215                     	;# 
  4765  0215                     	;# 
  4766  0215                     	;# 
  4767  0215                     	;# 
  4768  0216                     	;# 
  4769  0216                     	;# 
  4770  0217                     	;# 
  4771  0217                     	;# 
  4772  0219                     	;# 
  4773  021A                     	;# 
  4774  021B                     	;# 
  4775  021C                     	;# 
  4776  021D                     	;# 
  4777  021D                     	;# 
  4778  021E                     	;# 
  4779  021F                     	;# 
  4780  028C                     	;# 
  4781  028D                     	;# 
  4782  028E                     	;# 
  4783  0291                     	;# 
  4784  0291                     	;# 
  4785  0292                     	;# 
  4786  0293                     	;# 
  4787  0294                     	;# 
  4788  0295                     	;# 
  4789  0295                     	;# 
  4790  0296                     	;# 
  4791  0297                     	;# 
  4792  0298                     	;# 
  4793  029F                     	;# 
  4794  030C                     	;# 
  4795  030D                     	;# 
  4796  030E                     	;# 
  4797  0311                     	;# 
  4798  0311                     	;# 
  4799  0312                     	;# 
  4800  0313                     	;# 
  4801  0314                     	;# 
  4802  0315                     	;# 
  4803  0315                     	;# 
  4804  0316                     	;# 
  4805  0317                     	;# 
  4806  0318                     	;# 
  4807  038C                     	;# 
  4808  038D                     	;# 
  4809  038E                     	;# 
  4810  0391                     	;# 
  4811  0392                     	;# 
  4812  0393                     	;# 
  4813  0394                     	;# 
  4814  0395                     	;# 
  4815  0396                     	;# 
  4816  0397                     	;# 
  4817  0398                     	;# 
  4818  0399                     	;# 
  4819  039A                     	;# 
  4820  039C                     	;# 
  4821  039D                     	;# 
  4822  039E                     	;# 
  4823  039F                     	;# 
  4824  0411                     	;# 
  4825  0411                     	;# 
  4826  0412                     	;# 
  4827  0413                     	;# 
  4828  0414                     	;# 
  4829  0415                     	;# 
  4830  0416                     	;# 
  4831  0417                     	;# 
  4832  0418                     	;# 
  4833  0418                     	;# 
  4834  0419                     	;# 
  4835  041A                     	;# 
  4836  041B                     	;# 
  4837  041C                     	;# 
  4838  041D                     	;# 
  4839  041E                     	;# 
  4840  041F                     	;# 
  4841  0498                     	;# 
  4842  0498                     	;# 
  4843  0499                     	;# 
  4844  049A                     	;# 
  4845  049B                     	;# 
  4846  049B                     	;# 
  4847  049C                     	;# 
  4848  049D                     	;# 
  4849  049E                     	;# 
  4850  049F                     	;# 
  4851  0617                     	;# 
  4852  0618                     	;# 
  4853  0619                     	;# 
  4854  0619                     	;# 
  4855  061A                     	;# 
  4856  061B                     	;# 
  4857  061C                     	;# 
  4858  061C                     	;# 
  4859  061F                     	;# 
  4860  0691                     	;# 
  4861  0692                     	;# 
  4862  0693                     	;# 
  4863  0694                     	;# 
  4864  0695                     	;# 
  4865  0696                     	;# 
  4866  0697                     	;# 
  4867  0698                     	;# 
  4868  0699                     	;# 
  4869  0711                     	;# 
  4870  0712                     	;# 
  4871  0713                     	;# 
  4872  0714                     	;# 
  4873  0715                     	;# 
  4874  0716                     	;# 
  4875  0717                     	;# 
  4876  0718                     	;# 
  4877  0719                     	;# 
  4878  0891                     	;# 
  4879  0891                     	;# 
  4880  0891                     	;# 
  4881  0891                     	;# 
  4882  0891                     	;# 
  4883  0891                     	;# 
  4884  0892                     	;# 
  4885  0892                     	;# 
  4886  0892                     	;# 
  4887  0893                     	;# 
  4888  0893                     	;# 
  4889  0893                     	;# 
  4890  0893                     	;# 
  4891  0893                     	;# 
  4892  0893                     	;# 
  4893  0894                     	;# 
  4894  0894                     	;# 
  4895  0894                     	;# 
  4896  0895                     	;# 
  4897  0895                     	;# 
  4898  0895                     	;# 
  4899  0896                     	;# 
  4900  0896                     	;# 
  4901  0896                     	;# 
  4902  089B                     	;# 
  4903  0911                     	;# 
  4904  0912                     	;# 
  4905  0913                     	;# 
  4906  0914                     	;# 
  4907  0915                     	;# 
  4908  0916                     	;# 
  4909  0918                     	;# 
  4910  0919                     	;# 
  4911  091A                     	;# 
  4912  091B                     	;# 
  4913  091C                     	;# 
  4914  091D                     	;# 
  4915  091E                     	;# 
  4916  091F                     	;# 
  4917  0E0F                     	;# 
  4918  0E10                     	;# 
  4919  0E11                     	;# 
  4920  0E12                     	;# 
  4921  0E13                     	;# 
  4922  0E14                     	;# 
  4923  0E15                     	;# 
  4924  0E16                     	;# 
  4925  0E17                     	;# 
  4926  0E18                     	;# 
  4927  0E19                     	;# 
  4928  0E1A                     	;# 
  4929  0E1B                     	;# 
  4930  0E1C                     	;# 
  4931  0E1D                     	;# 
  4932  0E1E                     	;# 
  4933  0E1F                     	;# 
  4934  0E20                     	;# 
  4935  0E21                     	;# 
  4936  0E22                     	;# 
  4937  0E24                     	;# 
  4938  0E25                     	;# 
  4939  0E28                     	;# 
  4940  0E29                     	;# 
  4941  0E2A                     	;# 
  4942  0E2B                     	;# 
  4943  0E2C                     	;# 
  4944  0E2D                     	;# 
  4945  0E2E                     	;# 
  4946  0E2F                     	;# 
  4947  0E90                     	;# 
  4948  0E91                     	;# 
  4949  0E92                     	;# 
  4950  0E94                     	;# 
  4951  0E95                     	;# 
  4952  0E9C                     	;# 
  4953  0E9D                     	;# 
  4954  0E9E                     	;# 
  4955  0E9F                     	;# 
  4956  0EA0                     	;# 
  4957  0EA1                     	;# 
  4958  0EA2                     	;# 
  4959  0EA3                     	;# 
  4960  0EA4                     	;# 
  4961  0EA5                     	;# 
  4962  0EA6                     	;# 
  4963  0EA7                     	;# 
  4964  0F0F                     	;# 
  4965  0F10                     	;# 
  4966  0F11                     	;# 
  4967  0F12                     	;# 
  4968  0F13                     	;# 
  4969  0F14                     	;# 
  4970  0F15                     	;# 
  4971  0F16                     	;# 
  4972  0F17                     	;# 
  4973  0F18                     	;# 
  4974  0F19                     	;# 
  4975  0F1A                     	;# 
  4976  0F1B                     	;# 
  4977  0F1C                     	;# 
  4978  0F1D                     	;# 
  4979  0F1E                     	;# 
  4980  0F1F                     	;# 
  4981  0F20                     	;# 
  4982  0F21                     	;# 
  4983  0F22                     	;# 
  4984  0F23                     	;# 
  4985  0F24                     	;# 
  4986  0F25                     	;# 
  4987  0F26                     	;# 
  4988  0F27                     	;# 
  4989  0F28                     	;# 
  4990  0F29                     	;# 
  4991  0F2A                     	;# 
  4992  0F2B                     	;# 
  4993  0F2C                     	;# 
  4994  0F2D                     	;# 
  4995  0F2E                     	;# 
  4996  0F2F                     	;# 
  4997  0F30                     	;# 
  4998  0F31                     	;# 
  4999  0F32                     	;# 
  5000  0F33                     	;# 
  5001  0F34                     	;# 
  5002  0F35                     	;# 
  5003  0F36                     	;# 
  5004  0F37                     	;# 
  5005  0FE4                     	;# 
  5006  0FE5                     	;# 
  5007  0FE6                     	;# 
  5008  0FE7                     	;# 
  5009  0FE8                     	;# 
  5010  0FE9                     	;# 
  5011  0FEA                     	;# 
  5012  0FEB                     	;# 
  5013  0FED                     	;# 
  5014  0FEE                     	;# 
  5015  0FEF                     	;# 
  5016  0000                     	;# 
  5017  0001                     	;# 
  5018  0002                     	;# 
  5019  0003                     	;# 
  5020  0004                     	;# 
  5021  0005                     	;# 
  5022  0006                     	;# 
  5023  0007                     	;# 
  5024  0008                     	;# 
  5025  0009                     	;# 
  5026  000A                     	;# 
  5027  000B                     	;# 
  5028  000C                     	;# 
  5029  000D                     	;# 
  5030  000E                     	;# 
  5031  0010                     	;# 
  5032  0011                     	;# 
  5033  0012                     	;# 
  5034  0013                     	;# 
  5035  0014                     	;# 
  5036  0015                     	;# 
  5037  0015                     	;# 
  5038  0016                     	;# 
  5039  0016                     	;# 
  5040  0017                     	;# 
  5041  0018                     	;# 
  5042  0019                     	;# 
  5043  0019                     	;# 
  5044  001A                     	;# 
  5045  001B                     	;# 
  5046  001C                     	;# 
  5047  001D                     	;# 
  5048  001E                     	;# 
  5049  001F                     	;# 
  5050  008C                     	;# 
  5051  008D                     	;# 
  5052  008E                     	;# 
  5053  0090                     	;# 
  5054  0091                     	;# 
  5055  0092                     	;# 
  5056  0093                     	;# 
  5057  0094                     	;# 
  5058  0097                     	;# 
  5059  009B                     	;# 
  5060  009B                     	;# 
  5061  009C                     	;# 
  5062  009D                     	;# 
  5063  009E                     	;# 
  5064  009F                     	;# 
  5065  010C                     	;# 
  5066  010D                     	;# 
  5067  010E                     	;# 
  5068  0111                     	;# 
  5069  0112                     	;# 
  5070  0113                     	;# 
  5071  0114                     	;# 
  5072  0115                     	;# 
  5073  0116                     	;# 
  5074  0117                     	;# 
  5075  0118                     	;# 
  5076  0119                     	;# 
  5077  018C                     	;# 
  5078  018D                     	;# 
  5079  018E                     	;# 
  5080  0197                     	;# 
  5081  0199                     	;# 
  5082  0199                     	;# 
  5083  0199                     	;# 
  5084  019A                     	;# 
  5085  019A                     	;# 
  5086  019A                     	;# 
  5087  019B                     	;# 
  5088  019B                     	;# 
  5089  019B                     	;# 
  5090  019B                     	;# 
  5091  019B                     	;# 
  5092  019C                     	;# 
  5093  019C                     	;# 
  5094  019C                     	;# 
  5095  019D                     	;# 
  5096  019D                     	;# 
  5097  019D                     	;# 
  5098  019E                     	;# 
  5099  019E                     	;# 
  5100  019E                     	;# 
  5101  019F                     	;# 
  5102  019F                     	;# 
  5103  019F                     	;# 
  5104  019F                     	;# 
  5105  019F                     	;# 
  5106  020C                     	;# 
  5107  020D                     	;# 
  5108  020E                     	;# 
  5109  0211                     	;# 
  5110  0211                     	;# 
  5111  0212                     	;# 
  5112  0212                     	;# 
  5113  0213                     	;# 
  5114  0213                     	;# 
  5115  0214                     	;# 
  5116  0214                     	;# 
  5117  0215                     	;# 
  5118  0215                     	;# 
  5119  0215                     	;# 
  5120  0215                     	;# 
  5121  0216                     	;# 
  5122  0216                     	;# 
  5123  0217                     	;# 
  5124  0217                     	;# 
  5125  0219                     	;# 
  5126  021A                     	;# 
  5127  021B                     	;# 
  5128  021C                     	;# 
  5129  021D                     	;# 
  5130  021D                     	;# 
  5131  021E                     	;# 
  5132  021F                     	;# 
  5133  028C                     	;# 
  5134  028D                     	;# 
  5135  028E                     	;# 
  5136  0291                     	;# 
  5137  0291                     	;# 
  5138  0292                     	;# 
  5139  0293                     	;# 
  5140  0294                     	;# 
  5141  0295                     	;# 
  5142  0295                     	;# 
  5143  0296                     	;# 
  5144  0297                     	;# 
  5145  0298                     	;# 
  5146  029F                     	;# 
  5147  030C                     	;# 
  5148  030D                     	;# 
  5149  030E                     	;# 
  5150  0311                     	;# 
  5151  0311                     	;# 
  5152  0312                     	;# 
  5153  0313                     	;# 
  5154  0314                     	;# 
  5155  0315                     	;# 
  5156  0315                     	;# 
  5157  0316                     	;# 
  5158  0317                     	;# 
  5159  0318                     	;# 
  5160  038C                     	;# 
  5161  038D                     	;# 
  5162  038E                     	;# 
  5163  0391                     	;# 
  5164  0392                     	;# 
  5165  0393                     	;# 
  5166  0394                     	;# 
  5167  0395                     	;# 
  5168  0396                     	;# 
  5169  0397                     	;# 
  5170  0398                     	;# 
  5171  0399                     	;# 
  5172  039A                     	;# 
  5173  039C                     	;# 
  5174  039D                     	;# 
  5175  039E                     	;# 
  5176  039F                     	;# 
  5177  0411                     	;# 
  5178  0411                     	;# 
  5179  0412                     	;# 
  5180  0413                     	;# 
  5181  0414                     	;# 
  5182  0415                     	;# 
  5183  0416                     	;# 
  5184  0417                     	;# 
  5185  0418                     	;# 
  5186  0418                     	;# 
  5187  0419                     	;# 
  5188  041A                     	;# 
  5189  041B                     	;# 
  5190  041C                     	;# 
  5191  041D                     	;# 
  5192  041E                     	;# 
  5193  041F                     	;# 
  5194  0498                     	;# 
  5195  0498                     	;# 
  5196  0499                     	;# 
  5197  049A                     	;# 
  5198  049B                     	;# 
  5199  049B                     	;# 
  5200  049C                     	;# 
  5201  049D                     	;# 
  5202  049E                     	;# 
  5203  049F                     	;# 
  5204  0617                     	;# 
  5205  0618                     	;# 
  5206  0619                     	;# 
  5207  0619                     	;# 
  5208  061A                     	;# 
  5209  061B                     	;# 
  5210  061C                     	;# 
  5211  061C                     	;# 
  5212  061F                     	;# 
  5213  0691                     	;# 
  5214  0692                     	;# 
  5215  0693                     	;# 
  5216  0694                     	;# 
  5217  0695                     	;# 
  5218  0696                     	;# 
  5219  0697                     	;# 
  5220  0698                     	;# 
  5221  0699                     	;# 
  5222  0711                     	;# 
  5223  0712                     	;# 
  5224  0713                     	;# 
  5225  0714                     	;# 
  5226  0715                     	;# 
  5227  0716                     	;# 
  5228  0717                     	;# 
  5229  0718                     	;# 
  5230  0719                     	;# 
  5231  0891                     	;# 
  5232  0891                     	;# 
  5233  0891                     	;# 
  5234  0891                     	;# 
  5235  0891                     	;# 
  5236  0891                     	;# 
  5237  0892                     	;# 
  5238  0892                     	;# 
  5239  0892                     	;# 
  5240  0893                     	;# 
  5241  0893                     	;# 
  5242  0893                     	;# 
  5243  0893                     	;# 
  5244  0893                     	;# 
  5245  0893                     	;# 
  5246  0894                     	;# 
  5247  0894                     	;# 
  5248  0894                     	;# 
  5249  0895                     	;# 
  5250  0895                     	;# 
  5251  0895                     	;# 
  5252  0896                     	;# 
  5253  0896                     	;# 
  5254  0896                     	;# 
  5255  089B                     	;# 
  5256  0911                     	;# 
  5257  0912                     	;# 
  5258  0913                     	;# 
  5259  0914                     	;# 
  5260  0915                     	;# 
  5261  0916                     	;# 
  5262  0918                     	;# 
  5263  0919                     	;# 
  5264  091A                     	;# 
  5265  091B                     	;# 
  5266  091C                     	;# 
  5267  091D                     	;# 
  5268  091E                     	;# 
  5269  091F                     	;# 
  5270  0E0F                     	;# 
  5271  0E10                     	;# 
  5272  0E11                     	;# 
  5273  0E12                     	;# 
  5274  0E13                     	;# 
  5275  0E14                     	;# 
  5276  0E15                     	;# 
  5277  0E16                     	;# 
  5278  0E17                     	;# 
  5279  0E18                     	;# 
  5280  0E19                     	;# 
  5281  0E1A                     	;# 
  5282  0E1B                     	;# 
  5283  0E1C                     	;# 
  5284  0E1D                     	;# 
  5285  0E1E                     	;# 
  5286  0E1F                     	;# 
  5287  0E20                     	;# 
  5288  0E21                     	;# 
  5289  0E22                     	;# 
  5290  0E24                     	;# 
  5291  0E25                     	;# 
  5292  0E28                     	;# 
  5293  0E29                     	;# 
  5294  0E2A                     	;# 
  5295  0E2B                     	;# 
  5296  0E2C                     	;# 
  5297  0E2D                     	;# 
  5298  0E2E                     	;# 
  5299  0E2F                     	;# 
  5300  0E90                     	;# 
  5301  0E91                     	;# 
  5302  0E92                     	;# 
  5303  0E94                     	;# 
  5304  0E95                     	;# 
  5305  0E9C                     	;# 
  5306  0E9D                     	;# 
  5307  0E9E                     	;# 
  5308  0E9F                     	;# 
  5309  0EA0                     	;# 
  5310  0EA1                     	;# 
  5311  0EA2                     	;# 
  5312  0EA3                     	;# 
  5313  0EA4                     	;# 
  5314  0EA5                     	;# 
  5315  0EA6                     	;# 
  5316  0EA7                     	;# 
  5317  0F0F                     	;# 
  5318  0F10                     	;# 
  5319  0F11                     	;# 
  5320  0F12                     	;# 
  5321  0F13                     	;# 
  5322  0F14                     	;# 
  5323  0F15                     	;# 
  5324  0F16                     	;# 
  5325  0F17                     	;# 
  5326  0F18                     	;# 
  5327  0F19                     	;# 
  5328  0F1A                     	;# 
  5329  0F1B                     	;# 
  5330  0F1C                     	;# 
  5331  0F1D                     	;# 
  5332  0F1E                     	;# 
  5333  0F1F                     	;# 
  5334  0F20                     	;# 
  5335  0F21                     	;# 
  5336  0F22                     	;# 
  5337  0F23                     	;# 
  5338  0F24                     	;# 
  5339  0F25                     	;# 
  5340  0F26                     	;# 
  5341  0F27                     	;# 
  5342  0F28                     	;# 
  5343  0F29                     	;# 
  5344  0F2A                     	;# 
  5345  0F2B                     	;# 
  5346  0F2C                     	;# 
  5347  0F2D                     	;# 
  5348  0F2E                     	;# 
  5349  0F2F                     	;# 
  5350  0F30                     	;# 
  5351  0F31                     	;# 
  5352  0F32                     	;# 
  5353  0F33                     	;# 
  5354  0F34                     	;# 
  5355  0F35                     	;# 
  5356  0F36                     	;# 
  5357  0F37                     	;# 
  5358  0FE4                     	;# 
  5359  0FE5                     	;# 
  5360  0FE6                     	;# 
  5361  0FE7                     	;# 
  5362  0FE8                     	;# 
  5363  0FE9                     	;# 
  5364  0FEA                     	;# 
  5365  0FEB                     	;# 
  5366  0FED                     	;# 
  5367  0FEE                     	;# 
  5368  0FEF                     	;# 
  5369  0000                     	;# 
  5370  0001                     	;# 
  5371  0002                     	;# 
  5372  0003                     	;# 
  5373  0004                     	;# 
  5374  0005                     	;# 
  5375  0006                     	;# 
  5376  0007                     	;# 
  5377  0008                     	;# 
  5378  0009                     	;# 
  5379  000A                     	;# 
  5380  000B                     	;# 
  5381  000C                     	;# 
  5382  000D                     	;# 
  5383  000E                     	;# 
  5384  0010                     	;# 
  5385  0011                     	;# 
  5386  0012                     	;# 
  5387  0013                     	;# 
  5388  0014                     	;# 
  5389  0015                     	;# 
  5390  0015                     	;# 
  5391  0016                     	;# 
  5392  0016                     	;# 
  5393  0017                     	;# 
  5394  0018                     	;# 
  5395  0019                     	;# 
  5396  0019                     	;# 
  5397  001A                     	;# 
  5398  001B                     	;# 
  5399  001C                     	;# 
  5400  001D                     	;# 
  5401  001E                     	;# 
  5402  001F                     	;# 
  5403  008C                     	;# 
  5404  008D                     	;# 
  5405  008E                     	;# 
  5406  0090                     	;# 
  5407  0091                     	;# 
  5408  0092                     	;# 
  5409  0093                     	;# 
  5410  0094                     	;# 
  5411  0097                     	;# 
  5412  009B                     	;# 
  5413  009B                     	;# 
  5414  009C                     	;# 
  5415  009D                     	;# 
  5416  009E                     	;# 
  5417  009F                     	;# 
  5418  010C                     	;# 
  5419  010D                     	;# 
  5420  010E                     	;# 
  5421  0111                     	;# 
  5422  0112                     	;# 
  5423  0113                     	;# 
  5424  0114                     	;# 
  5425  0115                     	;# 
  5426  0116                     	;# 
  5427  0117                     	;# 
  5428  0118                     	;# 
  5429  0119                     	;# 
  5430  018C                     	;# 
  5431  018D                     	;# 
  5432  018E                     	;# 
  5433  0197                     	;# 
  5434  0199                     	;# 
  5435  0199                     	;# 
  5436  0199                     	;# 
  5437  019A                     	;# 
  5438  019A                     	;# 
  5439  019A                     	;# 
  5440  019B                     	;# 
  5441  019B                     	;# 
  5442  019B                     	;# 
  5443  019B                     	;# 
  5444  019B                     	;# 
  5445  019C                     	;# 
  5446  019C                     	;# 
  5447  019C                     	;# 
  5448  019D                     	;# 
  5449  019D                     	;# 
  5450  019D                     	;# 
  5451  019E                     	;# 
  5452  019E                     	;# 
  5453  019E                     	;# 
  5454  019F                     	;# 
  5455  019F                     	;# 
  5456  019F                     	;# 
  5457  019F                     	;# 
  5458  019F                     	;# 
  5459  020C                     	;# 
  5460  020D                     	;# 
  5461  020E                     	;# 
  5462  0211                     	;# 
  5463  0211                     	;# 
  5464  0212                     	;# 
  5465  0212                     	;# 
  5466  0213                     	;# 
  5467  0213                     	;# 
  5468  0214                     	;# 
  5469  0214                     	;# 
  5470  0215                     	;# 
  5471  0215                     	;# 
  5472  0215                     	;# 
  5473  0215                     	;# 
  5474  0216                     	;# 
  5475  0216                     	;# 
  5476  0217                     	;# 
  5477  0217                     	;# 
  5478  0219                     	;# 
  5479  021A                     	;# 
  5480  021B                     	;# 
  5481  021C                     	;# 
  5482  021D                     	;# 
  5483  021D                     	;# 
  5484  021E                     	;# 
  5485  021F                     	;# 
  5486  028C                     	;# 
  5487  028D                     	;# 
  5488  028E                     	;# 
  5489  0291                     	;# 
  5490  0291                     	;# 
  5491  0292                     	;# 
  5492  0293                     	;# 
  5493  0294                     	;# 
  5494  0295                     	;# 
  5495  0295                     	;# 
  5496  0296                     	;# 
  5497  0297                     	;# 
  5498  0298                     	;# 
  5499  029F                     	;# 
  5500  030C                     	;# 
  5501  030D                     	;# 
  5502  030E                     	;# 
  5503  0311                     	;# 
  5504  0311                     	;# 
  5505  0312                     	;# 
  5506  0313                     	;# 
  5507  0314                     	;# 
  5508  0315                     	;# 
  5509  0315                     	;# 
  5510  0316                     	;# 
  5511  0317                     	;# 
  5512  0318                     	;# 
  5513  038C                     	;# 
  5514  038D                     	;# 
  5515  038E                     	;# 
  5516  0391                     	;# 
  5517  0392                     	;# 
  5518  0393                     	;# 
  5519  0394                     	;# 
  5520  0395                     	;# 
  5521  0396                     	;# 
  5522  0397                     	;# 
  5523  0398                     	;# 
  5524  0399                     	;# 
  5525  039A                     	;# 
  5526  039C                     	;# 
  5527  039D                     	;# 
  5528  039E                     	;# 
  5529  039F                     	;# 
  5530  0411                     	;# 
  5531  0411                     	;# 
  5532  0412                     	;# 
  5533  0413                     	;# 
  5534  0414                     	;# 
  5535  0415                     	;# 
  5536  0416                     	;# 
  5537  0417                     	;# 
  5538  0418                     	;# 
  5539  0418                     	;# 
  5540  0419                     	;# 
  5541  041A                     	;# 
  5542  041B                     	;# 
  5543  041C                     	;# 
  5544  041D                     	;# 
  5545  041E                     	;# 
  5546  041F                     	;# 
  5547  0498                     	;# 
  5548  0498                     	;# 
  5549  0499                     	;# 
  5550  049A                     	;# 
  5551  049B                     	;# 
  5552  049B                     	;# 
  5553  049C                     	;# 
  5554  049D                     	;# 
  5555  049E                     	;# 
  5556  049F                     	;# 
  5557  0617                     	;# 
  5558  0618                     	;# 
  5559  0619                     	;# 
  5560  0619                     	;# 
  5561  061A                     	;# 
  5562  061B                     	;# 
  5563  061C                     	;# 
  5564  061C                     	;# 
  5565  061F                     	;# 
  5566  0691                     	;# 
  5567  0692                     	;# 
  5568  0693                     	;# 
  5569  0694                     	;# 
  5570  0695                     	;# 
  5571  0696                     	;# 
  5572  0697                     	;# 
  5573  0698                     	;# 
  5574  0699                     	;# 
  5575  0711                     	;# 
  5576  0712                     	;# 
  5577  0713                     	;# 
  5578  0714                     	;# 
  5579  0715                     	;# 
  5580  0716                     	;# 
  5581  0717                     	;# 
  5582  0718                     	;# 
  5583  0719                     	;# 
  5584  0891                     	;# 
  5585  0891                     	;# 
  5586  0891                     	;# 
  5587  0891                     	;# 
  5588  0891                     	;# 
  5589  0891                     	;# 
  5590  0892                     	;# 
  5591  0892                     	;# 
  5592  0892                     	;# 
  5593  0893                     	;# 
  5594  0893                     	;# 
  5595  0893                     	;# 
  5596  0893                     	;# 
  5597  0893                     	;# 
  5598  0893                     	;# 
  5599  0894                     	;# 
  5600  0894                     	;# 
  5601  0894                     	;# 
  5602  0895                     	;# 
  5603  0895                     	;# 
  5604  0895                     	;# 
  5605  0896                     	;# 
  5606  0896                     	;# 
  5607  0896                     	;# 
  5608  089B                     	;# 
  5609  0911                     	;# 
  5610  0912                     	;# 
  5611  0913                     	;# 
  5612  0914                     	;# 
  5613  0915                     	;# 
  5614  0916                     	;# 
  5615  0918                     	;# 
  5616  0919                     	;# 
  5617  091A                     	;# 
  5618  091B                     	;# 
  5619  091C                     	;# 
  5620  091D                     	;# 
  5621  091E                     	;# 
  5622  091F                     	;# 
  5623  0E0F                     	;# 
  5624  0E10                     	;# 
  5625  0E11                     	;# 
  5626  0E12                     	;# 
  5627  0E13                     	;# 
  5628  0E14                     	;# 
  5629  0E15                     	;# 
  5630  0E16                     	;# 
  5631  0E17                     	;# 
  5632  0E18                     	;# 
  5633  0E19                     	;# 
  5634  0E1A                     	;# 
  5635  0E1B                     	;# 
  5636  0E1C                     	;# 
  5637  0E1D                     	;# 
  5638  0E1E                     	;# 
  5639  0E1F                     	;# 
  5640  0E20                     	;# 
  5641  0E21                     	;# 
  5642  0E22                     	;# 
  5643  0E24                     	;# 
  5644  0E25                     	;# 
  5645  0E28                     	;# 
  5646  0E29                     	;# 
  5647  0E2A                     	;# 
  5648  0E2B                     	;# 
  5649  0E2C                     	;# 
  5650  0E2D                     	;# 
  5651  0E2E                     	;# 
  5652  0E2F                     	;# 
  5653  0E90                     	;# 
  5654  0E91                     	;# 
  5655  0E92                     	;# 
  5656  0E94                     	;# 
  5657  0E95                     	;# 
  5658  0E9C                     	;# 
  5659  0E9D                     	;# 
  5660  0E9E                     	;# 
  5661  0E9F                     	;# 
  5662  0EA0                     	;# 
  5663  0EA1                     	;# 
  5664  0EA2                     	;# 
  5665  0EA3                     	;# 
  5666  0EA4                     	;# 
  5667  0EA5                     	;# 
  5668  0EA6                     	;# 
  5669  0EA7                     	;# 
  5670  0F0F                     	;# 
  5671  0F10                     	;# 
  5672  0F11                     	;# 
  5673  0F12                     	;# 
  5674  0F13                     	;# 
  5675  0F14                     	;# 
  5676  0F15                     	;# 
  5677  0F16                     	;# 
  5678  0F17                     	;# 
  5679  0F18                     	;# 
  5680  0F19                     	;# 
  5681  0F1A                     	;# 
  5682  0F1B                     	;# 
  5683  0F1C                     	;# 
  5684  0F1D                     	;# 
  5685  0F1E                     	;# 
  5686  0F1F                     	;# 
  5687  0F20                     	;# 
  5688  0F21                     	;# 
  5689  0F22                     	;# 
  5690  0F23                     	;# 
  5691  0F24                     	;# 
  5692  0F25                     	;# 
  5693  0F26                     	;# 
  5694  0F27                     	;# 
  5695  0F28                     	;# 
  5696  0F29                     	;# 
  5697  0F2A                     	;# 
  5698  0F2B                     	;# 
  5699  0F2C                     	;# 
  5700  0F2D                     	;# 
  5701  0F2E                     	;# 
  5702  0F2F                     	;# 
  5703  0F30                     	;# 
  5704  0F31                     	;# 
  5705  0F32                     	;# 
  5706  0F33                     	;# 
  5707  0F34                     	;# 
  5708  0F35                     	;# 
  5709  0F36                     	;# 
  5710  0F37                     	;# 
  5711  0FE4                     	;# 
  5712  0FE5                     	;# 
  5713  0FE6                     	;# 
  5714  0FE7                     	;# 
  5715  0FE8                     	;# 
  5716  0FE9                     	;# 
  5717  0FEA                     	;# 
  5718  0FEB                     	;# 
  5719  0FED                     	;# 
  5720  0FEE                     	;# 
  5721  0FEF                     	;# 
  5722  0000                     	;# 
  5723  0001                     	;# 
  5724  0002                     	;# 
  5725  0003                     	;# 
  5726  0004                     	;# 
  5727  0005                     	;# 
  5728  0006                     	;# 
  5729  0007                     	;# 
  5730  0008                     	;# 
  5731  0009                     	;# 
  5732  000A                     	;# 
  5733  000B                     	;# 
  5734  000C                     	;# 
  5735  000D                     	;# 
  5736  000E                     	;# 
  5737  0010                     	;# 
  5738  0011                     	;# 
  5739  0012                     	;# 
  5740  0013                     	;# 
  5741  0014                     	;# 
  5742  0015                     	;# 
  5743  0015                     	;# 
  5744  0016                     	;# 
  5745  0016                     	;# 
  5746  0017                     	;# 
  5747  0018                     	;# 
  5748  0019                     	;# 
  5749  0019                     	;# 
  5750  001A                     	;# 
  5751  001B                     	;# 
  5752  001C                     	;# 
  5753  001D                     	;# 
  5754  001E                     	;# 
  5755  001F                     	;# 
  5756  008C                     	;# 
  5757  008D                     	;# 
  5758  008E                     	;# 
  5759  0090                     	;# 
  5760  0091                     	;# 
  5761  0092                     	;# 
  5762  0093                     	;# 
  5763  0094                     	;# 
  5764  0097                     	;# 
  5765  009B                     	;# 
  5766  009B                     	;# 
  5767  009C                     	;# 
  5768  009D                     	;# 
  5769  009E                     	;# 
  5770  009F                     	;# 
  5771  010C                     	;# 
  5772  010D                     	;# 
  5773  010E                     	;# 
  5774  0111                     	;# 
  5775  0112                     	;# 
  5776  0113                     	;# 
  5777  0114                     	;# 
  5778  0115                     	;# 
  5779  0116                     	;# 
  5780  0117                     	;# 
  5781  0118                     	;# 
  5782  0119                     	;# 
  5783  018C                     	;# 
  5784  018D                     	;# 
  5785  018E                     	;# 
  5786  0197                     	;# 
  5787  0199                     	;# 
  5788  0199                     	;# 
  5789  0199                     	;# 
  5790  019A                     	;# 
  5791  019A                     	;# 
  5792  019A                     	;# 
  5793  019B                     	;# 
  5794  019B                     	;# 
  5795  019B                     	;# 
  5796  019B                     	;# 
  5797  019B                     	;# 
  5798  019C                     	;# 
  5799  019C                     	;# 
  5800  019C                     	;# 
  5801  019D                     	;# 
  5802  019D                     	;# 
  5803  019D                     	;# 
  5804  019E                     	;# 
  5805  019E                     	;# 
  5806  019E                     	;# 
  5807  019F                     	;# 
  5808  019F                     	;# 
  5809  019F                     	;# 
  5810  019F                     	;# 
  5811  019F                     	;# 
  5812  020C                     	;# 
  5813  020D                     	;# 
  5814  020E                     	;# 
  5815  0211                     	;# 
  5816  0211                     	;# 
  5817  0212                     	;# 
  5818  0212                     	;# 
  5819  0213                     	;# 
  5820  0213                     	;# 
  5821  0214                     	;# 
  5822  0214                     	;# 
  5823  0215                     	;# 
  5824  0215                     	;# 
  5825  0215                     	;# 
  5826  0215                     	;# 
  5827  0216                     	;# 
  5828  0216                     	;# 
  5829  0217                     	;# 
  5830  0217                     	;# 
  5831  0219                     	;# 
  5832  021A                     	;# 
  5833  021B                     	;# 
  5834  021C                     	;# 
  5835  021D                     	;# 
  5836  021D                     	;# 
  5837  021E                     	;# 
  5838  021F                     	;# 
  5839  028C                     	;# 
  5840  028D                     	;# 
  5841  028E                     	;# 
  5842  0291                     	;# 
  5843  0291                     	;# 
  5844  0292                     	;# 
  5845  0293                     	;# 
  5846  0294                     	;# 
  5847  0295                     	;# 
  5848  0295                     	;# 
  5849  0296                     	;# 
  5850  0297                     	;# 
  5851  0298                     	;# 
  5852  029F                     	;# 
  5853  030C                     	;# 
  5854  030D                     	;# 
  5855  030E                     	;# 
  5856  0311                     	;# 
  5857  0311                     	;# 
  5858  0312                     	;# 
  5859  0313                     	;# 
  5860  0314                     	;# 
  5861  0315                     	;# 
  5862  0315                     	;# 
  5863  0316                     	;# 
  5864  0317                     	;# 
  5865  0318                     	;# 
  5866  038C                     	;# 
  5867  038D                     	;# 
  5868  038E                     	;# 
  5869  0391                     	;# 
  5870  0392                     	;# 
  5871  0393                     	;# 
  5872  0394                     	;# 
  5873  0395                     	;# 
  5874  0396                     	;# 
  5875  0397                     	;# 
  5876  0398                     	;# 
  5877  0399                     	;# 
  5878  039A                     	;# 
  5879  039C                     	;# 
  5880  039D                     	;# 
  5881  039E                     	;# 
  5882  039F                     	;# 
  5883  0411                     	;# 
  5884  0411                     	;# 
  5885  0412                     	;# 
  5886  0413                     	;# 
  5887  0414                     	;# 
  5888  0415                     	;# 
  5889  0416                     	;# 
  5890  0417                     	;# 
  5891  0418                     	;# 
  5892  0418                     	;# 
  5893  0419                     	;# 
  5894  041A                     	;# 
  5895  041B                     	;# 
  5896  041C                     	;# 
  5897  041D                     	;# 
  5898  041E                     	;# 
  5899  041F                     	;# 
  5900  0498                     	;# 
  5901  0498                     	;# 
  5902  0499                     	;# 
  5903  049A                     	;# 
  5904  049B                     	;# 
  5905  049B                     	;# 
  5906  049C                     	;# 
  5907  049D                     	;# 
  5908  049E                     	;# 
  5909  049F                     	;# 
  5910  0617                     	;# 
  5911  0618                     	;# 
  5912  0619                     	;# 
  5913  0619                     	;# 
  5914  061A                     	;# 
  5915  061B                     	;# 
  5916  061C                     	;# 
  5917  061C                     	;# 
  5918  061F                     	;# 
  5919  0691                     	;# 
  5920  0692                     	;# 
  5921  0693                     	;# 
  5922  0694                     	;# 
  5923  0695                     	;# 
  5924  0696                     	;# 
  5925  0697                     	;# 
  5926  0698                     	;# 
  5927  0699                     	;# 
  5928  0711                     	;# 
  5929  0712                     	;# 
  5930  0713                     	;# 
  5931  0714                     	;# 
  5932  0715                     	;# 
  5933  0716                     	;# 
  5934  0717                     	;# 
  5935  0718                     	;# 
  5936  0719                     	;# 
  5937  0891                     	;# 
  5938  0891                     	;# 
  5939  0891                     	;# 
  5940  0891                     	;# 
  5941  0891                     	;# 
  5942  0891                     	;# 
  5943  0892                     	;# 
  5944  0892                     	;# 
  5945  0892                     	;# 
  5946  0893                     	;# 
  5947  0893                     	;# 
  5948  0893                     	;# 
  5949  0893                     	;# 
  5950  0893                     	;# 
  5951  0893                     	;# 
  5952  0894                     	;# 
  5953  0894                     	;# 
  5954  0894                     	;# 
  5955  0895                     	;# 
  5956  0895                     	;# 
  5957  0895                     	;# 
  5958  0896                     	;# 
  5959  0896                     	;# 
  5960  0896                     	;# 
  5961  089B                     	;# 
  5962  0911                     	;# 
  5963  0912                     	;# 
  5964  0913                     	;# 
  5965  0914                     	;# 
  5966  0915                     	;# 
  5967  0916                     	;# 
  5968  0918                     	;# 
  5969  0919                     	;# 
  5970  091A                     	;# 
  5971  091B                     	;# 
  5972  091C                     	;# 
  5973  091D                     	;# 
  5974  091E                     	;# 
  5975  091F                     	;# 
  5976  0E0F                     	;# 
  5977  0E10                     	;# 
  5978  0E11                     	;# 
  5979  0E12                     	;# 
  5980  0E13                     	;# 
  5981  0E14                     	;# 
  5982  0E15                     	;# 
  5983  0E16                     	;# 
  5984  0E17                     	;# 
  5985  0E18                     	;# 
  5986  0E19                     	;# 
  5987  0E1A                     	;# 
  5988  0E1B                     	;# 
  5989  0E1C                     	;# 
  5990  0E1D                     	;# 
  5991  0E1E                     	;# 
  5992  0E1F                     	;# 
  5993  0E20                     	;# 
  5994  0E21                     	;# 
  5995  0E22                     	;# 
  5996  0E24                     	;# 
  5997  0E25                     	;# 
  5998  0E28                     	;# 
  5999  0E29                     	;# 
  6000  0E2A                     	;# 
  6001  0E2B                     	;# 
  6002  0E2C                     	;# 
  6003  0E2D                     	;# 
  6004  0E2E                     	;# 
  6005  0E2F                     	;# 
  6006  0E90                     	;# 
  6007  0E91                     	;# 
  6008  0E92                     	;# 
  6009  0E94                     	;# 
  6010  0E95                     	;# 
  6011  0E9C                     	;# 
  6012  0E9D                     	;# 
  6013  0E9E                     	;# 
  6014  0E9F                     	;# 
  6015  0EA0                     	;# 
  6016  0EA1                     	;# 
  6017  0EA2                     	;# 
  6018  0EA3                     	;# 
  6019  0EA4                     	;# 
  6020  0EA5                     	;# 
  6021  0EA6                     	;# 
  6022  0EA7                     	;# 
  6023  0F0F                     	;# 
  6024  0F10                     	;# 
  6025  0F11                     	;# 
  6026  0F12                     	;# 
  6027  0F13                     	;# 
  6028  0F14                     	;# 
  6029  0F15                     	;# 
  6030  0F16                     	;# 
  6031  0F17                     	;# 
  6032  0F18                     	;# 
  6033  0F19                     	;# 
  6034  0F1A                     	;# 
  6035  0F1B                     	;# 
  6036  0F1C                     	;# 
  6037  0F1D                     	;# 
  6038  0F1E                     	;# 
  6039  0F1F                     	;# 
  6040  0F20                     	;# 
  6041  0F21                     	;# 
  6042  0F22                     	;# 
  6043  0F23                     	;# 
  6044  0F24                     	;# 
  6045  0F25                     	;# 
  6046  0F26                     	;# 
  6047  0F27                     	;# 
  6048  0F28                     	;# 
  6049  0F29                     	;# 
  6050  0F2A                     	;# 
  6051  0F2B                     	;# 
  6052  0F2C                     	;# 
  6053  0F2D                     	;# 
  6054  0F2E                     	;# 
  6055  0F2F                     	;# 
  6056  0F30                     	;# 
  6057  0F31                     	;# 
  6058  0F32                     	;# 
  6059  0F33                     	;# 
  6060  0F34                     	;# 
  6061  0F35                     	;# 
  6062  0F36                     	;# 
  6063  0F37                     	;# 
  6064  0FE4                     	;# 
  6065  0FE5                     	;# 
  6066  0FE6                     	;# 
  6067  0FE7                     	;# 
  6068  0FE8                     	;# 
  6069  0FE9                     	;# 
  6070  0FEA                     	;# 
  6071  0FEB                     	;# 
  6072  0FED                     	;# 
  6073  0FEE                     	;# 
  6074  0FEF                     	;# 
  6075  0000                     	;# 
  6076  0001                     	;# 
  6077  0002                     	;# 
  6078  0003                     	;# 
  6079  0004                     	;# 
  6080  0005                     	;# 
  6081  0006                     	;# 
  6082  0007                     	;# 
  6083  0008                     	;# 
  6084  0009                     	;# 
  6085  000A                     	;# 
  6086  000B                     	;# 
  6087  000C                     	;# 
  6088  000D                     	;# 
  6089  000E                     	;# 
  6090  0010                     	;# 
  6091  0011                     	;# 
  6092  0012                     	;# 
  6093  0013                     	;# 
  6094  0014                     	;# 
  6095  0015                     	;# 
  6096  0015                     	;# 
  6097  0016                     	;# 
  6098  0016                     	;# 
  6099  0017                     	;# 
  6100  0018                     	;# 
  6101  0019                     	;# 
  6102  0019                     	;# 
  6103  001A                     	;# 
  6104  001B                     	;# 
  6105  001C                     	;# 
  6106  001D                     	;# 
  6107  001E                     	;# 
  6108  001F                     	;# 
  6109  008C                     	;# 
  6110  008D                     	;# 
  6111  008E                     	;# 
  6112  0090                     	;# 
  6113  0091                     	;# 
  6114  0092                     	;# 
  6115  0093                     	;# 
  6116  0094                     	;# 
  6117  0097                     	;# 
  6118  009B                     	;# 
  6119  009B                     	;# 
  6120  009C                     	;# 
  6121  009D                     	;# 
  6122  009E                     	;# 
  6123  009F                     	;# 
  6124  010C                     	;# 
  6125  010D                     	;# 
  6126  010E                     	;# 
  6127  0111                     	;# 
  6128  0112                     	;# 
  6129  0113                     	;# 
  6130  0114                     	;# 
  6131  0115                     	;# 
  6132  0116                     	;# 
  6133  0117                     	;# 
  6134  0118                     	;# 
  6135  0119                     	;# 
  6136  018C                     	;# 
  6137  018D                     	;# 
  6138  018E                     	;# 
  6139  0197                     	;# 
  6140  0199                     	;# 
  6141  0199                     	;# 
  6142  0199                     	;# 
  6143  019A                     	;# 
  6144  019A                     	;# 
  6145  019A                     	;# 
  6146  019B                     	;# 
  6147  019B                     	;# 
  6148  019B                     	;# 
  6149  019B                     	;# 
  6150  019B                     	;# 
  6151  019C                     	;# 
  6152  019C                     	;# 
  6153  019C                     	;# 
  6154  019D                     	;# 
  6155  019D                     	;# 
  6156  019D                     	;# 
  6157  019E                     	;# 
  6158  019E                     	;# 
  6159  019E                     	;# 
  6160  019F                     	;# 
  6161  019F                     	;# 
  6162  019F                     	;# 
  6163  019F                     	;# 
  6164  019F                     	;# 
  6165  020C                     	;# 
  6166  020D                     	;# 
  6167  020E                     	;# 
  6168  0211                     	;# 
  6169  0211                     	;# 
  6170  0212                     	;# 
  6171  0212                     	;# 
  6172  0213                     	;# 
  6173  0213                     	;# 
  6174  0214                     	;# 
  6175  0214                     	;# 
  6176  0215                     	;# 
  6177  0215                     	;# 
  6178  0215                     	;# 
  6179  0215                     	;# 
  6180  0216                     	;# 
  6181  0216                     	;# 
  6182  0217                     	;# 
  6183  0217                     	;# 
  6184  0219                     	;# 
  6185  021A                     	;# 
  6186  021B                     	;# 
  6187  021C                     	;# 
  6188  021D                     	;# 
  6189  021D                     	;# 
  6190  021E                     	;# 
  6191  021F                     	;# 
  6192  028C                     	;# 
  6193  028D                     	;# 
  6194  028E                     	;# 
  6195  0291                     	;# 
  6196  0291                     	;# 
  6197  0292                     	;# 
  6198  0293                     	;# 
  6199  0294                     	;# 
  6200  0295                     	;# 
  6201  0295                     	;# 
  6202  0296                     	;# 
  6203  0297                     	;# 
  6204  0298                     	;# 
  6205  029F                     	;# 
  6206  030C                     	;# 
  6207  030D                     	;# 
  6208  030E                     	;# 
  6209  0311                     	;# 
  6210  0311                     	;# 
  6211  0312                     	;# 
  6212  0313                     	;# 
  6213  0314                     	;# 
  6214  0315                     	;# 
  6215  0315                     	;# 
  6216  0316                     	;# 
  6217  0317                     	;# 
  6218  0318                     	;# 
  6219  038C                     	;# 
  6220  038D                     	;# 
  6221  038E                     	;# 
  6222  0391                     	;# 
  6223  0392                     	;# 
  6224  0393                     	;# 
  6225  0394                     	;# 
  6226  0395                     	;# 
  6227  0396                     	;# 
  6228  0397                     	;# 
  6229  0398                     	;# 
  6230  0399                     	;# 
  6231  039A                     	;# 
  6232  039C                     	;# 
  6233  039D                     	;# 
  6234  039E                     	;# 
  6235  039F                     	;# 
  6236  0411                     	;# 
  6237  0411                     	;# 
  6238  0412                     	;# 
  6239  0413                     	;# 
  6240  0414                     	;# 
  6241  0415                     	;# 
  6242  0416                     	;# 
  6243  0417                     	;# 
  6244  0418                     	;# 
  6245  0418                     	;# 
  6246  0419                     	;# 
  6247  041A                     	;# 
  6248  041B                     	;# 
  6249  041C                     	;# 
  6250  041D                     	;# 
  6251  041E                     	;# 
  6252  041F                     	;# 
  6253  0498                     	;# 
  6254  0498                     	;# 
  6255  0499                     	;# 
  6256  049A                     	;# 
  6257  049B                     	;# 
  6258  049B                     	;# 
  6259  049C                     	;# 
  6260  049D                     	;# 
  6261  049E                     	;# 
  6262  049F                     	;# 
  6263  0617                     	;# 
  6264  0618                     	;# 
  6265  0619                     	;# 
  6266  0619                     	;# 
  6267  061A                     	;# 
  6268  061B                     	;# 
  6269  061C                     	;# 
  6270  061C                     	;# 
  6271  061F                     	;# 
  6272  0691                     	;# 
  6273  0692                     	;# 
  6274  0693                     	;# 
  6275  0694                     	;# 
  6276  0695                     	;# 
  6277  0696                     	;# 
  6278  0697                     	;# 
  6279  0698                     	;# 
  6280  0699                     	;# 
  6281  0711                     	;# 
  6282  0712                     	;# 
  6283  0713                     	;# 
  6284  0714                     	;# 
  6285  0715                     	;# 
  6286  0716                     	;# 
  6287  0717                     	;# 
  6288  0718                     	;# 
  6289  0719                     	;# 
  6290  0891                     	;# 
  6291  0891                     	;# 
  6292  0891                     	;# 
  6293  0891                     	;# 
  6294  0891                     	;# 
  6295  0891                     	;# 
  6296  0892                     	;# 
  6297  0892                     	;# 
  6298  0892                     	;# 
  6299  0893                     	;# 
  6300  0893                     	;# 
  6301  0893                     	;# 
  6302  0893                     	;# 
  6303  0893                     	;# 
  6304  0893                     	;# 
  6305  0894                     	;# 
  6306  0894                     	;# 
  6307  0894                     	;# 
  6308  0895                     	;# 
  6309  0895                     	;# 
  6310  0895                     	;# 
  6311  0896                     	;# 
  6312  0896                     	;# 
  6313  0896                     	;# 
  6314  089B                     	;# 
  6315  0911                     	;# 
  6316  0912                     	;# 
  6317  0913                     	;# 
  6318  0914                     	;# 
  6319  0915                     	;# 
  6320  0916                     	;# 
  6321  0918                     	;# 
  6322  0919                     	;# 
  6323  091A                     	;# 
  6324  091B                     	;# 
  6325  091C                     	;# 
  6326  091D                     	;# 
  6327  091E                     	;# 
  6328  091F                     	;# 
  6329  0E0F                     	;# 
  6330  0E10                     	;# 
  6331  0E11                     	;# 
  6332  0E12                     	;# 
  6333  0E13                     	;# 
  6334  0E14                     	;# 
  6335  0E15                     	;# 
  6336  0E16                     	;# 
  6337  0E17                     	;# 
  6338  0E18                     	;# 
  6339  0E19                     	;# 
  6340  0E1A                     	;# 
  6341  0E1B                     	;# 
  6342  0E1C                     	;# 
  6343  0E1D                     	;# 
  6344  0E1E                     	;# 
  6345  0E1F                     	;# 
  6346  0E20                     	;# 
  6347  0E21                     	;# 
  6348  0E22                     	;# 
  6349  0E24                     	;# 
  6350  0E25                     	;# 
  6351  0E28                     	;# 
  6352  0E29                     	;# 
  6353  0E2A                     	;# 
  6354  0E2B                     	;# 
  6355  0E2C                     	;# 
  6356  0E2D                     	;# 
  6357  0E2E                     	;# 
  6358  0E2F                     	;# 
  6359  0E90                     	;# 
  6360  0E91                     	;# 
  6361  0E92                     	;# 
  6362  0E94                     	;# 
  6363  0E95                     	;# 
  6364  0E9C                     	;# 
  6365  0E9D                     	;# 
  6366  0E9E                     	;# 
  6367  0E9F                     	;# 
  6368  0EA0                     	;# 
  6369  0EA1                     	;# 
  6370  0EA2                     	;# 
  6371  0EA3                     	;# 
  6372  0EA4                     	;# 
  6373  0EA5                     	;# 
  6374  0EA6                     	;# 
  6375  0EA7                     	;# 
  6376  0F0F                     	;# 
  6377  0F10                     	;# 
  6378  0F11                     	;# 
  6379  0F12                     	;# 
  6380  0F13                     	;# 
  6381  0F14                     	;# 
  6382  0F15                     	;# 
  6383  0F16                     	;# 
  6384  0F17                     	;# 
  6385  0F18                     	;# 
  6386  0F19                     	;# 
  6387  0F1A                     	;# 
  6388  0F1B                     	;# 
  6389  0F1C                     	;# 
  6390  0F1D                     	;# 
  6391  0F1E                     	;# 
  6392  0F1F                     	;# 
  6393  0F20                     	;# 
  6394  0F21                     	;# 
  6395  0F22                     	;# 
  6396  0F23                     	;# 
  6397  0F24                     	;# 
  6398  0F25                     	;# 
  6399  0F26                     	;# 
  6400  0F27                     	;# 
  6401  0F28                     	;# 
  6402  0F29                     	;# 
  6403  0F2A                     	;# 
  6404  0F2B                     	;# 
  6405  0F2C                     	;# 
  6406  0F2D                     	;# 
  6407  0F2E                     	;# 
  6408  0F2F                     	;# 
  6409  0F30                     	;# 
  6410  0F31                     	;# 
  6411  0F32                     	;# 
  6412  0F33                     	;# 
  6413  0F34                     	;# 
  6414  0F35                     	;# 
  6415  0F36                     	;# 
  6416  0F37                     	;# 
  6417  0FE4                     	;# 
  6418  0FE5                     	;# 
  6419  0FE6                     	;# 
  6420  0FE7                     	;# 
  6421  0FE8                     	;# 
  6422  0FE9                     	;# 
  6423  0FEA                     	;# 
  6424  0FEB                     	;# 
  6425  0FED                     	;# 
  6426  0FEE                     	;# 
  6427  0FEF                     	;# 
  6428  0000                     	;# 
  6429  0001                     	;# 
  6430  0002                     	;# 
  6431  0003                     	;# 
  6432  0004                     	;# 
  6433  0005                     	;# 
  6434  0006                     	;# 
  6435  0007                     	;# 
  6436  0008                     	;# 
  6437  0009                     	;# 
  6438  000A                     	;# 
  6439  000B                     	;# 
  6440  000C                     	;# 
  6441  000D                     	;# 
  6442  000E                     	;# 
  6443  0010                     	;# 
  6444  0011                     	;# 
  6445  0012                     	;# 
  6446  0013                     	;# 
  6447  0014                     	;# 
  6448  0015                     	;# 
  6449  0015                     	;# 
  6450  0016                     	;# 
  6451  0016                     	;# 
  6452  0017                     	;# 
  6453  0018                     	;# 
  6454  0019                     	;# 
  6455  0019                     	;# 
  6456  001A                     	;# 
  6457  001B                     	;# 
  6458  001C                     	;# 
  6459  001D                     	;# 
  6460  001E                     	;# 
  6461  001F                     	;# 
  6462  008C                     	;# 
  6463  008D                     	;# 
  6464  008E                     	;# 
  6465  0090                     	;# 
  6466  0091                     	;# 
  6467  0092                     	;# 
  6468  0093                     	;# 
  6469  0094                     	;# 
  6470  0097                     	;# 
  6471  009B                     	;# 
  6472  009B                     	;# 
  6473  009C                     	;# 
  6474  009D                     	;# 
  6475  009E                     	;# 
  6476  009F                     	;# 
  6477  010C                     	;# 
  6478  010D                     	;# 
  6479  010E                     	;# 
  6480  0111                     	;# 
  6481  0112                     	;# 
  6482  0113                     	;# 
  6483  0114                     	;# 
  6484  0115                     	;# 
  6485  0116                     	;# 
  6486  0117                     	;# 
  6487  0118                     	;# 
  6488  0119                     	;# 
  6489  018C                     	;# 
  6490  018D                     	;# 
  6491  018E                     	;# 
  6492  0197                     	;# 
  6493  0199                     	;# 
  6494  0199                     	;# 
  6495  0199                     	;# 
  6496  019A                     	;# 
  6497  019A                     	;# 
  6498  019A                     	;# 
  6499  019B                     	;# 
  6500  019B                     	;# 
  6501  019B                     	;# 
  6502  019B                     	;# 
  6503  019B                     	;# 
  6504  019C                     	;# 
  6505  019C                     	;# 
  6506  019C                     	;# 
  6507  019D                     	;# 
  6508  019D                     	;# 
  6509  019D                     	;# 
  6510  019E                     	;# 
  6511  019E                     	;# 
  6512  019E                     	;# 
  6513  019F                     	;# 
  6514  019F                     	;# 
  6515  019F                     	;# 
  6516  019F                     	;# 
  6517  019F                     	;# 
  6518  020C                     	;# 
  6519  020D                     	;# 
  6520  020E                     	;# 
  6521  0211                     	;# 
  6522  0211                     	;# 
  6523  0212                     	;# 
  6524  0212                     	;# 
  6525  0213                     	;# 
  6526  0213                     	;# 
  6527  0214                     	;# 
  6528  0214                     	;# 
  6529  0215                     	;# 
  6530  0215                     	;# 
  6531  0215                     	;# 
  6532  0215                     	;# 
  6533  0216                     	;# 
  6534  0216                     	;# 
  6535  0217                     	;# 
  6536  0217                     	;# 
  6537  0219                     	;# 
  6538  021A                     	;# 
  6539  021B                     	;# 
  6540  021C                     	;# 
  6541  021D                     	;# 
  6542  021D                     	;# 
  6543  021E                     	;# 
  6544  021F                     	;# 
  6545  028C                     	;# 
  6546  028D                     	;# 
  6547  028E                     	;# 
  6548  0291                     	;# 
  6549  0291                     	;# 
  6550  0292                     	;# 
  6551  0293                     	;# 
  6552  0294                     	;# 
  6553  0295                     	;# 
  6554  0295                     	;# 
  6555  0296                     	;# 
  6556  0297                     	;# 
  6557  0298                     	;# 
  6558  029F                     	;# 
  6559  030C                     	;# 
  6560  030D                     	;# 
  6561  030E                     	;# 
  6562  0311                     	;# 
  6563  0311                     	;# 
  6564  0312                     	;# 
  6565  0313                     	;# 
  6566  0314                     	;# 
  6567  0315                     	;# 
  6568  0315                     	;# 
  6569  0316                     	;# 
  6570  0317                     	;# 
  6571  0318                     	;# 
  6572  038C                     	;# 
  6573  038D                     	;# 
  6574  038E                     	;# 
  6575  0391                     	;# 
  6576  0392                     	;# 
  6577  0393                     	;# 
  6578  0394                     	;# 
  6579  0395                     	;# 
  6580  0396                     	;# 
  6581  0397                     	;# 
  6582  0398                     	;# 
  6583  0399                     	;# 
  6584  039A                     	;# 
  6585  039C                     	;# 
  6586  039D                     	;# 
  6587  039E                     	;# 
  6588  039F                     	;# 
  6589  0411                     	;# 
  6590  0411                     	;# 
  6591  0412                     	;# 
  6592  0413                     	;# 
  6593  0414                     	;# 
  6594  0415                     	;# 
  6595  0416                     	;# 
  6596  0417                     	;# 
  6597  0418                     	;# 
  6598  0418                     	;# 
  6599  0419                     	;# 
  6600  041A                     	;# 
  6601  041B                     	;# 
  6602  041C                     	;# 
  6603  041D                     	;# 
  6604  041E                     	;# 
  6605  041F                     	;# 
  6606  0498                     	;# 
  6607  0498                     	;# 
  6608  0499                     	;# 
  6609  049A                     	;# 
  6610  049B                     	;# 
  6611  049B                     	;# 
  6612  049C                     	;# 
  6613  049D                     	;# 
  6614  049E                     	;# 
  6615  049F                     	;# 
  6616  0617                     	;# 
  6617  0618                     	;# 
  6618  0619                     	;# 
  6619  0619                     	;# 
  6620  061A                     	;# 
  6621  061B                     	;# 
  6622  061C                     	;# 
  6623  061C                     	;# 
  6624  061F                     	;# 
  6625  0691                     	;# 
  6626  0692                     	;# 
  6627  0693                     	;# 
  6628  0694                     	;# 
  6629  0695                     	;# 
  6630  0696                     	;# 
  6631  0697                     	;# 
  6632  0698                     	;# 
  6633  0699                     	;# 
  6634  0711                     	;# 
  6635  0712                     	;# 
  6636  0713                     	;# 
  6637  0714                     	;# 
  6638  0715                     	;# 
  6639  0716                     	;# 
  6640  0717                     	;# 
  6641  0718                     	;# 
  6642  0719                     	;# 
  6643  0891                     	;# 
  6644  0891                     	;# 
  6645  0891                     	;# 
  6646  0891                     	;# 
  6647  0891                     	;# 
  6648  0891                     	;# 
  6649  0892                     	;# 
  6650  0892                     	;# 
  6651  0892                     	;# 
  6652  0893                     	;# 
  6653  0893                     	;# 
  6654  0893                     	;# 
  6655  0893                     	;# 
  6656  0893                     	;# 
  6657  0893                     	;# 
  6658  0894                     	;# 
  6659  0894                     	;# 
  6660  0894                     	;# 
  6661  0895                     	;# 
  6662  0895                     	;# 
  6663  0895                     	;# 
  6664  0896                     	;# 
  6665  0896                     	;# 
  6666  0896                     	;# 
  6667  089B                     	;# 
  6668  0911                     	;# 
  6669  0912                     	;# 
  6670  0913                     	;# 
  6671  0914                     	;# 
  6672  0915                     	;# 
  6673  0916                     	;# 
  6674  0918                     	;# 
  6675  0919                     	;# 
  6676  091A                     	;# 
  6677  091B                     	;# 
  6678  091C                     	;# 
  6679  091D                     	;# 
  6680  091E                     	;# 
  6681  091F                     	;# 
  6682  0E0F                     	;# 
  6683  0E10                     	;# 
  6684  0E11                     	;# 
  6685  0E12                     	;# 
  6686  0E13                     	;# 
  6687  0E14                     	;# 
  6688  0E15                     	;# 
  6689  0E16                     	;# 
  6690  0E17                     	;# 
  6691  0E18                     	;# 
  6692  0E19                     	;# 
  6693  0E1A                     	;# 
  6694  0E1B                     	;# 
  6695  0E1C                     	;# 
  6696  0E1D                     	;# 
  6697  0E1E                     	;# 
  6698  0E1F                     	;# 
  6699  0E20                     	;# 
  6700  0E21                     	;# 
  6701  0E22                     	;# 
  6702  0E24                     	;# 
  6703  0E25                     	;# 
  6704  0E28                     	;# 
  6705  0E29                     	;# 
  6706  0E2A                     	;# 
  6707  0E2B                     	;# 
  6708  0E2C                     	;# 
  6709  0E2D                     	;# 
  6710  0E2E                     	;# 
  6711  0E2F                     	;# 
  6712  0E90                     	;# 
  6713  0E91                     	;# 
  6714  0E92                     	;# 
  6715  0E94                     	;# 
  6716  0E95                     	;# 
  6717  0E9C                     	;# 
  6718  0E9D                     	;# 
  6719  0E9E                     	;# 
  6720  0E9F                     	;# 
  6721  0EA0                     	;# 
  6722  0EA1                     	;# 
  6723  0EA2                     	;# 
  6724  0EA3                     	;# 
  6725  0EA4                     	;# 
  6726  0EA5                     	;# 
  6727  0EA6                     	;# 
  6728  0EA7                     	;# 
  6729  0F0F                     	;# 
  6730  0F10                     	;# 
  6731  0F11                     	;# 
  6732  0F12                     	;# 
  6733  0F13                     	;# 
  6734  0F14                     	;# 
  6735  0F15                     	;# 
  6736  0F16                     	;# 
  6737  0F17                     	;# 
  6738  0F18                     	;# 
  6739  0F19                     	;# 
  6740  0F1A                     	;# 
  6741  0F1B                     	;# 
  6742  0F1C                     	;# 
  6743  0F1D                     	;# 
  6744  0F1E                     	;# 
  6745  0F1F                     	;# 
  6746  0F20                     	;# 
  6747  0F21                     	;# 
  6748  0F22                     	;# 
  6749  0F23                     	;# 
  6750  0F24                     	;# 
  6751  0F25                     	;# 
  6752  0F26                     	;# 
  6753  0F27                     	;# 
  6754  0F28                     	;# 
  6755  0F29                     	;# 
  6756  0F2A                     	;# 
  6757  0F2B                     	;# 
  6758  0F2C                     	;# 
  6759  0F2D                     	;# 
  6760  0F2E                     	;# 
  6761  0F2F                     	;# 
  6762  0F30                     	;# 
  6763  0F31                     	;# 
  6764  0F32                     	;# 
  6765  0F33                     	;# 
  6766  0F34                     	;# 
  6767  0F35                     	;# 
  6768  0F36                     	;# 
  6769  0F37                     	;# 
  6770  0FE4                     	;# 
  6771  0FE5                     	;# 
  6772  0FE6                     	;# 
  6773  0FE7                     	;# 
  6774  0FE8                     	;# 
  6775  0FE9                     	;# 
  6776  0FEA                     	;# 
  6777  0FEB                     	;# 
  6778  0FED                     	;# 
  6779  0FEE                     	;# 
  6780  0FEF                     	;# 
  6781  0000                     	;# 
  6782  0001                     	;# 
  6783  0002                     	;# 
  6784  0003                     	;# 
  6785  0004                     	;# 
  6786  0005                     	;# 
  6787  0006                     	;# 
  6788  0007                     	;# 
  6789  0008                     	;# 
  6790  0009                     	;# 
  6791  000A                     	;# 
  6792  000B                     	;# 
  6793  000C                     	;# 
  6794  000D                     	;# 
  6795  000E                     	;# 
  6796  0010                     	;# 
  6797  0011                     	;# 
  6798  0012                     	;# 
  6799  0013                     	;# 
  6800  0014                     	;# 
  6801  0015                     	;# 
  6802  0015                     	;# 
  6803  0016                     	;# 
  6804  0016                     	;# 
  6805  0017                     	;# 
  6806  0018                     	;# 
  6807  0019                     	;# 
  6808  0019                     	;# 
  6809  001A                     	;# 
  6810  001B                     	;# 
  6811  001C                     	;# 
  6812  001D                     	;# 
  6813  001E                     	;# 
  6814  001F                     	;# 
  6815  008C                     	;# 
  6816  008D                     	;# 
  6817  008E                     	;# 
  6818  0090                     	;# 
  6819  0091                     	;# 
  6820  0092                     	;# 
  6821  0093                     	;# 
  6822  0094                     	;# 
  6823  0097                     	;# 
  6824  009B                     	;# 
  6825  009B                     	;# 
  6826  009C                     	;# 
  6827  009D                     	;# 
  6828  009E                     	;# 
  6829  009F                     	;# 
  6830  010C                     	;# 
  6831  010D                     	;# 
  6832  010E                     	;# 
  6833  0111                     	;# 
  6834  0112                     	;# 
  6835  0113                     	;# 
  6836  0114                     	;# 
  6837  0115                     	;# 
  6838  0116                     	;# 
  6839  0117                     	;# 
  6840  0118                     	;# 
  6841  0119                     	;# 
  6842  018C                     	;# 
  6843  018D                     	;# 
  6844  018E                     	;# 
  6845  0197                     	;# 
  6846  0199                     	;# 
  6847  0199                     	;# 
  6848  0199                     	;# 
  6849  019A                     	;# 
  6850  019A                     	;# 
  6851  019A                     	;# 
  6852  019B                     	;# 
  6853  019B                     	;# 
  6854  019B                     	;# 
  6855  019B                     	;# 
  6856  019B                     	;# 
  6857  019C                     	;# 
  6858  019C                     	;# 
  6859  019C                     	;# 
  6860  019D                     	;# 
  6861  019D                     	;# 
  6862  019D                     	;# 
  6863  019E                     	;# 
  6864  019E                     	;# 
  6865  019E                     	;# 
  6866  019F                     	;# 
  6867  019F                     	;# 
  6868  019F                     	;# 
  6869  019F                     	;# 
  6870  019F                     	;# 
  6871  020C                     	;# 
  6872  020D                     	;# 
  6873  020E                     	;# 
  6874  0211                     	;# 
  6875  0211                     	;# 
  6876  0212                     	;# 
  6877  0212                     	;# 
  6878  0213                     	;# 
  6879  0213                     	;# 
  6880  0214                     	;# 
  6881  0214                     	;# 
  6882  0215                     	;# 
  6883  0215                     	;# 
  6884  0215                     	;# 
  6885  0215                     	;# 
  6886  0216                     	;# 
  6887  0216                     	;# 
  6888  0217                     	;# 
  6889  0217                     	;# 
  6890  0219                     	;# 
  6891  021A                     	;# 
  6892  021B                     	;# 
  6893  021C                     	;# 
  6894  021D                     	;# 
  6895  021D                     	;# 
  6896  021E                     	;# 
  6897  021F                     	;# 
  6898  028C                     	;# 
  6899  028D                     	;# 
  6900  028E                     	;# 
  6901  0291                     	;# 
  6902  0291                     	;# 
  6903  0292                     	;# 
  6904  0293                     	;# 
  6905  0294                     	;# 
  6906  0295                     	;# 
  6907  0295                     	;# 
  6908  0296                     	;# 
  6909  0297                     	;# 
  6910  0298                     	;# 
  6911  029F                     	;# 
  6912  030C                     	;# 
  6913  030D                     	;# 
  6914  030E                     	;# 
  6915  0311                     	;# 
  6916  0311                     	;# 
  6917  0312                     	;# 
  6918  0313                     	;# 
  6919  0314                     	;# 
  6920  0315                     	;# 
  6921  0315                     	;# 
  6922  0316                     	;# 
  6923  0317                     	;# 
  6924  0318                     	;# 
  6925  038C                     	;# 
  6926  038D                     	;# 
  6927  038E                     	;# 
  6928  0391                     	;# 
  6929  0392                     	;# 
  6930  0393                     	;# 
  6931  0394                     	;# 
  6932  0395                     	;# 
  6933  0396                     	;# 
  6934  0397                     	;# 
  6935  0398                     	;# 
  6936  0399                     	;# 
  6937  039A                     	;# 
  6938  039C                     	;# 
  6939  039D                     	;# 
  6940  039E                     	;# 
  6941  039F                     	;# 
  6942  0411                     	;# 
  6943  0411                     	;# 
  6944  0412                     	;# 
  6945  0413                     	;# 
  6946  0414                     	;# 
  6947  0415                     	;# 
  6948  0416                     	;# 
  6949  0417                     	;# 
  6950  0418                     	;# 
  6951  0418                     	;# 
  6952  0419                     	;# 
  6953  041A                     	;# 
  6954  041B                     	;# 
  6955  041C                     	;# 
  6956  041D                     	;# 
  6957  041E                     	;# 
  6958  041F                     	;# 
  6959  0498                     	;# 
  6960  0498                     	;# 
  6961  0499                     	;# 
  6962  049A                     	;# 
  6963  049B                     	;# 
  6964  049B                     	;# 
  6965  049C                     	;# 
  6966  049D                     	;# 
  6967  049E                     	;# 
  6968  049F                     	;# 
  6969  0617                     	;# 
  6970  0618                     	;# 
  6971  0619                     	;# 
  6972  0619                     	;# 
  6973  061A                     	;# 
  6974  061B                     	;# 
  6975  061C                     	;# 
  6976  061C                     	;# 
  6977  061F                     	;# 
  6978  0691                     	;# 
  6979  0692                     	;# 
  6980  0693                     	;# 
  6981  0694                     	;# 
  6982  0695                     	;# 
  6983  0696                     	;# 
  6984  0697                     	;# 
  6985  0698                     	;# 
  6986  0699                     	;# 
  6987  0711                     	;# 
  6988  0712                     	;# 
  6989  0713                     	;# 
  6990  0714                     	;# 
  6991  0715                     	;# 
  6992  0716                     	;# 
  6993  0717                     	;# 
  6994  0718                     	;# 
  6995  0719                     	;# 
  6996  0891                     	;# 
  6997  0891                     	;# 
  6998  0891                     	;# 
  6999  0891                     	;# 
  7000  0891                     	;# 
  7001  0891                     	;# 
  7002  0892                     	;# 
  7003  0892                     	;# 
  7004  0892                     	;# 
  7005  0893                     	;# 
  7006  0893                     	;# 
  7007  0893                     	;# 
  7008  0893                     	;# 
  7009  0893                     	;# 
  7010  0893                     	;# 
  7011  0894                     	;# 
  7012  0894                     	;# 
  7013  0894                     	;# 
  7014  0895                     	;# 
  7015  0895                     	;# 
  7016  0895                     	;# 
  7017  0896                     	;# 
  7018  0896                     	;# 
  7019  0896                     	;# 
  7020  089B                     	;# 
  7021  0911                     	;# 
  7022  0912                     	;# 
  7023  0913                     	;# 
  7024  0914                     	;# 
  7025  0915                     	;# 
  7026  0916                     	;# 
  7027  0918                     	;# 
  7028  0919                     	;# 
  7029  091A                     	;# 
  7030  091B                     	;# 
  7031  091C                     	;# 
  7032  091D                     	;# 
  7033  091E                     	;# 
  7034  091F                     	;# 
  7035  0E0F                     	;# 
  7036  0E10                     	;# 
  7037  0E11                     	;# 
  7038  0E12                     	;# 
  7039  0E13                     	;# 
  7040  0E14                     	;# 
  7041  0E15                     	;# 
  7042  0E16                     	;# 
  7043  0E17                     	;# 
  7044  0E18                     	;# 
  7045  0E19                     	;# 
  7046  0E1A                     	;# 
  7047  0E1B                     	;# 
  7048  0E1C                     	;# 
  7049  0E1D                     	;# 
  7050  0E1E                     	;# 
  7051  0E1F                     	;# 
  7052  0E20                     	;# 
  7053  0E21                     	;# 
  7054  0E22                     	;# 
  7055  0E24                     	;# 
  7056  0E25                     	;# 
  7057  0E28                     	;# 
  7058  0E29                     	;# 
  7059  0E2A                     	;# 
  7060  0E2B                     	;# 
  7061  0E2C                     	;# 
  7062  0E2D                     	;# 
  7063  0E2E                     	;# 
  7064  0E2F                     	;# 
  7065  0E90                     	;# 
  7066  0E91                     	;# 
  7067  0E92                     	;# 
  7068  0E94                     	;# 
  7069  0E95                     	;# 
  7070  0E9C                     	;# 
  7071  0E9D                     	;# 
  7072  0E9E                     	;# 
  7073  0E9F                     	;# 
  7074  0EA0                     	;# 
  7075  0EA1                     	;# 
  7076  0EA2                     	;# 
  7077  0EA3                     	;# 
  7078  0EA4                     	;# 
  7079  0EA5                     	;# 
  7080  0EA6                     	;# 
  7081  0EA7                     	;# 
  7082  0F0F                     	;# 
  7083  0F10                     	;# 
  7084  0F11                     	;# 
  7085  0F12                     	;# 
  7086  0F13                     	;# 
  7087  0F14                     	;# 
  7088  0F15                     	;# 
  7089  0F16                     	;# 
  7090  0F17                     	;# 
  7091  0F18                     	;# 
  7092  0F19                     	;# 
  7093  0F1A                     	;# 
  7094  0F1B                     	;# 
  7095  0F1C                     	;# 
  7096  0F1D                     	;# 
  7097  0F1E                     	;# 
  7098  0F1F                     	;# 
  7099  0F20                     	;# 
  7100  0F21                     	;# 
  7101  0F22                     	;# 
  7102  0F23                     	;# 
  7103  0F24                     	;# 
  7104  0F25                     	;# 
  7105  0F26                     	;# 
  7106  0F27                     	;# 
  7107  0F28                     	;# 
  7108  0F29                     	;# 
  7109  0F2A                     	;# 
  7110  0F2B                     	;# 
  7111  0F2C                     	;# 
  7112  0F2D                     	;# 
  7113  0F2E                     	;# 
  7114  0F2F                     	;# 
  7115  0F30                     	;# 
  7116  0F31                     	;# 
  7117  0F32                     	;# 
  7118  0F33                     	;# 
  7119  0F34                     	;# 
  7120  0F35                     	;# 
  7121  0F36                     	;# 
  7122  0F37                     	;# 
  7123  0FE4                     	;# 
  7124  0FE5                     	;# 
  7125  0FE6                     	;# 
  7126  0FE7                     	;# 
  7127  0FE8                     	;# 
  7128  0FE9                     	;# 
  7129  0FEA                     	;# 
  7130  0FEB                     	;# 
  7131  0FED                     	;# 
  7132  0FEE                     	;# 
  7133  0FEF                     	;# 
  7134  0000                     	;# 
  7135  0001                     	;# 
  7136  0002                     	;# 
  7137  0003                     	;# 
  7138  0004                     	;# 
  7139  0005                     	;# 
  7140  0006                     	;# 
  7141  0007                     	;# 
  7142  0008                     	;# 
  7143  0009                     	;# 
  7144  000A                     	;# 
  7145  000B                     	;# 
  7146  000C                     	;# 
  7147  000D                     	;# 
  7148  000E                     	;# 
  7149  0010                     	;# 
  7150  0011                     	;# 
  7151  0012                     	;# 
  7152  0013                     	;# 
  7153  0014                     	;# 
  7154  0015                     	;# 
  7155  0015                     	;# 
  7156  0016                     	;# 
  7157  0016                     	;# 
  7158  0017                     	;# 
  7159  0018                     	;# 
  7160  0019                     	;# 
  7161  0019                     	;# 
  7162  001A                     	;# 
  7163  001B                     	;# 
  7164  001C                     	;# 
  7165  001D                     	;# 
  7166  001E                     	;# 
  7167  001F                     	;# 
  7168  008C                     	;# 
  7169  008D                     	;# 
  7170  008E                     	;# 
  7171  0090                     	;# 
  7172  0091                     	;# 
  7173  0092                     	;# 
  7174  0093                     	;# 
  7175  0094                     	;# 
  7176  0097                     	;# 
  7177  009B                     	;# 
  7178  009B                     	;# 
  7179  009C                     	;# 
  7180  009D                     	;# 
  7181  009E                     	;# 
  7182  009F                     	;# 
  7183  010C                     	;# 
  7184  010D                     	;# 
  7185  010E                     	;# 
  7186  0111                     	;# 
  7187  0112                     	;# 
  7188  0113                     	;# 
  7189  0114                     	;# 
  7190  0115                     	;# 
  7191  0116                     	;# 
  7192  0117                     	;# 
  7193  0118                     	;# 
  7194  0119                     	;# 
  7195  018C                     	;# 
  7196  018D                     	;# 
  7197  018E                     	;# 
  7198  0197                     	;# 
  7199  0199                     	;# 
  7200  0199                     	;# 
  7201  0199                     	;# 
  7202  019A                     	;# 
  7203  019A                     	;# 
  7204  019A                     	;# 
  7205  019B                     	;# 
  7206  019B                     	;# 
  7207  019B                     	;# 
  7208  019B                     	;# 
  7209  019B                     	;# 
  7210  019C                     	;# 
  7211  019C                     	;# 
  7212  019C                     	;# 
  7213  019D                     	;# 
  7214  019D                     	;# 
  7215  019D                     	;# 
  7216  019E                     	;# 
  7217  019E                     	;# 
  7218  019E                     	;# 
  7219  019F                     	;# 
  7220  019F                     	;# 
  7221  019F                     	;# 
  7222  019F                     	;# 
  7223  019F                     	;# 
  7224  020C                     	;# 
  7225  020D                     	;# 
  7226  020E                     	;# 
  7227  0211                     	;# 
  7228  0211                     	;# 
  7229  0212                     	;# 
  7230  0212                     	;# 
  7231  0213                     	;# 
  7232  0213                     	;# 
  7233  0214                     	;# 
  7234  0214                     	;# 
  7235  0215                     	;# 
  7236  0215                     	;# 
  7237  0215                     	;# 
  7238  0215                     	;# 
  7239  0216                     	;# 
  7240  0216                     	;# 
  7241  0217                     	;# 
  7242  0217                     	;# 
  7243  0219                     	;# 
  7244  021A                     	;# 
  7245  021B                     	;# 
  7246  021C                     	;# 
  7247  021D                     	;# 
  7248  021D                     	;# 
  7249  021E                     	;# 
  7250  021F                     	;# 
  7251  028C                     	;# 
  7252  028D                     	;# 
  7253  028E                     	;# 
  7254  0291                     	;# 
  7255  0291                     	;# 
  7256  0292                     	;# 
  7257  0293                     	;# 
  7258  0294                     	;# 
  7259  0295                     	;# 
  7260  0295                     	;# 
  7261  0296                     	;# 
  7262  0297                     	;# 
  7263  0298                     	;# 
  7264  029F                     	;# 
  7265  030C                     	;# 
  7266  030D                     	;# 
  7267  030E                     	;# 
  7268  0311                     	;# 
  7269  0311                     	;# 
  7270  0312                     	;# 
  7271  0313                     	;# 
  7272  0314                     	;# 
  7273  0315                     	;# 
  7274  0315                     	;# 
  7275  0316                     	;# 
  7276  0317                     	;# 
  7277  0318                     	;# 
  7278  038C                     	;# 
  7279  038D                     	;# 
  7280  038E                     	;# 
  7281  0391                     	;# 
  7282  0392                     	;# 
  7283  0393                     	;# 
  7284  0394                     	;# 
  7285  0395                     	;# 
  7286  0396                     	;# 
  7287  0397                     	;# 
  7288  0398                     	;# 
  7289  0399                     	;# 
  7290  039A                     	;# 
  7291  039C                     	;# 
  7292  039D                     	;# 
  7293  039E                     	;# 
  7294  039F                     	;# 
  7295  0411                     	;# 
  7296  0411                     	;# 
  7297  0412                     	;# 
  7298  0413                     	;# 
  7299  0414                     	;# 
  7300  0415                     	;# 
  7301  0416                     	;# 
  7302  0417                     	;# 
  7303  0418                     	;# 
  7304  0418                     	;# 
  7305  0419                     	;# 
  7306  041A                     	;# 
  7307  041B                     	;# 
  7308  041C                     	;# 
  7309  041D                     	;# 
  7310  041E                     	;# 
  7311  041F                     	;# 
  7312  0498                     	;# 
  7313  0498                     	;# 
  7314  0499                     	;# 
  7315  049A                     	;# 
  7316  049B                     	;# 
  7317  049B                     	;# 
  7318  049C                     	;# 
  7319  049D                     	;# 
  7320  049E                     	;# 
  7321  049F                     	;# 
  7322  0617                     	;# 
  7323  0618                     	;# 
  7324  0619                     	;# 
  7325  0619                     	;# 
  7326  061A                     	;# 
  7327  061B                     	;# 
  7328  061C                     	;# 
  7329  061C                     	;# 
  7330  061F                     	;# 
  7331  0691                     	;# 
  7332  0692                     	;# 
  7333  0693                     	;# 
  7334  0694                     	;# 
  7335  0695                     	;# 
  7336  0696                     	;# 
  7337  0697                     	;# 
  7338  0698                     	;# 
  7339  0699                     	;# 
  7340  0711                     	;# 
  7341  0712                     	;# 
  7342  0713                     	;# 
  7343  0714                     	;# 
  7344  0715                     	;# 
  7345  0716                     	;# 
  7346  0717                     	;# 
  7347  0718                     	;# 
  7348  0719                     	;# 
  7349  0891                     	;# 
  7350  0891                     	;# 
  7351  0891                     	;# 
  7352  0891                     	;# 
  7353  0891                     	;# 
  7354  0891                     	;# 
  7355  0892                     	;# 
  7356  0892                     	;# 
  7357  0892                     	;# 
  7358  0893                     	;# 
  7359  0893                     	;# 
  7360  0893                     	;# 
  7361  0893                     	;# 
  7362  0893                     	;# 
  7363  0893                     	;# 
  7364  0894                     	;# 
  7365  0894                     	;# 
  7366  0894                     	;# 
  7367  0895                     	;# 
  7368  0895                     	;# 
  7369  0895                     	;# 
  7370  0896                     	;# 
  7371  0896                     	;# 
  7372  0896                     	;# 
  7373  089B                     	;# 
  7374  0911                     	;# 
  7375  0912                     	;# 
  7376  0913                     	;# 
  7377  0914                     	;# 
  7378  0915                     	;# 
  7379  0916                     	;# 
  7380  0918                     	;# 
  7381  0919                     	;# 
  7382  091A                     	;# 
  7383  091B                     	;# 
  7384  091C                     	;# 
  7385  091D                     	;# 
  7386  091E                     	;# 
  7387  091F                     	;# 
  7388  0E0F                     	;# 
  7389  0E10                     	;# 
  7390  0E11                     	;# 
  7391  0E12                     	;# 
  7392  0E13                     	;# 
  7393  0E14                     	;# 
  7394  0E15                     	;# 
  7395  0E16                     	;# 
  7396  0E17                     	;# 
  7397  0E18                     	;# 
  7398  0E19                     	;# 
  7399  0E1A                     	;# 
  7400  0E1B                     	;# 
  7401  0E1C                     	;# 
  7402  0E1D                     	;# 
  7403  0E1E                     	;# 
  7404  0E1F                     	;# 
  7405  0E20                     	;# 
  7406  0E21                     	;# 
  7407  0E22                     	;# 
  7408  0E24                     	;# 
  7409  0E25                     	;# 
  7410  0E28                     	;# 
  7411  0E29                     	;# 
  7412  0E2A                     	;# 
  7413  0E2B                     	;# 
  7414  0E2C                     	;# 
  7415  0E2D                     	;# 
  7416  0E2E                     	;# 
  7417  0E2F                     	;# 
  7418  0E90                     	;# 
  7419  0E91                     	;# 
  7420  0E92                     	;# 
  7421  0E94                     	;# 
  7422  0E95                     	;# 
  7423  0E9C                     	;# 
  7424  0E9D                     	;# 
  7425  0E9E                     	;# 
  7426  0E9F                     	;# 
  7427  0EA0                     	;# 
  7428  0EA1                     	;# 
  7429  0EA2                     	;# 
  7430  0EA3                     	;# 
  7431  0EA4                     	;# 
  7432  0EA5                     	;# 
  7433  0EA6                     	;# 
  7434  0EA7                     	;# 
  7435  0F0F                     	;# 
  7436  0F10                     	;# 
  7437  0F11                     	;# 
  7438  0F12                     	;# 
  7439  0F13                     	;# 
  7440  0F14                     	;# 
  7441  0F15                     	;# 
  7442  0F16                     	;# 
  7443  0F17                     	;# 
  7444  0F18                     	;# 
  7445  0F19                     	;# 
  7446  0F1A                     	;# 
  7447  0F1B                     	;# 
  7448  0F1C                     	;# 
  7449  0F1D                     	;# 
  7450  0F1E                     	;# 
  7451  0F1F                     	;# 
  7452  0F20                     	;# 
  7453  0F21                     	;# 
  7454  0F22                     	;# 
  7455  0F23                     	;# 
  7456  0F24                     	;# 
  7457  0F25                     	;# 
  7458  0F26                     	;# 
  7459  0F27                     	;# 
  7460  0F28                     	;# 
  7461  0F29                     	;# 
  7462  0F2A                     	;# 
  7463  0F2B                     	;# 
  7464  0F2C                     	;# 
  7465  0F2D                     	;# 
  7466  0F2E                     	;# 
  7467  0F2F                     	;# 
  7468  0F30                     	;# 
  7469  0F31                     	;# 
  7470  0F32                     	;# 
  7471  0F33                     	;# 
  7472  0F34                     	;# 
  7473  0F35                     	;# 
  7474  0F36                     	;# 
  7475  0F37                     	;# 
  7476  0FE4                     	;# 
  7477  0FE5                     	;# 
  7478  0FE6                     	;# 
  7479  0FE7                     	;# 
  7480  0FE8                     	;# 
  7481  0FE9                     	;# 
  7482  0FEA                     	;# 
  7483  0FEB                     	;# 
  7484  0FED                     	;# 
  7485  0FEE                     	;# 
  7486  0FEF                     	;# 
  7487  0000                     	;# 
  7488  0001                     	;# 
  7489  0002                     	;# 
  7490  0003                     	;# 
  7491  0004                     	;# 
  7492  0005                     	;# 
  7493  0006                     	;# 
  7494  0007                     	;# 
  7495  0008                     	;# 
  7496  0009                     	;# 
  7497  000A                     	;# 
  7498  000B                     	;# 
  7499  000C                     	;# 
  7500  000D                     	;# 
  7501  000E                     	;# 
  7502  0010                     	;# 
  7503  0011                     	;# 
  7504  0012                     	;# 
  7505  0013                     	;# 
  7506  0014                     	;# 
  7507  0015                     	;# 
  7508  0015                     	;# 
  7509  0016                     	;# 
  7510  0016                     	;# 
  7511  0017                     	;# 
  7512  0018                     	;# 
  7513  0019                     	;# 
  7514  0019                     	;# 
  7515  001A                     	;# 
  7516  001B                     	;# 
  7517  001C                     	;# 
  7518  001D                     	;# 
  7519  001E                     	;# 
  7520  001F                     	;# 
  7521  008C                     	;# 
  7522  008D                     	;# 
  7523  008E                     	;# 
  7524  0090                     	;# 
  7525  0091                     	;# 
  7526  0092                     	;# 
  7527  0093                     	;# 
  7528  0094                     	;# 
  7529  0097                     	;# 
  7530  009B                     	;# 
  7531  009B                     	;# 
  7532  009C                     	;# 
  7533  009D                     	;# 
  7534  009E                     	;# 
  7535  009F                     	;# 
  7536  010C                     	;# 
  7537  010D                     	;# 
  7538  010E                     	;# 
  7539  0111                     	;# 
  7540  0112                     	;# 
  7541  0113                     	;# 
  7542  0114                     	;# 
  7543  0115                     	;# 
  7544  0116                     	;# 
  7545  0117                     	;# 
  7546  0118                     	;# 
  7547  0119                     	;# 
  7548  018C                     	;# 
  7549  018D                     	;# 
  7550  018E                     	;# 
  7551  0197                     	;# 
  7552  0199                     	;# 
  7553  0199                     	;# 
  7554  0199                     	;# 
  7555  019A                     	;# 
  7556  019A                     	;# 
  7557  019A                     	;# 
  7558  019B                     	;# 
  7559  019B                     	;# 
  7560  019B                     	;# 
  7561  019B                     	;# 
  7562  019B                     	;# 
  7563  019C                     	;# 
  7564  019C                     	;# 
  7565  019C                     	;# 
  7566  019D                     	;# 
  7567  019D                     	;# 
  7568  019D                     	;# 
  7569  019E                     	;# 
  7570  019E                     	;# 
  7571  019E                     	;# 
  7572  019F                     	;# 
  7573  019F                     	;# 
  7574  019F                     	;# 
  7575  019F                     	;# 
  7576  019F                     	;# 
  7577  020C                     	;# 
  7578  020D                     	;# 
  7579  020E                     	;# 
  7580  0211                     	;# 
  7581  0211                     	;# 
  7582  0212                     	;# 
  7583  0212                     	;# 
  7584  0213                     	;# 
  7585  0213                     	;# 
  7586  0214                     	;# 
  7587  0214                     	;# 
  7588  0215                     	;# 
  7589  0215                     	;# 
  7590  0215                     	;# 
  7591  0215                     	;# 
  7592  0216                     	;# 
  7593  0216                     	;# 
  7594  0217                     	;# 
  7595  0217                     	;# 
  7596  0219                     	;# 
  7597  021A                     	;# 
  7598  021B                     	;# 
  7599  021C                     	;# 
  7600  021D                     	;# 
  7601  021D                     	;# 
  7602  021E                     	;# 
  7603  021F                     	;# 
  7604  028C                     	;# 
  7605  028D                     	;# 
  7606  028E                     	;# 
  7607  0291                     	;# 
  7608  0291                     	;# 
  7609  0292                     	;# 
  7610  0293                     	;# 
  7611  0294                     	;# 
  7612  0295                     	;# 
  7613  0295                     	;# 
  7614  0296                     	;# 
  7615  0297                     	;# 
  7616  0298                     	;# 
  7617  029F                     	;# 
  7618  030C                     	;# 
  7619  030D                     	;# 
  7620  030E                     	;# 
  7621  0311                     	;# 
  7622  0311                     	;# 
  7623  0312                     	;# 
  7624  0313                     	;# 
  7625  0314                     	;# 
  7626  0315                     	;# 
  7627  0315                     	;# 
  7628  0316                     	;# 
  7629  0317                     	;# 
  7630  0318                     	;# 
  7631  038C                     	;# 
  7632  038D                     	;# 
  7633  038E                     	;# 
  7634  0391                     	;# 
  7635  0392                     	;# 
  7636  0393                     	;# 
  7637  0394                     	;# 
  7638  0395                     	;# 
  7639  0396                     	;# 
  7640  0397                     	;# 
  7641  0398                     	;# 
  7642  0399                     	;# 
  7643  039A                     	;# 
  7644  039C                     	;# 
  7645  039D                     	;# 
  7646  039E                     	;# 
  7647  039F                     	;# 
  7648  0411                     	;# 
  7649  0411                     	;# 
  7650  0412                     	;# 
  7651  0413                     	;# 
  7652  0414                     	;# 
  7653  0415                     	;# 
  7654  0416                     	;# 
  7655  0417                     	;# 
  7656  0418                     	;# 
  7657  0418                     	;# 
  7658  0419                     	;# 
  7659  041A                     	;# 
  7660  041B                     	;# 
  7661  041C                     	;# 
  7662  041D                     	;# 
  7663  041E                     	;# 
  7664  041F                     	;# 
  7665  0498                     	;# 
  7666  0498                     	;# 
  7667  0499                     	;# 
  7668  049A                     	;# 
  7669  049B                     	;# 
  7670  049B                     	;# 
  7671  049C                     	;# 
  7672  049D                     	;# 
  7673  049E                     	;# 
  7674  049F                     	;# 
  7675  0617                     	;# 
  7676  0618                     	;# 
  7677  0619                     	;# 
  7678  0619                     	;# 
  7679  061A                     	;# 
  7680  061B                     	;# 
  7681  061C                     	;# 
  7682  061C                     	;# 
  7683  061F                     	;# 
  7684  0691                     	;# 
  7685  0692                     	;# 
  7686  0693                     	;# 
  7687  0694                     	;# 
  7688  0695                     	;# 
  7689  0696                     	;# 
  7690  0697                     	;# 
  7691  0698                     	;# 
  7692  0699                     	;# 
  7693  0711                     	;# 
  7694  0712                     	;# 
  7695  0713                     	;# 
  7696  0714                     	;# 
  7697  0715                     	;# 
  7698  0716                     	;# 
  7699  0717                     	;# 
  7700  0718                     	;# 
  7701  0719                     	;# 
  7702  0891                     	;# 
  7703  0891                     	;# 
  7704  0891                     	;# 
  7705  0891                     	;# 
  7706  0891                     	;# 
  7707  0891                     	;# 
  7708  0892                     	;# 
  7709  0892                     	;# 
  7710  0892                     	;# 
  7711  0893                     	;# 
  7712  0893                     	;# 
  7713  0893                     	;# 
  7714  0893                     	;# 
  7715  0893                     	;# 
  7716  0893                     	;# 
  7717  0894                     	;# 
  7718  0894                     	;# 
  7719  0894                     	;# 
  7720  0895                     	;# 
  7721  0895                     	;# 
  7722  0895                     	;# 
  7723  0896                     	;# 
  7724  0896                     	;# 
  7725  0896                     	;# 
  7726  089B                     	;# 
  7727  0911                     	;# 
  7728  0912                     	;# 
  7729  0913                     	;# 
  7730  0914                     	;# 
  7731  0915                     	;# 
  7732  0916                     	;# 
  7733  0918                     	;# 
  7734  0919                     	;# 
  7735  091A                     	;# 
  7736  091B                     	;# 
  7737  091C                     	;# 
  7738  091D                     	;# 
  7739  091E                     	;# 
  7740  091F                     	;# 
  7741  0E0F                     	;# 
  7742  0E10                     	;# 
  7743  0E11                     	;# 
  7744  0E12                     	;# 
  7745  0E13                     	;# 
  7746  0E14                     	;# 
  7747  0E15                     	;# 
  7748  0E16                     	;# 
  7749  0E17                     	;# 
  7750  0E18                     	;# 
  7751  0E19                     	;# 
  7752  0E1A                     	;# 
  7753  0E1B                     	;# 
  7754  0E1C                     	;# 
  7755  0E1D                     	;# 
  7756  0E1E                     	;# 
  7757  0E1F                     	;# 
  7758  0E20                     	;# 
  7759  0E21                     	;# 
  7760  0E22                     	;# 
  7761  0E24                     	;# 
  7762  0E25                     	;# 
  7763  0E28                     	;# 
  7764  0E29                     	;# 
  7765  0E2A                     	;# 
  7766  0E2B                     	;# 
  7767  0E2C                     	;# 
  7768  0E2D                     	;# 
  7769  0E2E                     	;# 
  7770  0E2F                     	;# 
  7771  0E90                     	;# 
  7772  0E91                     	;# 
  7773  0E92                     	;# 
  7774  0E94                     	;# 
  7775  0E95                     	;# 
  7776  0E9C                     	;# 
  7777  0E9D                     	;# 
  7778  0E9E                     	;# 
  7779  0E9F                     	;# 
  7780  0EA0                     	;# 
  7781  0EA1                     	;# 
  7782  0EA2                     	;# 
  7783  0EA3                     	;# 
  7784  0EA4                     	;# 
  7785  0EA5                     	;# 
  7786  0EA6                     	;# 
  7787  0EA7                     	;# 
  7788  0F0F                     	;# 
  7789  0F10                     	;# 
  7790  0F11                     	;# 
  7791  0F12                     	;# 
  7792  0F13                     	;# 
  7793  0F14                     	;# 
  7794  0F15                     	;# 
  7795  0F16                     	;# 
  7796  0F17                     	;# 
  7797  0F18                     	;# 
  7798  0F19                     	;# 
  7799  0F1A                     	;# 
  7800  0F1B                     	;# 
  7801  0F1C                     	;# 
  7802  0F1D                     	;# 
  7803  0F1E                     	;# 
  7804  0F1F                     	;# 
  7805  0F20                     	;# 
  7806  0F21                     	;# 
  7807  0F22                     	;# 
  7808  0F23                     	;# 
  7809  0F24                     	;# 
  7810  0F25                     	;# 
  7811  0F26                     	;# 
  7812  0F27                     	;# 
  7813  0F28                     	;# 
  7814  0F29                     	;# 
  7815  0F2A                     	;# 
  7816  0F2B                     	;# 
  7817  0F2C                     	;# 
  7818  0F2D                     	;# 
  7819  0F2E                     	;# 
  7820  0F2F                     	;# 
  7821  0F30                     	;# 
  7822  0F31                     	;# 
  7823  0F32                     	;# 
  7824  0F33                     	;# 
  7825  0F34                     	;# 
  7826  0F35                     	;# 
  7827  0F36                     	;# 
  7828  0F37                     	;# 
  7829  0FE4                     	;# 
  7830  0FE5                     	;# 
  7831  0FE6                     	;# 
  7832  0FE7                     	;# 
  7833  0FE8                     	;# 
  7834  0FE9                     	;# 
  7835  0FEA                     	;# 
  7836  0FEB                     	;# 
  7837  0FED                     	;# 
  7838  0FEE                     	;# 
  7839  0FEF                     	;# 
  7840  0000                     	;# 
  7841  0001                     	;# 
  7842  0002                     	;# 
  7843  0003                     	;# 
  7844  0004                     	;# 
  7845  0005                     	;# 
  7846  0006                     	;# 
  7847  0007                     	;# 
  7848  0008                     	;# 
  7849  0009                     	;# 
  7850  000A                     	;# 
  7851  000B                     	;# 
  7852  000C                     	;# 
  7853  000D                     	;# 
  7854  000E                     	;# 
  7855  0010                     	;# 
  7856  0011                     	;# 
  7857  0012                     	;# 
  7858  0013                     	;# 
  7859  0014                     	;# 
  7860  0015                     	;# 
  7861  0015                     	;# 
  7862  0016                     	;# 
  7863  0016                     	;# 
  7864  0017                     	;# 
  7865  0018                     	;# 
  7866  0019                     	;# 
  7867  0019                     	;# 
  7868  001A                     	;# 
  7869  001B                     	;# 
  7870  001C                     	;# 
  7871  001D                     	;# 
  7872  001E                     	;# 
  7873  001F                     	;# 
  7874  008C                     	;# 
  7875  008D                     	;# 
  7876  008E                     	;# 
  7877  0090                     	;# 
  7878  0091                     	;# 
  7879  0092                     	;# 
  7880  0093                     	;# 
  7881  0094                     	;# 
  7882  0097                     	;# 
  7883  009B                     	;# 
  7884  009B                     	;# 
  7885  009C                     	;# 
  7886  009D                     	;# 
  7887  009E                     	;# 
  7888  009F                     	;# 
  7889  010C                     	;# 
  7890  010D                     	;# 
  7891  010E                     	;# 
  7892  0111                     	;# 
  7893  0112                     	;# 
  7894  0113                     	;# 
  7895  0114                     	;# 
  7896  0115                     	;# 
  7897  0116                     	;# 
  7898  0117                     	;# 
  7899  0118                     	;# 
  7900  0119                     	;# 
  7901  018C                     	;# 
  7902  018D                     	;# 
  7903  018E                     	;# 
  7904  0197                     	;# 
  7905  0199                     	;# 
  7906  0199                     	;# 
  7907  0199                     	;# 
  7908  019A                     	;# 
  7909  019A                     	;# 
  7910  019A                     	;# 
  7911  019B                     	;# 
  7912  019B                     	;# 
  7913  019B                     	;# 
  7914  019B                     	;# 
  7915  019B                     	;# 
  7916  019C                     	;# 
  7917  019C                     	;# 
  7918  019C                     	;# 
  7919  019D                     	;# 
  7920  019D                     	;# 
  7921  019D                     	;# 
  7922  019E                     	;# 
  7923  019E                     	;# 
  7924  019E                     	;# 
  7925  019F                     	;# 
  7926  019F                     	;# 
  7927  019F                     	;# 
  7928  019F                     	;# 
  7929  019F                     	;# 
  7930  020C                     	;# 
  7931  020D                     	;# 
  7932  020E                     	;# 
  7933  0211                     	;# 
  7934  0211                     	;# 
  7935  0212                     	;# 
  7936  0212                     	;# 
  7937  0213                     	;# 
  7938  0213                     	;# 
  7939  0214                     	;# 
  7940  0214                     	;# 
  7941  0215                     	;# 
  7942  0215                     	;# 
  7943  0215                     	;# 
  7944  0215                     	;# 
  7945  0216                     	;# 
  7946  0216                     	;# 
  7947  0217                     	;# 
  7948  0217                     	;# 
  7949  0219                     	;# 
  7950  021A                     	;# 
  7951  021B                     	;# 
  7952  021C                     	;# 
  7953  021D                     	;# 
  7954  021D                     	;# 
  7955  021E                     	;# 
  7956  021F                     	;# 
  7957  028C                     	;# 
  7958  028D                     	;# 
  7959  028E                     	;# 
  7960  0291                     	;# 
  7961  0291                     	;# 
  7962  0292                     	;# 
  7963  0293                     	;# 
  7964  0294                     	;# 
  7965  0295                     	;# 
  7966  0295                     	;# 
  7967  0296                     	;# 
  7968  0297                     	;# 
  7969  0298                     	;# 
  7970  029F                     	;# 
  7971  030C                     	;# 
  7972  030D                     	;# 
  7973  030E                     	;# 
  7974  0311                     	;# 
  7975  0311                     	;# 
  7976  0312                     	;# 
  7977  0313                     	;# 
  7978  0314                     	;# 
  7979  0315                     	;# 
  7980  0315                     	;# 
  7981  0316                     	;# 
  7982  0317                     	;# 
  7983  0318                     	;# 
  7984  038C                     	;# 
  7985  038D                     	;# 
  7986  038E                     	;# 
  7987  0391                     	;# 
  7988  0392                     	;# 
  7989  0393                     	;# 
  7990  0394                     	;# 
  7991  0395                     	;# 
  7992  0396                     	;# 
  7993  0397                     	;# 
  7994  0398                     	;# 
  7995  0399                     	;# 
  7996  039A                     	;# 
  7997  039C                     	;# 
  7998  039D                     	;# 
  7999  039E                     	;# 
  8000  039F                     	;# 
  8001  0411                     	;# 
  8002  0411                     	;# 
  8003  0412                     	;# 
  8004  0413                     	;# 
  8005  0414                     	;# 
  8006  0415                     	;# 
  8007  0416                     	;# 
  8008  0417                     	;# 
  8009  0418                     	;# 
  8010  0418                     	;# 
  8011  0419                     	;# 
  8012  041A                     	;# 
  8013  041B                     	;# 
  8014  041C                     	;# 
  8015  041D                     	;# 
  8016  041E                     	;# 
  8017  041F                     	;# 
  8018  0498                     	;# 
  8019  0498                     	;# 
  8020  0499                     	;# 
  8021  049A                     	;# 
  8022  049B                     	;# 
  8023  049B                     	;# 
  8024  049C                     	;# 
  8025  049D                     	;# 
  8026  049E                     	;# 
  8027  049F                     	;# 
  8028  0617                     	;# 
  8029  0618                     	;# 
  8030  0619                     	;# 
  8031  0619                     	;# 
  8032  061A                     	;# 
  8033  061B                     	;# 
  8034  061C                     	;# 
  8035  061C                     	;# 
  8036  061F                     	;# 
  8037  0691                     	;# 
  8038  0692                     	;# 
  8039  0693                     	;# 
  8040  0694                     	;# 
  8041  0695                     	;# 
  8042  0696                     	;# 
  8043  0697                     	;# 
  8044  0698                     	;# 
  8045  0699                     	;# 
  8046  0711                     	;# 
  8047  0712                     	;# 
  8048  0713                     	;# 
  8049  0714                     	;# 
  8050  0715                     	;# 
  8051  0716                     	;# 
  8052  0717                     	;# 
  8053  0718                     	;# 
  8054  0719                     	;# 
  8055  0891                     	;# 
  8056  0891                     	;# 
  8057  0891                     	;# 
  8058  0891                     	;# 
  8059  0891                     	;# 
  8060  0891                     	;# 
  8061  0892                     	;# 
  8062  0892                     	;# 
  8063  0892                     	;# 
  8064  0893                     	;# 
  8065  0893                     	;# 
  8066  0893                     	;# 
  8067  0893                     	;# 
  8068  0893                     	;# 
  8069  0893                     	;# 
  8070  0894                     	;# 
  8071  0894                     	;# 
  8072  0894                     	;# 
  8073  0895                     	;# 
  8074  0895                     	;# 
  8075  0895                     	;# 
  8076  0896                     	;# 
  8077  0896                     	;# 
  8078  0896                     	;# 
  8079  089B                     	;# 
  8080  0911                     	;# 
  8081  0912                     	;# 
  8082  0913                     	;# 
  8083  0914                     	;# 
  8084  0915                     	;# 
  8085  0916                     	;# 
  8086  0918                     	;# 
  8087  0919                     	;# 
  8088  091A                     	;# 
  8089  091B                     	;# 
  8090  091C                     	;# 
  8091  091D                     	;# 
  8092  091E                     	;# 
  8093  091F                     	;# 
  8094  0E0F                     	;# 
  8095  0E10                     	;# 
  8096  0E11                     	;# 
  8097  0E12                     	;# 
  8098  0E13                     	;# 
  8099  0E14                     	;# 
  8100  0E15                     	;# 
  8101  0E16                     	;# 
  8102  0E17                     	;# 
  8103  0E18                     	;# 
  8104  0E19                     	;# 
  8105  0E1A                     	;# 
  8106  0E1B                     	;# 
  8107  0E1C                     	;# 
  8108  0E1D                     	;# 
  8109  0E1E                     	;# 
  8110  0E1F                     	;# 
  8111  0E20                     	;# 
  8112  0E21                     	;# 
  8113  0E22                     	;# 
  8114  0E24                     	;# 
  8115  0E25                     	;# 
  8116  0E28                     	;# 
  8117  0E29                     	;# 
  8118  0E2A                     	;# 
  8119  0E2B                     	;# 
  8120  0E2C                     	;# 
  8121  0E2D                     	;# 
  8122  0E2E                     	;# 
  8123  0E2F                     	;# 
  8124  0E90                     	;# 
  8125  0E91                     	;# 
  8126  0E92                     	;# 
  8127  0E94                     	;# 
  8128  0E95                     	;# 
  8129  0E9C                     	;# 
  8130  0E9D                     	;# 
  8131  0E9E                     	;# 
  8132  0E9F                     	;# 
  8133  0EA0                     	;# 
  8134  0EA1                     	;# 
  8135  0EA2                     	;# 
  8136  0EA3                     	;# 
  8137  0EA4                     	;# 
  8138  0EA5                     	;# 
  8139  0EA6                     	;# 
  8140  0EA7                     	;# 
  8141  0F0F                     	;# 
  8142  0F10                     	;# 
  8143  0F11                     	;# 
  8144  0F12                     	;# 
  8145  0F13                     	;# 
  8146  0F14                     	;# 
  8147  0F15                     	;# 
  8148  0F16                     	;# 
  8149  0F17                     	;# 
  8150  0F18                     	;# 
  8151  0F19                     	;# 
  8152  0F1A                     	;# 
  8153  0F1B                     	;# 
  8154  0F1C                     	;# 
  8155  0F1D                     	;# 
  8156  0F1E                     	;# 
  8157  0F1F                     	;# 
  8158  0F20                     	;# 
  8159  0F21                     	;# 
  8160  0F22                     	;# 
  8161  0F23                     	;# 
  8162  0F24                     	;# 
  8163  0F25                     	;# 
  8164  0F26                     	;# 
  8165  0F27                     	;# 
  8166  0F28                     	;# 
  8167  0F29                     	;# 
  8168  0F2A                     	;# 
  8169  0F2B                     	;# 
  8170  0F2C                     	;# 
  8171  0F2D                     	;# 
  8172  0F2E                     	;# 
  8173  0F2F                     	;# 
  8174  0F30                     	;# 
  8175  0F31                     	;# 
  8176  0F32                     	;# 
  8177  0F33                     	;# 
  8178  0F34                     	;# 
  8179  0F35                     	;# 
  8180  0F36                     	;# 
  8181  0F37                     	;# 
  8182  0FE4                     	;# 
  8183  0FE5                     	;# 
  8184  0FE6                     	;# 
  8185  0FE7                     	;# 
  8186  0FE8                     	;# 
  8187  0FE9                     	;# 
  8188  0FEA                     	;# 
  8189  0FEB                     	;# 
  8190  0FED                     	;# 
  8191  0FEE                     	;# 
  8192  0FEF                     	;# 
  8193                           
  8194                           	psect	idataBANK1
  8195  0000                     __pidataBANK1:	
  8196                           
  8197                           	psect	stringtext1
  8198  06E2                     __pstringtext1:	
  8199  06E2                     _gamma_table:	
  8200  06E2  34F4               	retlw	244
  8201  06E3  3403               	retlw	3
  8202  06E4  34EA               	retlw	234
  8203  06E5  3403               	retlw	3
  8204  06E6  34DF               	retlw	223
  8205  06E7  3403               	retlw	3
  8206  06E8  34D5               	retlw	213
  8207  06E9  3403               	retlw	3
  8208  06EA  34CB               	retlw	203
  8209  06EB  3403               	retlw	3
  8210  06EC  34C1               	retlw	193
  8211  06ED  3403               	retlw	3
  8212  06EE  34B6               	retlw	182
  8213  06EF  3403               	retlw	3
  8214  06F0  34AC               	retlw	172
  8215  06F1  3403               	retlw	3
  8216  06F2  34A2               	retlw	162
  8217  06F3  3403               	retlw	3
  8218  06F4  3498               	retlw	152
  8219  06F5  3403               	retlw	3
  8220  06F6  348E               	retlw	142
  8221  06F7  3403               	retlw	3
  8222  06F8  3483               	retlw	131
  8223  06F9  3403               	retlw	3
  8224  06FA  3479               	retlw	121
  8225  06FB  3403               	retlw	3
  8226  06FC  346F               	retlw	111
  8227  06FD  3403               	retlw	3
  8228  06FE  3465               	retlw	101
  8229  06FF  3403               	retlw	3
  8230  0700  345A               	retlw	90
  8231  0701  3403               	retlw	3
  8232  0702  3450               	retlw	80
  8233  0703  3403               	retlw	3
  8234  0704  3446               	retlw	70
  8235  0705  3403               	retlw	3
  8236  0706  343C               	retlw	60
  8237  0707  3403               	retlw	3
  8238  0708  3432               	retlw	50
  8239  0709  3403               	retlw	3
  8240  070A  3427               	retlw	39
  8241  070B  3403               	retlw	3
  8242  070C  341D               	retlw	29
  8243  070D  3403               	retlw	3
  8244  070E  3413               	retlw	19
  8245  070F  3403               	retlw	3
  8246  0710  3409               	retlw	9
  8247  0711  3403               	retlw	3
  8248  0712  34FE               	retlw	254
  8249  0713  3402               	retlw	2
  8250  0714  34F4               	retlw	244
  8251  0715  3402               	retlw	2
  8252  0716  34EA               	retlw	234
  8253  0717  3402               	retlw	2
  8254  0718  34E0               	retlw	224
  8255  0719  3402               	retlw	2
  8256  071A  34D6               	retlw	214
  8257  071B  3402               	retlw	2
  8258  071C  34CB               	retlw	203
  8259  071D  3402               	retlw	2
  8260  071E  34C1               	retlw	193
  8261  071F  3402               	retlw	2
  8262  0720  34B7               	retlw	183
  8263  0721  3402               	retlw	2
  8264  0722  34AD               	retlw	173
  8265  0723  3402               	retlw	2
  8266  0724  34A3               	retlw	163
  8267  0725  3402               	retlw	2
  8268  0726  3498               	retlw	152
  8269  0727  3402               	retlw	2
  8270  0728  348E               	retlw	142
  8271  0729  3402               	retlw	2
  8272  072A  3484               	retlw	132
  8273  072B  3402               	retlw	2
  8274  072C  347A               	retlw	122
  8275  072D  3402               	retlw	2
  8276  072E  346F               	retlw	111
  8277  072F  3402               	retlw	2
  8278  0730  3465               	retlw	101
  8279  0731  3402               	retlw	2
  8280  0732  345B               	retlw	91
  8281  0733  3402               	retlw	2
  8282  0734  3451               	retlw	81
  8283  0735  3402               	retlw	2
  8284  0736  3447               	retlw	71
  8285  0737  3402               	retlw	2
  8286  0738  343C               	retlw	60
  8287  0739  3402               	retlw	2
  8288  073A  3432               	retlw	50
  8289  073B  3402               	retlw	2
  8290  073C  3428               	retlw	40
  8291  073D  3402               	retlw	2
  8292  073E  341E               	retlw	30
  8293  073F  3402               	retlw	2
  8294  0740  3413               	retlw	19
  8295  0741  3402               	retlw	2
  8296  0742  3409               	retlw	9
  8297  0743  3402               	retlw	2
  8298  0744  34FF               	retlw	255
  8299  0745  3401               	retlw	1
  8300  0746  34F5               	retlw	245
  8301  0747  3401               	retlw	1
  8302  0748  34EB               	retlw	235
  8303  0749  3401               	retlw	1
  8304  074A  34E0               	retlw	224
  8305  074B  3401               	retlw	1
  8306  074C  34D6               	retlw	214
  8307  074D  3401               	retlw	1
  8308  074E  34CC               	retlw	204
  8309  074F  3401               	retlw	1
  8310  0750  34C2               	retlw	194
  8311  0751  3401               	retlw	1
  8312  0752  34B7               	retlw	183
  8313  0753  3401               	retlw	1
  8314  0754  34AD               	retlw	173
  8315  0755  3401               	retlw	1
  8316  0756  34A3               	retlw	163
  8317  0757  3401               	retlw	1
  8318  0758  3499               	retlw	153
  8319  0759  3401               	retlw	1
  8320  075A  348F               	retlw	143
  8321  075B  3401               	retlw	1
  8322  075C  3484               	retlw	132
  8323  075D  3401               	retlw	1
  8324  075E  347A               	retlw	122
  8325  075F  3401               	retlw	1
  8326  0760  3470               	retlw	112
  8327  0761  3401               	retlw	1
  8328  0762  3466               	retlw	102
  8329  0763  3401               	retlw	1
  8330  0764  345B               	retlw	91
  8331  0765  3401               	retlw	1
  8332  0766  3451               	retlw	81
  8333  0767  3401               	retlw	1
  8334  0768  3447               	retlw	71
  8335  0769  3401               	retlw	1
  8336  076A  343D               	retlw	61
  8337  076B  3401               	retlw	1
  8338  076C  3433               	retlw	51
  8339  076D  3401               	retlw	1
  8340  076E  3428               	retlw	40
  8341  076F  3401               	retlw	1
  8342  0770  341E               	retlw	30
  8343  0771  3401               	retlw	1
  8344  0772  3414               	retlw	20
  8345  0773  3401               	retlw	1
  8346  0774  340A               	retlw	10
  8347  0775  3401               	retlw	1
  8348  0776  34FF               	retlw	255
  8349  0777  3400               	retlw	0
  8350  0778  34F5               	retlw	245
  8351  0779  3400               	retlw	0
  8352  077A  34EB               	retlw	235
  8353  077B  3400               	retlw	0
  8354  077C  34E1               	retlw	225
  8355  077D  3400               	retlw	0
  8356  077E  34D7               	retlw	215
  8357  077F  3400               	retlw	0
  8358  0780  34CC               	retlw	204
  8359  0781  3400               	retlw	0
  8360  0782  34C2               	retlw	194
  8361  0783  3400               	retlw	0
  8362  0784  34B8               	retlw	184
  8363  0785  3400               	retlw	0
  8364  0786  34AE               	retlw	174
  8365  0787  3400               	retlw	0
  8366  0788  34A4               	retlw	164
  8367  0789  3400               	retlw	0
  8368  078A  3499               	retlw	153
  8369  078B  3400               	retlw	0
  8370  078C  348F               	retlw	143
  8371  078D  3400               	retlw	0
  8372  078E  3485               	retlw	133
  8373  078F  3400               	retlw	0
  8374  0790  347B               	retlw	123
  8375  0791  3400               	retlw	0
  8376  0792  3470               	retlw	112
  8377  0793  3400               	retlw	0
  8378  0794  3466               	retlw	102
  8379  0795  3400               	retlw	0
  8380  0796  345C               	retlw	92
  8381  0797  3400               	retlw	0
  8382  0798  3452               	retlw	82
  8383  0799  3400               	retlw	0
  8384  079A  3448               	retlw	72
  8385  079B  3400               	retlw	0
  8386  079C  343D               	retlw	61
  8387  079D  3400               	retlw	0
  8388  079E  3433               	retlw	51
  8389  079F  3400               	retlw	0
  8390  07A0  3429               	retlw	41
  8391  07A1  3400               	retlw	0
  8392  07A2  341F               	retlw	31
  8393  07A3  3400               	retlw	0
  8394  07A4  3414               	retlw	20
  8395  07A5  3400               	retlw	0
  8396  07A6  340A               	retlw	10
  8397  07A7  3400               	retlw	0
  8398  07A8  3400               	retlw	0
  8399  07A9  3400               	retlw	0
  8400  07AA  34FE               	retlw	254
  8401  07AB  3403               	retlw	3
  8402  07AC  34FD               	retlw	253
  8403  07AD  3403               	retlw	3
  8404  07AE  34FC               	retlw	252
  8405  07AF  3403               	retlw	3
  8406  07B0  34FB               	retlw	251
  8407  07B1  3403               	retlw	3
  8408  07B2  34F9               	retlw	249
  8409  07B3  3403               	retlw	3
  8410  07B4  34F8               	retlw	248
  8411  07B5  3403               	retlw	3
  8412  07B6  34F5               	retlw	245
  8413  07B7  3403               	retlw	3
  8414  07B8  34F3               	retlw	243
  8415  07B9  3403               	retlw	3
  8416  07BA  34F1               	retlw	241
  8417  07BB  3403               	retlw	3
  8418  07BC  34EE               	retlw	238
  8419  07BD  3403               	retlw	3
  8420  07BE  34EB               	retlw	235
  8421  07BF  3403               	retlw	3
  8422  07C0  34E8               	retlw	232
  8423  07C1  3403               	retlw	3
  8424  07C2  34E4               	retlw	228
  8425  07C3  3403               	retlw	3
  8426  07C4  34E0               	retlw	224
  8427  07C5  3403               	retlw	3
  8428  07C6  34DC               	retlw	220
  8429  07C7  3403               	retlw	3
  8430  07C8  34D8               	retlw	216
  8431  07C9  3403               	retlw	3
  8432  07CA  34D4               	retlw	212
  8433  07CB  3403               	retlw	3
  8434  07CC  34CF               	retlw	207
  8435  07CD  3403               	retlw	3
  8436  07CE  34CB               	retlw	203
  8437  07CF  3403               	retlw	3
  8438  07D0  34C6               	retlw	198
  8439  07D1  3403               	retlw	3
  8440  07D2  34C0               	retlw	192
  8441  07D3  3403               	retlw	3
  8442  07D4  34BB               	retlw	187
  8443  07D5  3403               	retlw	3
  8444  07D6  34B5               	retlw	181
  8445  07D7  3403               	retlw	3
  8446  07D8  34B0               	retlw	176
  8447  07D9  3403               	retlw	3
  8448  07DA  34AA               	retlw	170
  8449  07DB  3403               	retlw	3
  8450  07DC  34A4               	retlw	164
  8451  07DD  3403               	retlw	3
  8452  07DE  349D               	retlw	157
  8453  07DF  3403               	retlw	3
  8454  07E0  3497               	retlw	151
  8455  07E1  3403               	retlw	3
  8456  07E2  3490               	retlw	144
  8457  07E3  3403               	retlw	3
  8458  07E4  3489               	retlw	137
  8459  07E5  3403               	retlw	3
  8460  07E6  3482               	retlw	130
  8461  07E7  3403               	retlw	3
  8462  07E8  347B               	retlw	123
  8463  07E9  3403               	retlw	3
  8464  07EA  3473               	retlw	115
  8465  07EB  3403               	retlw	3
  8466  07EC  346B               	retlw	107
  8467  07ED  3403               	retlw	3
  8468  07EE  3464               	retlw	100
  8469  07EF  3403               	retlw	3
  8470  07F0  345C               	retlw	92
  8471  07F1  3403               	retlw	3
  8472  07F2  3453               	retlw	83
  8473  07F3  3403               	retlw	3
  8474  07F4  344B               	retlw	75
  8475  07F5  3403               	retlw	3
  8476  07F6  3442               	retlw	66
  8477  07F7  3403               	retlw	3
  8478  07F8  343A               	retlw	58
  8479  07F9  3403               	retlw	3
  8480  07FA  3431               	retlw	49
  8481  07FB  3403               	retlw	3
  8482  07FC  3428               	retlw	40
  8483  07FD  3403               	retlw	3
  8484  07FE  341E               	retlw	30
  8485  07FF  3403               	retlw	3
  8486  0800  3415               	retlw	21
  8487  0801  3403               	retlw	3
  8488  0802  340B               	retlw	11
  8489  0803  3403               	retlw	3
  8490  0804  3401               	retlw	1
  8491  0805  3403               	retlw	3
  8492  0806  34F7               	retlw	247
  8493  0807  3402               	retlw	2
  8494  0808  34ED               	retlw	237
  8495  0809  3402               	retlw	2
  8496  080A  34E3               	retlw	227
  8497  080B  3402               	retlw	2
  8498  080C  34D9               	retlw	217
  8499  080D  3402               	retlw	2
  8500  080E  34CE               	retlw	206
  8501  080F  3402               	retlw	2
  8502  0810  34C3               	retlw	195
  8503  0811  3402               	retlw	2
  8504  0812  34B8               	retlw	184
  8505  0813  3402               	retlw	2
  8506  0814  34AD               	retlw	173
  8507  0815  3402               	retlw	2
  8508  0816  34A2               	retlw	162
  8509  0817  3402               	retlw	2
  8510  0818  3496               	retlw	150
  8511  0819  3402               	retlw	2
  8512  081A  348A               	retlw	138
  8513  081B  3402               	retlw	2
  8514  081C  347F               	retlw	127
  8515  081D  3402               	retlw	2
  8516  081E  3473               	retlw	115
  8517  081F  3402               	retlw	2
  8518  0820  3467               	retlw	103
  8519  0821  3402               	retlw	2
  8520  0822  345A               	retlw	90
  8521  0823  3402               	retlw	2
  8522  0824  344E               	retlw	78
  8523  0825  3402               	retlw	2
  8524  0826  3441               	retlw	65
  8525  0827  3402               	retlw	2
  8526  0828  3434               	retlw	52
  8527  0829  3402               	retlw	2
  8528  082A  3427               	retlw	39
  8529  082B  3402               	retlw	2
  8530  082C  341A               	retlw	26
  8531  082D  3402               	retlw	2
  8532  082E  340D               	retlw	13
  8533  082F  3402               	retlw	2
  8534  0830  3400               	retlw	0
  8535  0831  3402               	retlw	2
  8536  0832  34F2               	retlw	242
  8537  0833  3401               	retlw	1
  8538  0834  34E4               	retlw	228
  8539  0835  3401               	retlw	1
  8540  0836  34D6               	retlw	214
  8541  0837  3401               	retlw	1
  8542  0838  34C8               	retlw	200
  8543  0839  3401               	retlw	1
  8544  083A  34BA               	retlw	186
  8545  083B  3401               	retlw	1
  8546  083C  34AC               	retlw	172
  8547  083D  3401               	retlw	1
  8548  083E  349D               	retlw	157
  8549  083F  3401               	retlw	1
  8550  0840  348E               	retlw	142
  8551  0841  3401               	retlw	1
  8552  0842  3480               	retlw	128
  8553  0843  3401               	retlw	1
  8554  0844  3471               	retlw	113
  8555  0845  3401               	retlw	1
  8556  0846  3461               	retlw	97
  8557  0847  3401               	retlw	1
  8558  0848  3452               	retlw	82
  8559  0849  3401               	retlw	1
  8560  084A  3443               	retlw	67
  8561  084B  3401               	retlw	1
  8562  084C  3433               	retlw	51
  8563  084D  3401               	retlw	1
  8564  084E  3423               	retlw	35
  8565  084F  3401               	retlw	1
  8566  0850  3413               	retlw	19
  8567  0851  3401               	retlw	1
  8568  0852  3403               	retlw	3
  8569  0853  3401               	retlw	1
  8570  0854  34F3               	retlw	243
  8571  0855  3400               	retlw	0
  8572  0856  34E3               	retlw	227
  8573  0857  3400               	retlw	0
  8574  0858  34D2               	retlw	210
  8575  0859  3400               	retlw	0
  8576  085A  34C1               	retlw	193
  8577  085B  3400               	retlw	0
  8578  085C  34B1               	retlw	177
  8579  085D  3400               	retlw	0
  8580  085E  34A0               	retlw	160
  8581  085F  3400               	retlw	0
  8582  0860  348E               	retlw	142
  8583  0861  3400               	retlw	0
  8584  0862  347D               	retlw	125
  8585  0863  3400               	retlw	0
  8586  0864  346C               	retlw	108
  8587  0865  3400               	retlw	0
  8588  0866  345A               	retlw	90
  8589  0867  3400               	retlw	0
  8590  0868  3448               	retlw	72
  8591  0869  3400               	retlw	0
  8592  086A  3437               	retlw	55
  8593  086B  3400               	retlw	0
  8594  086C  3424               	retlw	36
  8595  086D  3400               	retlw	0
  8596  086E  3412               	retlw	18
  8597  086F  3400               	retlw	0
  8598  0870  3400               	retlw	0
  8599  0871  3400               	retlw	0
  8600  0872  34FE               	retlw	254
  8601  0873  3403               	retlw	3
  8602  0874  34FE               	retlw	254
  8603  0875  3403               	retlw	3
  8604  0876  34FD               	retlw	253
  8605  0877  3403               	retlw	3
  8606  0878  34FC               	retlw	252
  8607  0879  3403               	retlw	3
  8608  087A  34FB               	retlw	251
  8609  087B  3403               	retlw	3
  8610  087C  34FA               	retlw	250
  8611  087D  3403               	retlw	3
  8612  087E  34F9               	retlw	249
  8613  087F  3403               	retlw	3
  8614  0880  34F7               	retlw	247
  8615  0881  3403               	retlw	3
  8616  0882  34F6               	retlw	246
  8617  0883  3403               	retlw	3
  8618  0884  34F4               	retlw	244
  8619  0885  3403               	retlw	3
  8620  0886  34F2               	retlw	242
  8621  0887  3403               	retlw	3
  8622  0888  34EF               	retlw	239
  8623  0889  3403               	retlw	3
  8624  088A  34ED               	retlw	237
  8625  088B  3403               	retlw	3
  8626  088C  34EA               	retlw	234
  8627  088D  3403               	retlw	3
  8628  088E  34E7               	retlw	231
  8629  088F  3403               	retlw	3
  8630  0890  34E4               	retlw	228
  8631  0891  3403               	retlw	3
  8632  0892  34E0               	retlw	224
  8633  0893  3403               	retlw	3
  8634  0894  34DD               	retlw	221
  8635  0895  3403               	retlw	3
  8636  0896  34D9               	retlw	217
  8637  0897  3403               	retlw	3
  8638  0898  34D5               	retlw	213
  8639  0899  3403               	retlw	3
  8640  089A  34D1               	retlw	209
  8641  089B  3403               	retlw	3
  8642  089C  34CD               	retlw	205
  8643  089D  3403               	retlw	3
  8644  089E  34C8               	retlw	200
  8645  089F  3403               	retlw	3
  8646  08A0  34C3               	retlw	195
  8647  08A1  3403               	retlw	3
  8648  08A2  34BE               	retlw	190
  8649  08A3  3403               	retlw	3
  8650  08A4  34B9               	retlw	185
  8651  08A5  3403               	retlw	3
  8652  08A6  34B3               	retlw	179
  8653  08A7  3403               	retlw	3
  8654  08A8  34AE               	retlw	174
  8655  08A9  3403               	retlw	3
  8656  08AA  34A8               	retlw	168
  8657  08AB  3403               	retlw	3
  8658  08AC  34A2               	retlw	162
  8659  08AD  3403               	retlw	3
  8660  08AE  349C               	retlw	156
  8661  08AF  3403               	retlw	3
  8662  08B0  3495               	retlw	149
  8663  08B1  3403               	retlw	3
  8664  08B2  348F               	retlw	143
  8665  08B3  3403               	retlw	3
  8666  08B4  3488               	retlw	136
  8667  08B5  3403               	retlw	3
  8668  08B6  3481               	retlw	129
  8669  08B7  3403               	retlw	3
  8670  08B8  347A               	retlw	122
  8671  08B9  3403               	retlw	3
  8672  08BA  3472               	retlw	114
  8673  08BB  3403               	retlw	3
  8674  08BC  346A               	retlw	106
  8675  08BD  3403               	retlw	3
  8676  08BE  3463               	retlw	99
  8677  08BF  3403               	retlw	3
  8678  08C0  345A               	retlw	90
  8679  08C1  3403               	retlw	3
  8680  08C2  3452               	retlw	82
  8681  08C3  3403               	retlw	3
  8682  08C4  344A               	retlw	74
  8683  08C5  3403               	retlw	3
  8684  08C6  3441               	retlw	65
  8685  08C7  3403               	retlw	3
  8686  08C8  3438               	retlw	56
  8687  08C9  3403               	retlw	3
  8688  08CA  342F               	retlw	47
  8689  08CB  3403               	retlw	3
  8690  08CC  3426               	retlw	38
  8691  08CD  3403               	retlw	3
  8692  08CE  341C               	retlw	28
  8693  08CF  3403               	retlw	3
  8694  08D0  3413               	retlw	19
  8695  08D1  3403               	retlw	3
  8696  08D2  3409               	retlw	9
  8697  08D3  3403               	retlw	3
  8698  08D4  34FE               	retlw	254
  8699  08D5  3402               	retlw	2
  8700  08D6  34F4               	retlw	244
  8701  08D7  3402               	retlw	2
  8702  08D8  34EA               	retlw	234
  8703  08D9  3402               	retlw	2
  8704  08DA  34DF               	retlw	223
  8705  08DB  3402               	retlw	2
  8706  08DC  34D4               	retlw	212
  8707  08DD  3402               	retlw	2
  8708  08DE  34C9               	retlw	201
  8709  08DF  3402               	retlw	2
  8710  08E0  34BE               	retlw	190
  8711  08E1  3402               	retlw	2
  8712  08E2  34B2               	retlw	178
  8713  08E3  3402               	retlw	2
  8714  08E4  34A6               	retlw	166
  8715  08E5  3402               	retlw	2
  8716  08E6  349A               	retlw	154
  8717  08E7  3402               	retlw	2
  8718  08E8  348E               	retlw	142
  8719  08E9  3402               	retlw	2
  8720  08EA  3482               	retlw	130
  8721  08EB  3402               	retlw	2
  8722  08EC  3475               	retlw	117
  8723  08ED  3402               	retlw	2
  8724  08EE  3468               	retlw	104
  8725  08EF  3402               	retlw	2
  8726  08F0  345B               	retlw	91
  8727  08F1  3402               	retlw	2
  8728  08F2  344E               	retlw	78
  8729  08F3  3402               	retlw	2
  8730  08F4  3441               	retlw	65
  8731  08F5  3402               	retlw	2
  8732  08F6  3433               	retlw	51
  8733  08F7  3402               	retlw	2
  8734  08F8  3425               	retlw	37
  8735  08F9  3402               	retlw	2
  8736  08FA  3417               	retlw	23
  8737  08FB  3402               	retlw	2
  8738  08FC  3409               	retlw	9
  8739  08FD  3402               	retlw	2
  8740  08FE  34FB               	retlw	251
  8741  08FF  3401               	retlw	1
  8742  0900  34EC               	retlw	236
  8743  0901  3401               	retlw	1
  8744  0902  34DD               	retlw	221
  8745  0903  3401               	retlw	1
  8746  0904  34CE               	retlw	206
  8747  0905  3401               	retlw	1
  8748  0906  34BF               	retlw	191
  8749  0907  3401               	retlw	1
  8750  0908  34B0               	retlw	176
  8751  0909  3401               	retlw	1
  8752  090A  34A0               	retlw	160
  8753  090B  3401               	retlw	1
  8754  090C  3490               	retlw	144
  8755  090D  3401               	retlw	1
  8756  090E  3480               	retlw	128
  8757  090F  3401               	retlw	1
  8758  0910  3470               	retlw	112
  8759  0911  3401               	retlw	1
  8760  0912  345F               	retlw	95
  8761  0913  3401               	retlw	1
  8762  0914  344F               	retlw	79
  8763  0915  3401               	retlw	1
  8764  0916  343E               	retlw	62
  8765  0917  3401               	retlw	1
  8766  0918  342D               	retlw	45
  8767  0919  3401               	retlw	1
  8768  091A  341C               	retlw	28
  8769  091B  3401               	retlw	1
  8770  091C  340A               	retlw	10
  8771  091D  3401               	retlw	1
  8772  091E  34F8               	retlw	248
  8773  091F  3400               	retlw	0
  8774  0920  34E7               	retlw	231
  8775  0921  3400               	retlw	0
  8776  0922  34D4               	retlw	212
  8777  0923  3400               	retlw	0
  8778  0924  34C2               	retlw	194
  8779  0925  3400               	retlw	0
  8780  0926  34B0               	retlw	176
  8781  0927  3400               	retlw	0
  8782  0928  349D               	retlw	157
  8783  0929  3400               	retlw	0
  8784  092A  348A               	retlw	138
  8785  092B  3400               	retlw	0
  8786  092C  3477               	retlw	119
  8787  092D  3400               	retlw	0
  8788  092E  3464               	retlw	100
  8789  092F  3400               	retlw	0
  8790  0930  3450               	retlw	80
  8791  0931  3400               	retlw	0
  8792  0932  343C               	retlw	60
  8793  0933  3400               	retlw	0
  8794  0934  3428               	retlw	40
  8795  0935  3400               	retlw	0
  8796  0936  3414               	retlw	20
  8797  0937  3400               	retlw	0
  8798  0938  3400               	retlw	0
  8799  0939  3400               	retlw	0
  8800  093A  34FE               	retlw	254
  8801  093B  3403               	retlw	3
  8802  093C  34FE               	retlw	254
  8803  093D  3403               	retlw	3
  8804  093E  34FE               	retlw	254
  8805  093F  3403               	retlw	3
  8806  0940  34FD               	retlw	253
  8807  0941  3403               	retlw	3
  8808  0942  34FD               	retlw	253
  8809  0943  3403               	retlw	3
  8810  0944  34FC               	retlw	252
  8811  0945  3403               	retlw	3
  8812  0946  34FB               	retlw	251
  8813  0947  3403               	retlw	3
  8814  0948  34FA               	retlw	250
  8815  0949  3403               	retlw	3
  8816  094A  34F9               	retlw	249
  8817  094B  3403               	retlw	3
  8818  094C  34F8               	retlw	248
  8819  094D  3403               	retlw	3
  8820  094E  34F6               	retlw	246
  8821  094F  3403               	retlw	3
  8822  0950  34F4               	retlw	244
  8823  0951  3403               	retlw	3
  8824  0952  34F3               	retlw	243
  8825  0953  3403               	retlw	3
  8826  0954  34F0               	retlw	240
  8827  0955  3403               	retlw	3
  8828  0956  34EE               	retlw	238
  8829  0957  3403               	retlw	3
  8830  0958  34EC               	retlw	236
  8831  0959  3403               	retlw	3
  8832  095A  34E9               	retlw	233
  8833  095B  3403               	retlw	3
  8834  095C  34E7               	retlw	231
  8835  095D  3403               	retlw	3
  8836  095E  34E4               	retlw	228
  8837  095F  3403               	retlw	3
  8838  0960  34E0               	retlw	224
  8839  0961  3403               	retlw	3
  8840  0962  34DD               	retlw	221
  8841  0963  3403               	retlw	3
  8842  0964  34D9               	retlw	217
  8843  0965  3403               	retlw	3
  8844  0966  34D6               	retlw	214
  8845  0967  3403               	retlw	3
  8846  0968  34D2               	retlw	210
  8847  0969  3403               	retlw	3
  8848  096A  34CE               	retlw	206
  8849  096B  3403               	retlw	3
  8850  096C  34C9               	retlw	201
  8851  096D  3403               	retlw	3
  8852  096E  34C5               	retlw	197
  8853  096F  3403               	retlw	3
  8854  0970  34C0               	retlw	192
  8855  0971  3403               	retlw	3
  8856  0972  34BB               	retlw	187
  8857  0973  3403               	retlw	3
  8858  0974  34B6               	retlw	182
  8859  0975  3403               	retlw	3
  8860  0976  34B0               	retlw	176
  8861  0977  3403               	retlw	3
  8862  0978  34AB               	retlw	171
  8863  0979  3403               	retlw	3
  8864  097A  34A5               	retlw	165
  8865  097B  3403               	retlw	3
  8866  097C  349F               	retlw	159
  8867  097D  3403               	retlw	3
  8868  097E  3499               	retlw	153
  8869  097F  3403               	retlw	3
  8870  0980  3492               	retlw	146
  8871  0981  3403               	retlw	3
  8872  0982  348B               	retlw	139
  8873  0983  3403               	retlw	3
  8874  0984  3484               	retlw	132
  8875  0985  3403               	retlw	3
  8876  0986  347D               	retlw	125
  8877  0987  3403               	retlw	3
  8878  0988  3476               	retlw	118
  8879  0989  3403               	retlw	3
  8880  098A  346E               	retlw	110
  8881  098B  3403               	retlw	3
  8882  098C  3466               	retlw	102
  8883  098D  3403               	retlw	3
  8884  098E  345E               	retlw	94
  8885  098F  3403               	retlw	3
  8886  0990  3456               	retlw	86
  8887  0991  3403               	retlw	3
  8888  0992  344E               	retlw	78
  8889  0993  3403               	retlw	3
  8890  0994  3445               	retlw	69
  8891  0995  3403               	retlw	3
  8892  0996  343C               	retlw	60
  8893  0997  3403               	retlw	3
  8894  0998  3433               	retlw	51
  8895  0999  3403               	retlw	3
  8896  099A  3429               	retlw	41
  8897  099B  3403               	retlw	3
  8898  099C  3420               	retlw	32
  8899  099D  3403               	retlw	3
  8900  099E  3416               	retlw	22
  8901  099F  3403               	retlw	3
  8902  09A0  340C               	retlw	12
  8903  09A1  3403               	retlw	3
  8904  09A2  3401               	retlw	1
  8905  09A3  3403               	retlw	3
  8906  09A4  34F7               	retlw	247
  8907  09A5  3402               	retlw	2
  8908  09A6  34EC               	retlw	236
  8909  09A7  3402               	retlw	2
  8910  09A8  34E1               	retlw	225
  8911  09A9  3402               	retlw	2
  8912  09AA  34D5               	retlw	213
  8913  09AB  3402               	retlw	2
  8914  09AC  34CA               	retlw	202
  8915  09AD  3402               	retlw	2
  8916  09AE  34BE               	retlw	190
  8917  09AF  3402               	retlw	2
  8918  09B0  34B2               	retlw	178
  8919  09B1  3402               	retlw	2
  8920  09B2  34A6               	retlw	166
  8921  09B3  3402               	retlw	2
  8922  09B4  3499               	retlw	153
  8923  09B5  3402               	retlw	2
  8924  09B6  348C               	retlw	140
  8925  09B7  3402               	retlw	2
  8926  09B8  347F               	retlw	127
  8927  09B9  3402               	retlw	2
  8928  09BA  3472               	retlw	114
  8929  09BB  3402               	retlw	2
  8930  09BC  3464               	retlw	100
  8931  09BD  3402               	retlw	2
  8932  09BE  3457               	retlw	87
  8933  09BF  3402               	retlw	2
  8934  09C0  3449               	retlw	73
  8935  09C1  3402               	retlw	2
  8936  09C2  343A               	retlw	58
  8937  09C3  3402               	retlw	2
  8938  09C4  342C               	retlw	44
  8939  09C5  3402               	retlw	2
  8940  09C6  341D               	retlw	29
  8941  09C7  3402               	retlw	2
  8942  09C8  340E               	retlw	14
  8943  09C9  3402               	retlw	2
  8944  09CA  34FF               	retlw	255
  8945  09CB  3401               	retlw	1
  8946  09CC  34EF               	retlw	239
  8947  09CD  3401               	retlw	1
  8948  09CE  34DF               	retlw	223
  8949  09CF  3401               	retlw	1
  8950  09D0  34CF               	retlw	207
  8951  09D1  3401               	retlw	1
  8952  09D2  34BF               	retlw	191
  8953  09D3  3401               	retlw	1
  8954  09D4  34AE               	retlw	174
  8955  09D5  3401               	retlw	1
  8956  09D6  349E               	retlw	158
  8957  09D7  3401               	retlw	1
  8958  09D8  348C               	retlw	140
  8959  09D9  3401               	retlw	1
  8960  09DA  347B               	retlw	123
  8961  09DB  3401               	retlw	1
  8962  09DC  346A               	retlw	106
  8963  09DD  3401               	retlw	1
  8964  09DE  3458               	retlw	88
  8965  09DF  3401               	retlw	1
  8966  09E0  3446               	retlw	70
  8967  09E1  3401               	retlw	1
  8968  09E2  3433               	retlw	51
  8969  09E3  3401               	retlw	1
  8970  09E4  3421               	retlw	33
  8971  09E5  3401               	retlw	1
  8972  09E6  340E               	retlw	14
  8973  09E7  3401               	retlw	1
  8974  09E8  34FB               	retlw	251
  8975  09E9  3400               	retlw	0
  8976  09EA  34E7               	retlw	231
  8977  09EB  3400               	retlw	0
  8978  09EC  34D3               	retlw	211
  8979  09ED  3400               	retlw	0
  8980  09EE  34BF               	retlw	191
  8981  09EF  3400               	retlw	0
  8982  09F0  34AB               	retlw	171
  8983  09F1  3400               	retlw	0
  8984  09F2  3497               	retlw	151
  8985  09F3  3400               	retlw	0
  8986  09F4  3482               	retlw	130
  8987  09F5  3400               	retlw	0
  8988  09F6  346D               	retlw	109
  8989  09F7  3400               	retlw	0
  8990  09F8  3458               	retlw	88
  8991  09F9  3400               	retlw	0
  8992  09FA  3442               	retlw	66
  8993  09FB  3400               	retlw	0
  8994  09FC  342C               	retlw	44
  8995  09FD  3400               	retlw	0
  8996  09FE  3416               	retlw	22
  8997  09FF  3400               	retlw	0
  8998  0A00  3400               	retlw	0
  8999  0A01  3400               	retlw	0
  9000  0A02  34FE               	retlw	254
  9001  0A03  3403               	retlw	3
  9002  0A04  34FE               	retlw	254
  9003  0A05  3403               	retlw	3
  9004  0A06  34FE               	retlw	254
  9005  0A07  3403               	retlw	3
  9006  0A08  34FE               	retlw	254
  9007  0A09  3403               	retlw	3
  9008  0A0A  34FD               	retlw	253
  9009  0A0B  3403               	retlw	3
  9010  0A0C  34FD               	retlw	253
  9011  0A0D  3403               	retlw	3
  9012  0A0E  34FC               	retlw	252
  9013  0A0F  3403               	retlw	3
  9014  0A10  34FC               	retlw	252
  9015  0A11  3403               	retlw	3
  9016  0A12  34FB               	retlw	251
  9017  0A13  3403               	retlw	3
  9018  0A14  34FA               	retlw	250
  9019  0A15  3403               	retlw	3
  9020  0A16  34F9               	retlw	249
  9021  0A17  3403               	retlw	3
  9022  0A18  34F8               	retlw	248
  9023  0A19  3403               	retlw	3
  9024  0A1A  34F6               	retlw	246
  9025  0A1B  3403               	retlw	3
  9026  0A1C  34F5               	retlw	245
  9027  0A1D  3403               	retlw	3
  9028  0A1E  34F3               	retlw	243
  9029  0A1F  3403               	retlw	3
  9030  0A20  34F1               	retlw	241
  9031  0A21  3403               	retlw	3
  9032  0A22  34EF               	retlw	239
  9033  0A23  3403               	retlw	3
  9034  0A24  34ED               	retlw	237
  9035  0A25  3403               	retlw	3
  9036  0A26  34EB               	retlw	235
  9037  0A27  3403               	retlw	3
  9038  0A28  34E9               	retlw	233
  9039  0A29  3403               	retlw	3
  9040  0A2A  34E6               	retlw	230
  9041  0A2B  3403               	retlw	3
  9042  0A2C  34E3               	retlw	227
  9043  0A2D  3403               	retlw	3
  9044  0A2E  34E0               	retlw	224
  9045  0A2F  3403               	retlw	3
  9046  0A30  34DD               	retlw	221
  9047  0A31  3403               	retlw	3
  9048  0A32  34D9               	retlw	217
  9049  0A33  3403               	retlw	3
  9050  0A34  34D6               	retlw	214
  9051  0A35  3403               	retlw	3
  9052  0A36  34D2               	retlw	210
  9053  0A37  3403               	retlw	3
  9054  0A38  34CE               	retlw	206
  9055  0A39  3403               	retlw	3
  9056  0A3A  34CA               	retlw	202
  9057  0A3B  3403               	retlw	3
  9058  0A3C  34C5               	retlw	197
  9059  0A3D  3403               	retlw	3
  9060  0A3E  34C1               	retlw	193
  9061  0A3F  3403               	retlw	3
  9062  0A40  34BC               	retlw	188
  9063  0A41  3403               	retlw	3
  9064  0A42  34B7               	retlw	183
  9065  0A43  3403               	retlw	3
  9066  0A44  34B1               	retlw	177
  9067  0A45  3403               	retlw	3
  9068  0A46  34AC               	retlw	172
  9069  0A47  3403               	retlw	3
  9070  0A48  34A6               	retlw	166
  9071  0A49  3403               	retlw	3
  9072  0A4A  34A0               	retlw	160
  9073  0A4B  3403               	retlw	3
  9074  0A4C  349A               	retlw	154
  9075  0A4D  3403               	retlw	3
  9076  0A4E  3493               	retlw	147
  9077  0A4F  3403               	retlw	3
  9078  0A50  348D               	retlw	141
  9079  0A51  3403               	retlw	3
  9080  0A52  3486               	retlw	134
  9081  0A53  3403               	retlw	3
  9082  0A54  347F               	retlw	127
  9083  0A55  3403               	retlw	3
  9084  0A56  3477               	retlw	119
  9085  0A57  3403               	retlw	3
  9086  0A58  3470               	retlw	112
  9087  0A59  3403               	retlw	3
  9088  0A5A  3468               	retlw	104
  9089  0A5B  3403               	retlw	3
  9090  0A5C  345F               	retlw	95
  9091  0A5D  3403               	retlw	3
  9092  0A5E  3457               	retlw	87
  9093  0A5F  3403               	retlw	3
  9094  0A60  344E               	retlw	78
  9095  0A61  3403               	retlw	3
  9096  0A62  3446               	retlw	70
  9097  0A63  3403               	retlw	3
  9098  0A64  343C               	retlw	60
  9099  0A65  3403               	retlw	3
  9100  0A66  3433               	retlw	51
  9101  0A67  3403               	retlw	3
  9102  0A68  3429               	retlw	41
  9103  0A69  3403               	retlw	3
  9104  0A6A  341F               	retlw	31
  9105  0A6B  3403               	retlw	3
  9106  0A6C  3415               	retlw	21
  9107  0A6D  3403               	retlw	3
  9108  0A6E  340B               	retlw	11
  9109  0A6F  3403               	retlw	3
  9110  0A70  3400               	retlw	0
  9111  0A71  3403               	retlw	3
  9112  0A72  34F5               	retlw	245
  9113  0A73  3402               	retlw	2
  9114  0A74  34EA               	retlw	234
  9115  0A75  3402               	retlw	2
  9116  0A76  34DE               	retlw	222
  9117  0A77  3402               	retlw	2
  9118  0A78  34D2               	retlw	210
  9119  0A79  3402               	retlw	2
  9120  0A7A  34C6               	retlw	198
  9121  0A7B  3402               	retlw	2
  9122  0A7C  34BA               	retlw	186
  9123  0A7D  3402               	retlw	2
  9124  0A7E  34AD               	retlw	173
  9125  0A7F  3402               	retlw	2
  9126  0A80  34A0               	retlw	160
  9127  0A81  3402               	retlw	2
  9128  0A82  3493               	retlw	147
  9129  0A83  3402               	retlw	2
  9130  0A84  3485               	retlw	133
  9131  0A85  3402               	retlw	2
  9132  0A86  3477               	retlw	119
  9133  0A87  3402               	retlw	2
  9134  0A88  3469               	retlw	105
  9135  0A89  3402               	retlw	2
  9136  0A8A  345B               	retlw	91
  9137  0A8B  3402               	retlw	2
  9138  0A8C  344C               	retlw	76
  9139  0A8D  3402               	retlw	2
  9140  0A8E  343D               	retlw	61
  9141  0A8F  3402               	retlw	2
  9142  0A90  342D               	retlw	45
  9143  0A91  3402               	retlw	2
  9144  0A92  341E               	retlw	30
  9145  0A93  3402               	retlw	2
  9146  0A94  340E               	retlw	14
  9147  0A95  3402               	retlw	2
  9148  0A96  34FE               	retlw	254
  9149  0A97  3401               	retlw	1
  9150  0A98  34ED               	retlw	237
  9151  0A99  3401               	retlw	1
  9152  0A9A  34DC               	retlw	220
  9153  0A9B  3401               	retlw	1
  9154  0A9C  34CB               	retlw	203
  9155  0A9D  3401               	retlw	1
  9156  0A9E  34BA               	retlw	186
  9157  0A9F  3401               	retlw	1
  9158  0AA0  34A8               	retlw	168
  9159  0AA1  3401               	retlw	1
  9160  0AA2  3496               	retlw	150
  9161  0AA3  3401               	retlw	1
  9162  0AA4  3483               	retlw	131
  9163  0AA5  3401               	retlw	1
  9164  0AA6  3471               	retlw	113
  9165  0AA7  3401               	retlw	1
  9166  0AA8  345D               	retlw	93
  9167  0AA9  3401               	retlw	1
  9168  0AAA  344A               	retlw	74
  9169  0AAB  3401               	retlw	1
  9170  0AAC  3436               	retlw	54
  9171  0AAD  3401               	retlw	1
  9172  0AAE  3422               	retlw	34
  9173  0AAF  3401               	retlw	1
  9174  0AB0  340E               	retlw	14
  9175  0AB1  3401               	retlw	1
  9176  0AB2  34F9               	retlw	249
  9177  0AB3  3400               	retlw	0
  9178  0AB4  34E4               	retlw	228
  9179  0AB5  3400               	retlw	0
  9180  0AB6  34CF               	retlw	207
  9181  0AB7  3400               	retlw	0
  9182  0AB8  34B9               	retlw	185
  9183  0AB9  3400               	retlw	0
  9184  0ABA  34A3               	retlw	163
  9185  0ABB  3400               	retlw	0
  9186  0ABC  348D               	retlw	141
  9187  0ABD  3400               	retlw	0
  9188  0ABE  3476               	retlw	118
  9189  0ABF  3400               	retlw	0
  9190  0AC0  345F               	retlw	95
  9191  0AC1  3400               	retlw	0
  9192  0AC2  3448               	retlw	72
  9193  0AC3  3400               	retlw	0
  9194  0AC4  3430               	retlw	48
  9195  0AC5  3400               	retlw	0
  9196  0AC6  3418               	retlw	24
  9197  0AC7  3400               	retlw	0
  9198  0AC8  3400               	retlw	0
  9199  0AC9  3400               	retlw	0
  9200  0ACA  34FE               	retlw	254
  9201  0ACB  3403               	retlw	3
  9202  0ACC  34FE               	retlw	254
  9203  0ACD  3403               	retlw	3
  9204  0ACE  34FE               	retlw	254
  9205  0ACF  3403               	retlw	3
  9206  0AD0  34FE               	retlw	254
  9207  0AD1  3403               	retlw	3
  9208  0AD2  34FE               	retlw	254
  9209  0AD3  3403               	retlw	3
  9210  0AD4  34FD               	retlw	253
  9211  0AD5  3403               	retlw	3
  9212  0AD6  34FD               	retlw	253
  9213  0AD7  3403               	retlw	3
  9214  0AD8  34FD               	retlw	253
  9215  0AD9  3403               	retlw	3
  9216  0ADA  34FC               	retlw	252
  9217  0ADB  3403               	retlw	3
  9218  0ADC  34FB               	retlw	251
  9219  0ADD  3403               	retlw	3
  9220  0ADE  34FB               	retlw	251
  9221  0ADF  3403               	retlw	3
  9222  0AE0  34FA               	retlw	250
  9223  0AE1  3403               	retlw	3
  9224  0AE2  34F9               	retlw	249
  9225  0AE3  3403               	retlw	3
  9226  0AE4  34F8               	retlw	248
  9227  0AE5  3403               	retlw	3
  9228  0AE6  34F7               	retlw	247
  9229  0AE7  3403               	retlw	3
  9230  0AE8  34F5               	retlw	245
  9231  0AE9  3403               	retlw	3
  9232  0AEA  34F4               	retlw	244
  9233  0AEB  3403               	retlw	3
  9234  0AEC  34F2               	retlw	242
  9235  0AED  3403               	retlw	3
  9236  0AEE  34F0               	retlw	240
  9237  0AEF  3403               	retlw	3
  9238  0AF0  34EE               	retlw	238
  9239  0AF1  3403               	retlw	3
  9240  0AF2  34EC               	retlw	236
  9241  0AF3  3403               	retlw	3
  9242  0AF4  34EA               	retlw	234
  9243  0AF5  3403               	retlw	3
  9244  0AF6  34E8               	retlw	232
  9245  0AF7  3403               	retlw	3
  9246  0AF8  34E5               	retlw	229
  9247  0AF9  3403               	retlw	3
  9248  0AFA  34E2               	retlw	226
  9249  0AFB  3403               	retlw	3
  9250  0AFC  34DF               	retlw	223
  9251  0AFD  3403               	retlw	3
  9252  0AFE  34DC               	retlw	220
  9253  0AFF  3403               	retlw	3
  9254  0B00  34D9               	retlw	217
  9255  0B01  3403               	retlw	3
  9256  0B02  34D5               	retlw	213
  9257  0B03  3403               	retlw	3
  9258  0B04  34D1               	retlw	209
  9259  0B05  3403               	retlw	3
  9260  0B06  34CD               	retlw	205
  9261  0B07  3403               	retlw	3
  9262  0B08  34C9               	retlw	201
  9263  0B09  3403               	retlw	3
  9264  0B0A  34C5               	retlw	197
  9265  0B0B  3403               	retlw	3
  9266  0B0C  34C0               	retlw	192
  9267  0B0D  3403               	retlw	3
  9268  0B0E  34BB               	retlw	187
  9269  0B0F  3403               	retlw	3
  9270  0B10  34B6               	retlw	182
  9271  0B11  3403               	retlw	3
  9272  0B12  34B1               	retlw	177
  9273  0B13  3403               	retlw	3
  9274  0B14  34AB               	retlw	171
  9275  0B15  3403               	retlw	3
  9276  0B16  34A6               	retlw	166
  9277  0B17  3403               	retlw	3
  9278  0B18  34A0               	retlw	160
  9279  0B19  3403               	retlw	3
  9280  0B1A  3499               	retlw	153
  9281  0B1B  3403               	retlw	3
  9282  0B1C  3493               	retlw	147
  9283  0B1D  3403               	retlw	3
  9284  0B1E  348C               	retlw	140
  9285  0B1F  3403               	retlw	3
  9286  0B20  3485               	retlw	133
  9287  0B21  3403               	retlw	3
  9288  0B22  347E               	retlw	126
  9289  0B23  3403               	retlw	3
  9290  0B24  3476               	retlw	118
  9291  0B25  3403               	retlw	3
  9292  0B26  346E               	retlw	110
  9293  0B27  3403               	retlw	3
  9294  0B28  3466               	retlw	102
  9295  0B29  3403               	retlw	3
  9296  0B2A  345E               	retlw	94
  9297  0B2B  3403               	retlw	3
  9298  0B2C  3455               	retlw	85
  9299  0B2D  3403               	retlw	3
  9300  0B2E  344D               	retlw	77
  9301  0B2F  3403               	retlw	3
  9302  0B30  3443               	retlw	67
  9303  0B31  3403               	retlw	3
  9304  0B32  343A               	retlw	58
  9305  0B33  3403               	retlw	3
  9306  0B34  3430               	retlw	48
  9307  0B35  3403               	retlw	3
  9308  0B36  3426               	retlw	38
  9309  0B37  3403               	retlw	3
  9310  0B38  341C               	retlw	28
  9311  0B39  3403               	retlw	3
  9312  0B3A  3411               	retlw	17
  9313  0B3B  3403               	retlw	3
  9314  0B3C  3406               	retlw	6
  9315  0B3D  3403               	retlw	3
  9316  0B3E  34FB               	retlw	251
  9317  0B3F  3402               	retlw	2
  9318  0B40  34EF               	retlw	239
  9319  0B41  3402               	retlw	2
  9320  0B42  34E3               	retlw	227
  9321  0B43  3402               	retlw	2
  9322  0B44  34D7               	retlw	215
  9323  0B45  3402               	retlw	2
  9324  0B46  34CB               	retlw	203
  9325  0B47  3402               	retlw	2
  9326  0B48  34BE               	retlw	190
  9327  0B49  3402               	retlw	2
  9328  0B4A  34B1               	retlw	177
  9329  0B4B  3402               	retlw	2
  9330  0B4C  34A3               	retlw	163
  9331  0B4D  3402               	retlw	2
  9332  0B4E  3495               	retlw	149
  9333  0B4F  3402               	retlw	2
  9334  0B50  3487               	retlw	135
  9335  0B51  3402               	retlw	2
  9336  0B52  3479               	retlw	121
  9337  0B53  3402               	retlw	2
  9338  0B54  346A               	retlw	106
  9339  0B55  3402               	retlw	2
  9340  0B56  345B               	retlw	91
  9341  0B57  3402               	retlw	2
  9342  0B58  344B               	retlw	75
  9343  0B59  3402               	retlw	2
  9344  0B5A  343B               	retlw	59
  9345  0B5B  3402               	retlw	2
  9346  0B5C  342B               	retlw	43
  9347  0B5D  3402               	retlw	2
  9348  0B5E  341A               	retlw	26
  9349  0B5F  3402               	retlw	2
  9350  0B60  3409               	retlw	9
  9351  0B61  3402               	retlw	2
  9352  0B62  34F8               	retlw	248
  9353  0B63  3401               	retlw	1
  9354  0B64  34E6               	retlw	230
  9355  0B65  3401               	retlw	1
  9356  0B66  34D4               	retlw	212
  9357  0B67  3401               	retlw	1
  9358  0B68  34C2               	retlw	194
  9359  0B69  3401               	retlw	1
  9360  0B6A  34AF               	retlw	175
  9361  0B6B  3401               	retlw	1
  9362  0B6C  349C               	retlw	156
  9363  0B6D  3401               	retlw	1
  9364  0B6E  3488               	retlw	136
  9365  0B6F  3401               	retlw	1
  9366  0B70  3475               	retlw	117
  9367  0B71  3401               	retlw	1
  9368  0B72  3460               	retlw	96
  9369  0B73  3401               	retlw	1
  9370  0B74  344C               	retlw	76
  9371  0B75  3401               	retlw	1
  9372  0B76  3436               	retlw	54
  9373  0B77  3401               	retlw	1
  9374  0B78  3421               	retlw	33
  9375  0B79  3401               	retlw	1
  9376  0B7A  340B               	retlw	11
  9377  0B7B  3401               	retlw	1
  9378  0B7C  34F5               	retlw	245
  9379  0B7D  3400               	retlw	0
  9380  0B7E  34DE               	retlw	222
  9381  0B7F  3400               	retlw	0
  9382  0B80  34C7               	retlw	199
  9383  0B81  3400               	retlw	0
  9384  0B82  34B0               	retlw	176
  9385  0B83  3400               	retlw	0
  9386  0B84  3498               	retlw	152
  9387  0B85  3400               	retlw	0
  9388  0B86  3480               	retlw	128
  9389  0B87  3400               	retlw	0
  9390  0B88  3467               	retlw	103
  9391  0B89  3400               	retlw	0
  9392  0B8A  344E               	retlw	78
  9393  0B8B  3400               	retlw	0
  9394  0B8C  3434               	retlw	52
  9395  0B8D  3400               	retlw	0
  9396  0B8E  341A               	retlw	26
  9397  0B8F  3400               	retlw	0
  9398  0B90  3400               	retlw	0
  9399  0B91  3400               	retlw	0
  9400  0B92  34FE               	retlw	254
  9401  0B93  3403               	retlw	3
  9402  0B94  34FE               	retlw	254
  9403  0B95  3403               	retlw	3
  9404  0B96  34FE               	retlw	254
  9405  0B97  3403               	retlw	3
  9406  0B98  34FE               	retlw	254
  9407  0B99  3403               	retlw	3
  9408  0B9A  34FE               	retlw	254
  9409  0B9B  3403               	retlw	3
  9410  0B9C  34FE               	retlw	254
  9411  0B9D  3403               	retlw	3
  9412  0B9E  34FD               	retlw	253
  9413  0B9F  3403               	retlw	3
  9414  0BA0  34FD               	retlw	253
  9415  0BA1  3403               	retlw	3
  9416  0BA2  34FD               	retlw	253
  9417  0BA3  3403               	retlw	3
  9418  0BA4  34FC               	retlw	252
  9419  0BA5  3403               	retlw	3
  9420  0BA6  34FC               	retlw	252
  9421  0BA7  3403               	retlw	3
  9422  0BA8  34FB               	retlw	251
  9423  0BA9  3403               	retlw	3
  9424  0BAA  34FB               	retlw	251
  9425  0BAB  3403               	retlw	3
  9426  0BAC  34FA               	retlw	250
  9427  0BAD  3403               	retlw	3
  9428  0BAE  34F9               	retlw	249
  9429  0BAF  3403               	retlw	3
  9430  0BB0  34F8               	retlw	248
  9431  0BB1  3403               	retlw	3
  9432  0BB2  34F7               	retlw	247
  9433  0BB3  3403               	retlw	3
  9434  0BB4  34F6               	retlw	246
  9435  0BB5  3403               	retlw	3
  9436  0BB6  34F4               	retlw	244
  9437  0BB7  3403               	retlw	3
  9438  0BB8  34F3               	retlw	243
  9439  0BB9  3403               	retlw	3
  9440  0BBA  34F1               	retlw	241
  9441  0BBB  3403               	retlw	3
  9442  0BBC  34EF               	retlw	239
  9443  0BBD  3403               	retlw	3
  9444  0BBE  34ED               	retlw	237
  9445  0BBF  3403               	retlw	3
  9446  0BC0  34EB               	retlw	235
  9447  0BC1  3403               	retlw	3
  9448  0BC2  34E9               	retlw	233
  9449  0BC3  3403               	retlw	3
  9450  0BC4  34E6               	retlw	230
  9451  0BC5  3403               	retlw	3
  9452  0BC6  34E4               	retlw	228
  9453  0BC7  3403               	retlw	3
  9454  0BC8  34E1               	retlw	225
  9455  0BC9  3403               	retlw	3
  9456  0BCA  34DE               	retlw	222
  9457  0BCB  3403               	retlw	3
  9458  0BCC  34DB               	retlw	219
  9459  0BCD  3403               	retlw	3
  9460  0BCE  34D8               	retlw	216
  9461  0BCF  3403               	retlw	3
  9462  0BD0  34D4               	retlw	212
  9463  0BD1  3403               	retlw	3
  9464  0BD2  34D0               	retlw	208
  9465  0BD3  3403               	retlw	3
  9466  0BD4  34CC               	retlw	204
  9467  0BD5  3403               	retlw	3
  9468  0BD6  34C8               	retlw	200
  9469  0BD7  3403               	retlw	3
  9470  0BD8  34C4               	retlw	196
  9471  0BD9  3403               	retlw	3
  9472  0BDA  34BF               	retlw	191
  9473  0BDB  3403               	retlw	3
  9474  0BDC  34BA               	retlw	186
  9475  0BDD  3403               	retlw	3
  9476  0BDE  34B5               	retlw	181
  9477  0BDF  3403               	retlw	3
  9478  0BE0  34AF               	retlw	175
  9479  0BE1  3403               	retlw	3
  9480  0BE2  34AA               	retlw	170
  9481  0BE3  3403               	retlw	3
  9482  0BE4  34A4               	retlw	164
  9483  0BE5  3403               	retlw	3
  9484  0BE6  349E               	retlw	158
  9485  0BE7  3403               	retlw	3
  9486  0BE8  3497               	retlw	151
  9487  0BE9  3403               	retlw	3
  9488  0BEA  3491               	retlw	145
  9489  0BEB  3403               	retlw	3
  9490  0BEC  348A               	retlw	138
  9491  0BED  3403               	retlw	3
  9492  0BEE  3483               	retlw	131
  9493  0BEF  3403               	retlw	3
  9494  0BF0  347B               	retlw	123
  9495  0BF1  3403               	retlw	3
  9496  0BF2  3473               	retlw	115
  9497  0BF3  3403               	retlw	3
  9498  0BF4  346B               	retlw	107
  9499  0BF5  3403               	retlw	3
  9500  0BF6  3463               	retlw	99
  9501  0BF7  3403               	retlw	3
  9502  0BF8  345A               	retlw	90
  9503  0BF9  3403               	retlw	3
  9504  0BFA  3451               	retlw	81
  9505  0BFB  3403               	retlw	3
  9506  0BFC  3448               	retlw	72
  9507  0BFD  3403               	retlw	3
  9508  0BFE  343E               	retlw	62
  9509  0BFF  3403               	retlw	3
  9510  0C00  3434               	retlw	52
  9511  0C01  3403               	retlw	3
  9512  0C02  342A               	retlw	42
  9513  0C03  3403               	retlw	3
  9514  0C04  3420               	retlw	32
  9515  0C05  3403               	retlw	3
  9516  0C06  3415               	retlw	21
  9517  0C07  3403               	retlw	3
  9518  0C08  340A               	retlw	10
  9519  0C09  3403               	retlw	3
  9520  0C0A  34FE               	retlw	254
  9521  0C0B  3402               	retlw	2
  9522  0C0C  34F2               	retlw	242
  9523  0C0D  3402               	retlw	2
  9524  0C0E  34E6               	retlw	230
  9525  0C0F  3402               	retlw	2
  9526  0C10  34D9               	retlw	217
  9527  0C11  3402               	retlw	2
  9528  0C12  34CC               	retlw	204
  9529  0C13  3402               	retlw	2
  9530  0C14  34BF               	retlw	191
  9531  0C15  3402               	retlw	2
  9532  0C16  34B1               	retlw	177
  9533  0C17  3402               	retlw	2
  9534  0C18  34A3               	retlw	163
  9535  0C19  3402               	retlw	2
  9536  0C1A  3494               	retlw	148
  9537  0C1B  3402               	retlw	2
  9538  0C1C  3486               	retlw	134
  9539  0C1D  3402               	retlw	2
  9540  0C1E  3476               	retlw	118
  9541  0C1F  3402               	retlw	2
  9542  0C20  3467               	retlw	103
  9543  0C21  3402               	retlw	2
  9544  0C22  3457               	retlw	87
  9545  0C23  3402               	retlw	2
  9546  0C24  3446               	retlw	70
  9547  0C25  3402               	retlw	2
  9548  0C26  3435               	retlw	53
  9549  0C27  3402               	retlw	2
  9550  0C28  3424               	retlw	36
  9551  0C29  3402               	retlw	2
  9552  0C2A  3412               	retlw	18
  9553  0C2B  3402               	retlw	2
  9554  0C2C  3400               	retlw	0
  9555  0C2D  3402               	retlw	2
  9556  0C2E  34EE               	retlw	238
  9557  0C2F  3401               	retlw	1
  9558  0C30  34DB               	retlw	219
  9559  0C31  3401               	retlw	1
  9560  0C32  34C7               	retlw	199
  9561  0C33  3401               	retlw	1
  9562  0C34  34B4               	retlw	180
  9563  0C35  3401               	retlw	1
  9564  0C36  349F               	retlw	159
  9565  0C37  3401               	retlw	1
  9566  0C38  348B               	retlw	139
  9567  0C39  3401               	retlw	1
  9568  0C3A  3476               	retlw	118
  9569  0C3B  3401               	retlw	1
  9570  0C3C  3460               	retlw	96
  9571  0C3D  3401               	retlw	1
  9572  0C3E  344A               	retlw	74
  9573  0C3F  3401               	retlw	1
  9574  0C40  3433               	retlw	51
  9575  0C41  3401               	retlw	1
  9576  0C42  341D               	retlw	29
  9577  0C43  3401               	retlw	1
  9578  0C44  3405               	retlw	5
  9579  0C45  3401               	retlw	1
  9580  0C46  34ED               	retlw	237
  9581  0C47  3400               	retlw	0
  9582  0C48  34D5               	retlw	213
  9583  0C49  3400               	retlw	0
  9584  0C4A  34BC               	retlw	188
  9585  0C4B  3400               	retlw	0
  9586  0C4C  34A3               	retlw	163
  9587  0C4D  3400               	retlw	0
  9588  0C4E  3489               	retlw	137
  9589  0C4F  3400               	retlw	0
  9590  0C50  346E               	retlw	110
  9591  0C51  3400               	retlw	0
  9592  0C52  3454               	retlw	84
  9593  0C53  3400               	retlw	0
  9594  0C54  3438               	retlw	56
  9595  0C55  3400               	retlw	0
  9596  0C56  341C               	retlw	28
  9597  0C57  3400               	retlw	0
  9598  0C58  3400               	retlw	0
  9599  0C59  3400               	retlw	0
  9600  0C5A                     __end_of_gamma_table:	
  9601  0003                     _STATUSbits	set	3
  9602  000D                     _PORTBbits	set	13
  9603  000C                     _PORTAbits	set	12
  9604  001F                     _T2CON	set	31
  9605  001D                     _TMR2	set	29
  9606  001E                     _PR2	set	30
  9607  000E                     _PORTCbits	set	14
  9608  0011                     _PIR1bits	set	17
  9609  0013                     _PIR3bits	set	19
  9610  000B                     _INTCONbits	set	11
  9611  008E                     _TRISCbits	set	142
  9612  009D                     _ADCON0bits	set	157
  9613  009C                     _ADRESH	set	156
  9614  009B                     _ADRESL	set	155
  9615  009F                     _ADACT	set	159
  9616  009E                     _ADCON1	set	158
  9617  009D                     _ADCON0	set	157
  9618  008E                     _TRISC	set	142
  9619  008D                     _TRISB	set	141
  9620  008C                     _TRISA	set	140
  9621  0091                     _PIE1bits	set	145
  9622  0093                     _PIE3bits	set	147
  9623  0097                     _WDTCON	set	151
  9624  010E                     _LATCbits	set	270
  9625  010D                     _LATBbits	set	269
  9626  010E                     _LATC	set	270
  9627  010D                     _LATB	set	269
  9628  010C                     _LATA	set	268
  9629  018E                     _ANSELCbits	set	398
  9630  018C                     _ANSELA	set	396
  9631  018D                     _ANSELB	set	397
  9632  018E                     _ANSELC	set	398
  9633  020E                     _WPUCbits	set	526
  9634  020D                     _WPUBbits	set	525
  9635  020E                     _WPUC	set	526
  9636  020C                     _WPUA	set	524
  9637  020D                     _WPUB	set	525
  9638  0215                     _SSP1CON1bits	set	533
  9639  0216                     _SSP1CON2bits	set	534
  9640  0214                     _SSP1STATbits	set	532
  9641  0211                     _SSP1BUF	set	529
  9642  0212                     _SSP1ADD	set	530
  9643  0213                     _SSP1MSK	set	531
  9644  0217                     _SSP1CON3	set	535
  9645  0216                     _SSP1CON2	set	534
  9646  0215                     _SSP1CON1	set	533
  9647  0214                     _SSP1STAT	set	532
  9648  0295                     _CCPR2	set	661
  9649  0291                     _CCPR1	set	657
  9650  028E                     _ODCONCbits	set	654
  9651  0295                     _CCPR2L	set	661
  9652  0296                     _CCPR2H	set	662
  9653  0297                     _CCP2CON	set	663
  9654  0291                     _CCPR1L	set	657
  9655  0292                     _CCPR1H	set	658
  9656  0293                     _CCP1CON	set	659
  9657  029F                     _CCPTMRSbits	set	671
  9658  028E                     _ODCONC	set	654
  9659  028D                     _ODCONB	set	653
  9660  028C                     _ODCONA	set	652
  9661  0311                     _CCPR3	set	785
  9662  0315                     _CCPR4	set	789
  9663  0315                     _CCPR4L	set	789
  9664  0316                     _CCPR4H	set	790
  9665  0317                     _CCP4CON	set	791
  9666  0311                     _CCPR3L	set	785
  9667  0312                     _CCPR3H	set	786
  9668  0313                     _CCP3CON	set	787
  9669  0413                     _T3CONbits	set	1043
  9670  0413                     _T3CON	set	1043
  9671  0411                     _TMR3L	set	1041
  9672  0412                     _TMR3H	set	1042
  9673  0414                     _T3GCON	set	1044
  9674  061F                     _PWMTMRSbits	set	1567
  9675  0617                     _PWM5DCL	set	1559
  9676  0618                     _PWM5DCH	set	1560
  9677  0619                     _PWM5CON	set	1561
  9678  0896                     _NVMCON2	set	2198
  9679  0894                     _NVMDATH	set	2196
  9680  0893                     _NVMDATL	set	2195
  9681  0892                     _NVMADRH	set	2194
  9682  0891                     _NVMADRL	set	2193
  9683  0895                     _NVMCON1bits	set	2197
  9684  0913                     _PMD2bits	set	2323
  9685  0918                     _CPUDOZEbits	set	2328
  9686  0916                     _PMD5	set	2326
  9687  0915                     _PMD4	set	2325
  9688  0914                     _PMD3	set	2324
  9689  0913                     _PMD2	set	2323
  9690  0912                     _PMD1	set	2322
  9691  0911                     _PMD0	set	2321
  9692  091E                     _OSCTUNE	set	2334
  9693  091F                     _OSCFRQ	set	2335
  9694  091D                     _OSCEN	set	2333
  9695  091B                     _OSCCON3	set	2331
  9696  0919                     _OSCCON1	set	2329
  9697  0E0F                     _PPSLOCKbits	set	3599
  9698  0E0F                     _PPSLOCK	set	3599
  9699  0E28                     _CLCIN0PPSbits	set	3624
  9700  0E29                     _CLCIN1PPSbits	set	3625
  9701  0E21                     _SSP1DATPPSbits	set	3617
  9702  0E20                     _SSP1CLKPPSbits	set	3616
  9703  0EA6                     _RC6PPSbits	set	3750
  9704  0EA7                     _RC7PPSbits	set	3751
  9705  0EA3                     _RC3PPSbits	set	3747
  9706  0EA4                     _RC4PPSbits	set	3748
  9707  0EA5                     _RC5PPSbits	set	3749
  9708  0E9E                     _RB6PPSbits	set	3742
  9709  0E9F                     _RB7PPSbits	set	3743
  9710  0F10                     _CLC1CON	set	3856
  9711  0F19                     _CLC1GLS3	set	3865
  9712  0F18                     _CLC1GLS2	set	3864
  9713  0F17                     _CLC1GLS1	set	3863
  9714  0F16                     _CLC1GLS0	set	3862
  9715  0F15                     _CLC1SEL3	set	3861
  9716  0F14                     _CLC1SEL2	set	3860
  9717  0F13                     _CLC1SEL1	set	3859
  9718  0F12                     _CLC1SEL0	set	3858
  9719  0F11                     _CLC1POL	set	3857
  9720  0F1A                     _CLC2CON	set	3866
  9721  0F23                     _CLC2GLS3	set	3875
  9722  0F22                     _CLC2GLS2	set	3874
  9723  0F21                     _CLC2GLS1	set	3873
  9724  0F20                     _CLC2GLS0	set	3872
  9725  0F1F                     _CLC2SEL3	set	3871
  9726  0F1E                     _CLC2SEL2	set	3870
  9727  0F1D                     _CLC2SEL1	set	3869
  9728  0F1C                     _CLC2SEL0	set	3868
  9729  0F1B                     _CLC2POL	set	3867
  9730                           
  9731                           ; #config settings
  9732  0000                     
  9733                           	psect	cinit
  9734  0032                     start_initialization:	
  9735  0032                     __initialization:	
  9736                           
  9737                           ; Initialize objects allocated to BANK1
  9738  0032  0021               	movlb	1	; select bank1
  9739                           
  9740                           ;initializer for _I2C1_slaveWriteData
  9741  0033  3055               	movlw	85
  9742  0034  00DA               	movwf	__pdataBANK1& (0+127)
  9743                           
  9744                           ; Clear objects allocated to BANK0
  9745  0035  3020               	movlw	low __pbssBANK0
  9746  0036  0084               	movwf	4
  9747  0037  3000               	movlw	high __pbssBANK0
  9748  0038  0085               	movwf	5
  9749  0039  302C               	movlw	44
  9750  003A  3191  2130  3180   	fcall	clear_ram0
  9751                           
  9752                           ; Clear objects allocated to BANK1
  9753  003D  30A0               	movlw	low __pbssBANK1
  9754  003E  0084               	movwf	4
  9755  003F  3000               	movlw	high __pbssBANK1
  9756  0040  0085               	movwf	5
  9757  0041  302A               	movlw	42
  9758  0042  3191  2130  3180   	fcall	clear_ram0
  9759  0045                     end_of_initialization:	
  9760                           ;End of C runtime variable initialization code
  9761                           
  9762  0045                     __end_of__initialization:	
  9763  0045  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9764  0046  0020               	movlb	0
  9765  0047  2848               	ljmp	l8229	;jump to C main() function
  9766  0048                     __pmaintext:	
  9767 ;;
  9768 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  9769 ;;
  9770 ;; *************** function _main *****************
  9771 ;; Defined at:
  9772 ;;		line 80 in file "main.c"
  9773 ;; Parameters:    Size  Location     Type
  9774 ;;		None
  9775 ;; Auto vars:     Size  Location     Type
  9776 ;;		None
  9777 ;; Return value:  Size  Location     Type
  9778 ;;                  1    wreg      void 
  9779 ;; Registers used:
  9780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9781 ;; Tracked objects:
  9782 ;;		On entry : B1F/0
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9790 ;;Total ram usage:        0 bytes
  9791 ;; Hardware stack levels required when called:   12
  9792 ;; This function calls:
  9793 ;;		_ClearInterrupt
  9794 ;;		_DataInitSet
  9795 ;;		_Encoder_FSM
  9796 ;;		_GP_Ports_FSM
  9797 ;;		_SYSTEM_Initialize
  9798 ;;		_TMR3_SetInterruptHandler
  9799 ;;		_TMR3_StartTimer
  9800 ;; This function is called by:
  9801 ;;		Startup code after reset
  9802 ;; This function uses a non-reentrant model
  9803 ;;
  9804                           
  9805                           
  9806                           ;psect for function _main
  9807  0048                     _main:	
  9808  0048                     l8229:	
  9809                           ;incstack = 0
  9810                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9811                           
  9812                           
  9813                           ;main.c: 82: SYSTEM_Initialize();
  9814  0048  232B  3180         	fcall	_SYSTEM_Initialize
  9815                           
  9816                           ;main.c: 88: (INTCONbits.GIE = 1);
  9817  004A  178B               	bsf	11,7	;volatile
  9818                           
  9819                           ;main.c: 91: (INTCONbits.PEIE = 1);
  9820  004B  170B               	bsf	11,6	;volatile
  9821                           
  9822                           ;main.c: 99: TMR3_SetInterruptHandler(TimerInt);
  9823  004C  3036               	movlw	low _TimerInt
  9824  004D  0021               	movlb	1	; select bank1
  9825  004E  00CA               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
  9826  004F  3011               	movlw	high _TimerInt
  9827  0050  00CB               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
  9828  0051  2326  3180         	fcall	_TMR3_SetInterruptHandler
  9829                           
  9830                           ;main.c: 100: DataInitSet();
  9831  0053  2070  3180         	fcall	_DataInitSet
  9832  0055  158E               	bsf	14,3	;volatile
  9833  0056  160E               	bsf	14,4	;volatile
  9834  0057  168E               	bsf	14,5	;volatile
  9835  0058  170E               	bsf	14,6	;volatile
  9836  0059  178E               	bsf	14,7	;volatile
  9837                           
  9838                           ;main.c: 107: TMR3_StartTimer();
  9839  005A  26AF  3180         	fcall	_TMR3_StartTimer
  9840                           
  9841                           ;main.c: 108: ClearInterrupt();
  9842  005C  206D  3180         	fcall	_ClearInterrupt
  9843                           
  9844                           ;main.c: 110: CPUDOZEbits.IDLEN = 1;
  9845  005E  0032               	movlb	18	; select bank18
  9846  005F  1798               	bsf	24,7	;volatile
  9847                           
  9848                           ;main.c: 111: CPUDOZEbits.ROI = 1;
  9849  0060  1698               	bsf	24,5	;volatile
  9850  0061                     l8253:	
  9851                           
  9852                           ;main.c: 115: if (fsm_tmr == 1) {
  9853  0061  0021               	movlb	1	; select bank1
  9854  0062  0348               	decf	_fsm_tmr^(0+128),w
  9855  0063  1D03               	btfss	3,2
  9856  0064  2861               	goto	l8253
  9857                           
  9858                           ;main.c: 117: Encoder_FSM();
  9859  0065  2318  3180         	fcall	_Encoder_FSM
  9860                           
  9861                           ;main.c: 118: GP_Ports_FSM();
  9862  0067  2135  3180         	fcall	_GP_Ports_FSM
  9863                           
  9864                           ;main.c: 119: fsm_tmr = 0;
  9865  0069  0021               	movlb	1	; select bank1
  9866  006A  01C8               	clrf	_fsm_tmr^(0+128)
  9867  006B  0063               	sleep	;# 
  9868  006C  2861               	goto	l8253
  9869  006D                     __end_of_main:	
  9870  006D                     __ptext40:	
  9871 ;; *************** function _ClearInterrupt *****************
  9872 ;; Defined at:
  9873 ;;		line 66 in file "main.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;		None
  9876 ;; Auto vars:     Size  Location     Type
  9877 ;;		None
  9878 ;; Return value:  Size  Location     Type
  9879 ;;                  1    wreg      void 
  9880 ;; Registers used:
  9881 ;;		None
  9882 ;; Tracked objects:
  9883 ;;		On entry : 1F/8
  9884 ;;		On exit  : 1F/2
  9885 ;;		Unchanged: 0/0
  9886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9891 ;;Total ram usage:        0 bytes
  9892 ;; Hardware stack levels used:    1
  9893 ;; Hardware stack levels required when called:    7
  9894 ;; This function calls:
  9895 ;;		Nothing
  9896 ;; This function is called by:
  9897 ;;		_main
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           
  9902                           ;psect for function _ClearInterrupt
  9903  006D                     _ClearInterrupt:	
  9904                           
  9905                           ;incstack = 0
  9906                           ; Regs used in _ClearInterrupt: []
  9907                           ;main.c: 67: do { LATBbits.LATB5 = 1; } while(0);
  9908  006D  0022               	movlb	2	; select bank2
  9909  006E  168D               	bsf	13,5	;volatile
  9910  006F  0008               	return
  9911  0070                     __end_of_ClearInterrupt:	
  9912  0070                     __ptext39:	
  9913 ;; *************** function _DataInitSet *****************
  9914 ;; Defined at:
  9915 ;;		line 72 in file "DataVariable.c"
  9916 ;; Parameters:    Size  Location     Type
  9917 ;;		None
  9918 ;; Auto vars:     Size  Location     Type
  9919 ;;		None
  9920 ;; Return value:  Size  Location     Type
  9921 ;;                  1    wreg      void 
  9922 ;; Registers used:
  9923 ;;		wreg, status,2
  9924 ;; Tracked objects:
  9925 ;;		On entry : 1F/1
  9926 ;;		On exit  : 1F/1
  9927 ;;		Unchanged: 0/0
  9928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9933 ;;Total ram usage:        0 bytes
  9934 ;; Hardware stack levels used:    1
  9935 ;; Hardware stack levels required when called:    7
  9936 ;; This function calls:
  9937 ;;		Nothing
  9938 ;; This function is called by:
  9939 ;;		_main
  9940 ;; This function uses a non-reentrant model
  9941 ;;
  9942                           
  9943                           
  9944                           ;psect for function _DataInitSet
  9945  0070                     _DataInitSet:	
  9946                           
  9947                           ;DataVariable.c: 73: GCONF = 0;
  9948                           
  9949                           ;incstack = 0
  9950                           ; Regs used in _DataInitSet: [wreg+status,2]
  9951  0070  0020               	movlb	0	; select bank0
  9952  0071  01C8               	clrf	_GCONF	;volatile
  9953                           
  9954                           ;DataVariable.c: 74: GP1CONF = 0;
  9955  0072  01C7               	clrf	_GP1CONF	;volatile
  9956                           
  9957                           ;DataVariable.c: 75: GP3CONF = 0;
  9958  0073  01C5               	clrf	_GP3CONF	;volatile
  9959                           
  9960                           ;DataVariable.c: 76: INTCONF = 0;
  9961  0074  0021               	movlb	1	; select bank1
  9962  0075  01C9               	clrf	_INTCONF^(0+128)	;volatile
  9963                           
  9964                           ;DataVariable.c: 77: ESTATUS = 0;
  9965  0076  0020               	movlb	0	; select bank0
  9966  0077  01C9               	clrf	_ESTATUS	;volatile
  9967                           
  9968                           ;DataVariable.c: 78: I2STATUS = 0;
  9969  0078  0021               	movlb	1	; select bank1
  9970  0079  01C7               	clrf	_I2STATUS^(0+128)	;volatile
  9971                           
  9972                           ;DataVariable.c: 79: CVAL.val = 0;
  9973  007A  0020               	movlb	0	; select bank0
  9974  007B  01AC               	clrf	_CVAL	;volatile
  9975  007C  01AD               	clrf	_CVAL+1	;volatile
  9976  007D  01AE               	clrf	_CVAL+2	;volatile
  9977  007E  01AF               	clrf	_CVAL+3	;volatile
  9978                           
  9979                           ;DataVariable.c: 80: CMAX.val = 0;
  9980  007F  01A8               	clrf	_CMAX	;volatile
  9981  0080  01A9               	clrf	_CMAX+1	;volatile
  9982  0081  01AA               	clrf	_CMAX+2	;volatile
  9983  0082  01AB               	clrf	_CMAX+3	;volatile
  9984                           
  9985                           ;DataVariable.c: 81: CMIN.val = 0;
  9986  0083  01A4               	clrf	_CMIN	;volatile
  9987  0084  01A5               	clrf	_CMIN+1	;volatile
  9988  0085  01A6               	clrf	_CMIN+2	;volatile
  9989  0086  01A7               	clrf	_CMIN+3	;volatile
  9990                           
  9991                           ;DataVariable.c: 82: ISTEP.val = 0;
  9992  0087  01A0               	clrf	_ISTEP	;volatile
  9993  0088  01A1               	clrf	_ISTEP+1	;volatile
  9994  0089  01A2               	clrf	_ISTEP+2	;volatile
  9995  008A  01A3               	clrf	_ISTEP+3	;volatile
  9996                           
  9997                           ;DataVariable.c: 83: RLED = 0;
  9998  008B  01C4               	clrf	_RLED	;volatile
  9999                           
 10000                           ;DataVariable.c: 84: GLED = 0;
 10001  008C  01C3               	clrf	_GLED	;volatile
 10002                           
 10003                           ;DataVariable.c: 85: BLED = 0;
 10004  008D  01C2               	clrf	_BLED	;volatile
 10005                           
 10006                           ;DataVariable.c: 86: GP1REG = 0;
 10007  008E  01C1               	clrf	_GP1REG	;volatile
 10008                           
 10009                           ;DataVariable.c: 87: GP2REG = 0;
 10010  008F  01C0               	clrf	_GP2REG	;volatile
 10011                           
 10012                           ;DataVariable.c: 88: GP3REG = 0;
 10013  0090  01BF               	clrf	_GP3REG	;volatile
 10014                           
 10015                           ;DataVariable.c: 89: C_RESET = 0;
 10016  0091  0021               	movlb	1	; select bank1
 10017  0092  01C1               	clrf	_C_RESET^(0+128)	;volatile
 10018                           
 10019                           ;DataVariable.c: 90: C_MBANK = 0;
 10020  0093  01C0               	clrf	_C_MBANK^(0+128)	;volatile
 10021                           
 10022                           ;DataVariable.c: 91: C_ETYPE = 0;
 10023  0094  0020               	movlb	0	; select bank0
 10024  0095  01B8               	clrf	_C_ETYPE	;volatile
 10025                           
 10026                           ;DataVariable.c: 92: C_RMOD = 0;
 10027  0096  01CB               	clrf	_C_RMOD	;volatile
 10028                           
 10029                           ;DataVariable.c: 93: C_IPUD = 0;
 10030  0097  0021               	movlb	1	; select bank1
 10031  0098  01BF               	clrf	_C_IPUD^(0+128)	;volatile
 10032                           
 10033                           ;DataVariable.c: 94: C_DIRE = 0;
 10034  0099  01BE               	clrf	_C_DIRE^(0+128)	;volatile
 10035                           
 10036                           ;DataVariable.c: 95: C_WRAPE = 0;
 10037  009A  0020               	movlb	0	; select bank0
 10038  009B  01B7               	clrf	_C_WRAPE	;volatile
 10039                           
 10040                           ;DataVariable.c: 96: C_DTYPE = 0;
 10041  009C  0021               	movlb	1	; select bank1
 10042  009D  01BD               	clrf	_C_DTYPE^(0+128)	;volatile
 10043                           
 10044                           ;DataVariable.c: 97: S_CKSRC = 0;
 10045  009E  01BC               	clrf	_S_CKSRC^(0+128)	;volatile
 10046                           
 10047                           ;DataVariable.c: 98: S_RELATIVE = 0;
 10048  009F  0020               	movlb	0	; select bank0
 10049  00A0  01B6               	clrf	_S_RELATIVE	;volatile
 10050                           
 10051                           ;DataVariable.c: 100: ANTBOUNC = 25;
 10052  00A1  3019               	movlw	25
 10053  00A2  0021               	movlb	1	; select bank1
 10054  00A3  00C5               	movwf	_ANTBOUNC^(0+128)	;volatile
 10055                           
 10056                           ;DataVariable.c: 101: DPPERIOD = 0;
 10057  00A4  01C4               	clrf	_DPPERIOD^(0+128)	;volatile
 10058                           
 10059                           ;DataVariable.c: 102: FADERGB = 0;
 10060  00A5  01C3               	clrf	_FADERGB^(0+128)	;volatile
 10061                           
 10062                           ;DataVariable.c: 103: FADEGP = 0;
 10063  00A6  0020               	movlb	0	; select bank0
 10064  00A7  01BE               	clrf	_FADEGP	;volatile
 10065                           
 10066                           ;DataVariable.c: 104: DEBOUNCE = 250;
 10067  00A8  30FA               	movlw	250
 10068  00A9  0021               	movlb	1	; select bank1
 10069  00AA  00A8               	movwf	_DEBOUNCE^(0+128)	;volatile
 10070  00AB  01A9               	clrf	(_DEBOUNCE+1)^(0+128)	;volatile
 10071                           
 10072                           ;DataVariable.c: 105: DoublePush = 0;
 10073  00AC  01A6               	clrf	_DoublePush^(0+128)	;volatile
 10074  00AD  01A7               	clrf	(_DoublePush+1)^(0+128)	;volatile
 10075  00AE  0008               	return
 10076  00AF                     __end_of_DataInitSet:	
 10077  00AF                     __ptext34:	
 10078 ;; *************** function _Encoder_PushButton_FSM *****************
 10079 ;; Defined at:
 10080 ;;		line 233 in file "Encoder.c"
 10081 ;; Parameters:    Size  Location     Type
 10082 ;;		None
 10083 ;; Auto vars:     Size  Location     Type
 10084 ;;		None
 10085 ;; Return value:  Size  Location     Type
 10086 ;;                  1    wreg      void 
 10087 ;; Registers used:
 10088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10089 ;; Tracked objects:
 10090 ;;		On entry : 18/1
 10091 ;;		On exit  : 1C/0
 10092 ;;		Unchanged: 0/0
 10093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10098 ;;Total ram usage:        0 bytes
 10099 ;; Hardware stack levels used:    1
 10100 ;; Hardware stack levels required when called:    9
 10101 ;; This function calls:
 10102 ;;		_EncoderStatusUpdate
 10103 ;;		_EncoderSwitch_GetValueFiltered
 10104 ;;		_SetInterrupt
 10105 ;; This function is called by:
 10106 ;;		_Encoder_FSM
 10107 ;; This function uses a non-reentrant model
 10108 ;;
 10109                           
 10110                           
 10111                           ;psect for function _Encoder_PushButton_FSM
 10112  00AF                     _Encoder_PushButton_FSM:	
 10113  00AF                     l8111:	
 10114                           ;incstack = 0
 10115                           ; Regs used in _Encoder_PushButton_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10116                           
 10117                           
 10118                           ;Encoder.c: 235: if (double_push_cnt > DoublePush) {
 10119  00AF  0021               	movlb	1	; select bank1
 10120  00B0  0825               	movf	(_double_push_cnt+1)^(0+128),w
 10121  00B1  0227               	subwf	(_DoublePush+1)^(0+128),w	;volatile
 10122  00B2  1D03               	skipz
 10123  00B3  28B6               	goto	u5775
 10124  00B4  0824               	movf	_double_push_cnt^(0+128),w
 10125  00B5  0226               	subwf	_DoublePush^(0+128),w	;volatile
 10126  00B6                     u5775:	
 10127  00B6  1803               	skipnc
 10128  00B7  28BB               	goto	l8115
 10129                           
 10130                           ;Encoder.c: 236: pb_fsm = ENCODER_TIMEOUT;
 10131  00B8  3005               	movlw	5
 10132  00B9  00B2               	movwf	_pb_fsm^(0+128)
 10133                           
 10134                           ;Encoder.c: 237: } else {
 10135  00BA  290E               	goto	l8175
 10136  00BB                     l8115:	
 10137                           
 10138                           ;Encoder.c: 238: double_push_cnt++;
 10139  00BB  0AA4               	incf	_double_push_cnt^(0+128),f
 10140  00BC  1903               	skipnz
 10141  00BD  0AA5               	incf	(_double_push_cnt+1)^(0+128),f
 10142  00BE  290E               	goto	l8175
 10143  00BF                     l8117:	
 10144                           
 10145                           ;Encoder.c: 243: double_push_cnt = 0;
 10146  00BF  01A4               	clrf	_double_push_cnt^(0+128)
 10147  00C0  01A5               	clrf	(_double_push_cnt+1)^(0+128)
 10148                           
 10149                           ;Encoder.c: 244: if (EncoderSwitch_GetValueFiltered() == 1) {
 10150  00C1  2119  3180         	fcall	_EncoderSwitch_GetValueFiltered
 10151  00C3  3A01               	xorlw	1
 10152  00C4  1D03               	skipz
 10153  00C5  0008               	return
 10154                           
 10155                           ;Encoder.c: 245: pb_fsm = ENCODER_WAITRELEASE;
 10156  00C6  01B2               	clrf	_pb_fsm^(0+128)
 10157  00C7  0AB2               	incf	_pb_fsm^(0+128),f
 10158  00C8  0008               	return
 10159  00C9                     l8123:	
 10160                           
 10161                           ;Encoder.c: 251: if (EncoderSwitch_GetValueFiltered() == 0) {
 10162  00C9  2119  3180         	fcall	_EncoderSwitch_GetValueFiltered
 10163  00CB  3A00               	xorlw	0
 10164  00CC  1D03               	skipz
 10165  00CD  0008               	return
 10166                           
 10167                           ;Encoder.c: 252: pb_fsm = ENCODER_WAITDOUBLEPUSH;
 10168  00CE  3002               	movlw	2
 10169  00CF  00B2               	movwf	_pb_fsm^(0+128)
 10170  00D0  0008               	return
 10171  00D1                     l8127:	
 10172                           
 10173                           ;Encoder.c: 257: if (EncoderSwitch_GetValueFiltered() == 1) {
 10174  00D1  2119  3180         	fcall	_EncoderSwitch_GetValueFiltered
 10175  00D3  3A01               	xorlw	1
 10176  00D4  1D03               	skipz
 10177  00D5  0008               	return
 10178                           
 10179                           ;Encoder.c: 258: pb_fsm = ENCODER_WAITDOUBLERELEASED;
 10180  00D6  3003               	movlw	3
 10181  00D7  00B2               	movwf	_pb_fsm^(0+128)
 10182  00D8  0008               	return
 10183  00D9                     l8131:	
 10184                           
 10185                           ;Encoder.c: 263: if (EncoderSwitch_GetValueFiltered() == 0) {
 10186  00D9  2119  3180         	fcall	_EncoderSwitch_GetValueFiltered
 10187  00DB  3A00               	xorlw	0
 10188  00DC  1D03               	skipz
 10189  00DD  0008               	return
 10190  00DE  3004               	movlw	4
 10191                           
 10192                           ;Encoder.c: 264: double_push_cnt = 0;
 10193  00DF  01A4               	clrf	_double_push_cnt^(0+128)
 10194  00E0  01A5               	clrf	(_double_push_cnt+1)^(0+128)
 10195                           
 10196                           ;Encoder.c: 265: double_push_delay=0;
 10197  00E1  01A2               	clrf	_double_push_delay^(0+128)
 10198  00E2  01A3               	clrf	(_double_push_delay+1)^(0+128)
 10199                           
 10200                           ;Encoder.c: 266: pb_fsm = ENCODER_DOUBLEDELAY;
 10201  00E3  00B2               	movwf	_pb_fsm^(0+128)
 10202  00E4                     L7:	
 10203                           ;Encoder.c: 267: EncoderStatusUpdate(S_PUSHD);
 10204                           
 10205  00E4  2307  3180         	fcall	_EncoderStatusUpdate
 10206  00E6                     l8139:	
 10207                           
 10208                           ;Encoder.c: 268: SetInterrupt();
 10209  00E6  2A3F               	ljmp	l7329
 10210  00E7                     l8141:	
 10211                           
 10212                           ;Encoder.c: 273: double_push_cnt = 0;
 10213  00E7  01A4               	clrf	_double_push_cnt^(0+128)
 10214  00E8  01A5               	clrf	(_double_push_cnt+1)^(0+128)
 10215                           
 10216                           ;Encoder.c: 274: if (double_push_delay > DoublePush) {
 10217  00E9  0823               	movf	(_double_push_delay+1)^(0+128),w
 10218  00EA  0227               	subwf	(_DoublePush+1)^(0+128),w	;volatile
 10219  00EB  1D03               	skipz
 10220  00EC  28EF               	goto	u5825
 10221  00ED  0822               	movf	_double_push_delay^(0+128),w
 10222  00EE  0226               	subwf	_DoublePush^(0+128),w	;volatile
 10223  00EF                     u5825:	
 10224  00EF  1803               	skipnc
 10225  00F0  28F3               	goto	l8147
 10226                           
 10227                           ;Encoder.c: 275: pb_fsm = ENCODER_WAITPUSH;
 10228  00F1  01B2               	clrf	_pb_fsm^(0+128)
 10229                           
 10230                           ;Encoder.c: 276: } else {
 10231  00F2  0008               	return
 10232  00F3                     l8147:	
 10233                           
 10234                           ;Encoder.c: 277: double_push_delay++;
 10235  00F3  0AA2               	incf	_double_push_delay^(0+128),f
 10236  00F4  1903               	skipnz
 10237  00F5  0AA3               	incf	(_double_push_delay+1)^(0+128),f
 10238  00F6  0008               	return
 10239  00F7                     l8149:	
 10240  00F7  3002               	movlw	2
 10241                           
 10242                           ;Encoder.c: 282: double_push_cnt = 0;
 10243  00F8  01A4               	clrf	_double_push_cnt^(0+128)
 10244  00F9  01A5               	clrf	(_double_push_cnt+1)^(0+128)
 10245                           
 10246                           ;Encoder.c: 283: EncoderStatusUpdate(S_PUSHP);
 10247  00FA  2307  3180         	fcall	_EncoderStatusUpdate
 10248                           
 10249                           ;Encoder.c: 284: if (EncoderSwitch_GetValueFiltered() == 1) {
 10250  00FC  2119  3180         	fcall	_EncoderSwitch_GetValueFiltered
 10251  00FE  3A01               	xorlw	1
 10252  00FF  1D03               	skipz
 10253  0100  290B               	goto	l8167
 10254                           
 10255                           ;Encoder.c: 285: pb_fsm = ENCODER_PUSHRESET;
 10256  0101  3006               	movlw	6
 10257  0102  00B2               	movwf	_pb_fsm^(0+128)
 10258                           
 10259                           ;Encoder.c: 286: } else {
 10260  0103  28E6               	goto	l8139
 10261  0104                     l8163:	
 10262                           ;Encoder.c: 288: EncoderStatusUpdate(S_PUSHR);
 10263                           
 10264                           ;Encoder.c: 287: pb_fsm = ENCODER_WAITPUSH;
 10265                           
 10266                           
 10267                           ;Encoder.c: 294: double_push_cnt = 0;
 10268  0104  01A4               	clrf	_double_push_cnt^(0+128)
 10269  0105  01A5               	clrf	(_double_push_cnt+1)^(0+128)
 10270                           
 10271                           ;Encoder.c: 295: if (EncoderSwitch_GetValueFiltered() == 0) {
 10272  0106  2119  3180         	fcall	_EncoderSwitch_GetValueFiltered
 10273  0108  3A00               	xorlw	0
 10274  0109  1D03               	skipz
 10275  010A  0008               	return
 10276  010B                     l8167:	
 10277  010B  3001               	movlw	1
 10278                           
 10279                           ;Encoder.c: 297: pb_fsm = ENCODER_WAITPUSH;
 10280  010C  01B2               	clrf	_pb_fsm^(0+128)
 10281                           
 10282                           ;Encoder.c: 298: EncoderStatusUpdate(S_PUSHR);
 10283  010D  28E4               	goto	L7
 10284  010E                     l8175:	
 10285  010E  0832               	movf	_pb_fsm^(0+128),w
 10286                           
 10287                           ; Switch size 1, requested type "speed"
 10288                           ; Number of cases is 7, Range of values is 0 to 6
 10289                           ; switch strategies available:
 10290                           ; Name         Instructions Cycles
 10291                           ; direct_byte           20     6 (fixed)
 10292                           ; simple_byte           22    12 (average)
 10293                           ; jumptable            260     6 (fixed)
 10294                           ;	Chosen strategy is direct_byte
 10295  010F  0084               	movwf	4
 10296  0110  3007               	movlw	7
 10297  0111  0204               	subwf	4,w
 10298  0112  1803               	skipnc
 10299  0113  0008               	return
 10300  0114  3190               	movlp	high S8605
 10301  0115  3504               	lslf	4,w
 10302  0116  3EE4               	addlw	low S8605
 10303  0117  0082               	movwf	2
 10304  0118  0008               	return
 10305  0119                     __end_of_Encoder_PushButton_FSM:	
 10306  0119                     __ptext36:	
 10307 ;; *************** function _EncoderSwitch_GetValueFiltered *****************
 10308 ;; Defined at:
 10309 ;;		line 42 in file "Encoder.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;		None
 10312 ;; Auto vars:     Size  Location     Type
 10313 ;;		None
 10314 ;; Return value:  Size  Location     Type
 10315 ;;                  1    wreg      unsigned char 
 10316 ;; Registers used:
 10317 ;;		wreg, status,2, status,0, pclath, cstack
 10318 ;; Tracked objects:
 10319 ;;		On entry : 18/1
 10320 ;;		On exit  : 1F/1
 10321 ;;		Unchanged: 0/0
 10322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10327 ;;Total ram usage:        0 bytes
 10328 ;; Hardware stack levels used:    1
 10329 ;; Hardware stack levels required when called:    8
 10330 ;; This function calls:
 10331 ;;		_EncoderSwitch_GetValue
 10332 ;; This function is called by:
 10333 ;;		_Encoder_PushButton_FSM
 10334 ;; This function uses a non-reentrant model
 10335 ;;
 10336                           
 10337                           
 10338                           ;psect for function _EncoderSwitch_GetValueFiltered
 10339  0119                     _EncoderSwitch_GetValueFiltered:	
 10340                           
 10341                           ;Encoder.c: 43: static bool pb_status = 0;;Encoder.c: 45: if (EncoderSwitch_GetValue() =
      +                          = 1) {
 10342                           
 10343                           ;incstack = 0
 10344                           ; Regs used in _EncoderSwitch_GetValueFiltered: [wreg+status,2+status,0+pclath+cstack]
 10345  0119  230B  3180         	fcall	_EncoderSwitch_GetValue
 10346  011B  3A01               	xorlw	1
 10347  011C  1D03               	skipz
 10348  011D  292A               	goto	l7533
 10349                           
 10350                           ;Encoder.c: 46: if (pb_cnt++ >= 50) {
 10351  011E  0021               	movlb	1	; select bank1
 10352  011F  0831               	movf	_pb_cnt^(0+128),w
 10353  0120  0AB1               	incf	_pb_cnt^(0+128),f
 10354  0121  3A80               	xorlw	128
 10355  0122  3E4E               	addlw	-178
 10356  0123  1C03               	skipc
 10357  0124  2933               	goto	l7537
 10358                           
 10359                           ;Encoder.c: 47: pb_cnt = 50;
 10360  0125  3032               	movlw	50
 10361  0126  00B1               	movwf	_pb_cnt^(0+128)
 10362                           
 10363                           ;Encoder.c: 48: pb_status = 1;
 10364  0127  01AE               	clrf	EncoderSwitch_GetValueFiltered@pb_status^(0+128)
 10365  0128  0AAE               	incf	EncoderSwitch_GetValueFiltered@pb_status^(0+128),f
 10366  0129  2933               	goto	l7537
 10367  012A                     l7533:	
 10368                           
 10369                           ;Encoder.c: 51: if (pb_cnt-- <= 0) {
 10370  012A  0021               	movlb	1	; select bank1
 10371  012B  0831               	movf	_pb_cnt^(0+128),w
 10372  012C  03B1               	decf	_pb_cnt^(0+128),f
 10373  012D  3A80               	xorlw	128
 10374  012E  3E7F               	addlw	-129
 10375  012F  1803               	skipnc
 10376  0130  2933               	goto	l7537
 10377                           
 10378                           ;Encoder.c: 52: pb_cnt = 0;
 10379  0131  01B1               	clrf	_pb_cnt^(0+128)
 10380                           
 10381                           ;Encoder.c: 53: pb_status = 0;
 10382  0132  01AE               	clrf	EncoderSwitch_GetValueFiltered@pb_status^(0+128)
 10383  0133                     l7537:	
 10384                           
 10385                           ;Encoder.c: 54: };Encoder.c: 55: };Encoder.c: 57: return pb_status;
 10386  0133  082E               	movf	EncoderSwitch_GetValueFiltered@pb_status^(0+128),w
 10387  0134  0008               	return
 10388  0135                     __end_of_EncoderSwitch_GetValueFiltered:	
 10389  0135                     __ptext14:	
 10390 ;; *************** function _GP_Ports_FSM *****************
 10391 ;; Defined at:
 10392 ;;		line 535 in file "GPports.c"
 10393 ;; Parameters:    Size  Location     Type
 10394 ;;		None
 10395 ;; Auto vars:     Size  Location     Type
 10396 ;;		None
 10397 ;; Return value:  Size  Location     Type
 10398 ;;                  1    wreg      void 
 10399 ;; Registers used:
 10400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10401 ;; Tracked objects:
 10402 ;;		On entry : 1C/1
 10403 ;;		On exit  : 1E/0
 10404 ;;		Unchanged: 0/0
 10405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10408 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10409 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10410 ;;Total ram usage:        1 bytes
 10411 ;; Hardware stack levels used:    1
 10412 ;; Hardware stack levels required when called:   11
 10413 ;; This function calls:
 10414 ;;		_FADE_GP1
 10415 ;;		_FADE_GP2
 10416 ;;		_FADE_GP3
 10417 ;;		_GP1_FSM
 10418 ;;		_GP2_FSM
 10419 ;;		_GP3_FSM
 10420 ;; This function is called by:
 10421 ;;		_main
 10422 ;; This function uses a non-reentrant model
 10423 ;;
 10424                           
 10425                           
 10426                           ;psect for function _GP_Ports_FSM
 10427  0135                     _GP_Ports_FSM:	
 10428                           
 10429                           ;GPports.c: 538: FADE_GP1();
 10430                           
 10431                           ;incstack = 0
 10432                           ; Regs used in _GP_Ports_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10433  0135  2353  3180         	fcall	_FADE_GP1
 10434                           
 10435                           ;GPports.c: 539: FADE_GP2();
 10436  0137  226B  3180         	fcall	_FADE_GP2
 10437                           
 10438                           ;GPports.c: 540: FADE_GP3();
 10439  0139  2414  3180         	fcall	_FADE_GP3
 10440                           
 10441                           ;GPports.c: 542: if (gp_fade_cnt++ >= FADEGP) {
 10442  013B  0021               	movlb	1	; select bank1
 10443  013C  0833               	movf	_gp_fade_cnt^(0+128),w
 10444  013D  0AB3               	incf	_gp_fade_cnt^(0+128),f
 10445  013E  00D9               	movwf	??_GP_Ports_FSM^(0+128)
 10446  013F  0020               	movlb	0	; select bank0
 10447  0140  083E               	movf	_FADEGP,w	;volatile
 10448  0141  0021               	movlb	1	; select bank1
 10449  0142  0259               	subwf	??_GP_Ports_FSM^(0+128),w
 10450  0143  1803               	btfsc	3,0
 10451                           
 10452                           ;GPports.c: 543: gp_fade_cnt = 0;
 10453  0144  01B3               	clrf	_gp_fade_cnt^(0+128)
 10454                           
 10455                           ;GPports.c: 544: };GPports.c: 546: if (gp_timer++ > 10) {
 10456  0145  0837               	movf	_gp_timer^(0+128),w
 10457  0146  0AB7               	incf	_gp_timer^(0+128),f
 10458  0147  00D9               	movwf	??_GP_Ports_FSM^(0+128)
 10459  0148  300B               	movlw	11
 10460  0149  0259               	subwf	??_GP_Ports_FSM^(0+128),w
 10461  014A  1C03               	skipc
 10462  014B  0008               	return
 10463                           
 10464                           ;GPports.c: 547: gp_timer = 0;
 10465  014C  01B7               	clrf	_gp_timer^(0+128)
 10466                           
 10467                           ;GPports.c: 548: GP1_FSM();
 10468  014D  2152  3180         	fcall	_GP1_FSM
 10469                           
 10470                           ;GPports.c: 549: GP2_FSM();
 10471  014F  219D  3180         	fcall	_GP2_FSM
 10472                           
 10473                           ;GPports.c: 550: GP3_FSM();
 10474  0151  29EA               	ljmp	l7977
 10475  0152                     __end_of_GP_Ports_FSM:	
 10476  0152                     __ptext17:	
 10477 ;; *************** function _GP1_FSM *****************
 10478 ;; Defined at:
 10479 ;;		line 393 in file "GPports.c"
 10480 ;; Parameters:    Size  Location     Type
 10481 ;;		None
 10482 ;; Auto vars:     Size  Location     Type
 10483 ;;		None
 10484 ;; Return value:  Size  Location     Type
 10485 ;;                  1    wreg      void 
 10486 ;; Registers used:
 10487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10488 ;; Tracked objects:
 10489 ;;		On entry : 1F/1
 10490 ;;		On exit  : 1E/0
 10491 ;;		Unchanged: 0/0
 10492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10495 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10496 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10497 ;;Total ram usage:        2 bytes
 10498 ;; Hardware stack levels used:    1
 10499 ;; Hardware stack levels required when called:    9
 10500 ;; This function calls:
 10501 ;;		_ADC_GetConversion
 10502 ;;		_ADC_Initialize
 10503 ;;		_Int2StatusUpdate
 10504 ;;		_SetInterrupt
 10505 ;; This function is called by:
 10506 ;;		_GP_Ports_FSM
 10507 ;; This function uses a non-reentrant model
 10508 ;;
 10509                           
 10510                           
 10511                           ;psect for function _GP1_FSM
 10512  0152                     _GP1_FSM:	
 10513                           
 10514                           ;GPports.c: 394: switch (gp1_fsm) {
 10515                           
 10516                           ;incstack = 0
 10517                           ; Regs used in _GP1_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10518  0152  2992               	goto	l7925
 10519  0153                     l7887:	
 10520                           
 10521                           ;GPports.c: 396: if ((GP1CONF & 0x03) == 0x02) {
 10522  0153  3003               	movlw	3
 10523  0154  0020               	movlb	0	; select bank0
 10524  0155  0547               	andwf	_GP1CONF,w	;volatile
 10525  0156  0021               	movlb	1	; select bank1
 10526  0157  00CE               	movwf	??_GP1_FSM^(0+128)
 10527  0158  3A02               	xorlw	2
 10528  0159  1D03               	btfss	3,2
 10529  015A  295E               	goto	l7895
 10530                           
 10531                           ;GPports.c: 397: gp1_fsm = GP_ADC_MODE;
 10532  015B  01B6               	clrf	_gp1_fsm^(0+128)
 10533  015C  0AB6               	incf	_gp1_fsm^(0+128),f
 10534                           
 10535                           ;GPports.c: 398: ADC_Initialize();
 10536  015D  2A63               	ljmp	l7363
 10537  015E                     l7895:	
 10538                           
 10539                           ;GPports.c: 400: };GPports.c: 401: if ((GP1CONF & 0x03) == 0x03) {
 10540  015E  3003               	movlw	3
 10541  015F  0020               	movlb	0	; select bank0
 10542  0160  0547               	andwf	_GP1CONF,w	;volatile
 10543  0161  0021               	movlb	1	; select bank1
 10544  0162  00CE               	movwf	??_GP1_FSM^(0+128)
 10545  0163  3A03               	xorlw	3
 10546  0164  1D03               	btfss	3,2
 10547  0165  0008               	return
 10548  0166                     l7897:	
 10549                           
 10550                           ;GPports.c: 402: gp1_fsm = GP_WAITRISE;
 10551  0166  3002               	movlw	2
 10552  0167  0021               	movlb	1	; select bank1
 10553  0168  00B6               	movwf	_gp1_fsm^(0+128)
 10554  0169  0008               	return
 10555  016A                     l7901:	
 10556                           
 10557                           ;GPports.c: 408: GP1REG = (ADC_GetConversion(A_GP1) >> 2);
 10558  016A  3017               	movlw	23
 10559  016B  2248               	fcall	_ADC_GetConversion
 10560  016C  084A               	movf	?_ADC_GetConversion^(0+128),w
 10561  016D  00CE               	movwf	??_GP1_FSM^(0+128)
 10562  016E  084B               	movf	(?_ADC_GetConversion+1)^(0+128),w
 10563  016F  00CF               	movwf	(??_GP1_FSM^(0+128)+1)
 10564  0170  36CF               	lsrf	(??_GP1_FSM^(0+128)+1),f
 10565  0171  0CCE               	rrf	??_GP1_FSM^(0+128),f
 10566  0172  36CF               	lsrf	(??_GP1_FSM^(0+128)+1),f
 10567  0173  0CCE               	rrf	??_GP1_FSM^(0+128),f
 10568  0174  084E               	movf	??_GP1_FSM^(0+128),w
 10569  0175  0020               	movlb	0	; select bank0
 10570  0176  00C1               	movwf	_GP1REG	;volatile
 10571                           
 10572                           ;GPports.c: 409: break;
 10573  0177  0008               	return
 10574  0178                     l1317:	
 10575                           ;GPports.c: 411: case GP_WAITRISE:
 10576                           
 10577                           
 10578                           ;GPports.c: 412: if (PORTCbits.RC7 == 1) {
 10579  0178  0020               	movlb	0	; select bank0
 10580  0179  1F8E               	btfss	14,7	;volatile
 10581  017A  0008               	return
 10582                           
 10583                           ;GPports.c: 413: GP1REG = 1;
 10584  017B  3001               	movlw	1
 10585  017C  00C1               	movwf	_GP1REG	;volatile
 10586                           
 10587                           ;GPports.c: 414: Int2StatusUpdate(E_GP1POS);
 10588  017D  223A  3180         	fcall	_Int2StatusUpdate
 10589                           
 10590                           ;GPports.c: 415: if ((GP1CONF & 0x08) != 0) {
 10591  017F  1DC7               	btfss	_GP1CONF,3	;volatile
 10592  0180  2982               	goto	l7911
 10593                           
 10594                           ;GPports.c: 416: SetInterrupt();
 10595  0181  223F               	fcall	_SetInterrupt
 10596  0182                     l7911:	
 10597                           
 10598                           ;GPports.c: 417: };GPports.c: 418: gp1_fsm = GP_WAITFALL;
 10599  0182  3003               	movlw	3
 10600  0183  0021               	movlb	1	; select bank1
 10601  0184  00B6               	movwf	_gp1_fsm^(0+128)
 10602  0185  0008               	return
 10603  0186                     l1320:	
 10604                           ;GPports.c: 422: case GP_WAITFALL:
 10605                           
 10606                           
 10607                           ;GPports.c: 423: if (PORTCbits.RC7 == 0) {
 10608  0186  0020               	movlb	0	; select bank0
 10609  0187  1B8E               	btfsc	14,7	;volatile
 10610  0188  0008               	return
 10611                           
 10612                           ;GPports.c: 424: GP1REG = 0;
 10613  0189  01C1               	clrf	_GP1REG	;volatile
 10614                           
 10615                           ;GPports.c: 425: Int2StatusUpdate(E_GP1NEG);
 10616  018A  3002               	movlw	2
 10617  018B  223A  3180         	fcall	_Int2StatusUpdate
 10618                           
 10619                           ;GPports.c: 426: if ((GP1CONF & 0x10) != 0) {
 10620  018D  1E47               	btfss	_GP1CONF,4	;volatile
 10621  018E  2966               	goto	l7897
 10622                           
 10623                           ;GPports.c: 427: SetInterrupt();
 10624  018F  223F  3180         	fcall	_SetInterrupt
 10625  0191  2966               	goto	l7897
 10626  0192                     l7925:	
 10627  0192  0836               	movf	_gp1_fsm^(0+128),w
 10628                           
 10629                           ; Switch size 1, requested type "speed"
 10630                           ; Number of cases is 4, Range of values is 0 to 3
 10631                           ; switch strategies available:
 10632                           ; Name         Instructions Cycles
 10633                           ; direct_byte           14     6 (fixed)
 10634                           ; simple_byte           13     7 (average)
 10635                           ; jumptable            260     6 (fixed)
 10636                           ;	Chosen strategy is direct_byte
 10637  0193  0084               	movwf	4
 10638  0194  3004               	movlw	4
 10639  0195  0204               	subwf	4,w
 10640  0196  1803               	skipnc
 10641  0197  0008               	return
 10642  0198  3191               	movlp	high S8603
 10643  0199  3504               	lslf	4,w
 10644  019A  3E08               	addlw	low S8603
 10645  019B  0082               	movwf	2
 10646  019C  0008               	return
 10647  019D                     __end_of_GP1_FSM:	
 10648  019D                     __ptext16:	
 10649 ;; *************** function _GP2_FSM *****************
 10650 ;; Defined at:
 10651 ;;		line 438 in file "GPports.c"
 10652 ;; Parameters:    Size  Location     Type
 10653 ;;		None
 10654 ;; Auto vars:     Size  Location     Type
 10655 ;;		None
 10656 ;; Return value:  Size  Location     Type
 10657 ;;                  1    wreg      void 
 10658 ;; Registers used:
 10659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10660 ;; Tracked objects:
 10661 ;;		On entry : 1E/1
 10662 ;;		On exit  : 1E/0
 10663 ;;		Unchanged: 0/0
 10664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10667 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10668 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10669 ;;Total ram usage:        2 bytes
 10670 ;; Hardware stack levels used:    1
 10671 ;; Hardware stack levels required when called:    9
 10672 ;; This function calls:
 10673 ;;		_ADC_GetConversion
 10674 ;;		_ADC_Initialize
 10675 ;;		_Int2StatusUpdate
 10676 ;;		_SetInterrupt
 10677 ;; This function is called by:
 10678 ;;		_GP_Ports_FSM
 10679 ;; This function uses a non-reentrant model
 10680 ;;
 10681                           
 10682                           
 10683                           ;psect for function _GP2_FSM
 10684  019D                     _GP2_FSM:	
 10685                           
 10686                           ;GPports.c: 440: switch (gp2_fsm) {
 10687                           
 10688                           ;incstack = 0
 10689                           ; Regs used in _GP2_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10690  019D  29DE               	goto	l7971
 10691  019E                     l7933:	
 10692                           
 10693                           ;GPports.c: 442: if ((GP2CONF & 0x03) == 0x02) {
 10694  019E  3003               	movlw	3
 10695  019F  0020               	movlb	0	; select bank0
 10696  01A0  0546               	andwf	_GP2CONF,w	;volatile
 10697  01A1  0021               	movlb	1	; select bank1
 10698  01A2  00CE               	movwf	??_GP2_FSM^(0+128)
 10699  01A3  3A02               	xorlw	2
 10700  01A4  1D03               	btfss	3,2
 10701  01A5  29A9               	goto	l7941
 10702                           
 10703                           ;GPports.c: 443: gp2_fsm = GP_ADC_MODE;
 10704  01A6  01B5               	clrf	_gp2_fsm^(0+128)
 10705  01A7  0AB5               	incf	_gp2_fsm^(0+128),f
 10706                           
 10707                           ;GPports.c: 444: ADC_Initialize();
 10708  01A8  2A63               	ljmp	l7363
 10709  01A9                     l7941:	
 10710                           
 10711                           ;GPports.c: 446: };GPports.c: 448: if ((GP2CONF & 0x03) == 0x03) {
 10712  01A9  3003               	movlw	3
 10713  01AA  0020               	movlb	0	; select bank0
 10714  01AB  0546               	andwf	_GP2CONF,w	;volatile
 10715  01AC  0021               	movlb	1	; select bank1
 10716  01AD  00CE               	movwf	??_GP2_FSM^(0+128)
 10717  01AE  3A03               	xorlw	3
 10718  01AF  1D03               	btfss	3,2
 10719  01B0  0008               	return
 10720  01B1                     l7943:	
 10721                           
 10722                           ;GPports.c: 449: gp2_fsm = GP_WAITRISE;
 10723  01B1  3002               	movlw	2
 10724  01B2  0021               	movlb	1	; select bank1
 10725  01B3  00B5               	movwf	_gp2_fsm^(0+128)
 10726  01B4  0008               	return
 10727  01B5                     l7947:	
 10728                           
 10729                           ;GPports.c: 455: GP2REG = (ADC_GetConversion(A_GP2) >> 2);
 10730  01B5  3016               	movlw	22
 10731  01B6  2248               	fcall	_ADC_GetConversion
 10732  01B7  084A               	movf	?_ADC_GetConversion^(0+128),w
 10733  01B8  00CE               	movwf	??_GP2_FSM^(0+128)
 10734  01B9  084B               	movf	(?_ADC_GetConversion+1)^(0+128),w
 10735  01BA  00CF               	movwf	(??_GP2_FSM^(0+128)+1)
 10736  01BB  36CF               	lsrf	(??_GP2_FSM^(0+128)+1),f
 10737  01BC  0CCE               	rrf	??_GP2_FSM^(0+128),f
 10738  01BD  36CF               	lsrf	(??_GP2_FSM^(0+128)+1),f
 10739  01BE  0CCE               	rrf	??_GP2_FSM^(0+128),f
 10740  01BF  084E               	movf	??_GP2_FSM^(0+128),w
 10741  01C0  0020               	movlb	0	; select bank0
 10742  01C1  00C0               	movwf	_GP2REG	;volatile
 10743                           
 10744                           ;GPports.c: 456: break;
 10745  01C2  0008               	return
 10746  01C3                     l1332:	
 10747                           ;GPports.c: 458: case GP_WAITRISE:
 10748                           
 10749                           
 10750                           ;GPports.c: 459: if (PORTCbits.RC6 == 1) {
 10751  01C3  0020               	movlb	0	; select bank0
 10752  01C4  1F0E               	btfss	14,6	;volatile
 10753  01C5  0008               	return
 10754                           
 10755                           ;GPports.c: 460: GP2REG = 1;
 10756  01C6  3001               	movlw	1
 10757  01C7  00C0               	movwf	_GP2REG	;volatile
 10758                           
 10759                           ;GPports.c: 461: Int2StatusUpdate(E_GP2POS);
 10760  01C8  3004               	movlw	4
 10761  01C9  223A  3180         	fcall	_Int2StatusUpdate
 10762                           
 10763                           ;GPports.c: 462: if ((GP2CONF & 0x08) != 0) {
 10764  01CB  1DC6               	btfss	_GP2CONF,3	;volatile
 10765  01CC  29CE               	goto	l7957
 10766                           
 10767                           ;GPports.c: 463: SetInterrupt();
 10768  01CD  223F               	fcall	_SetInterrupt
 10769  01CE                     l7957:	
 10770                           
 10771                           ;GPports.c: 464: };GPports.c: 465: gp2_fsm = GP_WAITFALL;
 10772  01CE  3003               	movlw	3
 10773  01CF  0021               	movlb	1	; select bank1
 10774  01D0  00B5               	movwf	_gp2_fsm^(0+128)
 10775  01D1  0008               	return
 10776  01D2                     l1335:	
 10777                           ;GPports.c: 469: case GP_WAITFALL:
 10778                           
 10779                           
 10780                           ;GPports.c: 470: if (PORTCbits.RC6 == 0) {
 10781  01D2  0020               	movlb	0	; select bank0
 10782  01D3  1B0E               	btfsc	14,6	;volatile
 10783  01D4  0008               	return
 10784                           
 10785                           ;GPports.c: 472: GP2REG = 0;
 10786  01D5  01C0               	clrf	_GP2REG	;volatile
 10787                           
 10788                           ;GPports.c: 473: Int2StatusUpdate(E_GP2NEG);
 10789  01D6  3008               	movlw	8
 10790  01D7  223A  3180         	fcall	_Int2StatusUpdate
 10791                           
 10792                           ;GPports.c: 474: if ((GP2CONF & 0x10) != 0) {
 10793  01D9  1E46               	btfss	_GP2CONF,4	;volatile
 10794  01DA  29B1               	goto	l7943
 10795                           
 10796                           ;GPports.c: 475: SetInterrupt();
 10797  01DB  223F  3180         	fcall	_SetInterrupt
 10798  01DD  29B1               	goto	l7943
 10799  01DE                     l7971:	
 10800  01DE  0021               	movlb	1	; select bank1
 10801  01DF  0835               	movf	_gp2_fsm^(0+128),w
 10802                           
 10803                           ; Switch size 1, requested type "speed"
 10804                           ; Number of cases is 4, Range of values is 0 to 3
 10805                           ; switch strategies available:
 10806                           ; Name         Instructions Cycles
 10807                           ; direct_byte           14     6 (fixed)
 10808                           ; simple_byte           13     7 (average)
 10809                           ; jumptable            260     6 (fixed)
 10810                           ;	Chosen strategy is direct_byte
 10811  01E0  0084               	movwf	4
 10812  01E1  3004               	movlw	4
 10813  01E2  0204               	subwf	4,w
 10814  01E3  1803               	skipnc
 10815  01E4  0008               	return
 10816  01E5  3191               	movlp	high S8601
 10817  01E6  3504               	lslf	4,w
 10818  01E7  3E00               	addlw	low S8601
 10819  01E8  0082               	movwf	2
 10820  01E9  0008               	return
 10821  01EA                     __end_of_GP2_FSM:	
 10822  01EA                     __ptext15:	
 10823 ;; *************** function _GP3_FSM *****************
 10824 ;; Defined at:
 10825 ;;		line 487 in file "GPports.c"
 10826 ;; Parameters:    Size  Location     Type
 10827 ;;		None
 10828 ;; Auto vars:     Size  Location     Type
 10829 ;;		None
 10830 ;; Return value:  Size  Location     Type
 10831 ;;                  1    wreg      void 
 10832 ;; Registers used:
 10833 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10834 ;; Tracked objects:
 10835 ;;		On entry : 1E/1
 10836 ;;		On exit  : 1E/0
 10837 ;;		Unchanged: 0/0
 10838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10841 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10842 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 10843 ;;Total ram usage:        2 bytes
 10844 ;; Hardware stack levels used:    1
 10845 ;; Hardware stack levels required when called:    9
 10846 ;; This function calls:
 10847 ;;		_ADC_GetConversion
 10848 ;;		_ADC_Initialize
 10849 ;;		_Int2StatusUpdate
 10850 ;;		_SetInterrupt
 10851 ;; This function is called by:
 10852 ;;		_GP_Ports_FSM
 10853 ;; This function uses a non-reentrant model
 10854 ;;
 10855                           
 10856                           
 10857                           ;psect for function _GP3_FSM
 10858  01EA                     _GP3_FSM:	
 10859  01EA                     l7977:	
 10860                           ;incstack = 0
 10861                           ; Regs used in _GP3_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10862                           
 10863                           
 10864                           ;GPports.c: 489: if (C_ETYPE == 1)
 10865  01EA  0020               	movlb	0	; select bank0
 10866  01EB  0B38               	decfsz	_C_ETYPE,w	;volatile
 10867  01EC  2A2E               	goto	l8019
 10868  01ED  0008               	return
 10869  01EE                     l7981:	
 10870                           
 10871                           ;GPports.c: 494: if ((GP3CONF & 0x03) == 0x02) {
 10872  01EE  3003               	movlw	3
 10873  01EF  0020               	movlb	0	; select bank0
 10874  01F0  0545               	andwf	_GP3CONF,w	;volatile
 10875  01F1  0021               	movlb	1	; select bank1
 10876  01F2  00CE               	movwf	??_GP3_FSM^(0+128)
 10877  01F3  3A02               	xorlw	2
 10878  01F4  1D03               	btfss	3,2
 10879  01F5  29F9               	goto	l7989
 10880                           
 10881                           ;GPports.c: 495: gp3_fsm = GP_ADC_MODE;
 10882  01F6  01B4               	clrf	_gp3_fsm^(0+128)
 10883  01F7  0AB4               	incf	_gp3_fsm^(0+128),f
 10884                           
 10885                           ;GPports.c: 496: ADC_Initialize();
 10886  01F8  2A63               	ljmp	l7363
 10887  01F9                     l7989:	
 10888                           
 10889                           ;GPports.c: 498: };GPports.c: 500: if ((GP3CONF & 0x03) == 0x03) {
 10890  01F9  3003               	movlw	3
 10891  01FA  0020               	movlb	0	; select bank0
 10892  01FB  0545               	andwf	_GP3CONF,w	;volatile
 10893  01FC  0021               	movlb	1	; select bank1
 10894  01FD  00CE               	movwf	??_GP3_FSM^(0+128)
 10895  01FE  3A03               	xorlw	3
 10896  01FF  1D03               	btfss	3,2
 10897  0200  0008               	return
 10898  0201                     l7991:	
 10899                           
 10900                           ;GPports.c: 501: gp3_fsm = GP_WAITRISE;
 10901  0201  3002               	movlw	2
 10902  0202  0021               	movlb	1	; select bank1
 10903  0203  00B4               	movwf	_gp3_fsm^(0+128)
 10904  0204  0008               	return
 10905  0205                     l7995:	
 10906                           
 10907                           ;GPports.c: 507: GP3REG = (ADC_GetConversion(A_GP3) >> 2);
 10908  0205  3015               	movlw	21
 10909  0206  2248               	fcall	_ADC_GetConversion
 10910  0207  084A               	movf	?_ADC_GetConversion^(0+128),w
 10911  0208  00CE               	movwf	??_GP3_FSM^(0+128)
 10912  0209  084B               	movf	(?_ADC_GetConversion+1)^(0+128),w
 10913  020A  00CF               	movwf	(??_GP3_FSM^(0+128)+1)
 10914  020B  36CF               	lsrf	(??_GP3_FSM^(0+128)+1),f
 10915  020C  0CCE               	rrf	??_GP3_FSM^(0+128),f
 10916  020D  36CF               	lsrf	(??_GP3_FSM^(0+128)+1),f
 10917  020E  0CCE               	rrf	??_GP3_FSM^(0+128),f
 10918  020F  084E               	movf	??_GP3_FSM^(0+128),w
 10919  0210  0020               	movlb	0	; select bank0
 10920  0211  00BF               	movwf	_GP3REG	;volatile
 10921                           
 10922                           ;GPports.c: 508: break;
 10923  0212  0008               	return
 10924  0213                     l1348:	
 10925                           ;GPports.c: 510: case GP_WAITRISE:
 10926                           
 10927                           
 10928                           ;GPports.c: 511: if (PORTCbits.RC5 == 1) {
 10929  0213  0020               	movlb	0	; select bank0
 10930  0214  1E8E               	btfss	14,5	;volatile
 10931  0215  0008               	return
 10932                           
 10933                           ;GPports.c: 512: GP3REG = 1;
 10934  0216  3001               	movlw	1
 10935  0217  00BF               	movwf	_GP3REG	;volatile
 10936                           
 10937                           ;GPports.c: 513: Int2StatusUpdate(E_GP3POS);
 10938  0218  3010               	movlw	16
 10939  0219  223A  3180         	fcall	_Int2StatusUpdate
 10940                           
 10941                           ;GPports.c: 514: if ((GP3CONF & 0x08) != 0) {
 10942  021B  1DC5               	btfss	_GP3CONF,3	;volatile
 10943  021C  2A1E               	goto	l8005
 10944                           
 10945                           ;GPports.c: 515: SetInterrupt();
 10946  021D  223F               	fcall	_SetInterrupt
 10947  021E                     l8005:	
 10948                           
 10949                           ;GPports.c: 516: };GPports.c: 517: gp3_fsm = GP_WAITFALL;
 10950  021E  3003               	movlw	3
 10951  021F  0021               	movlb	1	; select bank1
 10952  0220  00B4               	movwf	_gp3_fsm^(0+128)
 10953  0221  0008               	return
 10954  0222                     l1351:	
 10955                           ;GPports.c: 521: case GP_WAITFALL:
 10956                           
 10957                           
 10958                           ;GPports.c: 522: if (PORTCbits.RC5 == 0) {
 10959  0222  0020               	movlb	0	; select bank0
 10960  0223  1A8E               	btfsc	14,5	;volatile
 10961  0224  0008               	return
 10962                           
 10963                           ;GPports.c: 524: GP3REG = 0;
 10964  0225  01BF               	clrf	_GP3REG	;volatile
 10965                           
 10966                           ;GPports.c: 525: Int2StatusUpdate(E_GP3NEG);
 10967  0226  3020               	movlw	32
 10968  0227  223A  3180         	fcall	_Int2StatusUpdate
 10969                           
 10970                           ;GPports.c: 526: if ((GP3CONF & 0x10) != 0) {
 10971  0229  1E45               	btfss	_GP3CONF,4	;volatile
 10972  022A  2A01               	goto	l7991
 10973                           
 10974                           ;GPports.c: 527: SetInterrupt();
 10975  022B  223F  3180         	fcall	_SetInterrupt
 10976  022D  2A01               	goto	l7991
 10977  022E                     l8019:	
 10978  022E  0021               	movlb	1	; select bank1
 10979  022F  0834               	movf	_gp3_fsm^(0+128),w
 10980                           
 10981                           ; Switch size 1, requested type "speed"
 10982                           ; Number of cases is 4, Range of values is 0 to 3
 10983                           ; switch strategies available:
 10984                           ; Name         Instructions Cycles
 10985                           ; direct_byte           14     6 (fixed)
 10986                           ; simple_byte           13     7 (average)
 10987                           ; jumptable            260     6 (fixed)
 10988                           ;	Chosen strategy is direct_byte
 10989  0230  0084               	movwf	4
 10990  0231  3004               	movlw	4
 10991  0232  0204               	subwf	4,w
 10992  0233  1803               	skipnc
 10993  0234  0008               	return
 10994  0235  3190               	movlp	high S8599
 10995  0236  3504               	lslf	4,w
 10996  0237  3EF2               	addlw	low S8599
 10997  0238  0082               	movwf	2
 10998  0239  0008               	return
 10999  023A                     __end_of_GP3_FSM:	
 11000  023A                     __ptext33:	
 11001 ;; *************** function _Int2StatusUpdate *****************
 11002 ;; Defined at:
 11003 ;;		line 142 in file "DataVariable.c"
 11004 ;; Parameters:    Size  Location     Type
 11005 ;;  stat            1    wreg     enum E87
 11006 ;; Auto vars:     Size  Location     Type
 11007 ;;  stat            1    1[BANK1 ] enum E87
 11008 ;; Return value:  Size  Location     Type
 11009 ;;                  1    wreg      void 
 11010 ;; Registers used:
 11011 ;;		wreg, status,2, status,0, pclath, cstack
 11012 ;; Tracked objects:
 11013 ;;		On entry : 1E/0
 11014 ;;		On exit  : 1F/0
 11015 ;;		Unchanged: 0/0
 11016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11018 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11020 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11021 ;;Total ram usage:        1 bytes
 11022 ;; Hardware stack levels used:    1
 11023 ;; Hardware stack levels required when called:    8
 11024 ;; This function calls:
 11025 ;;		_EncoderStatusUpdate
 11026 ;; This function is called by:
 11027 ;;		_FadeProcessClear
 11028 ;;		_GP1_FSM
 11029 ;;		_GP2_FSM
 11030 ;;		_GP3_FSM
 11031 ;; This function uses a non-reentrant model
 11032 ;;
 11033                           
 11034                           
 11035                           ;psect for function _Int2StatusUpdate
 11036  023A                     _Int2StatusUpdate:	
 11037                           
 11038                           ;incstack = 0
 11039                           ; Regs used in _Int2StatusUpdate: [wreg+status,2+status,0+pclath+cstack]
 11040                           ;Int2StatusUpdate@stat stored from wreg
 11041  023A  0021               	movlb	1	; select bank1
 11042  023B  00CB               	movwf	Int2StatusUpdate@stat^(0+128)
 11043                           
 11044                           ;DataVariable.c: 143: I2STATUS |= (uint8_t) stat;
 11045  023C  04C7               	iorwf	_I2STATUS^(0+128),f	;volatile
 11046                           
 11047                           ;DataVariable.c: 144: EncoderStatusUpdate(S_INT2);
 11048  023D  3080               	movlw	128
 11049  023E  2B07               	ljmp	_EncoderStatusUpdate
 11050  023F                     __end_of_Int2StatusUpdate:	
 11051  023F                     __ptext35:	
 11052 ;; *************** function _SetInterrupt *****************
 11053 ;; Defined at:
 11054 ;;		line 56 in file "main.c"
 11055 ;; Parameters:    Size  Location     Type
 11056 ;;		None
 11057 ;; Auto vars:     Size  Location     Type
 11058 ;;		None
 11059 ;; Return value:  Size  Location     Type
 11060 ;;                  1    wreg      void 
 11061 ;; Registers used:
 11062 ;;		wreg, status,2, status,0
 11063 ;; Tracked objects:
 11064 ;;		On entry : 18/0
 11065 ;;		On exit  : 1C/0
 11066 ;;		Unchanged: 0/0
 11067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11072 ;;Total ram usage:        0 bytes
 11073 ;; Hardware stack levels used:    1
 11074 ;; Hardware stack levels required when called:    7
 11075 ;; This function calls:
 11076 ;;		Nothing
 11077 ;; This function is called by:
 11078 ;;		_FadeProcessClear
 11079 ;;		_GP1_FSM
 11080 ;;		_GP2_FSM
 11081 ;;		_GP3_FSM
 11082 ;;		_Encoder_PushButton_FSM
 11083 ;; This function uses a non-reentrant model
 11084 ;;
 11085                           
 11086                           
 11087                           ;psect for function _SetInterrupt
 11088  023F                     _SetInterrupt:	
 11089  023F                     l7329:	
 11090                           ;incstack = 0
 11091                           ; Regs used in _SetInterrupt: [wreg+status,2+status,0]
 11092                           
 11093                           
 11094                           ;main.c: 58: if ((ESTATUS & INTCONF) != 0) {
 11095  023F  0020               	movlb	0	; select bank0
 11096  0240  0849               	movf	_ESTATUS,w	;volatile
 11097  0241  0021               	movlb	1	; select bank1
 11098  0242  0549               	andwf	_INTCONF^(0+128),w	;volatile
 11099  0243  1903               	btfsc	3,2
 11100  0244  0008               	return
 11101                           
 11102                           ;main.c: 59: do { LATBbits.LATB5 = 0; } while(0);
 11103  0245  0022               	movlb	2	; select bank2
 11104  0246  128D               	bcf	13,5	;volatile
 11105  0247  0008               	return
 11106  0248                     __end_of_SetInterrupt:	
 11107  0248                     __ptext19:	
 11108 ;; *************** function _ADC_GetConversion *****************
 11109 ;; Defined at:
 11110 ;;		line 113 in file "mcc_generated_files/adc.c"
 11111 ;; Parameters:    Size  Location     Type
 11112 ;;  channel         1    wreg     enum E6505
 11113 ;; Auto vars:     Size  Location     Type
 11114 ;;  channel         1    3[BANK1 ] enum E6505
 11115 ;; Return value:  Size  Location     Type
 11116 ;;                  2    0[BANK1 ] unsigned int 
 11117 ;; Registers used:
 11118 ;;		wreg, status,2, status,0
 11119 ;; Tracked objects:
 11120 ;;		On entry : 1E/1
 11121 ;;		On exit  : 1F/1
 11122 ;;		Unchanged: 0/0
 11123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11124 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11125 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11126 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11127 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 11128 ;;Total ram usage:        4 bytes
 11129 ;; Hardware stack levels used:    1
 11130 ;; Hardware stack levels required when called:    7
 11131 ;; This function calls:
 11132 ;;		Nothing
 11133 ;; This function is called by:
 11134 ;;		_GP1_FSM
 11135 ;;		_GP2_FSM
 11136 ;;		_GP3_FSM
 11137 ;; This function uses a non-reentrant model
 11138 ;;
 11139                           
 11140                           
 11141                           ;psect for function _ADC_GetConversion
 11142  0248                     _ADC_GetConversion:	
 11143                           
 11144                           ;incstack = 0
 11145                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 11146                           ;ADC_GetConversion@channel stored from wreg
 11147  0248  0021               	movlb	1	; select bank1
 11148  0249  00CD               	movwf	ADC_GetConversion@channel^(0+128)
 11149                           
 11150                           ;adc.c: 116: ADCON0bits.CHS = channel;
 11151  024A  00CC               	movwf	??_ADC_GetConversion^(0+128)
 11152  024B  0DCC               	rlf	??_ADC_GetConversion^(0+128),f
 11153  024C  0DCC               	rlf	??_ADC_GetConversion^(0+128),f
 11154  024D  081D               	movf	29,w	;volatile
 11155  024E  064C               	xorwf	??_ADC_GetConversion^(0+128),w
 11156  024F  3903               	andlw	-253
 11157  0250  064C               	xorwf	??_ADC_GetConversion^(0+128),w
 11158  0251  009D               	movwf	29	;volatile
 11159                           
 11160                           ;adc.c: 119: ADCON0bits.ADON = 1;
 11161  0252  141D               	bsf	29,0	;volatile
 11162                           
 11163                           ;adc.c: 122: _delay((unsigned long)((5)*(32000000/4000000.0)));
 11164  0253  300D               	movlw	13
 11165  0254                     u5897:	
 11166  0254  0B89               	decfsz	9,f
 11167  0255  2A54               	goto	u5897
 11168  0256  0000               	nop
 11169                           
 11170                           ;adc.c: 125: ADCON0bits.ADGO = 1;
 11171  0257  0021               	movlb	1	; select bank1
 11172  0258  149D               	bsf	29,1	;volatile
 11173  0259                     l396:	
 11174                           ;adc.c: 129: {
 11175                           
 11176  0259  189D               	btfsc	29,1	;volatile
 11177  025A  2A59               	goto	l396
 11178                           
 11179                           ;adc.c: 130: };adc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 11180  025B  081C               	movf	28,w	;volatile
 11181  025C  00CB               	movwf	(?_ADC_GetConversion+1)^(0+128)
 11182  025D  01CA               	clrf	?_ADC_GetConversion^(0+128)
 11183  025E  081B               	movf	27,w	;volatile
 11184  025F  07CA               	addwf	?_ADC_GetConversion^(0+128),f
 11185  0260  1803               	skipnc
 11186  0261  0ACB               	incf	(?_ADC_GetConversion+1)^(0+128),f
 11187  0262  0008               	return
 11188  0263                     __end_of_ADC_GetConversion:	
 11189  0263                     __ptext18:	
 11190 ;; *************** function _ADC_Initialize *****************
 11191 ;; Defined at:
 11192 ;;		line 65 in file "mcc_generated_files/adc.c"
 11193 ;; Parameters:    Size  Location     Type
 11194 ;;		None
 11195 ;; Auto vars:     Size  Location     Type
 11196 ;;		None
 11197 ;; Return value:  Size  Location     Type
 11198 ;;                  1    wreg      void 
 11199 ;; Registers used:
 11200 ;;		wreg, status,2
 11201 ;; Tracked objects:
 11202 ;;		On entry : 1F/1
 11203 ;;		On exit  : 1F/1
 11204 ;;		Unchanged: 0/0
 11205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11210 ;;Total ram usage:        0 bytes
 11211 ;; Hardware stack levels used:    1
 11212 ;; Hardware stack levels required when called:    7
 11213 ;; This function calls:
 11214 ;;		Nothing
 11215 ;; This function is called by:
 11216 ;;		_GP1_FSM
 11217 ;;		_GP2_FSM
 11218 ;;		_GP3_FSM
 11219 ;; This function uses a non-reentrant model
 11220 ;;
 11221                           
 11222                           
 11223                           ;psect for function _ADC_Initialize
 11224  0263                     _ADC_Initialize:	
 11225  0263                     l7363:	
 11226                           ;incstack = 0
 11227                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 11228                           
 11229                           
 11230                           ;adc.c: 70: ADCON0 = 0x01;
 11231  0263  3001               	movlw	1
 11232  0264  009D               	movwf	29	;volatile
 11233                           
 11234                           ;adc.c: 73: ADCON1 = 0xE0;
 11235  0265  30E0               	movlw	224
 11236  0266  009E               	movwf	30	;volatile
 11237                           
 11238                           ;adc.c: 76: ADACT = 0x00;
 11239  0267  019F               	clrf	31	;volatile
 11240                           
 11241                           ;adc.c: 79: ADRESL = 0x00;
 11242  0268  019B               	clrf	27	;volatile
 11243                           
 11244                           ;adc.c: 82: ADRESH = 0x00;
 11245  0269  019C               	clrf	28	;volatile
 11246  026A  0008               	return
 11247  026B                     __end_of_ADC_Initialize:	
 11248  026B                     __ptext21:	
 11249 ;; *************** function _FADE_GP2 *****************
 11250 ;; Defined at:
 11251 ;;		line 63 in file "GPports.c"
 11252 ;; Parameters:    Size  Location     Type
 11253 ;;		None
 11254 ;; Auto vars:     Size  Location     Type
 11255 ;;		None
 11256 ;; Return value:  Size  Location     Type
 11257 ;;                  1    wreg      void 
 11258 ;; Registers used:
 11259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11260 ;; Tracked objects:
 11261 ;;		On entry : 10/1
 11262 ;;		On exit  : 18/0
 11263 ;;		Unchanged: 0/0
 11264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11269 ;;Total ram usage:        0 bytes
 11270 ;; Hardware stack levels used:    1
 11271 ;; Hardware stack levels required when called:   10
 11272 ;; This function calls:
 11273 ;;		_FadeProcessClear
 11274 ;;		_FadeProcessSet
 11275 ;;		_PWM_GP2
 11276 ;; This function is called by:
 11277 ;;		_GP_Ports_FSM
 11278 ;; This function uses a non-reentrant model
 11279 ;;
 11280                           
 11281                           
 11282                           ;psect for function _FADE_GP2
 11283  026B                     _FADE_GP2:	
 11284                           
 11285                           ;GPports.c: 65: if ((GP2CONF & 0x03) != 0x00)
 11286                           
 11287                           ;incstack = 0
 11288                           ; Regs used in _FADE_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11289  026B  0020               	movlb	0	; select bank0
 11290  026C  0846               	movf	_GP2CONF,w	;volatile
 11291  026D  3903               	andlw	3
 11292  026E  1D03               	btfss	3,2
 11293  026F  0008               	return
 11294                           
 11295                           ;GPports.c: 68: if (FADEGP == 0) {
 11296  0270  083E               	movf	_FADEGP,w	;volatile
 11297  0271  1D03               	btfss	3,2
 11298  0272  2A7A               	goto	l7831
 11299                           
 11300                           ;GPports.c: 69: if (temp_gp2 != GP2REG) {
 11301  0273  0834               	movf	_temp_gp2,w
 11302  0274  0640               	xorwf	_GP2REG,w	;volatile
 11303  0275  1903               	skipnz
 11304  0276  0008               	return
 11305                           
 11306                           ;GPports.c: 70: temp_gp2 = GP2REG;
 11307  0277  0840               	movf	_GP2REG,w	;volatile
 11308  0278  00B4               	movwf	_temp_gp2
 11309                           
 11310                           ;GPports.c: 71: PWM_GP2(temp_gp2);
 11311  0279  2A97               	ljmp	_PWM_GP2
 11312  027A                     l7831:	
 11313                           
 11314                           ;GPports.c: 74: };GPports.c: 76: if (gp_fade_cnt >= FADEGP) {
 11315  027A  083E               	movf	_FADEGP,w	;volatile
 11316  027B  0021               	movlb	1	; select bank1
 11317  027C  0233               	subwf	_gp_fade_cnt^(0+128),w
 11318  027D  1C03               	skipc
 11319  027E  0008               	return
 11320                           
 11321                           ;GPports.c: 77: if (temp_gp2 != GP2REG) {
 11322  027F  0020               	movlb	0	; select bank0
 11323  0280  0834               	movf	_temp_gp2,w
 11324  0281  0640               	xorwf	_GP2REG,w	;volatile
 11325  0282  1903               	skipnz
 11326  0283  0008               	return
 11327                           
 11328                           ;GPports.c: 79: if (temp_gp2 < GP2REG) {
 11329  0284  0840               	movf	_GP2REG,w	;volatile
 11330  0285  0234               	subwf	_temp_gp2,w
 11331  0286  1C03               	btfss	3,0
 11332                           
 11333                           ;GPports.c: 80: temp_gp2++;
 11334  0287  0AB4               	incf	_temp_gp2,f
 11335                           
 11336                           ;GPports.c: 81: };GPports.c: 82: if (temp_gp2 > GP2REG) {
 11337  0288  0834               	movf	_temp_gp2,w
 11338  0289  0240               	subwf	_GP2REG,w	;volatile
 11339  028A  1C03               	btfss	3,0
 11340                           
 11341                           ;GPports.c: 83: temp_gp2--;
 11342  028B  03B4               	decf	_temp_gp2,f
 11343                           
 11344                           ;GPports.c: 84: };GPports.c: 86: PWM_GP2(temp_gp2);
 11345  028C  0834               	movf	_temp_gp2,w
 11346  028D  2297  3180         	fcall	_PWM_GP2
 11347                           
 11348                           ;GPports.c: 87: if (temp_gp2 == GP2REG) {
 11349  028F  0020               	movlb	0	; select bank0
 11350  0290  0834               	movf	_temp_gp2,w
 11351  0291  0640               	xorwf	_GP2REG,w	;volatile
 11352                           
 11353                           ;GPports.c: 88: FadeProcessClear(F_FGP2);
 11354  0292  3010               	movlw	16
 11355  0293  1D03               	skipz
 11356  0294  2A96               	goto	L2
 11357  0295  2CB8               	ljmp	_FadeProcessClear
 11358  0296                     L2:	
 11359                           ;GPports.c: 90: FadeProcessSet(F_FGP2);
 11360                           
 11361                           ;GPports.c: 89: } else {
 11362                           
 11363  0296  2CC0               	ljmp	_FadeProcessSet
 11364  0297                     __end_of_FADE_GP2:	
 11365  0297                     __ptext22:	
 11366 ;; *************** function _PWM_GP2 *****************
 11367 ;; Defined at:
 11368 ;;		line 64 in file "PWM.c"
 11369 ;; Parameters:    Size  Location     Type
 11370 ;;  duty            1    wreg     unsigned char 
 11371 ;; Auto vars:     Size  Location     Type
 11372 ;;  duty            1   12[BANK1 ] unsigned char 
 11373 ;; Return value:  Size  Location     Type
 11374 ;;                  1    wreg      void 
 11375 ;; Registers used:
 11376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11377 ;; Tracked objects:
 11378 ;;		On entry : 1F/0
 11379 ;;		On exit  : 1F/6
 11380 ;;		Unchanged: 0/0
 11381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11383 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11384 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 11385 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 11386 ;;Total ram usage:        7 bytes
 11387 ;; Hardware stack levels used:    1
 11388 ;; Hardware stack levels required when called:    8
 11389 ;; This function calls:
 11390 ;;		___wmul
 11391 ;; This function is called by:
 11392 ;;		_FADE_GP2
 11393 ;; This function uses a non-reentrant model
 11394 ;;
 11395                           
 11396                           
 11397                           ;psect for function _PWM_GP2
 11398  0297                     _PWM_GP2:	
 11399                           
 11400                           ;incstack = 0
 11401                           ; Regs used in _PWM_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11402                           ;PWM_GP2@duty stored from wreg
 11403  0297  0021               	movlb	1	; select bank1
 11404  0298  00D6               	movwf	PWM_GP2@duty^(0+128)
 11405                           
 11406                           ;PWM.c: 66: if (duty == 0) {
 11407  0299  0856               	movf	PWM_GP2@duty^(0+128),w
 11408  029A  1D03               	btfss	3,2
 11409  029B  2AB0               	goto	l7457
 11410                           
 11411                           ;PWM.c: 68: do { LATCbits.LATC6 = 1; } while(0);
 11412  029C  0022               	movlb	2	; select bank2
 11413  029D  170E               	bsf	14,6	;volatile
 11414                           
 11415                           ;PWM.c: 69: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 11416  029E  3055               	movlw	85
 11417  029F  003C               	movlb	28	; select bank28
 11418  02A0  008F               	movwf	15	;volsfr
 11419  02A1  30AA               	movlw	170
 11420  02A2  008F               	movwf	15	;volsfr
 11421  02A3  100F               	bcf	15,0	;volsfr
 11422                           
 11423                           ;PWM.c: 70: RC6PPSbits.RC6PPS = 0x00;
 11424  02A4  30E0               	movlw	-32
 11425  02A5  003D               	movlb	29	; select bank29
 11426  02A6  05A6               	andwf	38,f	;volatile
 11427                           
 11428                           ;PWM.c: 71: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 11429  02A7  3055               	movlw	85
 11430  02A8  003C               	movlb	28	; select bank28
 11431  02A9  008F               	movwf	15	;volsfr
 11432  02AA  30AA               	movlw	170
 11433  02AB  008F               	movwf	15	;volsfr
 11434  02AC  140F               	bsf	15,0	;volsfr
 11435                           
 11436                           ;PWM.c: 72: CCP4CON = 0;
 11437  02AD  0026               	movlb	6	; select bank6
 11438  02AE  0197               	clrf	23	;volatile
 11439  02AF  0008               	return
 11440  02B0                     l7457:	
 11441                           
 11442                           ;PWM.c: 74: };PWM.c: 75: if (CCP4CON == 0) {
 11443  02B0  0026               	movlb	6	; select bank6
 11444  02B1  0817               	movf	23,w	;volatile
 11445  02B2  1D03               	btfss	3,2
 11446  02B3  2AC8               	goto	l1578
 11447                           
 11448                           ;PWM.c: 76: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 11449  02B4  3055               	movlw	85
 11450  02B5  003C               	movlb	28	; select bank28
 11451  02B6  008F               	movwf	15	;volsfr
 11452  02B7  30AA               	movlw	170
 11453  02B8  008F               	movwf	15	;volsfr
 11454  02B9  100F               	bcf	15,0	;volsfr
 11455                           
 11456                           ;PWM.c: 77: RC6PPSbits.RC6PPS = 0x0F;
 11457  02BA  003D               	movlb	29	; select bank29
 11458  02BB  0826               	movf	38,w	;volatile
 11459  02BC  39E0               	andlw	-32
 11460  02BD  380F               	iorlw	15
 11461  02BE  00A6               	movwf	38	;volatile
 11462                           
 11463                           ;PWM.c: 78: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 11464  02BF  3055               	movlw	85
 11465  02C0  003C               	movlb	28	; select bank28
 11466  02C1  008F               	movwf	15	;volsfr
 11467  02C2  30AA               	movlw	170
 11468  02C3  008F               	movwf	15	;volsfr
 11469  02C4  140F               	bsf	15,0	;volsfr
 11470                           
 11471                           ;PWM.c: 79: CCP4CON = 0x8F;
 11472  02C5  308F               	movlw	143
 11473  02C6  0026               	movlb	6	; select bank6
 11474  02C7  0097               	movwf	23	;volatile
 11475  02C8                     l1578:	
 11476                           
 11477                           ;PWM.c: 80: };PWM.c: 81: if (GAMMAGP2 == 0) {
 11478  02C8  0020               	movlb	0	; select bank0
 11479  02C9  083C               	movf	_GAMMAGP2,w	;volatile
 11480  02CA  1D03               	btfss	3,2
 11481  02CB  2ADC               	goto	l7475
 11482                           
 11483                           ;PWM.c: 83: CCPR4 = (uint16_t) (0xff - duty) << 2;
 11484  02CC  0021               	movlb	1	; select bank1
 11485  02CD  0956               	comf	PWM_GP2@duty^(0+128),w
 11486  02CE  00D0               	movwf	??_PWM_GP2^(0+128)
 11487  02CF  01D1               	clrf	(??_PWM_GP2^(0+128)+1)
 11488  02D0  35D0               	lslf	??_PWM_GP2^(0+128),f
 11489  02D1  0DD1               	rlf	(??_PWM_GP2^(0+128)+1),f
 11490  02D2  35D0               	lslf	??_PWM_GP2^(0+128),f
 11491  02D3  0DD1               	rlf	(??_PWM_GP2^(0+128)+1),f
 11492  02D4  0850               	movf	??_PWM_GP2^(0+128),w
 11493  02D5  0026               	movlb	6	; select bank6
 11494  02D6  0095               	movwf	21	;volatile
 11495  02D7  0021               	movlb	1	; select bank1
 11496  02D8  0851               	movf	(??_PWM_GP2+1)^(0+128),w
 11497  02D9  0026               	movlb	6	; select bank6
 11498  02DA  0096               	movwf	22	;volatile
 11499                           
 11500                           ;PWM.c: 85: } else {
 11501  02DB  0008               	return
 11502  02DC                     l7475:	
 11503                           
 11504                           ;PWM.c: 86: if (duty > 100)
 11505  02DC  3065               	movlw	101
 11506  02DD  0021               	movlb	1	; select bank1
 11507  02DE  0256               	subwf	PWM_GP2@duty^(0+128),w
 11508  02DF  1C03               	skipc
 11509  02E0  2AE3               	goto	l7479
 11510                           
 11511                           ;PWM.c: 87: duty = 100;
 11512  02E1  3064               	movlw	100
 11513  02E2  00D6               	movwf	PWM_GP2@duty^(0+128)
 11514  02E3                     l7479:	
 11515                           
 11516                           ;PWM.c: 88: CCPR4 = (uint16_t) gamma_table[GAMMAGP2 - 1U][(duty - 1U)];
 11517  02E3  0856               	movf	PWM_GP2@duty^(0+128),w
 11518  02E4  00D0               	movwf	??_PWM_GP2^(0+128)
 11519  02E5  01D1               	clrf	(??_PWM_GP2^(0+128)+1)
 11520  02E6  35D0               	lslf	??_PWM_GP2^(0+128),f
 11521  02E7  0DD1               	rlf	(??_PWM_GP2^(0+128)+1),f
 11522  02E8  0020               	movlb	0	; select bank0
 11523  02E9  083C               	movf	_GAMMAGP2,w	;volatile
 11524  02EA  0021               	movlb	1	; select bank1
 11525  02EB  00CA               	movwf	___wmul@multiplier^(0+128)
 11526  02EC  30C8               	movlw	200
 11527  02ED  01CB               	clrf	(___wmul@multiplier+1)^(0+128)
 11528  02EE  00CC               	movwf	___wmul@multiplicand^(0+128)
 11529  02EF  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
 11530  02F0  261D               	fcall	___wmul
 11531  02F1  3018               	movlw	low ((_gamma_table| (0+32768)+65334))
 11532  02F2  00D2               	movwf	(??_PWM_GP2+2)^(0+128)
 11533  02F3  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 11534  02F4  00D3               	movwf	((??_PWM_GP2+2)^(0+128)+1)
 11535  02F5  084A               	movf	?___wmul^(0+128),w
 11536  02F6  0752               	addwf	(??_PWM_GP2+2)^(0+128),w
 11537  02F7  00D4               	movwf	(??_PWM_GP2+4)^(0+128)
 11538  02F8  084B               	movf	(?___wmul+1)^(0+128),w
 11539  02F9  3D53               	addwfc	(??_PWM_GP2+3)^(0+128),w
 11540  02FA  00D5               	movwf	(??_PWM_GP2+5)^(0+128)
 11541  02FB  0854               	movf	(??_PWM_GP2+4)^(0+128),w
 11542  02FC  0750               	addwf	??_PWM_GP2^(0+128),w
 11543  02FD  0084               	movwf	4
 11544  02FE  0855               	movf	(??_PWM_GP2+5)^(0+128),w
 11545  02FF  3D51               	addwfc	(??_PWM_GP2+1)^(0+128),w
 11546  0300  0085               	movwf	5
 11547  0301  3F00               	moviw [0]fsr0
 11548  0302  0026               	movlb	6	; select bank6
 11549  0303  0095               	movwf	21	;volatile
 11550  0304  3F01               	moviw [1]fsr0
 11551  0305  0096               	movwf	22	;volatile
 11552  0306  0008               	return
 11553  0307                     __end_of_PWM_GP2:	
 11554  0307                     __ptext38:	
 11555 ;; *************** function _EncoderStatusUpdate *****************
 11556 ;; Defined at:
 11557 ;;		line 134 in file "DataVariable.c"
 11558 ;; Parameters:    Size  Location     Type
 11559 ;;  stat            1    wreg     enum E77
 11560 ;; Auto vars:     Size  Location     Type
 11561 ;;  stat            1    0[BANK1 ] enum E77
 11562 ;; Return value:  Size  Location     Type
 11563 ;;                  1    wreg      void 
 11564 ;; Registers used:
 11565 ;;		wreg, status,2, status,0
 11566 ;; Tracked objects:
 11567 ;;		On entry : 1F/1
 11568 ;;		On exit  : 1F/0
 11569 ;;		Unchanged: 0/0
 11570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11572 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11574 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 11575 ;;Total ram usage:        1 bytes
 11576 ;; Hardware stack levels used:    1
 11577 ;; Hardware stack levels required when called:    7
 11578 ;; This function calls:
 11579 ;;		Nothing
 11580 ;; This function is called by:
 11581 ;;		_Int2StatusUpdate
 11582 ;;		_Encoder_PushButton_FSM
 11583 ;; This function uses a non-reentrant model
 11584 ;;
 11585                           
 11586                           
 11587                           ;psect for function _EncoderStatusUpdate
 11588  0307                     _EncoderStatusUpdate:	
 11589                           
 11590                           ;incstack = 0
 11591                           ; Regs used in _EncoderStatusUpdate: [wreg+status,2+status,0]
 11592                           ;EncoderStatusUpdate@stat stored from wreg
 11593  0307  00CA               	movwf	EncoderStatusUpdate@stat^(0+128)
 11594                           
 11595                           ;DataVariable.c: 135: ESTATUS |= (uint8_t) stat;
 11596  0308  0020               	movlb	0	; select bank0
 11597  0309  04C9               	iorwf	_ESTATUS,f	;volatile
 11598  030A  0008               	return
 11599  030B                     __end_of_EncoderStatusUpdate:	
 11600  030B                     __ptext37:	
 11601 ;; *************** function _EncoderSwitch_GetValue *****************
 11602 ;; Defined at:
 11603 ;;		line 29 in file "Encoder.c"
 11604 ;; Parameters:    Size  Location     Type
 11605 ;;		None
 11606 ;; Auto vars:     Size  Location     Type
 11607 ;;		None
 11608 ;; Return value:  Size  Location     Type
 11609 ;;                  1    wreg      unsigned char 
 11610 ;; Registers used:
 11611 ;;		wreg, status,2, status,0
 11612 ;; Tracked objects:
 11613 ;;		On entry : 18/1
 11614 ;;		On exit  : 1F/0
 11615 ;;		Unchanged: 0/0
 11616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11621 ;;Total ram usage:        0 bytes
 11622 ;; Hardware stack levels used:    1
 11623 ;; Hardware stack levels required when called:    7
 11624 ;; This function calls:
 11625 ;;		Nothing
 11626 ;; This function is called by:
 11627 ;;		_EncoderSwitch_GetValueFiltered
 11628 ;; This function uses a non-reentrant model
 11629 ;;
 11630                           
 11631                           
 11632                           ;psect for function _EncoderSwitch_GetValue
 11633  030B                     _EncoderSwitch_GetValue:	
 11634                           
 11635                           ;Encoder.c: 30: if (C_ETYPE == 1) {
 11636                           
 11637                           ;incstack = 0
 11638                           ; Regs used in _EncoderSwitch_GetValue: [wreg+status,2+status,0]
 11639  030B  0020               	movlb	0	; select bank0
 11640  030C  0B38               	decfsz	_C_ETYPE,w	;volatile
 11641  030D  2B12               	goto	l7343
 11642                           
 11643                           ;Encoder.c: 31: return (PORTCbits.RC2);
 11644  030E  0C0E               	rrf	14,w	;volatile
 11645  030F  0C89               	rrf	9,f
 11646  0310  3901               	andlw	1
 11647  0311  0008               	return
 11648  0312                     l7343:	
 11649                           
 11650                           ;Encoder.c: 33: return ((bool)!PORTCbits.RC4);
 11651  0312  1003               	clrc
 11652  0313  1E0E               	btfss	14,4	;volatile
 11653  0314  1403               	setc
 11654  0315  3000               	movlw	0
 11655  0316  3D09               	addwfc	9,w
 11656  0317  0008               	return
 11657  0318                     __end_of_EncoderSwitch_GetValue:	
 11658  0318                     __ptext25:	
 11659 ;; *************** function _Encoder_FSM *****************
 11660 ;; Defined at:
 11661 ;;		line 308 in file "Encoder.c"
 11662 ;; Parameters:    Size  Location     Type
 11663 ;;		None
 11664 ;; Auto vars:     Size  Location     Type
 11665 ;;		None
 11666 ;; Return value:  Size  Location     Type
 11667 ;;                  1    wreg      void 
 11668 ;; Registers used:
 11669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11670 ;; Tracked objects:
 11671 ;;		On entry : 1F/1
 11672 ;;		On exit  : 1C/0
 11673 ;;		Unchanged: 0/0
 11674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11679 ;;Total ram usage:        0 bytes
 11680 ;; Hardware stack levels used:    1
 11681 ;; Hardware stack levels required when called:   11
 11682 ;; This function calls:
 11683 ;;		_Encoder_PushButton_FSM
 11684 ;;		_FADE_LEDS
 11685 ;; This function is called by:
 11686 ;;		_main
 11687 ;; This function uses a non-reentrant model
 11688 ;;
 11689                           
 11690                           
 11691                           ;psect for function _Encoder_FSM
 11692  0318                     _Encoder_FSM:	
 11693                           
 11694                           ;Encoder.c: 309: if (en_deb < DEBOUNCE) {
 11695                           
 11696                           ;incstack = 0
 11697                           ; Regs used in _Encoder_FSM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11698  0318  0829               	movf	(_DEBOUNCE+1)^(0+128),w	;volatile
 11699  0319  0221               	subwf	(_en_deb+1)^(0+128),w
 11700  031A  1D03               	skipz
 11701  031B  2B1E               	goto	u5855
 11702  031C  0828               	movf	_DEBOUNCE^(0+128),w	;volatile
 11703  031D  0220               	subwf	_en_deb^(0+128),w
 11704  031E                     u5855:	
 11705  031E  1803               	skipnc
 11706  031F  2B23               	goto	l8209
 11707                           
 11708                           ;Encoder.c: 310: en_deb++;
 11709  0320  0AA0               	incf	_en_deb^(0+128),f
 11710  0321  1903               	skipnz
 11711  0322  0AA1               	incf	(_en_deb+1)^(0+128),f
 11712  0323                     l8209:	
 11713                           
 11714                           ;Encoder.c: 311: };Encoder.c: 313: FADE_LEDS();
 11715  0323  2440  3180         	fcall	_FADE_LEDS
 11716                           
 11717                           ;Encoder.c: 314: Encoder_PushButton_FSM();
 11718  0325  28AF               	ljmp	l8111
 11719  0326                     __end_of_Encoder_FSM:	
 11720  0326                     __ptext5:	
 11721 ;; *************** function _TMR3_SetInterruptHandler *****************
 11722 ;; Defined at:
 11723 ;;		line 178 in file "mcc_generated_files/tmr3.c"
 11724 ;; Parameters:    Size  Location     Type
 11725 ;;  InterruptHan    2    0[BANK1 ] PTR FTN()void 
 11726 ;;		 -> TimerInt(1), TMR3_DefaultInterruptHandler(1), 
 11727 ;; Auto vars:     Size  Location     Type
 11728 ;;		None
 11729 ;; Return value:  Size  Location     Type
 11730 ;;                  1    wreg      void 
 11731 ;; Registers used:
 11732 ;;		wreg
 11733 ;; Tracked objects:
 11734 ;;		On entry : 1F/1
 11735 ;;		On exit  : 1F/1
 11736 ;;		Unchanged: 0/0
 11737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11738 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11741 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 11742 ;;Total ram usage:        2 bytes
 11743 ;; Hardware stack levels used:    1
 11744 ;; Hardware stack levels required when called:    7
 11745 ;; This function calls:
 11746 ;;		Nothing
 11747 ;; This function is called by:
 11748 ;;		_TMR3_Initialize
 11749 ;;		_main
 11750 ;; This function uses a non-reentrant model
 11751 ;;
 11752                           
 11753                           
 11754                           ;psect for function _TMR3_SetInterruptHandler
 11755  0326                     _TMR3_SetInterruptHandler:	
 11756                           
 11757                           ;tmr3.c: 179: TMR3_InterruptHandler = InterruptHandler;
 11758                           
 11759                           ;incstack = 0
 11760                           ; Regs used in _TMR3_SetInterruptHandler: [wreg]
 11761  0326  084B               	movf	(TMR3_SetInterruptHandler@InterruptHandler+1)^(0+128),w
 11762  0327  00AB               	movwf	(_TMR3_InterruptHandler+1)^(0+128)
 11763  0328  084A               	movf	TMR3_SetInterruptHandler@InterruptHandler^(0+128),w
 11764  0329  00AA               	movwf	_TMR3_InterruptHandler^(0+128)
 11765  032A  0008               	return
 11766  032B                     __end_of_TMR3_SetInterruptHandler:	
 11767  032B                     __ptext2:	
 11768 ;; *************** function _SYSTEM_Initialize *****************
 11769 ;; Defined at:
 11770 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;		None
 11773 ;; Auto vars:     Size  Location     Type
 11774 ;;		None
 11775 ;; Return value:  Size  Location     Type
 11776 ;;                  1    wreg      void 
 11777 ;; Registers used:
 11778 ;;		wreg, status,2, status,0, pclath, cstack
 11779 ;; Tracked objects:
 11780 ;;		On entry : B1F/0
 11781 ;;		On exit  : 1F/8
 11782 ;;		Unchanged: 0/0
 11783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11788 ;;Total ram usage:        0 bytes
 11789 ;; Hardware stack levels used:    1
 11790 ;; Hardware stack levels required when called:    9
 11791 ;; This function calls:
 11792 ;;		_CLC1_Initialize
 11793 ;;		_CLC2_Initialize
 11794 ;;		_I2C1_AddressSet
 11795 ;;		_I2C1_Initialize
 11796 ;;		_OSCILLATOR_Initialize
 11797 ;;		_PIN_MANAGER_Initialize
 11798 ;;		_PMD_Initialize
 11799 ;;		_TMR2_Initialize
 11800 ;;		_TMR3_Initialize
 11801 ;;		_WDT_Initialize
 11802 ;; This function is called by:
 11803 ;;		_main
 11804 ;; This function uses a non-reentrant model
 11805 ;;
 11806                           
 11807                           
 11808                           ;psect for function _SYSTEM_Initialize
 11809  032B                     _SYSTEM_Initialize:	
 11810                           
 11811                           ;mcc.c: 53: PMD_Initialize();
 11812                           
 11813                           ;incstack = 0
 11814                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11815  032B  2695  3180         	fcall	_PMD_Initialize
 11816                           
 11817                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 11818  032D  265F  3180         	fcall	_PIN_MANAGER_Initialize
 11819                           
 11820                           ;mcc.c: 55: OSCILLATOR_Initialize();
 11821  032F  2656  3180         	fcall	_OSCILLATOR_Initialize
 11822                           
 11823                           ;mcc.c: 56: WDT_Initialize();
 11824  0331  26AB  3180         	fcall	_WDT_Initialize
 11825                           
 11826                           ;mcc.c: 57: I2C1_AddressSet();
 11827  0333  2632  3180         	fcall	_I2C1_AddressSet
 11828                           
 11829                           ;mcc.c: 58: I2C1_Initialize();
 11830  0335  2645  3180         	fcall	_I2C1_Initialize
 11831                           
 11832                           ;mcc.c: 59: CLC2_Initialize();
 11833  0337  233E  3180         	fcall	_CLC2_Initialize
 11834                           
 11835                           ;mcc.c: 60: TMR2_Initialize();
 11836  0339  26A3  3180         	fcall	_TMR2_Initialize
 11837                           
 11838                           ;mcc.c: 61: CLC1_Initialize();
 11839  033B  26B2  3180         	fcall	_CLC1_Initialize
 11840                           
 11841                           ;mcc.c: 62: TMR3_Initialize();
 11842  033D  2EC7               	ljmp	l7765
 11843  033E                     __end_of_SYSTEM_Initialize:	
 11844  033E                     __ptext12:	
 11845 ;; *************** function _CLC2_Initialize *****************
 11846 ;; Defined at:
 11847 ;;		line 59 in file "mcc_generated_files/clc2.c"
 11848 ;; Parameters:    Size  Location     Type
 11849 ;;		None
 11850 ;; Auto vars:     Size  Location     Type
 11851 ;;		None
 11852 ;; Return value:  Size  Location     Type
 11853 ;;                  1    wreg      void 
 11854 ;; Registers used:
 11855 ;;		wreg, status,2
 11856 ;; Tracked objects:
 11857 ;;		On entry : B1F/1
 11858 ;;		On exit  : B1F/1
 11859 ;;		Unchanged: B00/0
 11860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11865 ;;Total ram usage:        0 bytes
 11866 ;; Hardware stack levels used:    1
 11867 ;; Hardware stack levels required when called:    7
 11868 ;; This function calls:
 11869 ;;		Nothing
 11870 ;; This function is called by:
 11871 ;;		_SYSTEM_Initialize
 11872 ;; This function uses a non-reentrant model
 11873 ;;
 11874                           
 11875                           
 11876                           ;psect for function _CLC2_Initialize
 11877  033E                     _CLC2_Initialize:	
 11878                           
 11879                           ;clc2.c: 64: CLC2POL = 0x04;
 11880                           
 11881                           ;incstack = 0
 11882                           ; Regs used in _CLC2_Initialize: [wreg+status,2]
 11883  033E  3004               	movlw	4
 11884  033F  003E               	movlb	30	; select bank30
 11885  0340  009B               	movwf	27	;volatile
 11886                           
 11887                           ;clc2.c: 66: CLC2SEL0 = 0x01;
 11888  0341  3001               	movlw	1
 11889  0342  009C               	movwf	28	;volatile
 11890                           
 11891                           ;clc2.c: 68: CLC2SEL1 = 0x00;
 11892  0343  019D               	clrf	29	;volatile
 11893                           
 11894                           ;clc2.c: 70: CLC2SEL2 = 0x00;
 11895  0344  019E               	clrf	30	;volatile
 11896                           
 11897                           ;clc2.c: 72: CLC2SEL3 = 0x00;
 11898  0345  019F               	clrf	31	;volatile
 11899                           
 11900                           ;clc2.c: 74: CLC2GLS0 = 0x02;
 11901  0346  3002               	movlw	2
 11902  0347  00A0               	movwf	32	;volatile
 11903                           
 11904                           ;clc2.c: 76: CLC2GLS1 = 0xA8;
 11905  0348  30A8               	movlw	168
 11906  0349  00A1               	movwf	33	;volatile
 11907                           
 11908                           ;clc2.c: 78: CLC2GLS2 = 0xA8;
 11909  034A  00A2               	movwf	34	;volatile
 11910                           
 11911                           ;clc2.c: 80: CLC2GLS3 = 0xA8;
 11912  034B  00A3               	movwf	35	;volatile
 11913                           
 11914                           ;clc2.c: 82: CLC2CON = 0x95;
 11915  034C  3095               	movlw	149
 11916  034D  009A               	movwf	26	;volatile
 11917                           
 11918                           ;clc2.c: 85: PIR3bits.CLC2IF = 0;
 11919  034E  0020               	movlb	0	; select bank0
 11920  034F  1093               	bcf	19,1	;volatile
 11921                           
 11922                           ;clc2.c: 87: PIE3bits.CLC2IE = 1;
 11923  0350  0021               	movlb	1	; select bank1
 11924  0351  1493               	bsf	19,1	;volatile
 11925  0352  0008               	return
 11926  0353                     __end_of_CLC2_Initialize:	
 11927  0353                     __ptext23:	
 11928 ;; *************** function _FADE_GP1 *****************
 11929 ;; Defined at:
 11930 ;;		line 26 in file "GPports.c"
 11931 ;; Parameters:    Size  Location     Type
 11932 ;;		None
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;		None
 11935 ;; Return value:  Size  Location     Type
 11936 ;;                  1    wreg      void 
 11937 ;; Registers used:
 11938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11939 ;; Tracked objects:
 11940 ;;		On entry : 1C/1
 11941 ;;		On exit  : 10/0
 11942 ;;		Unchanged: 0/0
 11943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11948 ;;Total ram usage:        0 bytes
 11949 ;; Hardware stack levels used:    1
 11950 ;; Hardware stack levels required when called:   10
 11951 ;; This function calls:
 11952 ;;		_FadeProcessClear
 11953 ;;		_FadeProcessSet
 11954 ;;		_PWM_GP1
 11955 ;; This function is called by:
 11956 ;;		_GP_Ports_FSM
 11957 ;; This function uses a non-reentrant model
 11958 ;;
 11959                           
 11960                           
 11961                           ;psect for function _FADE_GP1
 11962  0353                     _FADE_GP1:	
 11963                           
 11964                           ;GPports.c: 28: if ((GP1CONF & 0x03) != 0x00)
 11965                           
 11966                           ;incstack = 0
 11967                           ; Regs used in _FADE_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11968  0353  0020               	movlb	0	; select bank0
 11969  0354  0847               	movf	_GP1CONF,w	;volatile
 11970  0355  3903               	andlw	3
 11971  0356  1D03               	btfss	3,2
 11972  0357  0008               	return
 11973                           
 11974                           ;GPports.c: 31: if (FADEGP == 0) {
 11975  0358  083E               	movf	_FADEGP,w	;volatile
 11976  0359  1D03               	btfss	3,2
 11977  035A  2B62               	goto	l7797
 11978                           
 11979                           ;GPports.c: 32: if (temp_gp1 != GP1REG) {
 11980  035B  0835               	movf	_temp_gp1,w
 11981  035C  0641               	xorwf	_GP1REG,w	;volatile
 11982  035D  1903               	skipnz
 11983  035E  0008               	return
 11984                           
 11985                           ;GPports.c: 33: temp_gp1 = GP1REG;
 11986  035F  0841               	movf	_GP1REG,w	;volatile
 11987  0360  00B5               	movwf	_temp_gp1
 11988                           
 11989                           ;GPports.c: 34: PWM_GP1(temp_gp1);
 11990  0361  2B7F               	ljmp	_PWM_GP1
 11991  0362                     l7797:	
 11992                           
 11993                           ;GPports.c: 37: };GPports.c: 39: if (gp_fade_cnt >= FADEGP) {
 11994  0362  083E               	movf	_FADEGP,w	;volatile
 11995  0363  0021               	movlb	1	; select bank1
 11996  0364  0233               	subwf	_gp_fade_cnt^(0+128),w
 11997  0365  1C03               	skipc
 11998  0366  0008               	return
 11999                           
 12000                           ;GPports.c: 40: if (temp_gp1 != GP1REG) {
 12001  0367  0020               	movlb	0	; select bank0
 12002  0368  0835               	movf	_temp_gp1,w
 12003  0369  0641               	xorwf	_GP1REG,w	;volatile
 12004  036A  1903               	skipnz
 12005  036B  0008               	return
 12006                           
 12007                           ;GPports.c: 42: if (temp_gp1 < GP1REG) {
 12008  036C  0841               	movf	_GP1REG,w	;volatile
 12009  036D  0235               	subwf	_temp_gp1,w
 12010  036E  1C03               	btfss	3,0
 12011                           
 12012                           ;GPports.c: 43: temp_gp1++;
 12013  036F  0AB5               	incf	_temp_gp1,f
 12014                           
 12015                           ;GPports.c: 44: };GPports.c: 45: if (temp_gp1 > GP1REG) {
 12016  0370  0835               	movf	_temp_gp1,w
 12017  0371  0241               	subwf	_GP1REG,w	;volatile
 12018  0372  1C03               	btfss	3,0
 12019                           
 12020                           ;GPports.c: 46: temp_gp1--;
 12021  0373  03B5               	decf	_temp_gp1,f
 12022                           
 12023                           ;GPports.c: 47: };GPports.c: 49: PWM_GP1(temp_gp1);
 12024  0374  0835               	movf	_temp_gp1,w
 12025  0375  237F  3180         	fcall	_PWM_GP1
 12026                           
 12027                           ;GPports.c: 50: if (temp_gp1 == GP1REG) {
 12028  0377  0020               	movlb	0	; select bank0
 12029  0378  0835               	movf	_temp_gp1,w
 12030  0379  0641               	xorwf	_GP1REG,w	;volatile
 12031                           
 12032                           ;GPports.c: 51: FadeProcessClear(F_FGP1);
 12033  037A  3008               	movlw	8
 12034  037B  1D03               	skipz
 12035  037C  2B7E               	goto	L3
 12036  037D  2CB8               	ljmp	_FadeProcessClear
 12037  037E                     L3:	
 12038                           ;GPports.c: 53: FadeProcessSet(F_FGP1);
 12039                           
 12040                           ;GPports.c: 52: } else {
 12041                           
 12042  037E  2CC0               	ljmp	_FadeProcessSet
 12043  037F                     __end_of_FADE_GP1:	
 12044  037F                     __ptext24:	
 12045 ;; *************** function _PWM_GP1 *****************
 12046 ;; Defined at:
 12047 ;;		line 30 in file "PWM.c"
 12048 ;; Parameters:    Size  Location     Type
 12049 ;;  duty            1    wreg     unsigned char 
 12050 ;; Auto vars:     Size  Location     Type
 12051 ;;  duty            1   14[BANK1 ] unsigned char 
 12052 ;; Return value:  Size  Location     Type
 12053 ;;                  1    wreg      void 
 12054 ;; Registers used:
 12055 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12056 ;; Tracked objects:
 12057 ;;		On entry : 1F/0
 12058 ;;		On exit  : 1F/C
 12059 ;;		Unchanged: 0/0
 12060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12062 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12063 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 12064 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
 12065 ;;Total ram usage:        9 bytes
 12066 ;; Hardware stack levels used:    1
 12067 ;; Hardware stack levels required when called:    8
 12068 ;; This function calls:
 12069 ;;		___wmul
 12070 ;; This function is called by:
 12071 ;;		_FADE_GP1
 12072 ;; This function uses a non-reentrant model
 12073 ;;
 12074                           
 12075                           
 12076                           ;psect for function _PWM_GP1
 12077  037F                     _PWM_GP1:	
 12078                           
 12079                           ;incstack = 0
 12080                           ; Regs used in _PWM_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12081                           ;PWM_GP1@duty stored from wreg
 12082  037F  0021               	movlb	1	; select bank1
 12083  0380  00D8               	movwf	PWM_GP1@duty^(0+128)
 12084                           
 12085                           ;PWM.c: 32: if (duty == 0) {
 12086  0381  0858               	movf	PWM_GP1@duty^(0+128),w
 12087  0382  1D03               	btfss	3,2
 12088  0383  2B98               	goto	l7411
 12089                           
 12090                           ;PWM.c: 34: do { LATCbits.LATC7 = 1; } while(0);
 12091  0384  0022               	movlb	2	; select bank2
 12092  0385  178E               	bsf	14,7	;volatile
 12093                           
 12094                           ;PWM.c: 35: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 12095  0386  3055               	movlw	85
 12096  0387  003C               	movlb	28	; select bank28
 12097  0388  008F               	movwf	15	;volsfr
 12098  0389  30AA               	movlw	170
 12099  038A  008F               	movwf	15	;volsfr
 12100  038B  100F               	bcf	15,0	;volsfr
 12101                           
 12102                           ;PWM.c: 36: RC7PPSbits.RC7PPS = 0x00;
 12103  038C  30E0               	movlw	-32
 12104  038D  003D               	movlb	29	; select bank29
 12105  038E  05A7               	andwf	39,f	;volatile
 12106                           
 12107                           ;PWM.c: 37: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 12108  038F  3055               	movlw	85
 12109  0390  003C               	movlb	28	; select bank28
 12110  0391  008F               	movwf	15	;volsfr
 12111  0392  30AA               	movlw	170
 12112  0393  008F               	movwf	15	;volsfr
 12113  0394  140F               	bsf	15,0	;volsfr
 12114                           
 12115                           ;PWM.c: 38: PWM5CON = 0;
 12116  0395  002C               	movlb	12	; select bank12
 12117  0396  0199               	clrf	25	;volatile
 12118  0397  0008               	return
 12119  0398                     l7411:	
 12120                           
 12121                           ;PWM.c: 40: };PWM.c: 42: if (PWM5CON == 0) {
 12122  0398  002C               	movlb	12	; select bank12
 12123  0399  0819               	movf	25,w	;volatile
 12124  039A  1D03               	btfss	3,2
 12125  039B  2BB0               	goto	l1568
 12126                           
 12127                           ;PWM.c: 43: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 12128  039C  3055               	movlw	85
 12129  039D  003C               	movlb	28	; select bank28
 12130  039E  008F               	movwf	15	;volsfr
 12131  039F  30AA               	movlw	170
 12132  03A0  008F               	movwf	15	;volsfr
 12133  03A1  100F               	bcf	15,0	;volsfr
 12134                           
 12135                           ;PWM.c: 44: RC7PPSbits.RC7PPS = 0x02;
 12136  03A2  003D               	movlb	29	; select bank29
 12137  03A3  0827               	movf	39,w	;volatile
 12138  03A4  39E0               	andlw	-32
 12139  03A5  3802               	iorlw	2
 12140  03A6  00A7               	movwf	39	;volatile
 12141                           
 12142                           ;PWM.c: 45: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 12143  03A7  3055               	movlw	85
 12144  03A8  003C               	movlb	28	; select bank28
 12145  03A9  008F               	movwf	15	;volsfr
 12146  03AA  30AA               	movlw	170
 12147  03AB  008F               	movwf	15	;volsfr
 12148  03AC  140F               	bsf	15,0	;volsfr
 12149                           
 12150                           ;PWM.c: 46: PWM5CON = 0x80;
 12151  03AD  3080               	movlw	128
 12152  03AE  002C               	movlb	12	; select bank12
 12153  03AF  0099               	movwf	25	;volatile
 12154  03B0                     l1568:	
 12155                           
 12156                           ;PWM.c: 47: };PWM.c: 49: if (GAMMAGP1 == 0) {
 12157  03B0  0020               	movlb	0	; select bank0
 12158  03B1  083D               	movf	_GAMMAGP1,w	;volatile
 12159  03B2  1D03               	btfss	3,2
 12160  03B3  2BBA               	goto	l7431
 12161                           
 12162                           ;PWM.c: 50: PWM5DCH = 0xFFU - duty;
 12163  03B4  0021               	movlb	1	; select bank1
 12164  03B5  0958               	comf	PWM_GP1@duty^(0+128),w
 12165  03B6  002C               	movlb	12	; select bank12
 12166  03B7  0098               	movwf	24	;volatile
 12167                           
 12168                           ;PWM.c: 51: PWM5DCL = 0;
 12169  03B8  0197               	clrf	23	;volatile
 12170                           
 12171                           ;PWM.c: 52: } else {
 12172  03B9  0008               	return
 12173  03BA                     l7431:	
 12174                           
 12175                           ;PWM.c: 53: if (duty > 100)
 12176  03BA  3065               	movlw	101
 12177  03BB  0021               	movlb	1	; select bank1
 12178  03BC  0258               	subwf	PWM_GP1@duty^(0+128),w
 12179  03BD  1C03               	skipc
 12180  03BE  2BC1               	goto	l7435
 12181                           
 12182                           ;PWM.c: 54: duty = 100;
 12183  03BF  3064               	movlw	100
 12184  03C0  00D8               	movwf	PWM_GP1@duty^(0+128)
 12185  03C1                     l7435:	
 12186                           
 12187                           ;PWM.c: 55: PWM5DCH = (gamma_table[GAMMAGP1 - 1U][(duty - 1U)] & 0x03FC) >> 2U;
 12188  03C1  0858               	movf	PWM_GP1@duty^(0+128),w
 12189  03C2  00D0               	movwf	??_PWM_GP1^(0+128)
 12190  03C3  01D1               	clrf	(??_PWM_GP1^(0+128)+1)
 12191  03C4  35D0               	lslf	??_PWM_GP1^(0+128),f
 12192  03C5  0DD1               	rlf	(??_PWM_GP1^(0+128)+1),f
 12193  03C6  0020               	movlb	0	; select bank0
 12194  03C7  083D               	movf	_GAMMAGP1,w	;volatile
 12195  03C8  0021               	movlb	1	; select bank1
 12196  03C9  00CA               	movwf	___wmul@multiplier^(0+128)
 12197  03CA  30C8               	movlw	200
 12198  03CB  01CB               	clrf	(___wmul@multiplier+1)^(0+128)
 12199  03CC  00CC               	movwf	___wmul@multiplicand^(0+128)
 12200  03CD  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
 12201  03CE  261D  3180         	fcall	___wmul
 12202  03D0  3018               	movlw	low ((_gamma_table| (0+32768)+65334))
 12203  03D1  00D2               	movwf	(??_PWM_GP1+2)^(0+128)
 12204  03D2  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 12205  03D3  00D3               	movwf	((??_PWM_GP1+2)^(0+128)+1)
 12206  03D4  084A               	movf	?___wmul^(0+128),w
 12207  03D5  0752               	addwf	(??_PWM_GP1+2)^(0+128),w
 12208  03D6  00D4               	movwf	(??_PWM_GP1+4)^(0+128)
 12209  03D7  084B               	movf	(?___wmul+1)^(0+128),w
 12210  03D8  3D53               	addwfc	(??_PWM_GP1+3)^(0+128),w
 12211  03D9  00D5               	movwf	(??_PWM_GP1+5)^(0+128)
 12212  03DA  0854               	movf	(??_PWM_GP1+4)^(0+128),w
 12213  03DB  0750               	addwf	??_PWM_GP1^(0+128),w
 12214  03DC  0084               	movwf	4
 12215  03DD  0855               	movf	(??_PWM_GP1+5)^(0+128),w
 12216  03DE  3D51               	addwfc	(??_PWM_GP1+1)^(0+128),w
 12217  03DF  0085               	movwf	5
 12218  03E0  3F00               	moviw [0]fsr0
 12219  03E1  00D6               	movwf	(??_PWM_GP1+6)^(0+128)
 12220  03E2  3F01               	moviw [1]fsr0
 12221  03E3  00D7               	movwf	((??_PWM_GP1+6)^(0+128)+1)
 12222  03E4  36D7               	lsrf	((??_PWM_GP1+6)^(0+128)+1),f
 12223  03E5  0CD6               	rrf	(??_PWM_GP1+6)^(0+128),f
 12224  03E6  36D7               	lsrf	((??_PWM_GP1+6)^(0+128)+1),f
 12225  03E7  0CD6               	rrf	(??_PWM_GP1+6)^(0+128),f
 12226  03E8  0856               	movf	(??_PWM_GP1+6)^(0+128),w
 12227  03E9  002C               	movlb	12	; select bank12
 12228  03EA  0098               	movwf	24	;volatile
 12229                           
 12230                           ;PWM.c: 56: PWM5DCL = (gamma_table[GAMMAGP1 - 1U][(duty - 1U)] & 0x0003) << 6U;
 12231  03EB  0021               	movlb	1	; select bank1
 12232  03EC  0858               	movf	PWM_GP1@duty^(0+128),w
 12233  03ED  00D0               	movwf	??_PWM_GP1^(0+128)
 12234  03EE  01D1               	clrf	(??_PWM_GP1^(0+128)+1)
 12235  03EF  35D0               	lslf	??_PWM_GP1^(0+128),f
 12236  03F0  0DD1               	rlf	(??_PWM_GP1^(0+128)+1),f
 12237  03F1  0020               	movlb	0	; select bank0
 12238  03F2  083D               	movf	_GAMMAGP1,w	;volatile
 12239  03F3  0021               	movlb	1	; select bank1
 12240  03F4  00CA               	movwf	___wmul@multiplier^(0+128)
 12241  03F5  30C8               	movlw	200
 12242  03F6  01CB               	clrf	(___wmul@multiplier+1)^(0+128)
 12243  03F7  00CC               	movwf	___wmul@multiplicand^(0+128)
 12244  03F8  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
 12245  03F9  261D               	fcall	___wmul
 12246  03FA  3018               	movlw	low ((_gamma_table| (0+32768)+65334))
 12247  03FB  00D2               	movwf	(??_PWM_GP1+2)^(0+128)
 12248  03FC  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 12249  03FD  00D3               	movwf	((??_PWM_GP1+2)^(0+128)+1)
 12250  03FE  084A               	movf	?___wmul^(0+128),w
 12251  03FF  0752               	addwf	(??_PWM_GP1+2)^(0+128),w
 12252  0400  00D4               	movwf	(??_PWM_GP1+4)^(0+128)
 12253  0401  084B               	movf	(?___wmul+1)^(0+128),w
 12254  0402  3D53               	addwfc	(??_PWM_GP1+3)^(0+128),w
 12255  0403  00D5               	movwf	(??_PWM_GP1+5)^(0+128)
 12256  0404  0854               	movf	(??_PWM_GP1+4)^(0+128),w
 12257  0405  0750               	addwf	??_PWM_GP1^(0+128),w
 12258  0406  0084               	movwf	4
 12259  0407  0855               	movf	(??_PWM_GP1+5)^(0+128),w
 12260  0408  3D51               	addwfc	(??_PWM_GP1+1)^(0+128),w
 12261  0409  0085               	movwf	5
 12262  040A  0800               	movf	0,w	;code access
 12263  040B  3903               	andlw	3
 12264  040C  00D6               	movwf	(??_PWM_GP1+6)^(0+128)
 12265  040D  0CD6               	rrf	(??_PWM_GP1+6)^(0+128),f
 12266  040E  0CD6               	rrf	(??_PWM_GP1+6)^(0+128),f
 12267  040F  0C56               	rrf	(??_PWM_GP1+6)^(0+128),w
 12268  0410  39C0               	andlw	192
 12269  0411  002C               	movlb	12	; select bank12
 12270  0412  0097               	movwf	23	;volatile
 12271  0413  0008               	return
 12272  0414                     __end_of_PWM_GP1:	
 12273  0414                     __ptext20:	
 12274 ;; *************** function _FADE_GP3 *****************
 12275 ;; Defined at:
 12276 ;;		line 101 in file "GPports.c"
 12277 ;; Parameters:    Size  Location     Type
 12278 ;;		None
 12279 ;; Auto vars:     Size  Location     Type
 12280 ;;		None
 12281 ;; Return value:  Size  Location     Type
 12282 ;;                  1    wreg      void 
 12283 ;; Registers used:
 12284 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12285 ;; Tracked objects:
 12286 ;;		On entry : 18/1
 12287 ;;		On exit  : 18/0
 12288 ;;		Unchanged: 0/0
 12289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12294 ;;Total ram usage:        0 bytes
 12295 ;; Hardware stack levels used:    1
 12296 ;; Hardware stack levels required when called:   10
 12297 ;; This function calls:
 12298 ;;		_FadeProcessClear
 12299 ;;		_FadeProcessSet
 12300 ;;		_PWM_GP3_RLED
 12301 ;; This function is called by:
 12302 ;;		_GP_Ports_FSM
 12303 ;; This function uses a non-reentrant model
 12304 ;;
 12305                           
 12306                           
 12307                           ;psect for function _FADE_GP3
 12308  0414                     _FADE_GP3:	
 12309                           
 12310                           ;GPports.c: 103: if ((GP3CONF & 0x03) != 0x00)
 12311                           
 12312                           ;incstack = 0
 12313                           ; Regs used in _FADE_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12314  0414  0020               	movlb	0	; select bank0
 12315  0415  0845               	movf	_GP3CONF,w	;volatile
 12316  0416  3903               	andlw	3
 12317  0417  1D03               	btfss	3,2
 12318  0418  0008               	return
 12319                           
 12320                           ;GPports.c: 106: if (FADEGP == 0) {
 12321  0419  083E               	movf	_FADEGP,w	;volatile
 12322  041A  1D03               	btfss	3,2
 12323  041B  2C23               	goto	l7865
 12324                           
 12325                           ;GPports.c: 107: if (temp_gp3 != GP3REG) {
 12326  041C  0833               	movf	_temp_gp3,w
 12327  041D  063F               	xorwf	_GP3REG,w	;volatile
 12328  041E  1903               	skipnz
 12329  041F  0008               	return
 12330                           
 12331                           ;GPports.c: 108: temp_gp3 = GP3REG;
 12332  0420  083F               	movf	_GP3REG,w	;volatile
 12333  0421  00B3               	movwf	_temp_gp3
 12334                           
 12335                           ;GPports.c: 109: PWM_GP3_RLED(temp_gp3);
 12336  0422  2D37               	ljmp	_PWM_GP3_RLED
 12337  0423                     l7865:	
 12338                           
 12339                           ;GPports.c: 112: };GPports.c: 114: if (gp_fade_cnt >= FADEGP) {
 12340  0423  083E               	movf	_FADEGP,w	;volatile
 12341  0424  0021               	movlb	1	; select bank1
 12342  0425  0233               	subwf	_gp_fade_cnt^(0+128),w
 12343  0426  1C03               	skipc
 12344  0427  0008               	return
 12345                           
 12346                           ;GPports.c: 115: if (temp_gp3 != GP3REG) {
 12347  0428  0020               	movlb	0	; select bank0
 12348  0429  0833               	movf	_temp_gp3,w
 12349  042A  063F               	xorwf	_GP3REG,w	;volatile
 12350  042B  1903               	skipnz
 12351  042C  0008               	return
 12352                           
 12353                           ;GPports.c: 117: if (temp_gp3 < GP3REG) {
 12354  042D  083F               	movf	_GP3REG,w	;volatile
 12355  042E  0233               	subwf	_temp_gp3,w
 12356  042F  1C03               	btfss	3,0
 12357                           
 12358                           ;GPports.c: 118: temp_gp3++;
 12359  0430  0AB3               	incf	_temp_gp3,f
 12360                           
 12361                           ;GPports.c: 119: };GPports.c: 120: if (temp_gp3 > GP3REG) {
 12362  0431  0833               	movf	_temp_gp3,w
 12363  0432  023F               	subwf	_GP3REG,w	;volatile
 12364  0433  1C03               	btfss	3,0
 12365                           
 12366                           ;GPports.c: 121: temp_gp3--;
 12367  0434  03B3               	decf	_temp_gp3,f
 12368                           
 12369                           ;GPports.c: 122: };GPports.c: 124: PWM_GP3_RLED(temp_gp3);
 12370  0435  0833               	movf	_temp_gp3,w
 12371  0436  2537  3180         	fcall	_PWM_GP3_RLED
 12372                           
 12373                           ;GPports.c: 125: if (temp_gp3 == GP3REG) {
 12374  0438  0020               	movlb	0	; select bank0
 12375  0439  0833               	movf	_temp_gp3,w
 12376  043A  063F               	xorwf	_GP3REG,w	;volatile
 12377                           
 12378                           ;GPports.c: 126: FadeProcessClear(F_FGP3);
 12379  043B  3020               	movlw	32
 12380  043C  1D03               	skipz
 12381  043D  2C3F               	goto	L1
 12382  043E  2CB8               	ljmp	_FadeProcessClear
 12383  043F                     L1:	
 12384                           ;GPports.c: 128: FadeProcessSet(F_FGP3);
 12385                           
 12386                           ;GPports.c: 127: } else {
 12387                           
 12388  043F  2CC0               	ljmp	_FadeProcessSet
 12389  0440                     __end_of_FADE_GP3:	
 12390  0440                     __ptext26:	
 12391 ;; *************** function _FADE_LEDS *****************
 12392 ;; Defined at:
 12393 ;;		line 147 in file "Encoder.c"
 12394 ;; Parameters:    Size  Location     Type
 12395 ;;		None
 12396 ;; Auto vars:     Size  Location     Type
 12397 ;;		None
 12398 ;; Return value:  Size  Location     Type
 12399 ;;                  1    wreg      void 
 12400 ;; Registers used:
 12401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12402 ;; Tracked objects:
 12403 ;;		On entry : 1F/1
 12404 ;;		On exit  : 18/0
 12405 ;;		Unchanged: 0/0
 12406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12411 ;;Total ram usage:        0 bytes
 12412 ;; Hardware stack levels used:    1
 12413 ;; Hardware stack levels required when called:   10
 12414 ;; This function calls:
 12415 ;;		_FadeProcessClear
 12416 ;;		_FadeProcessSet
 12417 ;;		_PWM_BLED
 12418 ;;		_PWM_GLED
 12419 ;;		_PWM_GP3_RLED
 12420 ;; This function is called by:
 12421 ;;		_Encoder_FSM
 12422 ;; This function uses a non-reentrant model
 12423 ;;
 12424                           
 12425                           
 12426                           ;psect for function _FADE_LEDS
 12427  0440                     _FADE_LEDS:	
 12428                           
 12429                           ;Encoder.c: 149: if (C_ETYPE == 0)
 12430                           
 12431                           ;incstack = 0
 12432                           ; Regs used in _FADE_LEDS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12433  0440  0020               	movlb	0	; select bank0
 12434  0441  0838               	movf	_C_ETYPE,w	;volatile
 12435  0442  1903               	btfsc	3,2
 12436  0443  0008               	return
 12437                           
 12438                           ;Encoder.c: 152: if (FADERGB == 0) {
 12439  0444  0021               	movlb	1	; select bank1
 12440  0445  0843               	movf	_FADERGB^(0+128),w	;volatile
 12441  0446  1D03               	btfss	3,2
 12442  0447  2C62               	goto	l8051
 12443                           
 12444                           ;Encoder.c: 153: if (temp_red != RLED) {
 12445  0448  0020               	movlb	0	; select bank0
 12446  0449  0832               	movf	_temp_red,w
 12447  044A  0644               	xorwf	_RLED,w	;volatile
 12448  044B  1903               	skipnz
 12449  044C  2C51               	goto	l8037
 12450                           
 12451                           ;Encoder.c: 154: temp_red = RLED;
 12452  044D  0844               	movf	_RLED,w	;volatile
 12453  044E  00B2               	movwf	_temp_red
 12454                           
 12455                           ;Encoder.c: 155: PWM_GP3_RLED(temp_red);
 12456  044F  2537  3180         	fcall	_PWM_GP3_RLED
 12457  0451                     l8037:	
 12458                           
 12459                           ;Encoder.c: 156: };Encoder.c: 158: if (temp_green != GLED) {
 12460  0451  0020               	movlb	0	; select bank0
 12461  0452  0831               	movf	_temp_green,w
 12462  0453  0643               	xorwf	_GLED,w	;volatile
 12463  0454  1903               	skipnz
 12464  0455  2C5A               	goto	l8043
 12465                           
 12466                           ;Encoder.c: 159: temp_green = GLED;
 12467  0456  0843               	movf	_GLED,w	;volatile
 12468  0457  00B1               	movwf	_temp_green
 12469                           
 12470                           ;Encoder.c: 160: PWM_GLED(temp_green);
 12471  0458  24C4  3180         	fcall	_PWM_GLED
 12472  045A                     l8043:	
 12473                           
 12474                           ;Encoder.c: 161: };Encoder.c: 163: if (temp_blu != BLED) {
 12475  045A  0020               	movlb	0	; select bank0
 12476  045B  0830               	movf	_temp_blu,w
 12477  045C  0642               	xorwf	_BLED,w	;volatile
 12478  045D  1903               	skipnz
 12479  045E  0008               	return
 12480                           
 12481                           ;Encoder.c: 164: temp_blu = BLED;
 12482  045F  0842               	movf	_BLED,w	;volatile
 12483  0460  00B0               	movwf	_temp_blu
 12484                           
 12485                           ;Encoder.c: 165: PWM_BLED(temp_blu);
 12486  0461  2DAA               	ljmp	_PWM_BLED
 12487  0462                     l8051:	
 12488                           
 12489                           ;Encoder.c: 168: };Encoder.c: 169: fade_cnt++;
 12490  0462  0AB0               	incf	_fade_cnt^(0+128),f
 12491                           
 12492                           ;Encoder.c: 170: if (fade_cnt >= FADERGB) {
 12493  0463  0843               	movf	_FADERGB^(0+128),w	;volatile
 12494  0464  0230               	subwf	_fade_cnt^(0+128),w
 12495  0465  1C03               	skipc
 12496  0466  0008               	return
 12497                           
 12498                           ;Encoder.c: 171: fade_cnt = 0;
 12499  0467  01B0               	clrf	_fade_cnt^(0+128)
 12500                           
 12501                           ;Encoder.c: 173: if (temp_red != RLED) {
 12502  0468  0020               	movlb	0	; select bank0
 12503  0469  0832               	movf	_temp_red,w
 12504  046A  0644               	xorwf	_RLED,w	;volatile
 12505  046B  1903               	skipnz
 12506  046C  2C84               	goto	l8075
 12507                           
 12508                           ;Encoder.c: 175: if (temp_red < RLED) {
 12509  046D  0844               	movf	_RLED,w	;volatile
 12510  046E  0232               	subwf	_temp_red,w
 12511  046F  1803               	skipnc
 12512  0470  2C72               	goto	l8063
 12513                           
 12514                           ;Encoder.c: 176: temp_red++;
 12515  0471  0AB2               	incf	_temp_red,f
 12516  0472                     l8063:	
 12517                           
 12518                           ;Encoder.c: 177: };Encoder.c: 178: if (temp_red > RLED) {
 12519  0472  0832               	movf	_temp_red,w
 12520  0473  0244               	subwf	_RLED,w	;volatile
 12521  0474  1C03               	btfss	3,0
 12522                           
 12523                           ;Encoder.c: 179: temp_red--;
 12524  0475  03B2               	decf	_temp_red,f
 12525                           
 12526                           ;Encoder.c: 180: };Encoder.c: 182: PWM_GP3_RLED(temp_red);
 12527  0476  0832               	movf	_temp_red,w
 12528  0477  2537  3180         	fcall	_PWM_GP3_RLED
 12529                           
 12530                           ;Encoder.c: 183: if (temp_red == RLED) {
 12531  0479  0020               	movlb	0	; select bank0
 12532  047A  0832               	movf	_temp_red,w
 12533  047B  0644               	xorwf	_RLED,w	;volatile
 12534                           
 12535                           ;Encoder.c: 184: FadeProcessClear(F_FER);
 12536  047C  3001               	movlw	1
 12537  047D  1D03               	skipz
 12538  047E  2C82               	goto	L4
 12539  047F  24B8  3180         	fcall	_FadeProcessClear
 12540                           
 12541                           ;Encoder.c: 185: } else {
 12542  0481  2C84               	goto	l8075
 12543  0482                     L4:	
 12544                           ;Encoder.c: 186: FadeProcessSet(F_FER);
 12545                           
 12546  0482  24C0  3180         	fcall	_FadeProcessSet
 12547  0484                     l8075:	
 12548                           
 12549                           ;Encoder.c: 187: };Encoder.c: 188: };Encoder.c: 190: if (temp_green != GLED) {
 12550  0484  0020               	movlb	0	; select bank0
 12551  0485  0831               	movf	_temp_green,w
 12552  0486  0643               	xorwf	_GLED,w	;volatile
 12553  0487  1903               	skipnz
 12554  0488  2CA0               	goto	l8093
 12555                           
 12556                           ;Encoder.c: 192: if (temp_green < GLED) {
 12557  0489  0843               	movf	_GLED,w	;volatile
 12558  048A  0231               	subwf	_temp_green,w
 12559  048B  1803               	skipnc
 12560  048C  2C8E               	goto	l8081
 12561                           
 12562                           ;Encoder.c: 193: temp_green++;
 12563  048D  0AB1               	incf	_temp_green,f
 12564  048E                     l8081:	
 12565                           
 12566                           ;Encoder.c: 194: };Encoder.c: 195: if (temp_green > GLED) {
 12567  048E  0831               	movf	_temp_green,w
 12568  048F  0243               	subwf	_GLED,w	;volatile
 12569  0490  1C03               	btfss	3,0
 12570                           
 12571                           ;Encoder.c: 196: temp_green--;
 12572  0491  03B1               	decf	_temp_green,f
 12573                           
 12574                           ;Encoder.c: 197: };Encoder.c: 199: PWM_GLED(temp_green);
 12575  0492  0831               	movf	_temp_green,w
 12576  0493  24C4  3180         	fcall	_PWM_GLED
 12577                           
 12578                           ;Encoder.c: 200: if (temp_green == GLED) {
 12579  0495  0020               	movlb	0	; select bank0
 12580  0496  0831               	movf	_temp_green,w
 12581  0497  0643               	xorwf	_GLED,w	;volatile
 12582                           
 12583                           ;Encoder.c: 201: FadeProcessClear(F_FEG);
 12584  0498  3002               	movlw	2
 12585  0499  1D03               	skipz
 12586  049A  2C9E               	goto	L5
 12587  049B  24B8  3180         	fcall	_FadeProcessClear
 12588                           
 12589                           ;Encoder.c: 202: } else {
 12590  049D  2CA0               	goto	l8093
 12591  049E                     L5:	
 12592                           ;Encoder.c: 203: FadeProcessSet(F_FEG);
 12593                           
 12594  049E  24C0  3180         	fcall	_FadeProcessSet
 12595  04A0                     l8093:	
 12596                           
 12597                           ;Encoder.c: 205: };Encoder.c: 206: };Encoder.c: 209: if (temp_blu != BLED) {
 12598  04A0  0020               	movlb	0	; select bank0
 12599  04A1  0830               	movf	_temp_blu,w
 12600  04A2  0642               	xorwf	_BLED,w	;volatile
 12601  04A3  1903               	skipnz
 12602  04A4  0008               	return
 12603                           
 12604                           ;Encoder.c: 211: if (temp_blu < BLED) {
 12605  04A5  0842               	movf	_BLED,w	;volatile
 12606  04A6  0230               	subwf	_temp_blu,w
 12607  04A7  1C03               	btfss	3,0
 12608                           
 12609                           ;Encoder.c: 212: temp_blu++;
 12610  04A8  0AB0               	incf	_temp_blu,f
 12611                           
 12612                           ;Encoder.c: 213: };Encoder.c: 214: if (temp_blu > BLED) {
 12613  04A9  0830               	movf	_temp_blu,w
 12614  04AA  0242               	subwf	_BLED,w	;volatile
 12615  04AB  1C03               	btfss	3,0
 12616                           
 12617                           ;Encoder.c: 215: temp_blu--;
 12618  04AC  03B0               	decf	_temp_blu,f
 12619                           
 12620                           ;Encoder.c: 216: };Encoder.c: 218: PWM_BLED(temp_blu);
 12621  04AD  0830               	movf	_temp_blu,w
 12622  04AE  25AA  3180         	fcall	_PWM_BLED
 12623                           
 12624                           ;Encoder.c: 219: if (temp_blu == BLED) {
 12625  04B0  0020               	movlb	0	; select bank0
 12626  04B1  0830               	movf	_temp_blu,w
 12627  04B2  0642               	xorwf	_BLED,w	;volatile
 12628                           
 12629                           ;Encoder.c: 220: FadeProcessClear(F_FEB);
 12630  04B3  3004               	movlw	4
 12631  04B4  1D03               	skipz
 12632  04B5  2CB7               	goto	L6
 12633  04B6  2CB8               	ljmp	_FadeProcessClear
 12634  04B7                     L6:	
 12635                           ;Encoder.c: 223: FadeProcessSet(F_FEB);
 12636                           
 12637                           ;Encoder.c: 221: } else {
 12638                           
 12639  04B7  2CC0               	ljmp	_FadeProcessSet
 12640  04B8                     __end_of_FADE_LEDS:	
 12641  04B8                     __ptext32:	
 12642 ;; *************** function _FadeProcessClear *****************
 12643 ;; Defined at:
 12644 ;;		line 159 in file "DataVariable.c"
 12645 ;; Parameters:    Size  Location     Type
 12646 ;;  stat            1    wreg     enum E96
 12647 ;; Auto vars:     Size  Location     Type
 12648 ;;  stat            1    2[BANK1 ] enum E96
 12649 ;; Return value:  Size  Location     Type
 12650 ;;                  1    wreg      void 
 12651 ;; Registers used:
 12652 ;;		wreg, status,2, status,0, pclath, cstack
 12653 ;; Tracked objects:
 12654 ;;		On entry : 1F/0
 12655 ;;		On exit  : 1C/0
 12656 ;;		Unchanged: 0/0
 12657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12659 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12661 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12662 ;;Total ram usage:        1 bytes
 12663 ;; Hardware stack levels used:    1
 12664 ;; Hardware stack levels required when called:    9
 12665 ;; This function calls:
 12666 ;;		_Int2StatusUpdate
 12667 ;;		_SetInterrupt
 12668 ;; This function is called by:
 12669 ;;		_FADE_GP1
 12670 ;;		_FADE_GP2
 12671 ;;		_FADE_GP3
 12672 ;;		_FADE_LEDS
 12673 ;; This function uses a non-reentrant model
 12674 ;;
 12675                           
 12676                           
 12677                           ;psect for function _FadeProcessClear
 12678  04B8                     _FadeProcessClear:	
 12679                           
 12680                           ;incstack = 0
 12681                           ; Regs used in _FadeProcessClear: [wreg+status,2+status,0+pclath+cstack]
 12682                           ;FadeProcessClear@stat stored from wreg
 12683  04B8  0021               	movlb	1	; select bank1
 12684  04B9  00CC               	movwf	FadeProcessClear@stat^(0+128)
 12685                           
 12686                           ;DataVariable.c: 160: FSTATUS &= ~(uint8_t) stat;
 12687  04BA  094C               	comf	FadeProcessClear@stat^(0+128),w
 12688  04BB  05C6               	andwf	_FSTATUS^(0+128),f	;volatile
 12689                           
 12690                           ;DataVariable.c: 161: Int2StatusUpdate(E_GPFADE);
 12691  04BC  3040               	movlw	64
 12692  04BD  223A  3180         	fcall	_Int2StatusUpdate
 12693                           
 12694                           ;DataVariable.c: 163: SetInterrupt();
 12695  04BF  2A3F               	ljmp	l7329
 12696  04C0                     __end_of_FadeProcessClear:	
 12697  04C0                     __ptext31:	
 12698 ;; *************** function _FadeProcessSet *****************
 12699 ;; Defined at:
 12700 ;;		line 151 in file "DataVariable.c"
 12701 ;; Parameters:    Size  Location     Type
 12702 ;;  stat            1    wreg     enum E96
 12703 ;; Auto vars:     Size  Location     Type
 12704 ;;  stat            1    0[BANK1 ] enum E96
 12705 ;; Return value:  Size  Location     Type
 12706 ;;                  1    wreg      void 
 12707 ;; Registers used:
 12708 ;;		wreg, status,2, status,0
 12709 ;; Tracked objects:
 12710 ;;		On entry : 1F/0
 12711 ;;		On exit  : 1F/1
 12712 ;;		Unchanged: 0/0
 12713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12715 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12717 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12718 ;;Total ram usage:        1 bytes
 12719 ;; Hardware stack levels used:    1
 12720 ;; Hardware stack levels required when called:    7
 12721 ;; This function calls:
 12722 ;;		Nothing
 12723 ;; This function is called by:
 12724 ;;		_FADE_GP1
 12725 ;;		_FADE_GP2
 12726 ;;		_FADE_GP3
 12727 ;;		_FADE_LEDS
 12728 ;; This function uses a non-reentrant model
 12729 ;;
 12730                           
 12731                           
 12732                           ;psect for function _FadeProcessSet
 12733  04C0                     _FadeProcessSet:	
 12734                           
 12735                           ;incstack = 0
 12736                           ; Regs used in _FadeProcessSet: [wreg+status,2+status,0]
 12737                           ;FadeProcessSet@stat stored from wreg
 12738  04C0  0021               	movlb	1	; select bank1
 12739  04C1  00CA               	movwf	FadeProcessSet@stat^(0+128)
 12740                           
 12741                           ;DataVariable.c: 152: FSTATUS |= (uint8_t) stat;
 12742  04C2  04C6               	iorwf	_FSTATUS^(0+128),f	;volatile
 12743  04C3  0008               	return
 12744  04C4                     __end_of_FadeProcessSet:	
 12745  04C4                     __ptext28:	
 12746 ;; *************** function _PWM_GLED *****************
 12747 ;; Defined at:
 12748 ;;		line 130 in file "PWM.c"
 12749 ;; Parameters:    Size  Location     Type
 12750 ;;  duty            1    wreg     unsigned char 
 12751 ;; Auto vars:     Size  Location     Type
 12752 ;;  duty            1   12[BANK1 ] unsigned char 
 12753 ;; Return value:  Size  Location     Type
 12754 ;;                  1    wreg      void 
 12755 ;; Registers used:
 12756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12757 ;; Tracked objects:
 12758 ;;		On entry : 1F/0
 12759 ;;		On exit  : 1F/5
 12760 ;;		Unchanged: 0/0
 12761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12763 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12764 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12765 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 12766 ;;Total ram usage:        7 bytes
 12767 ;; Hardware stack levels used:    1
 12768 ;; Hardware stack levels required when called:    8
 12769 ;; This function calls:
 12770 ;;		___wmul
 12771 ;; This function is called by:
 12772 ;;		_FADE_LEDS
 12773 ;; This function uses a non-reentrant model
 12774 ;;
 12775                           
 12776                           
 12777                           ;psect for function _PWM_GLED
 12778  04C4                     _PWM_GLED:	
 12779                           
 12780                           ;incstack = 0
 12781                           ; Regs used in _PWM_GLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12782                           ;PWM_GLED@duty stored from wreg
 12783  04C4  0021               	movlb	1	; select bank1
 12784  04C5  00D6               	movwf	PWM_GLED@duty^(0+128)
 12785                           
 12786                           ;PWM.c: 132: if (duty == 0) {
 12787  04C6  0856               	movf	PWM_GLED@duty^(0+128),w
 12788  04C7  1D03               	btfss	3,2
 12789  04C8  2CDD               	goto	l7559
 12790                           
 12791                           ;PWM.c: 134: do { LATCbits.LATC4 = 1; } while(0);
 12792  04C9  0022               	movlb	2	; select bank2
 12793  04CA  160E               	bsf	14,4	;volatile
 12794                           
 12795                           ;PWM.c: 135: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 12796  04CB  3055               	movlw	85
 12797  04CC  003C               	movlb	28	; select bank28
 12798  04CD  008F               	movwf	15	;volsfr
 12799  04CE  30AA               	movlw	170
 12800  04CF  008F               	movwf	15	;volsfr
 12801  04D0  100F               	bcf	15,0	;volsfr
 12802                           
 12803                           ;PWM.c: 136: RC4PPSbits.RC4PPS = 0x00;
 12804  04D1  30E0               	movlw	-32
 12805  04D2  003D               	movlb	29	; select bank29
 12806  04D3  05A4               	andwf	36,f	;volatile
 12807                           
 12808                           ;PWM.c: 137: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 12809  04D4  3055               	movlw	85
 12810  04D5  003C               	movlb	28	; select bank28
 12811  04D6  008F               	movwf	15	;volsfr
 12812  04D7  30AA               	movlw	170
 12813  04D8  008F               	movwf	15	;volsfr
 12814  04D9  140F               	bsf	15,0	;volsfr
 12815                           
 12816                           ;PWM.c: 138: CCP2CON = 0;
 12817  04DA  0025               	movlb	5	; select bank5
 12818  04DB  0197               	clrf	23	;volatile
 12819  04DC  0008               	return
 12820  04DD                     l7559:	
 12821                           
 12822                           ;PWM.c: 140: };PWM.c: 142: if (CCP2CON == 0) {
 12823  04DD  0025               	movlb	5	; select bank5
 12824  04DE  0817               	movf	23,w	;volatile
 12825  04DF  1D03               	btfss	3,2
 12826  04E0  2CF8               	goto	l1598
 12827                           
 12828                           ;PWM.c: 143: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 12829  04E1  3055               	movlw	85
 12830  04E2  003C               	movlb	28	; select bank28
 12831  04E3  008F               	movwf	15	;volsfr
 12832  04E4  30AA               	movlw	170
 12833  04E5  008F               	movwf	15	;volsfr
 12834  04E6  100F               	bcf	15,0	;volsfr
 12835                           
 12836                           ;PWM.c: 144: RC4PPSbits.RC4PPS = 0x0D;
 12837  04E7  003D               	movlb	29	; select bank29
 12838  04E8  0824               	movf	36,w	;volatile
 12839  04E9  39E0               	andlw	-32
 12840  04EA  380D               	iorlw	13
 12841  04EB  00A4               	movwf	36	;volatile
 12842                           
 12843                           ;PWM.c: 145: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 12844  04EC  3055               	movlw	85
 12845  04ED  003C               	movlb	28	; select bank28
 12846  04EE  008F               	movwf	15	;volsfr
 12847  04EF  30AA               	movlw	170
 12848  04F0  008F               	movwf	15	;volsfr
 12849  04F1  140F               	bsf	15,0	;volsfr
 12850                           
 12851                           ;PWM.c: 146: CCP2CON = 0x8F;
 12852  04F2  308F               	movlw	143
 12853  04F3  0025               	movlb	5	; select bank5
 12854  04F4  0097               	movwf	23	;volatile
 12855                           
 12856                           ;PWM.c: 147: CCPR2 = 0xFFFF;
 12857  04F5  30FF               	movlw	255
 12858  04F6  0096               	movwf	22	;volatile
 12859  04F7  0095               	movwf	21	;volatile
 12860  04F8                     l1598:	
 12861                           
 12862                           ;PWM.c: 148: };PWM.c: 150: if (GAMMAGLED == 0) {
 12863  04F8  0020               	movlb	0	; select bank0
 12864  04F9  083A               	movf	_GAMMAGLED,w	;volatile
 12865  04FA  1D03               	btfss	3,2
 12866  04FB  2D0C               	goto	l7579
 12867                           
 12868                           ;PWM.c: 151: CCPR2 = (uint16_t) (0xff - duty) << 2;
 12869  04FC  0021               	movlb	1	; select bank1
 12870  04FD  0956               	comf	PWM_GLED@duty^(0+128),w
 12871  04FE  00D0               	movwf	??_PWM_GLED^(0+128)
 12872  04FF  01D1               	clrf	(??_PWM_GLED^(0+128)+1)
 12873  0500  35D0               	lslf	??_PWM_GLED^(0+128),f
 12874  0501  0DD1               	rlf	(??_PWM_GLED^(0+128)+1),f
 12875  0502  35D0               	lslf	??_PWM_GLED^(0+128),f
 12876  0503  0DD1               	rlf	(??_PWM_GLED^(0+128)+1),f
 12877  0504  0850               	movf	??_PWM_GLED^(0+128),w
 12878  0505  0025               	movlb	5	; select bank5
 12879  0506  0095               	movwf	21	;volatile
 12880  0507  0021               	movlb	1	; select bank1
 12881  0508  0851               	movf	(??_PWM_GLED+1)^(0+128),w
 12882  0509  0025               	movlb	5	; select bank5
 12883  050A  0096               	movwf	22	;volatile
 12884                           
 12885                           ;PWM.c: 153: } else {
 12886  050B  0008               	return
 12887  050C                     l7579:	
 12888                           
 12889                           ;PWM.c: 155: if (duty > 100)
 12890  050C  3065               	movlw	101
 12891  050D  0021               	movlb	1	; select bank1
 12892  050E  0256               	subwf	PWM_GLED@duty^(0+128),w
 12893  050F  1C03               	skipc
 12894  0510  2D13               	goto	l7583
 12895                           
 12896                           ;PWM.c: 156: duty = 100;
 12897  0511  3064               	movlw	100
 12898  0512  00D6               	movwf	PWM_GLED@duty^(0+128)
 12899  0513                     l7583:	
 12900                           
 12901                           ;PWM.c: 158: CCPR2 = gamma_table[GAMMAGLED - 1U][(duty - 1U)];
 12902  0513  0856               	movf	PWM_GLED@duty^(0+128),w
 12903  0514  00D0               	movwf	??_PWM_GLED^(0+128)
 12904  0515  01D1               	clrf	(??_PWM_GLED^(0+128)+1)
 12905  0516  35D0               	lslf	??_PWM_GLED^(0+128),f
 12906  0517  0DD1               	rlf	(??_PWM_GLED^(0+128)+1),f
 12907  0518  0020               	movlb	0	; select bank0
 12908  0519  083A               	movf	_GAMMAGLED,w	;volatile
 12909  051A  0021               	movlb	1	; select bank1
 12910  051B  00CA               	movwf	___wmul@multiplier^(0+128)
 12911  051C  30C8               	movlw	200
 12912  051D  01CB               	clrf	(___wmul@multiplier+1)^(0+128)
 12913  051E  00CC               	movwf	___wmul@multiplicand^(0+128)
 12914  051F  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
 12915  0520  261D               	fcall	___wmul
 12916  0521  3018               	movlw	low ((_gamma_table| (0+32768)+65334))
 12917  0522  00D2               	movwf	(??_PWM_GLED+2)^(0+128)
 12918  0523  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 12919  0524  00D3               	movwf	((??_PWM_GLED+2)^(0+128)+1)
 12920  0525  084A               	movf	?___wmul^(0+128),w
 12921  0526  0752               	addwf	(??_PWM_GLED+2)^(0+128),w
 12922  0527  00D4               	movwf	(??_PWM_GLED+4)^(0+128)
 12923  0528  084B               	movf	(?___wmul+1)^(0+128),w
 12924  0529  3D53               	addwfc	(??_PWM_GLED+3)^(0+128),w
 12925  052A  00D5               	movwf	(??_PWM_GLED+5)^(0+128)
 12926  052B  0854               	movf	(??_PWM_GLED+4)^(0+128),w
 12927  052C  0750               	addwf	??_PWM_GLED^(0+128),w
 12928  052D  0084               	movwf	4
 12929  052E  0855               	movf	(??_PWM_GLED+5)^(0+128),w
 12930  052F  3D51               	addwfc	(??_PWM_GLED+1)^(0+128),w
 12931  0530  0085               	movwf	5
 12932  0531  3F00               	moviw [0]fsr0
 12933  0532  0025               	movlb	5	; select bank5
 12934  0533  0095               	movwf	21	;volatile
 12935  0534  3F01               	moviw [1]fsr0
 12936  0535  0096               	movwf	22	;volatile
 12937  0536  0008               	return
 12938  0537                     __end_of_PWM_GLED:	
 12939  0537                     __ptext27:	
 12940 ;; *************** function _PWM_GP3_RLED *****************
 12941 ;; Defined at:
 12942 ;;		line 95 in file "PWM.c"
 12943 ;; Parameters:    Size  Location     Type
 12944 ;;  duty            1    wreg     unsigned char 
 12945 ;; Auto vars:     Size  Location     Type
 12946 ;;  duty            1   12[BANK1 ] unsigned char 
 12947 ;; Return value:  Size  Location     Type
 12948 ;;                  1    wreg      void 
 12949 ;; Registers used:
 12950 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12951 ;; Tracked objects:
 12952 ;;		On entry : 1F/0
 12953 ;;		On exit  : 1F/5
 12954 ;;		Unchanged: 0/0
 12955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12957 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 12958 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 12959 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 12960 ;;Total ram usage:        7 bytes
 12961 ;; Hardware stack levels used:    1
 12962 ;; Hardware stack levels required when called:    8
 12963 ;; This function calls:
 12964 ;;		___wmul
 12965 ;; This function is called by:
 12966 ;;		_FADE_GP3
 12967 ;;		_FADE_LEDS
 12968 ;; This function uses a non-reentrant model
 12969 ;;
 12970                           
 12971                           
 12972                           ;psect for function _PWM_GP3_RLED
 12973  0537                     _PWM_GP3_RLED:	
 12974                           
 12975                           ;incstack = 0
 12976                           ; Regs used in _PWM_GP3_RLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12977                           ;PWM_GP3_RLED@duty stored from wreg
 12978  0537  0021               	movlb	1	; select bank1
 12979  0538  00D6               	movwf	PWM_GP3_RLED@duty^(0+128)
 12980                           
 12981                           ;PWM.c: 97: if (duty == 0) {
 12982  0539  0856               	movf	PWM_GP3_RLED@duty^(0+128),w
 12983  053A  1D03               	btfss	3,2
 12984  053B  2D50               	goto	l7499
 12985                           
 12986                           ;PWM.c: 99: do { LATCbits.LATC5 = 1; } while(0);
 12987  053C  0022               	movlb	2	; select bank2
 12988  053D  168E               	bsf	14,5	;volatile
 12989                           
 12990                           ;PWM.c: 100: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 12991  053E  3055               	movlw	85
 12992  053F  003C               	movlb	28	; select bank28
 12993  0540  008F               	movwf	15	;volsfr
 12994  0541  30AA               	movlw	170
 12995  0542  008F               	movwf	15	;volsfr
 12996  0543  100F               	bcf	15,0	;volsfr
 12997                           
 12998                           ;PWM.c: 101: RC5PPSbits.RC5PPS = 0x00;
 12999  0544  30E0               	movlw	-32
 13000  0545  003D               	movlb	29	; select bank29
 13001  0546  05A5               	andwf	37,f	;volatile
 13002                           
 13003                           ;PWM.c: 102: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 13004  0547  3055               	movlw	85
 13005  0548  003C               	movlb	28	; select bank28
 13006  0549  008F               	movwf	15	;volsfr
 13007  054A  30AA               	movlw	170
 13008  054B  008F               	movwf	15	;volsfr
 13009  054C  140F               	bsf	15,0	;volsfr
 13010                           
 13011                           ;PWM.c: 103: CCP1CON = 0;
 13012  054D  0025               	movlb	5	; select bank5
 13013  054E  0193               	clrf	19	;volatile
 13014  054F  0008               	return
 13015  0550                     l7499:	
 13016                           
 13017                           ;PWM.c: 105: };PWM.c: 107: if (CCP1CON == 0) {
 13018  0550  0025               	movlb	5	; select bank5
 13019  0551  0813               	movf	19,w	;volatile
 13020  0552  1D03               	btfss	3,2
 13021  0553  2D6B               	goto	l1588
 13022                           
 13023                           ;PWM.c: 108: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 13024  0554  3055               	movlw	85
 13025  0555  003C               	movlb	28	; select bank28
 13026  0556  008F               	movwf	15	;volsfr
 13027  0557  30AA               	movlw	170
 13028  0558  008F               	movwf	15	;volsfr
 13029  0559  100F               	bcf	15,0	;volsfr
 13030                           
 13031                           ;PWM.c: 109: RC5PPSbits.RC5PPS = 0x0C;
 13032  055A  003D               	movlb	29	; select bank29
 13033  055B  0825               	movf	37,w	;volatile
 13034  055C  39E0               	andlw	-32
 13035  055D  380C               	iorlw	12
 13036  055E  00A5               	movwf	37	;volatile
 13037                           
 13038                           ;PWM.c: 110: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 13039  055F  3055               	movlw	85
 13040  0560  003C               	movlb	28	; select bank28
 13041  0561  008F               	movwf	15	;volsfr
 13042  0562  30AA               	movlw	170
 13043  0563  008F               	movwf	15	;volsfr
 13044  0564  140F               	bsf	15,0	;volsfr
 13045                           
 13046                           ;PWM.c: 111: CCP1CON = 0x8F;
 13047  0565  308F               	movlw	143
 13048  0566  0025               	movlb	5	; select bank5
 13049  0567  0093               	movwf	19	;volatile
 13050                           
 13051                           ;PWM.c: 112: CCPR1 = 0xFFFF;
 13052  0568  30FF               	movlw	255
 13053  0569  0092               	movwf	18	;volatile
 13054  056A  0091               	movwf	17	;volatile
 13055  056B                     l1588:	
 13056                           
 13057                           ;PWM.c: 113: };PWM.c: 115: if (GAMMAGP3_RLED == 0) {
 13058  056B  0020               	movlb	0	; select bank0
 13059  056C  083B               	movf	_GAMMAGP3_RLED,w	;volatile
 13060  056D  1D03               	btfss	3,2
 13061  056E  2D7F               	goto	l7519
 13062                           
 13063                           ;PWM.c: 117: CCPR1 = (uint16_t) (0xff - duty) << 2;
 13064  056F  0021               	movlb	1	; select bank1
 13065  0570  0956               	comf	PWM_GP3_RLED@duty^(0+128),w
 13066  0571  00D0               	movwf	??_PWM_GP3_RLED^(0+128)
 13067  0572  01D1               	clrf	(??_PWM_GP3_RLED^(0+128)+1)
 13068  0573  35D0               	lslf	??_PWM_GP3_RLED^(0+128),f
 13069  0574  0DD1               	rlf	(??_PWM_GP3_RLED^(0+128)+1),f
 13070  0575  35D0               	lslf	??_PWM_GP3_RLED^(0+128),f
 13071  0576  0DD1               	rlf	(??_PWM_GP3_RLED^(0+128)+1),f
 13072  0577  0850               	movf	??_PWM_GP3_RLED^(0+128),w
 13073  0578  0025               	movlb	5	; select bank5
 13074  0579  0091               	movwf	17	;volatile
 13075  057A  0021               	movlb	1	; select bank1
 13076  057B  0851               	movf	(??_PWM_GP3_RLED+1)^(0+128),w
 13077  057C  0025               	movlb	5	; select bank5
 13078  057D  0092               	movwf	18	;volatile
 13079                           
 13080                           ;PWM.c: 119: } else {
 13081  057E  0008               	return
 13082  057F                     l7519:	
 13083                           
 13084                           ;PWM.c: 120: if (duty > 100)
 13085  057F  3065               	movlw	101
 13086  0580  0021               	movlb	1	; select bank1
 13087  0581  0256               	subwf	PWM_GP3_RLED@duty^(0+128),w
 13088  0582  1C03               	skipc
 13089  0583  2D86               	goto	l7523
 13090                           
 13091                           ;PWM.c: 121: duty = 100;
 13092  0584  3064               	movlw	100
 13093  0585  00D6               	movwf	PWM_GP3_RLED@duty^(0+128)
 13094  0586                     l7523:	
 13095                           
 13096                           ;PWM.c: 123: CCPR1 = gamma_table[GAMMAGP3_RLED - 1U][(duty - 1U)];
 13097  0586  0856               	movf	PWM_GP3_RLED@duty^(0+128),w
 13098  0587  00D0               	movwf	??_PWM_GP3_RLED^(0+128)
 13099  0588  01D1               	clrf	(??_PWM_GP3_RLED^(0+128)+1)
 13100  0589  35D0               	lslf	??_PWM_GP3_RLED^(0+128),f
 13101  058A  0DD1               	rlf	(??_PWM_GP3_RLED^(0+128)+1),f
 13102  058B  0020               	movlb	0	; select bank0
 13103  058C  083B               	movf	_GAMMAGP3_RLED,w	;volatile
 13104  058D  0021               	movlb	1	; select bank1
 13105  058E  00CA               	movwf	___wmul@multiplier^(0+128)
 13106  058F  30C8               	movlw	200
 13107  0590  01CB               	clrf	(___wmul@multiplier+1)^(0+128)
 13108  0591  00CC               	movwf	___wmul@multiplicand^(0+128)
 13109  0592  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
 13110  0593  261D               	fcall	___wmul
 13111  0594  3018               	movlw	low ((_gamma_table| (0+32768)+65334))
 13112  0595  00D2               	movwf	(??_PWM_GP3_RLED+2)^(0+128)
 13113  0596  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 13114  0597  00D3               	movwf	((??_PWM_GP3_RLED+2)^(0+128)+1)
 13115  0598  084A               	movf	?___wmul^(0+128),w
 13116  0599  0752               	addwf	(??_PWM_GP3_RLED+2)^(0+128),w
 13117  059A  00D4               	movwf	(??_PWM_GP3_RLED+4)^(0+128)
 13118  059B  084B               	movf	(?___wmul+1)^(0+128),w
 13119  059C  3D53               	addwfc	(??_PWM_GP3_RLED+3)^(0+128),w
 13120  059D  00D5               	movwf	(??_PWM_GP3_RLED+5)^(0+128)
 13121  059E  0854               	movf	(??_PWM_GP3_RLED+4)^(0+128),w
 13122  059F  0750               	addwf	??_PWM_GP3_RLED^(0+128),w
 13123  05A0  0084               	movwf	4
 13124  05A1  0855               	movf	(??_PWM_GP3_RLED+5)^(0+128),w
 13125  05A2  3D51               	addwfc	(??_PWM_GP3_RLED+1)^(0+128),w
 13126  05A3  0085               	movwf	5
 13127  05A4  3F00               	moviw [0]fsr0
 13128  05A5  0025               	movlb	5	; select bank5
 13129  05A6  0091               	movwf	17	;volatile
 13130  05A7  3F01               	moviw [1]fsr0
 13131  05A8  0092               	movwf	18	;volatile
 13132  05A9  0008               	return
 13133  05AA                     __end_of_PWM_GP3_RLED:	
 13134  05AA                     __ptext29:	
 13135 ;; *************** function _PWM_BLED *****************
 13136 ;; Defined at:
 13137 ;;		line 165 in file "PWM.c"
 13138 ;; Parameters:    Size  Location     Type
 13139 ;;  duty            1    wreg     unsigned char 
 13140 ;; Auto vars:     Size  Location     Type
 13141 ;;  duty            1   12[BANK1 ] unsigned char 
 13142 ;; Return value:  Size  Location     Type
 13143 ;;                  1    wreg      void 
 13144 ;; Registers used:
 13145 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13146 ;; Tracked objects:
 13147 ;;		On entry : 1F/0
 13148 ;;		On exit  : 1F/6
 13149 ;;		Unchanged: 0/0
 13150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13152 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 13153 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 13154 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 13155 ;;Total ram usage:        7 bytes
 13156 ;; Hardware stack levels used:    1
 13157 ;; Hardware stack levels required when called:    8
 13158 ;; This function calls:
 13159 ;;		___wmul
 13160 ;; This function is called by:
 13161 ;;		_FADE_LEDS
 13162 ;; This function uses a non-reentrant model
 13163 ;;
 13164                           
 13165                           
 13166                           ;psect for function _PWM_BLED
 13167  05AA                     _PWM_BLED:	
 13168                           
 13169                           ;incstack = 0
 13170                           ; Regs used in _PWM_BLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13171                           ;PWM_BLED@duty stored from wreg
 13172  05AA  0021               	movlb	1	; select bank1
 13173  05AB  00D6               	movwf	PWM_BLED@duty^(0+128)
 13174                           
 13175                           ;PWM.c: 167: if (duty == 0) {
 13176  05AC  0856               	movf	PWM_BLED@duty^(0+128),w
 13177  05AD  1D03               	btfss	3,2
 13178  05AE  2DC3               	goto	l7603
 13179                           
 13180                           ;PWM.c: 169: do { LATCbits.LATC3 = 1; } while(0);
 13181  05AF  0022               	movlb	2	; select bank2
 13182  05B0  158E               	bsf	14,3	;volatile
 13183                           
 13184                           ;PWM.c: 170: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 13185  05B1  3055               	movlw	85
 13186  05B2  003C               	movlb	28	; select bank28
 13187  05B3  008F               	movwf	15	;volsfr
 13188  05B4  30AA               	movlw	170
 13189  05B5  008F               	movwf	15	;volsfr
 13190  05B6  100F               	bcf	15,0	;volsfr
 13191                           
 13192                           ;PWM.c: 171: RC3PPSbits.RC3PPS = 0x00;
 13193  05B7  30E0               	movlw	-32
 13194  05B8  003D               	movlb	29	; select bank29
 13195  05B9  05A3               	andwf	35,f	;volatile
 13196                           
 13197                           ;PWM.c: 172: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 13198  05BA  3055               	movlw	85
 13199  05BB  003C               	movlb	28	; select bank28
 13200  05BC  008F               	movwf	15	;volsfr
 13201  05BD  30AA               	movlw	170
 13202  05BE  008F               	movwf	15	;volsfr
 13203  05BF  140F               	bsf	15,0	;volsfr
 13204                           
 13205                           ;PWM.c: 173: CCP3CON = 0;
 13206  05C0  0026               	movlb	6	; select bank6
 13207  05C1  0193               	clrf	19	;volatile
 13208  05C2  0008               	return
 13209  05C3                     l7603:	
 13210                           
 13211                           ;PWM.c: 175: };PWM.c: 178: if (CCP3CON == 0) {
 13212  05C3  0026               	movlb	6	; select bank6
 13213  05C4  0813               	movf	19,w	;volatile
 13214  05C5  1D03               	btfss	3,2
 13215  05C6  2DDE               	goto	l1608
 13216                           
 13217                           ;PWM.c: 179: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 13218  05C7  3055               	movlw	85
 13219  05C8  003C               	movlb	28	; select bank28
 13220  05C9  008F               	movwf	15	;volsfr
 13221  05CA  30AA               	movlw	170
 13222  05CB  008F               	movwf	15	;volsfr
 13223  05CC  100F               	bcf	15,0	;volsfr
 13224                           
 13225                           ;PWM.c: 180: RC3PPSbits.RC3PPS = 0x0E;
 13226  05CD  003D               	movlb	29	; select bank29
 13227  05CE  0823               	movf	35,w	;volatile
 13228  05CF  39E0               	andlw	-32
 13229  05D0  380E               	iorlw	14
 13230  05D1  00A3               	movwf	35	;volatile
 13231                           
 13232                           ;PWM.c: 181: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 13233  05D2  3055               	movlw	85
 13234  05D3  003C               	movlb	28	; select bank28
 13235  05D4  008F               	movwf	15	;volsfr
 13236  05D5  30AA               	movlw	170
 13237  05D6  008F               	movwf	15	;volsfr
 13238  05D7  140F               	bsf	15,0	;volsfr
 13239                           
 13240                           ;PWM.c: 182: CCP3CON = 0x8F;
 13241  05D8  308F               	movlw	143
 13242  05D9  0026               	movlb	6	; select bank6
 13243  05DA  0093               	movwf	19	;volatile
 13244                           
 13245                           ;PWM.c: 183: CCPR3 = 0xFFFF;
 13246  05DB  30FF               	movlw	255
 13247  05DC  0092               	movwf	18	;volatile
 13248  05DD  0091               	movwf	17	;volatile
 13249  05DE                     l1608:	
 13250                           
 13251                           ;PWM.c: 184: };PWM.c: 186: if (GAMMABLED == 0) {
 13252  05DE  0020               	movlb	0	; select bank0
 13253  05DF  0839               	movf	_GAMMABLED,w	;volatile
 13254  05E0  1D03               	btfss	3,2
 13255  05E1  2DF2               	goto	l7623
 13256                           
 13257                           ;PWM.c: 188: CCPR3 = (uint16_t) (0xff - duty) << 2;
 13258  05E2  0021               	movlb	1	; select bank1
 13259  05E3  0956               	comf	PWM_BLED@duty^(0+128),w
 13260  05E4  00D0               	movwf	??_PWM_BLED^(0+128)
 13261  05E5  01D1               	clrf	(??_PWM_BLED^(0+128)+1)
 13262  05E6  35D0               	lslf	??_PWM_BLED^(0+128),f
 13263  05E7  0DD1               	rlf	(??_PWM_BLED^(0+128)+1),f
 13264  05E8  35D0               	lslf	??_PWM_BLED^(0+128),f
 13265  05E9  0DD1               	rlf	(??_PWM_BLED^(0+128)+1),f
 13266  05EA  0850               	movf	??_PWM_BLED^(0+128),w
 13267  05EB  0026               	movlb	6	; select bank6
 13268  05EC  0091               	movwf	17	;volatile
 13269  05ED  0021               	movlb	1	; select bank1
 13270  05EE  0851               	movf	(??_PWM_BLED+1)^(0+128),w
 13271  05EF  0026               	movlb	6	; select bank6
 13272  05F0  0092               	movwf	18	;volatile
 13273                           
 13274                           ;PWM.c: 190: } else {
 13275  05F1  0008               	return
 13276  05F2                     l7623:	
 13277                           
 13278                           ;PWM.c: 192: if (duty > 100)
 13279  05F2  3065               	movlw	101
 13280  05F3  0021               	movlb	1	; select bank1
 13281  05F4  0256               	subwf	PWM_BLED@duty^(0+128),w
 13282  05F5  1C03               	skipc
 13283  05F6  2DF9               	goto	l7627
 13284                           
 13285                           ;PWM.c: 193: duty = 100;
 13286  05F7  3064               	movlw	100
 13287  05F8  00D6               	movwf	PWM_BLED@duty^(0+128)
 13288  05F9                     l7627:	
 13289                           
 13290                           ;PWM.c: 195: CCPR3 = gamma_table[GAMMABLED - 1U][(duty - 1U)];
 13291  05F9  0856               	movf	PWM_BLED@duty^(0+128),w
 13292  05FA  00D0               	movwf	??_PWM_BLED^(0+128)
 13293  05FB  01D1               	clrf	(??_PWM_BLED^(0+128)+1)
 13294  05FC  35D0               	lslf	??_PWM_BLED^(0+128),f
 13295  05FD  0DD1               	rlf	(??_PWM_BLED^(0+128)+1),f
 13296  05FE  0020               	movlb	0	; select bank0
 13297  05FF  0839               	movf	_GAMMABLED,w	;volatile
 13298  0600  0021               	movlb	1	; select bank1
 13299  0601  00CA               	movwf	___wmul@multiplier^(0+128)
 13300  0602  30C8               	movlw	200
 13301  0603  01CB               	clrf	(___wmul@multiplier+1)^(0+128)
 13302  0604  00CC               	movwf	___wmul@multiplicand^(0+128)
 13303  0605  01CD               	clrf	(___wmul@multiplicand+1)^(0+128)
 13304  0606  261D               	fcall	___wmul
 13305  0607  3018               	movlw	low ((_gamma_table| (0+32768)+65334))
 13306  0608  00D2               	movwf	(??_PWM_BLED+2)^(0+128)
 13307  0609  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 13308  060A  00D3               	movwf	((??_PWM_BLED+2)^(0+128)+1)
 13309  060B  084A               	movf	?___wmul^(0+128),w
 13310  060C  0752               	addwf	(??_PWM_BLED+2)^(0+128),w
 13311  060D  00D4               	movwf	(??_PWM_BLED+4)^(0+128)
 13312  060E  084B               	movf	(?___wmul+1)^(0+128),w
 13313  060F  3D53               	addwfc	(??_PWM_BLED+3)^(0+128),w
 13314  0610  00D5               	movwf	(??_PWM_BLED+5)^(0+128)
 13315  0611  0854               	movf	(??_PWM_BLED+4)^(0+128),w
 13316  0612  0750               	addwf	??_PWM_BLED^(0+128),w
 13317  0613  0084               	movwf	4
 13318  0614  0855               	movf	(??_PWM_BLED+5)^(0+128),w
 13319  0615  3D51               	addwfc	(??_PWM_BLED+1)^(0+128),w
 13320  0616  0085               	movwf	5
 13321  0617  3F00               	moviw [0]fsr0
 13322  0618  0026               	movlb	6	; select bank6
 13323  0619  0091               	movwf	17	;volatile
 13324  061A  3F01               	moviw [1]fsr0
 13325  061B  0092               	movwf	18	;volatile
 13326  061C  0008               	return
 13327  061D                     __end_of_PWM_BLED:	
 13328  061D                     __ptext30:	
 13329 ;; *************** function ___wmul *****************
 13330 ;; Defined at:
 13331 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
 13332 ;; Parameters:    Size  Location     Type
 13333 ;;  multiplier      2    0[BANK1 ] unsigned int 
 13334 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 13335 ;; Auto vars:     Size  Location     Type
 13336 ;;  product         2    4[BANK1 ] unsigned int 
 13337 ;; Return value:  Size  Location     Type
 13338 ;;                  2    0[BANK1 ] unsigned int 
 13339 ;; Registers used:
 13340 ;;		wreg, status,2, status,0
 13341 ;; Tracked objects:
 13342 ;;		On entry : 1F/1
 13343 ;;		On exit  : 1F/1
 13344 ;;		Unchanged: 0/0
 13345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13346 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 13347 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
 13348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13349 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
 13350 ;;Total ram usage:        6 bytes
 13351 ;; Hardware stack levels used:    1
 13352 ;; Hardware stack levels required when called:    7
 13353 ;; This function calls:
 13354 ;;		Nothing
 13355 ;; This function is called by:
 13356 ;;		_PWM_GP1
 13357 ;;		_PWM_GP2
 13358 ;;		_PWM_GP3_RLED
 13359 ;;		_PWM_GLED
 13360 ;;		_PWM_BLED
 13361 ;; This function uses a non-reentrant model
 13362 ;;
 13363                           
 13364                           
 13365                           ;psect for function ___wmul
 13366  061D                     ___wmul:	
 13367                           
 13368                           ;incstack = 0
 13369                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13370  061D  01CE               	clrf	___wmul@product^(0+128)
 13371  061E  01CF               	clrf	(___wmul@product+1)^(0+128)
 13372  061F                     l7349:	
 13373  061F  1C4A               	btfss	___wmul@multiplier^(0+128),0
 13374  0620  2E25               	goto	l7353
 13375  0621  084C               	movf	___wmul@multiplicand^(0+128),w
 13376  0622  07CE               	addwf	___wmul@product^(0+128),f
 13377  0623  084D               	movf	(___wmul@multiplicand+1)^(0+128),w
 13378  0624  3DCF               	addwfc	(___wmul@product+1)^(0+128),f
 13379  0625                     l7353:	
 13380  0625  35CC               	lslf	___wmul@multiplicand^(0+128),f
 13381  0626  0DCD               	rlf	(___wmul@multiplicand+1)^(0+128),f
 13382  0627  36CB               	lsrf	(___wmul@multiplier+1)^(0+128),f
 13383  0628  0CCA               	rrf	___wmul@multiplier^(0+128),f
 13384  0629  084A               	movf	___wmul@multiplier^(0+128),w
 13385  062A  044B               	iorwf	(___wmul@multiplier+1)^(0+128),w
 13386  062B  1D03               	btfss	3,2
 13387  062C  2E1F               	goto	l7349
 13388  062D  084F               	movf	(___wmul@product+1)^(0+128),w
 13389  062E  00CB               	movwf	(?___wmul+1)^(0+128)
 13390  062F  084E               	movf	___wmul@product^(0+128),w
 13391  0630  00CA               	movwf	?___wmul^(0+128)
 13392  0631  0008               	return
 13393  0632                     __end_of___wmul:	
 13394  0632                     __ptext11:	
 13395 ;; *************** function _I2C1_AddressSet *****************
 13396 ;; Defined at:
 13397 ;;		line 20 in file "i2c_register.c"
 13398 ;; Parameters:    Size  Location     Type
 13399 ;;		None
 13400 ;; Auto vars:     Size  Location     Type
 13401 ;;		None
 13402 ;; Return value:  Size  Location     Type
 13403 ;;                  1    wreg      void 
 13404 ;; Registers used:
 13405 ;;		wreg, status,2, status,0
 13406 ;; Tracked objects:
 13407 ;;		On entry : B1F/1
 13408 ;;		On exit  : B1F/0
 13409 ;;		Unchanged: B00/0
 13410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13415 ;;Total ram usage:        0 bytes
 13416 ;; Hardware stack levels used:    1
 13417 ;; Hardware stack levels required when called:    7
 13418 ;; This function calls:
 13419 ;;		Nothing
 13420 ;; This function is called by:
 13421 ;;		_SYSTEM_Initialize
 13422 ;; This function uses a non-reentrant model
 13423 ;;
 13424                           
 13425                           
 13426                           ;psect for function _I2C1_AddressSet
 13427  0632                     _I2C1_AddressSet:	
 13428                           
 13429                           ;i2c_register.c: 26: i2c_address = 0x00;
 13430                           
 13431                           ;incstack = 0
 13432                           ; Regs used in _I2C1_AddressSet: [wreg+status,2+status,0]
 13433  0632  0020               	movlb	0	; select bank0
 13434  0633  01CA               	clrf	_i2c_address	;volatile
 13435                           
 13436                           ;i2c_register.c: 28: if (!PORTAbits.RA0)
 13437  0634  1C0C               	btfss	12,0	;volatile
 13438                           
 13439                           ;i2c_register.c: 29: i2c_address |= 0x01;
 13440  0635  144A               	bsf	_i2c_address,0	;volatile
 13441                           
 13442                           ;i2c_register.c: 31: if (!PORTAbits.RA1)
 13443  0636  1C8C               	btfss	12,1	;volatile
 13444                           
 13445                           ;i2c_register.c: 32: i2c_address |= 0x02;
 13446  0637  14CA               	bsf	_i2c_address,1	;volatile
 13447                           
 13448                           ;i2c_register.c: 34: if (!PORTAbits.RA2)
 13449  0638  1D0C               	btfss	12,2	;volatile
 13450                           
 13451                           ;i2c_register.c: 35: i2c_address |= 0x04;
 13452  0639  154A               	bsf	_i2c_address,2	;volatile
 13453                           
 13454                           ;i2c_register.c: 37: if (!PORTAbits.RA3)
 13455  063A  1D8C               	btfss	12,3	;volatile
 13456                           
 13457                           ;i2c_register.c: 38: i2c_address |= 0x08;
 13458  063B  15CA               	bsf	_i2c_address,3	;volatile
 13459                           
 13460                           ;i2c_register.c: 40: if (!PORTAbits.RA4)
 13461  063C  1E0C               	btfss	12,4	;volatile
 13462                           
 13463                           ;i2c_register.c: 41: i2c_address |= 0x10;
 13464  063D  164A               	bsf	_i2c_address,4	;volatile
 13465                           
 13466                           ;i2c_register.c: 43: if (!PORTAbits.RA5)
 13467  063E  1E8C               	btfss	12,5	;volatile
 13468                           
 13469                           ;i2c_register.c: 44: i2c_address |= 0x20;
 13470  063F  16CA               	bsf	_i2c_address,5	;volatile
 13471                           
 13472                           ;i2c_register.c: 46: if (!PORTBbits.RB4)
 13473  0640  1E0D               	btfss	13,4	;volatile
 13474                           
 13475                           ;i2c_register.c: 47: i2c_address |= 0x40;
 13476  0641  174A               	bsf	_i2c_address,6	;volatile
 13477                           
 13478                           ;i2c_register.c: 49: i2c_address = (uint8_t) (i2c_address << 1);
 13479  0642  354A               	lslf	_i2c_address,w	;volatile
 13480  0643  00CA               	movwf	_i2c_address	;volatile
 13481  0644  0008               	return
 13482  0645                     __end_of_I2C1_AddressSet:	
 13483  0645                     __ptext10:	
 13484 ;; *************** function _I2C1_Initialize *****************
 13485 ;; Defined at:
 13486 ;;		line 75 in file "mcc_generated_files/i2c1.c"
 13487 ;; Parameters:    Size  Location     Type
 13488 ;;		None
 13489 ;; Auto vars:     Size  Location     Type
 13490 ;;		None
 13491 ;; Return value:  Size  Location     Type
 13492 ;;                  1    wreg      void 
 13493 ;; Registers used:
 13494 ;;		wreg, status,2
 13495 ;; Tracked objects:
 13496 ;;		On entry : B1F/0
 13497 ;;		On exit  : B1F/1
 13498 ;;		Unchanged: B00/0
 13499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13504 ;;Total ram usage:        0 bytes
 13505 ;; Hardware stack levels used:    1
 13506 ;; Hardware stack levels required when called:    7
 13507 ;; This function calls:
 13508 ;;		Nothing
 13509 ;; This function is called by:
 13510 ;;		_SYSTEM_Initialize
 13511 ;; This function uses a non-reentrant model
 13512 ;;
 13513                           
 13514                           
 13515                           ;psect for function _I2C1_Initialize
 13516  0645                     _I2C1_Initialize:	
 13517                           
 13518                           ;i2c1.c: 78: SSP1STAT = 0x00;
 13519                           
 13520                           ;incstack = 0
 13521                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 13522  0645  0024               	movlb	4	; select bank4
 13523  0646  0194               	clrf	20	;volatile
 13524                           
 13525                           ;i2c1.c: 80: SSP1CON1 = 0x26;
 13526  0647  3026               	movlw	38
 13527  0648  0095               	movwf	21	;volatile
 13528                           
 13529                           ;i2c1.c: 82: SSP1CON2 = 0x00;
 13530  0649  0196               	clrf	22	;volatile
 13531                           
 13532                           ;i2c1.c: 84: SSP1CON3 = 0x00;
 13533  064A  0197               	clrf	23	;volatile
 13534                           
 13535                           ;i2c1.c: 86: SSP1MSK = (0x7F << 1);
 13536  064B  30FE               	movlw	254
 13537  064C  0093               	movwf	19	;volatile
 13538                           
 13539                           ;i2c1.c: 88: SSP1ADD = i2c_address;
 13540  064D  0020               	movlb	0	; select bank0
 13541  064E  084A               	movf	_i2c_address,w	;volatile
 13542  064F  0024               	movlb	4	; select bank4
 13543  0650  0092               	movwf	18	;volatile
 13544                           
 13545                           ;i2c1.c: 91: PIR1bits.SSP1IF = 0;
 13546  0651  0020               	movlb	0	; select bank0
 13547  0652  1191               	bcf	17,3	;volatile
 13548                           
 13549                           ;i2c1.c: 93: PIE1bits.SSP1IE = 1;
 13550  0653  0021               	movlb	1	; select bank1
 13551  0654  1591               	bsf	17,3	;volatile
 13552  0655  0008               	return
 13553  0656                     __end_of_I2C1_Initialize:	
 13554  0656                     __ptext9:	
 13555 ;; *************** function _OSCILLATOR_Initialize *****************
 13556 ;; Defined at:
 13557 ;;		line 66 in file "mcc_generated_files/mcc.c"
 13558 ;; Parameters:    Size  Location     Type
 13559 ;;		None
 13560 ;; Auto vars:     Size  Location     Type
 13561 ;;		None
 13562 ;; Return value:  Size  Location     Type
 13563 ;;                  1    wreg      void 
 13564 ;; Registers used:
 13565 ;;		wreg, status,2
 13566 ;; Tracked objects:
 13567 ;;		On entry : B1F/1D
 13568 ;;		On exit  : B1F/12
 13569 ;;		Unchanged: B00/0
 13570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13575 ;;Total ram usage:        0 bytes
 13576 ;; Hardware stack levels used:    1
 13577 ;; Hardware stack levels required when called:    7
 13578 ;; This function calls:
 13579 ;;		Nothing
 13580 ;; This function is called by:
 13581 ;;		_SYSTEM_Initialize
 13582 ;; This function uses a non-reentrant model
 13583 ;;
 13584                           
 13585                           
 13586                           ;psect for function _OSCILLATOR_Initialize
 13587  0656                     _OSCILLATOR_Initialize:	
 13588                           
 13589                           ;mcc.c: 69: OSCCON1 = 0x60;
 13590                           
 13591                           ;incstack = 0
 13592                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13593  0656  3060               	movlw	96
 13594  0657  0032               	movlb	18	; select bank18
 13595  0658  0099               	movwf	25	;volatile
 13596                           
 13597                           ;mcc.c: 71: OSCCON3 = 0x00;
 13598  0659  019B               	clrf	27	;volatile
 13599                           
 13600                           ;mcc.c: 73: OSCEN = 0x00;
 13601  065A  019D               	clrf	29	;volatile
 13602                           
 13603                           ;mcc.c: 75: OSCFRQ = 0x07;
 13604  065B  3007               	movlw	7
 13605  065C  009F               	movwf	31	;volatile
 13606                           
 13607                           ;mcc.c: 77: OSCTUNE = 0x00;
 13608  065D  019E               	clrf	30	;volatile
 13609  065E  0008               	return
 13610  065F                     __end_of_OSCILLATOR_Initialize:	
 13611  065F                     __ptext8:	
 13612 ;; *************** function _PIN_MANAGER_Initialize *****************
 13613 ;; Defined at:
 13614 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 13615 ;; Parameters:    Size  Location     Type
 13616 ;;		None
 13617 ;; Auto vars:     Size  Location     Type
 13618 ;;		None
 13619 ;; Return value:  Size  Location     Type
 13620 ;;                  1    wreg      void 
 13621 ;; Registers used:
 13622 ;;		wreg, status,2, status,0
 13623 ;; Tracked objects:
 13624 ;;		On entry : B1F/12
 13625 ;;		On exit  : B1F/1D
 13626 ;;		Unchanged: B00/0
 13627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13632 ;;Total ram usage:        0 bytes
 13633 ;; Hardware stack levels used:    1
 13634 ;; Hardware stack levels required when called:    7
 13635 ;; This function calls:
 13636 ;;		Nothing
 13637 ;; This function is called by:
 13638 ;;		_SYSTEM_Initialize
 13639 ;; This function uses a non-reentrant model
 13640 ;;
 13641                           
 13642                           
 13643                           ;psect for function _PIN_MANAGER_Initialize
 13644  065F                     _PIN_MANAGER_Initialize:	
 13645                           
 13646                           ;pin_manager.c: 62: LATA = 0x00;
 13647                           
 13648                           ;incstack = 0
 13649                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 13650  065F  0022               	movlb	2	; select bank2
 13651  0660  018C               	clrf	12	;volatile
 13652                           
 13653                           ;pin_manager.c: 63: LATB = 0x00;
 13654  0661  018D               	clrf	13	;volatile
 13655                           
 13656                           ;pin_manager.c: 64: LATC = 0x00;
 13657  0662  018E               	clrf	14	;volatile
 13658                           
 13659                           ;pin_manager.c: 69: TRISA = 0x37;
 13660  0663  3037               	movlw	55
 13661  0664  0021               	movlb	1	; select bank1
 13662  0665  008C               	movwf	12	;volatile
 13663                           
 13664                           ;pin_manager.c: 70: TRISB = 0xD0;
 13665  0666  30D0               	movlw	208
 13666  0667  008D               	movwf	13	;volatile
 13667                           
 13668                           ;pin_manager.c: 71: TRISC = 0xFF;
 13669  0668  30FF               	movlw	255
 13670  0669  008E               	movwf	14	;volatile
 13671                           
 13672                           ;pin_manager.c: 76: ANSELC = 0x00;
 13673  066A  0023               	movlb	3	; select bank3
 13674  066B  018E               	clrf	14	;volatile
 13675                           
 13676                           ;pin_manager.c: 77: ANSELB = 0x20;
 13677  066C  3020               	movlw	32
 13678  066D  008D               	movwf	13	;volatile
 13679                           
 13680                           ;pin_manager.c: 78: ANSELA = 0x00;
 13681  066E  018C               	clrf	12	;volatile
 13682                           
 13683                           ;pin_manager.c: 83: WPUB = 0x10;
 13684  066F  3010               	movlw	16
 13685  0670  0024               	movlb	4	; select bank4
 13686  0671  008D               	movwf	13	;volatile
 13687                           
 13688                           ;pin_manager.c: 84: WPUA = 0x3F;
 13689  0672  303F               	movlw	63
 13690  0673  008C               	movwf	12	;volatile
 13691                           
 13692                           ;pin_manager.c: 85: WPUC = 0x00;
 13693  0674  018E               	clrf	14	;volatile
 13694                           
 13695                           ;pin_manager.c: 90: ODCONA = 0x00;
 13696  0675  0025               	movlb	5	; select bank5
 13697  0676  018C               	clrf	12	;volatile
 13698                           
 13699                           ;pin_manager.c: 91: ODCONB = 0x20;
 13700  0677  3020               	movlw	32
 13701  0678  008D               	movwf	13	;volatile
 13702                           
 13703                           ;pin_manager.c: 92: ODCONC = 0x00;
 13704  0679  018E               	clrf	14	;volatile
 13705                           
 13706                           ;pin_manager.c: 101: SSP1CLKPPSbits.SSP1CLKPPS = 0x0E;
 13707  067A  003C               	movlb	28	; select bank28
 13708  067B  0820               	movf	32,w	;volatile
 13709  067C  39E0               	andlw	-32
 13710  067D  380E               	iorlw	14
 13711  067E  00A0               	movwf	32	;volatile
 13712                           
 13713                           ;pin_manager.c: 102: SSP1DATPPSbits.SSP1DATPPS = 0x0F;
 13714  067F  0821               	movf	33,w	;volatile
 13715  0680  39E0               	andlw	-32
 13716  0681  380F               	iorlw	15
 13717  0682  00A1               	movwf	33	;volatile
 13718                           
 13719                           ;pin_manager.c: 103: CLCIN1PPSbits.CLCIN1PPS = 0x11;
 13720  0683  0829               	movf	41,w	;volatile
 13721  0684  39E0               	andlw	-32
 13722  0685  3811               	iorlw	17
 13723  0686  00A9               	movwf	41	;volatile
 13724                           
 13725                           ;pin_manager.c: 104: CLCIN0PPSbits.CLCIN0PPS = 0x10;
 13726  0687  0828               	movf	40,w	;volatile
 13727  0688  39E0               	andlw	-32
 13728  0689  3810               	iorlw	16
 13729  068A  00A8               	movwf	40	;volatile
 13730                           
 13731                           ;pin_manager.c: 105: RB7PPSbits.RB7PPS = 0x19;
 13732  068B  003D               	movlb	29	; select bank29
 13733  068C  081F               	movf	31,w	;volatile
 13734  068D  39E0               	andlw	-32
 13735  068E  3819               	iorlw	25
 13736  068F  009F               	movwf	31	;volatile
 13737                           
 13738                           ;pin_manager.c: 106: RB6PPSbits.RB6PPS = 0x18;
 13739  0690  081E               	movf	30,w	;volatile
 13740  0691  39E0               	andlw	-32
 13741  0692  3818               	iorlw	24
 13742  0693  009E               	movwf	30	;volatile
 13743  0694  0008               	return
 13744  0695                     __end_of_PIN_MANAGER_Initialize:	
 13745  0695                     __ptext7:	
 13746 ;; *************** function _PMD_Initialize *****************
 13747 ;; Defined at:
 13748 ;;		line 86 in file "mcc_generated_files/mcc.c"
 13749 ;; Parameters:    Size  Location     Type
 13750 ;;		None
 13751 ;; Auto vars:     Size  Location     Type
 13752 ;;		None
 13753 ;; Return value:  Size  Location     Type
 13754 ;;                  1    wreg      void 
 13755 ;; Registers used:
 13756 ;;		wreg
 13757 ;; Tracked objects:
 13758 ;;		On entry : B1F/0
 13759 ;;		On exit  : B1F/12
 13760 ;;		Unchanged: B00/0
 13761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13766 ;;Total ram usage:        0 bytes
 13767 ;; Hardware stack levels used:    1
 13768 ;; Hardware stack levels required when called:    7
 13769 ;; This function calls:
 13770 ;;		Nothing
 13771 ;; This function is called by:
 13772 ;;		_SYSTEM_Initialize
 13773 ;; This function uses a non-reentrant model
 13774 ;;
 13775                           
 13776                           
 13777                           ;psect for function _PMD_Initialize
 13778  0695                     _PMD_Initialize:	
 13779                           
 13780                           ;mcc.c: 89: PMD0 = 0x40;
 13781                           
 13782                           ;incstack = 0
 13783                           ; Regs used in _PMD_Initialize: [wreg]
 13784  0695  3040               	movlw	64
 13785  0696  0032               	movlb	18	; select bank18
 13786  0697  0091               	movwf	17	;volatile
 13787                           
 13788                           ;mcc.c: 91: PMD1 = 0xF2;
 13789  0698  30F2               	movlw	242
 13790  0699  0092               	movwf	18	;volatile
 13791                           
 13792                           ;mcc.c: 93: PMD2 = 0x66;
 13793  069A  3066               	movlw	102
 13794  069B  0093               	movwf	19	;volatile
 13795                           
 13796                           ;mcc.c: 95: PMD3 = 0xE0;
 13797  069C  30E0               	movlw	224
 13798  069D  0094               	movwf	20	;volatile
 13799                           
 13800                           ;mcc.c: 97: PMD4 = 0x20;
 13801  069E  3020               	movlw	32
 13802  069F  0095               	movwf	21	;volatile
 13803                           
 13804                           ;mcc.c: 99: PMD5 = 0x19;
 13805  06A0  3019               	movlw	25
 13806  06A1  0096               	movwf	22	;volatile
 13807  06A2  0008               	return
 13808  06A3                     __end_of_PMD_Initialize:	
 13809  06A3                     __ptext6:	
 13810 ;; *************** function _TMR2_Initialize *****************
 13811 ;; Defined at:
 13812 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 13813 ;; Parameters:    Size  Location     Type
 13814 ;;		None
 13815 ;; Auto vars:     Size  Location     Type
 13816 ;;		None
 13817 ;; Return value:  Size  Location     Type
 13818 ;;                  1    wreg      void 
 13819 ;; Registers used:
 13820 ;;		wreg, status,2
 13821 ;; Tracked objects:
 13822 ;;		On entry : B1F/1
 13823 ;;		On exit  : B1F/0
 13824 ;;		Unchanged: B00/0
 13825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13830 ;;Total ram usage:        0 bytes
 13831 ;; Hardware stack levels used:    1
 13832 ;; Hardware stack levels required when called:    7
 13833 ;; This function calls:
 13834 ;;		Nothing
 13835 ;; This function is called by:
 13836 ;;		_SYSTEM_Initialize
 13837 ;; This function uses a non-reentrant model
 13838 ;;
 13839                           
 13840                           
 13841                           ;psect for function _TMR2_Initialize
 13842  06A3                     _TMR2_Initialize:	
 13843                           
 13844                           ;tmr2.c: 67: PR2 = 0xFF;
 13845                           
 13846                           ;incstack = 0
 13847                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 13848  06A3  30FF               	movlw	255
 13849  06A4  0020               	movlb	0	; select bank0
 13850  06A5  009E               	movwf	30	;volatile
 13851                           
 13852                           ;tmr2.c: 70: TMR2 = 0x00;
 13853  06A6  019D               	clrf	29	;volatile
 13854                           
 13855                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
 13856  06A7  1091               	bcf	17,1	;volatile
 13857                           
 13858                           ;tmr2.c: 76: T2CON = 0x04;
 13859  06A8  3004               	movlw	4
 13860  06A9  009F               	movwf	31	;volatile
 13861  06AA  0008               	return
 13862  06AB                     __end_of_TMR2_Initialize:	
 13863  06AB                     __ptext3:	
 13864 ;; *************** function _WDT_Initialize *****************
 13865 ;; Defined at:
 13866 ;;		line 80 in file "mcc_generated_files/mcc.c"
 13867 ;; Parameters:    Size  Location     Type
 13868 ;;		None
 13869 ;; Auto vars:     Size  Location     Type
 13870 ;;		None
 13871 ;; Return value:  Size  Location     Type
 13872 ;;                  1    wreg      void 
 13873 ;; Registers used:
 13874 ;;		wreg
 13875 ;; Tracked objects:
 13876 ;;		On entry : B1F/12
 13877 ;;		On exit  : B1F/1
 13878 ;;		Unchanged: B00/0
 13879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13884 ;;Total ram usage:        0 bytes
 13885 ;; Hardware stack levels used:    1
 13886 ;; Hardware stack levels required when called:    7
 13887 ;; This function calls:
 13888 ;;		Nothing
 13889 ;; This function is called by:
 13890 ;;		_SYSTEM_Initialize
 13891 ;; This function uses a non-reentrant model
 13892 ;;
 13893                           
 13894                           
 13895                           ;psect for function _WDT_Initialize
 13896  06AB                     _WDT_Initialize:	
 13897                           
 13898                           ;mcc.c: 83: WDTCON = 0x16;
 13899                           
 13900                           ;incstack = 0
 13901                           ; Regs used in _WDT_Initialize: [wreg]
 13902  06AB  3016               	movlw	22
 13903  06AC  0021               	movlb	1	; select bank1
 13904  06AD  0097               	movwf	23	;volatile
 13905  06AE  0008               	return
 13906  06AF                     __end_of_WDT_Initialize:	
 13907  06AF                     __ptext1:	
 13908 ;; *************** function _TMR3_StartTimer *****************
 13909 ;; Defined at:
 13910 ;;		line 93 in file "mcc_generated_files/tmr3.c"
 13911 ;; Parameters:    Size  Location     Type
 13912 ;;		None
 13913 ;; Auto vars:     Size  Location     Type
 13914 ;;		None
 13915 ;; Return value:  Size  Location     Type
 13916 ;;                  1    wreg      void 
 13917 ;; Registers used:
 13918 ;;		None
 13919 ;; Tracked objects:
 13920 ;;		On entry : 1F/1
 13921 ;;		On exit  : 1F/8
 13922 ;;		Unchanged: 0/0
 13923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13928 ;;Total ram usage:        0 bytes
 13929 ;; Hardware stack levels used:    1
 13930 ;; Hardware stack levels required when called:    7
 13931 ;; This function calls:
 13932 ;;		Nothing
 13933 ;; This function is called by:
 13934 ;;		_main
 13935 ;; This function uses a non-reentrant model
 13936 ;;
 13937                           
 13938                           
 13939                           ;psect for function _TMR3_StartTimer
 13940  06AF                     _TMR3_StartTimer:	
 13941                           
 13942                           ;tmr3.c: 96: T3CONbits.TMR3ON = 1;
 13943                           
 13944                           ;incstack = 0
 13945                           ; Regs used in _TMR3_StartTimer: []
 13946  06AF  0028               	movlb	8	; select bank8
 13947  06B0  1413               	bsf	19,0	;volatile
 13948  06B1  0008               	return
 13949  06B2                     __end_of_TMR3_StartTimer:	
 13950  06B2                     __ptext13:	
 13951 ;; *************** function _CLC1_Initialize *****************
 13952 ;; Defined at:
 13953 ;;		line 60 in file "mcc_generated_files/clc1.c"
 13954 ;; Parameters:    Size  Location     Type
 13955 ;;		None
 13956 ;; Auto vars:     Size  Location     Type
 13957 ;;		None
 13958 ;; Return value:  Size  Location     Type
 13959 ;;                  1    wreg      void 
 13960 ;; Registers used:
 13961 ;;		wreg, status,2
 13962 ;; Tracked objects:
 13963 ;;		On entry : B1F/0
 13964 ;;		On exit  : B1F/1
 13965 ;;		Unchanged: B00/0
 13966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13971 ;;Total ram usage:        0 bytes
 13972 ;; Hardware stack levels used:    1
 13973 ;; Hardware stack levels required when called:    7
 13974 ;; This function calls:
 13975 ;;		Nothing
 13976 ;; This function is called by:
 13977 ;;		_SYSTEM_Initialize
 13978 ;; This function uses a non-reentrant model
 13979 ;;
 13980                           
 13981                           
 13982                           ;psect for function _CLC1_Initialize
 13983  06B2                     _CLC1_Initialize:	
 13984                           
 13985                           ;clc1.c: 65: CLC1POL = 0x04;
 13986                           
 13987                           ;incstack = 0
 13988                           ; Regs used in _CLC1_Initialize: [wreg+status,2]
 13989  06B2  3004               	movlw	4
 13990  06B3  003E               	movlb	30	; select bank30
 13991  06B4  0091               	movwf	17	;volatile
 13992                           
 13993                           ;clc1.c: 67: CLC1SEL0 = 0x00;
 13994  06B5  0192               	clrf	18	;volatile
 13995                           
 13996                           ;clc1.c: 69: CLC1SEL1 = 0x01;
 13997  06B6  3001               	movlw	1
 13998  06B7  0093               	movwf	19	;volatile
 13999                           
 14000                           ;clc1.c: 71: CLC1SEL2 = 0x01;
 14001  06B8  0094               	movwf	20	;volatile
 14002                           
 14003                           ;clc1.c: 73: CLC1SEL3 = 0x01;
 14004  06B9  0095               	movwf	21	;volatile
 14005                           
 14006                           ;clc1.c: 75: CLC1GLS0 = 0x02;
 14007  06BA  3002               	movlw	2
 14008  06BB  0096               	movwf	22	;volatile
 14009                           
 14010                           ;clc1.c: 77: CLC1GLS1 = 0xA8;
 14011  06BC  30A8               	movlw	168
 14012  06BD  0097               	movwf	23	;volatile
 14013                           
 14014                           ;clc1.c: 79: CLC1GLS2 = 0xA8;
 14015  06BE  0098               	movwf	24	;volatile
 14016                           
 14017                           ;clc1.c: 81: CLC1GLS3 = 0xA8;
 14018  06BF  0099               	movwf	25	;volatile
 14019                           
 14020                           ;clc1.c: 83: CLC1CON = 0x95;
 14021  06C0  3095               	movlw	149
 14022  06C1  0090               	movwf	16	;volatile
 14023                           
 14024                           ;clc1.c: 86: PIR3bits.CLC1IF = 0;
 14025  06C2  0020               	movlb	0	; select bank0
 14026  06C3  1013               	bcf	19,0	;volatile
 14027                           
 14028                           ;clc1.c: 88: PIE3bits.CLC1IE = 1;
 14029  06C4  0021               	movlb	1	; select bank1
 14030  06C5  1413               	bsf	19,0	;volatile
 14031  06C6  0008               	return
 14032  06C7                     __end_of_CLC1_Initialize:	
 14033  06C7                     __ptext4:	
 14034 ;; *************** function _TMR3_Initialize *****************
 14035 ;; Defined at:
 14036 ;;		line 64 in file "mcc_generated_files/tmr3.c"
 14037 ;; Parameters:    Size  Location     Type
 14038 ;;		None
 14039 ;; Auto vars:     Size  Location     Type
 14040 ;;		None
 14041 ;; Return value:  Size  Location     Type
 14042 ;;                  1    wreg      void 
 14043 ;; Registers used:
 14044 ;;		wreg, status,2, status,0, pclath, cstack
 14045 ;; Tracked objects:
 14046 ;;		On entry : B1F/1
 14047 ;;		On exit  : 1F/8
 14048 ;;		Unchanged: 0/0
 14049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14054 ;;Total ram usage:        0 bytes
 14055 ;; Hardware stack levels used:    1
 14056 ;; Hardware stack levels required when called:    8
 14057 ;; This function calls:
 14058 ;;		_TMR3_SetInterruptHandler
 14059 ;; This function is called by:
 14060 ;;		_SYSTEM_Initialize
 14061 ;; This function uses a non-reentrant model
 14062 ;;
 14063                           
 14064                           
 14065                           ;psect for function _TMR3_Initialize
 14066  06C7                     _TMR3_Initialize:	
 14067  06C7                     l7765:	
 14068                           ;incstack = 0
 14069                           ; Regs used in _TMR3_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14070                           
 14071                           
 14072                           ;tmr3.c: 69: T3GCON = 0x00;
 14073  06C7  0028               	movlb	8	; select bank8
 14074  06C8  0194               	clrf	20	;volatile
 14075                           
 14076                           ;tmr3.c: 72: TMR3H = 0xE0;
 14077  06C9  30E0               	movlw	224
 14078  06CA  0092               	movwf	18	;volatile
 14079                           
 14080                           ;tmr3.c: 75: TMR3L = 0xC0;
 14081  06CB  30C0               	movlw	192
 14082  06CC  0091               	movwf	17	;volatile
 14083                           
 14084                           ;tmr3.c: 78: timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 14085  06CD  0812               	movf	18,w	;volatile
 14086  06CE  0021               	movlb	1	; select bank1
 14087  06CF  00AD               	movwf	(_timer3ReloadVal+1)^(0+128)	;volatile
 14088  06D0  01AC               	clrf	_timer3ReloadVal^(0+128)	;volatile
 14089  06D1  0028               	movlb	8	; select bank8
 14090  06D2  0811               	movf	17,w	;volatile
 14091  06D3  0021               	movlb	1	; select bank1
 14092  06D4  04AC               	iorwf	_timer3ReloadVal^(0+128),f	;volatile
 14093                           
 14094                           ;tmr3.c: 81: PIR3bits.TMR3IF = 0;
 14095  06D5  0020               	movlb	0	; select bank0
 14096  06D6  1213               	bcf	19,4	;volatile
 14097                           
 14098                           ;tmr3.c: 84: PIE3bits.TMR3IE = 1;
 14099  06D7  0021               	movlb	1	; select bank1
 14100  06D8  1613               	bsf	19,4	;volatile
 14101                           
 14102                           ;tmr3.c: 87: TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandler);
 14103  06D9  3003               	movlw	low _TMR3_DefaultInterruptHandler
 14104  06DA  00CA               	movwf	TMR3_SetInterruptHandler@InterruptHandler^(0+128)
 14105  06DB  3000               	movlw	high _TMR3_DefaultInterruptHandler
 14106  06DC  00CB               	movwf	(TMR3_SetInterruptHandler@InterruptHandler^(0+128)+1)
 14107  06DD  2326               	fcall	_TMR3_SetInterruptHandler
 14108                           
 14109                           ;tmr3.c: 90: T3CON = 0x01;
 14110  06DE  3001               	movlw	1
 14111  06DF  0028               	movlb	8	; select bank8
 14112  06E0  0093               	movwf	19	;volatile
 14113  06E1  0008               	return
 14114  06E2                     __end_of_TMR3_Initialize:	
 14115                           
 14116                           	psect	bssBANK0
 14117  0020                     __pbssBANK0:	
 14118  0020                     _ISTEP:	
 14119  0020                     	ds	4
 14120  0024                     _CMIN:	
 14121  0024                     	ds	4
 14122  0028                     _CMAX:	
 14123  0028                     	ds	4
 14124  002C                     _CVAL:	
 14125  002C                     	ds	4
 14126  0030                     _temp_blu:	
 14127  0030                     	ds	1
 14128  0031                     _temp_green:	
 14129  0031                     	ds	1
 14130  0032                     _temp_red:	
 14131  0032                     	ds	1
 14132  0033                     _temp_gp3:	
 14133  0033                     	ds	1
 14134  0034                     _temp_gp2:	
 14135  0034                     	ds	1
 14136  0035                     _temp_gp1:	
 14137  0035                     	ds	1
 14138  0036                     _S_RELATIVE:	
 14139  0036                     	ds	1
 14140  0037                     _C_WRAPE:	
 14141  0037                     	ds	1
 14142  0038                     _C_ETYPE:	
 14143  0038                     	ds	1
 14144  0039                     _GAMMABLED:	
 14145  0039                     	ds	1
 14146  003A                     _GAMMAGLED:	
 14147  003A                     	ds	1
 14148  003B                     _GAMMAGP3_RLED:	
 14149  003B                     	ds	1
 14150  003C                     _GAMMAGP2:	
 14151  003C                     	ds	1
 14152  003D                     _GAMMAGP1:	
 14153  003D                     	ds	1
 14154  003E                     _FADEGP:	
 14155  003E                     	ds	1
 14156  003F                     _GP3REG:	
 14157  003F                     	ds	1
 14158  0040                     _GP2REG:	
 14159  0040                     	ds	1
 14160  0041                     _GP1REG:	
 14161  0041                     	ds	1
 14162  0042                     _BLED:	
 14163  0042                     	ds	1
 14164  0043                     _GLED:	
 14165  0043                     	ds	1
 14166  0044                     _RLED:	
 14167  0044                     	ds	1
 14168  0045                     _GP3CONF:	
 14169  0045                     	ds	1
 14170  0046                     _GP2CONF:	
 14171  0046                     	ds	1
 14172  0047                     _GP1CONF:	
 14173  0047                     	ds	1
 14174  0048                     _GCONF:	
 14175  0048                     	ds	1
 14176  0049                     _ESTATUS:	
 14177  0049                     	ds	1
 14178  004A                     _i2c_address:	
 14179  004A                     	ds	1
 14180  004B                     _C_RMOD:	
 14181  004B                     	ds	1
 14182                           
 14183                           	psect	bssBANK1
 14184  00A0                     __pbssBANK1:	
 14185  00A0                     _en_deb:	
 14186  00A0                     	ds	2
 14187  00A2                     _double_push_delay:	
 14188  00A2                     	ds	2
 14189  00A4                     _double_push_cnt:	
 14190  00A4                     	ds	2
 14191  00A6                     _DoublePush:	
 14192  00A6                     	ds	2
 14193  00A8                     _DEBOUNCE:	
 14194  00A8                     	ds	2
 14195  00AA                     _TMR3_InterruptHandler:	
 14196  00AA                     	ds	2
 14197  00AC                     _timer3ReloadVal:	
 14198  00AC                     	ds	2
 14199  00AE                     EncoderSwitch_GetValueFiltered@pb_status:	
 14200  00AE                     	ds	1
 14201  00AF                     _en_prev:	
 14202  00AF                     	ds	1
 14203  00B0                     _fade_cnt:	
 14204  00B0                     	ds	1
 14205  00B1                     _pb_cnt:	
 14206  00B1                     	ds	1
 14207  00B2                     _pb_fsm:	
 14208  00B2                     	ds	1
 14209  00B3                     _gp_fade_cnt:	
 14210  00B3                     	ds	1
 14211  00B4                     _gp3_fsm:	
 14212  00B4                     	ds	1
 14213  00B5                     _gp2_fsm:	
 14214  00B5                     	ds	1
 14215  00B6                     _gp1_fsm:	
 14216  00B6                     	ds	1
 14217  00B7                     _gp_timer:	
 14218  00B7                     	ds	1
 14219  00B8                     I2C1_StatusCallback@slaveWriteType:	
 14220  00B8                     	ds	1
 14221  00B9                     _int2clear:	
 14222  00B9                     	ds	1
 14223  00BA                     _intclear:	
 14224  00BA                     	ds	1
 14225  00BB                     _EncoderReg:	
 14226  00BB                     	ds	1
 14227  00BC                     _S_CKSRC:	
 14228  00BC                     	ds	1
 14229  00BD                     _C_DTYPE:	
 14230  00BD                     	ds	1
 14231  00BE                     _C_DIRE:	
 14232  00BE                     	ds	1
 14233  00BF                     _C_IPUD:	
 14234  00BF                     	ds	1
 14235  00C0                     _C_MBANK:	
 14236  00C0                     	ds	1
 14237  00C1                     _C_RESET:	
 14238  00C1                     	ds	1
 14239  00C2                     _GCONF2:	
 14240  00C2                     	ds	1
 14241  00C3                     _FADERGB:	
 14242  00C3                     	ds	1
 14243  00C4                     _DPPERIOD:	
 14244  00C4                     	ds	1
 14245  00C5                     _ANTBOUNC:	
 14246  00C5                     	ds	1
 14247  00C6                     _FSTATUS:	
 14248  00C6                     	ds	1
 14249  00C7                     _I2STATUS:	
 14250  00C7                     	ds	1
 14251  00C8                     _fsm_tmr:	
 14252  00C8                     	ds	1
 14253  00C9                     _INTCONF:	
 14254  00C9                     	ds	1
 14255                           
 14256                           	psect	dataBANK1
 14257  00DA                     __pdataBANK1:	
 14258  00DA                     _I2C1_slaveWriteData:	
 14259  00DA                     	ds	1
 14260                           
 14261                           	psect	clrtext
 14262  1130                     clear_ram0:	
 14263                           ;	Called with FSR0 containing the base address, and
 14264                           ;	WREG with the size to clear
 14265                           
 14266  1130  0064               	clrwdt	;clear the watchdog before getting into this loop
 14267  1131                     clrloop0:	
 14268  1131  0180               	clrf	0	;clear RAM location pointed to by FSR
 14269  1132  3101               	addfsr 0,1
 14270  1133  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 14271  1134  2931               	goto	clrloop0	;have we reached the end yet?
 14272  1135  3400               	retlw	0	;all done for this memory range, return
 14273                           
 14274                           	psect	cstackBANK1
 14275  00CA                     __pcstackBANK1:	
 14276  00CA                     ??_PMD_Initialize:	
 14277  00CA                     ??_PIN_MANAGER_Initialize:	
 14278                           ; 1 bytes @ 0x0
 14279                           
 14280  00CA                     ??_OSCILLATOR_Initialize:	
 14281                           ; 1 bytes @ 0x0
 14282                           
 14283  00CA                     ??_WDT_Initialize:	
 14284                           ; 1 bytes @ 0x0
 14285                           
 14286  00CA                     ??_I2C1_AddressSet:	
 14287                           ; 1 bytes @ 0x0
 14288                           
 14289  00CA                     ??_I2C1_Initialize:	
 14290                           ; 1 bytes @ 0x0
 14291                           
 14292  00CA                     ??_CLC2_Initialize:	
 14293                           ; 1 bytes @ 0x0
 14294                           
 14295  00CA                     ??_TMR2_Initialize:	
 14296                           ; 1 bytes @ 0x0
 14297                           
 14298  00CA                     ??_CLC1_Initialize:	
 14299                           ; 1 bytes @ 0x0
 14300                           
 14301  00CA                     ?_TMR3_SetInterruptHandler:	
 14302                           ; 1 bytes @ 0x0
 14303                           
 14304  00CA                     ??_DataInitSet:	
 14305                           ; 1 bytes @ 0x0
 14306                           
 14307  00CA                     ??_ADC_Initialize:	
 14308                           ; 1 bytes @ 0x0
 14309                           
 14310  00CA                     ??_TMR3_StartTimer:	
 14311                           ; 1 bytes @ 0x0
 14312                           
 14313  00CA                     ??_SetInterrupt:	
 14314                           ; 1 bytes @ 0x0
 14315                           
 14316  00CA                     ??_ClearInterrupt:	
 14317                           ; 1 bytes @ 0x0
 14318                           
 14319  00CA                     ??_EncoderStatusUpdate:	
 14320                           ; 1 bytes @ 0x0
 14321                           
 14322  00CA                     ??_FadeProcessSet:	
 14323                           ; 1 bytes @ 0x0
 14324                           
 14325  00CA                     ??_EncoderSwitch_GetValue:	
 14326                           ; 1 bytes @ 0x0
 14327                           
 14328  00CA                     ??_EncoderSwitch_GetValueFiltered:	
 14329                           ; 1 bytes @ 0x0
 14330                           
 14331  00CA                     ?_ADC_GetConversion:	
 14332                           ; 1 bytes @ 0x0
 14333                           
 14334  00CA                     ?___wmul:	
 14335                           ; 2 bytes @ 0x0
 14336                           
 14337  00CA                     EncoderStatusUpdate@stat:	
 14338                           ; 2 bytes @ 0x0
 14339                           
 14340  00CA                     FadeProcessSet@stat:	
 14341                           ; 1 bytes @ 0x0
 14342                           
 14343  00CA                     TMR3_SetInterruptHandler@InterruptHandler:	
 14344                           ; 1 bytes @ 0x0
 14345                           
 14346  00CA                     ___wmul@multiplier:	
 14347                           ; 2 bytes @ 0x0
 14348                           
 14349                           
 14350                           ; 2 bytes @ 0x0
 14351  00CA                     	ds	1
 14352  00CB                     ??_Int2StatusUpdate:	
 14353  00CB                     ??_Encoder_PushButton_FSM:	
 14354                           ; 1 bytes @ 0x1
 14355                           
 14356  00CB                     Int2StatusUpdate@stat:	
 14357                           ; 1 bytes @ 0x1
 14358                           
 14359                           
 14360                           ; 1 bytes @ 0x1
 14361  00CB                     	ds	1
 14362  00CC                     ??_TMR3_Initialize:	
 14363  00CC                     ??_TMR3_SetInterruptHandler:	
 14364                           ; 1 bytes @ 0x2
 14365                           
 14366  00CC                     ??_SYSTEM_Initialize:	
 14367                           ; 1 bytes @ 0x2
 14368                           
 14369  00CC                     ??_ADC_GetConversion:	
 14370                           ; 1 bytes @ 0x2
 14371                           
 14372  00CC                     ??_FadeProcessClear:	
 14373                           ; 1 bytes @ 0x2
 14374                           
 14375  00CC                     FadeProcessClear@stat:	
 14376                           ; 1 bytes @ 0x2
 14377                           
 14378  00CC                     ___wmul@multiplicand:	
 14379                           ; 1 bytes @ 0x2
 14380                           
 14381                           
 14382                           ; 2 bytes @ 0x2
 14383  00CC                     	ds	1
 14384  00CD                     ADC_GetConversion@channel:	
 14385                           
 14386                           ; 1 bytes @ 0x3
 14387  00CD                     	ds	1
 14388  00CE                     ??_GP1_FSM:	
 14389  00CE                     ??_GP2_FSM:	
 14390                           ; 1 bytes @ 0x4
 14391                           
 14392  00CE                     ??_GP3_FSM:	
 14393                           ; 1 bytes @ 0x4
 14394                           
 14395  00CE                     ??___wmul:	
 14396                           ; 1 bytes @ 0x4
 14397                           
 14398  00CE                     ___wmul@product:	
 14399                           ; 1 bytes @ 0x4
 14400                           
 14401                           
 14402                           ; 2 bytes @ 0x4
 14403  00CE                     	ds	2
 14404  00D0                     ??_PWM_GP1:	
 14405  00D0                     ??_PWM_GP2:	
 14406                           ; 1 bytes @ 0x6
 14407                           
 14408  00D0                     ??_PWM_GP3_RLED:	
 14409                           ; 1 bytes @ 0x6
 14410                           
 14411  00D0                     ??_PWM_GLED:	
 14412                           ; 1 bytes @ 0x6
 14413                           
 14414  00D0                     ??_PWM_BLED:	
 14415                           ; 1 bytes @ 0x6
 14416                           
 14417                           
 14418                           ; 1 bytes @ 0x6
 14419  00D0                     	ds	6
 14420  00D6                     PWM_GP2@duty:	
 14421  00D6                     PWM_GP3_RLED@duty:	
 14422                           ; 1 bytes @ 0xC
 14423                           
 14424  00D6                     PWM_GLED@duty:	
 14425                           ; 1 bytes @ 0xC
 14426                           
 14427  00D6                     PWM_BLED@duty:	
 14428                           ; 1 bytes @ 0xC
 14429                           
 14430                           
 14431                           ; 1 bytes @ 0xC
 14432  00D6                     	ds	1
 14433  00D7                     ??_Encoder_FSM:	
 14434  00D7                     ??_FADE_GP2:	
 14435                           ; 1 bytes @ 0xD
 14436                           
 14437  00D7                     ??_FADE_GP3:	
 14438                           ; 1 bytes @ 0xD
 14439                           
 14440  00D7                     ??_FADE_LEDS:	
 14441                           ; 1 bytes @ 0xD
 14442                           
 14443                           
 14444                           ; 1 bytes @ 0xD
 14445  00D7                     	ds	1
 14446  00D8                     PWM_GP1@duty:	
 14447                           
 14448                           ; 1 bytes @ 0xE
 14449  00D8                     	ds	1
 14450  00D9                     ??_GP_Ports_FSM:	
 14451  00D9                     ??_FADE_GP1:	
 14452                           ; 1 bytes @ 0xF
 14453                           
 14454                           
 14455                           ; 1 bytes @ 0xF
 14456  00D9                     	ds	1
 14457  00DA                     ??_main:	
 14458                           
 14459                           	psect	cstackCOMMON
 14460  0070                     __pcstackCOMMON:	
 14461                           ; 1 bytes @ 0x10
 14462                           
 14463  0070                     ?___flge:	
 14464  0070                     ?_PMD_Initialize:	
 14465                           ; 1 bit 
 14466                           
 14467  0070                     ?_PIN_MANAGER_Initialize:	
 14468                           ; 1 bytes @ 0x0
 14469                           
 14470  0070                     ?_OSCILLATOR_Initialize:	
 14471                           ; 1 bytes @ 0x0
 14472                           
 14473  0070                     ?_WDT_Initialize:	
 14474                           ; 1 bytes @ 0x0
 14475                           
 14476  0070                     ?_I2C1_AddressSet:	
 14477                           ; 1 bytes @ 0x0
 14478                           
 14479  0070                     ?_I2C1_Initialize:	
 14480                           ; 1 bytes @ 0x0
 14481                           
 14482  0070                     ?_CLC2_Initialize:	
 14483                           ; 1 bytes @ 0x0
 14484                           
 14485  0070                     ?_TMR2_Initialize:	
 14486                           ; 1 bytes @ 0x0
 14487                           
 14488  0070                     ?_CLC1_Initialize:	
 14489                           ; 1 bytes @ 0x0
 14490                           
 14491  0070                     ?_TMR3_Initialize:	
 14492                           ; 1 bytes @ 0x0
 14493                           
 14494  0070                     ?_CLC2_ISR:	
 14495                           ; 1 bytes @ 0x0
 14496                           
 14497  0070                     ?_CLC1_ISR:	
 14498                           ; 1 bytes @ 0x0
 14499                           
 14500  0070                     ?_I2C1_ISR:	
 14501                           ; 1 bytes @ 0x0
 14502                           
 14503  0070                     ?_TMR3_ISR:	
 14504                           ; 1 bytes @ 0x0
 14505                           
 14506  0070                     ?_CLC_1_Interrupt:	
 14507                           ; 1 bytes @ 0x0
 14508                           
 14509  0070                     ?_CLC_2_Interrupt:	
 14510                           ; 1 bytes @ 0x0
 14511                           
 14512  0070                     ?_I2C1_StatusCallback:	
 14513                           ; 1 bytes @ 0x0
 14514                           
 14515  0070                     ?_TMR3_DefaultInterruptHandler:	
 14516                           ; 1 bytes @ 0x0
 14517                           
 14518  0070                     ??_TMR3_DefaultInterruptHandler:	
 14519                           ; 1 bytes @ 0x0
 14520                           
 14521  0070                     ?_TMR3_CallBack:	
 14522                           ; 1 bytes @ 0x0
 14523                           
 14524  0070                     ??_TMR3_CallBack:	
 14525                           ; 1 bytes @ 0x0
 14526                           
 14527  0070                     ?_DataInitSet:	
 14528                           ; 1 bytes @ 0x0
 14529                           
 14530  0070                     ?_Encoder_FSM:	
 14531                           ; 1 bytes @ 0x0
 14532                           
 14533  0070                     ?_GP_Ports_FSM:	
 14534                           ; 1 bytes @ 0x0
 14535                           
 14536  0070                     ?_RegisterRead:	
 14537                           ; 1 bytes @ 0x0
 14538                           
 14539  0070                     ?_FirstConfig:	
 14540                           ; 1 bytes @ 0x0
 14541                           
 14542  0070                     ??_FirstConfig:	
 14543                           ; 1 bytes @ 0x0
 14544                           
 14545  0070                     ?_Config_GP1:	
 14546                           ; 1 bytes @ 0x0
 14547                           
 14548  0070                     ?_Config_GP2:	
 14549                           ; 1 bytes @ 0x0
 14550                           
 14551  0070                     ?_Config_GP3:	
 14552                           ; 1 bytes @ 0x0
 14553                           
 14554  0070                     ?_UpdateOut_GP1:	
 14555                           ; 1 bytes @ 0x0
 14556                           
 14557  0070                     ??_UpdateOut_GP1:	
 14558                           ; 1 bytes @ 0x0
 14559                           
 14560  0070                     ?_UpdateOut_GP2:	
 14561                           ; 1 bytes @ 0x0
 14562                           
 14563  0070                     ??_UpdateOut_GP2:	
 14564                           ; 1 bytes @ 0x0
 14565                           
 14566  0070                     ?_UpdateOut_GP3:	
 14567                           ; 1 bytes @ 0x0
 14568                           
 14569  0070                     ??_UpdateOut_GP3:	
 14570                           ; 1 bytes @ 0x0
 14571                           
 14572  0070                     ?_SecondConfig:	
 14573                           ; 1 bytes @ 0x0
 14574                           
 14575  0070                     ??_SecondConfig:	
 14576                           ; 1 bytes @ 0x0
 14577                           
 14578  0070                     ?_eeprom_write:	
 14579                           ; 1 bytes @ 0x0
 14580                           
 14581  0070                     ?_eeprom_read:	
 14582                           ; 1 bytes @ 0x0
 14583                           
 14584  0070                     ??_eeprom_read:	
 14585                           ; 1 bytes @ 0x0
 14586                           
 14587  0070                     ?_RGB_EncoderMode:	
 14588                           ; 1 bytes @ 0x0
 14589                           
 14590  0070                     ??_RGB_EncoderMode:	
 14591                           ; 1 bytes @ 0x0
 14592                           
 14593  0070                     ?_STD_EncoderMode:	
 14594                           ; 1 bytes @ 0x0
 14595                           
 14596  0070                     ??_STD_EncoderMode:	
 14597                           ; 1 bytes @ 0x0
 14598                           
 14599  0070                     ?_PWM_GP1:	
 14600                           ; 1 bytes @ 0x0
 14601                           
 14602  0070                     ?_PWM_GP2:	
 14603                           ; 1 bytes @ 0x0
 14604                           
 14605  0070                     ?_PWM_GP3_RLED:	
 14606                           ; 1 bytes @ 0x0
 14607                           
 14608  0070                     ?_PWM_GLED:	
 14609                           ; 1 bytes @ 0x0
 14610                           
 14611  0070                     ?_PWM_BLED:	
 14612                           ; 1 bytes @ 0x0
 14613                           
 14614  0070                     ?_SYSTEM_Initialize:	
 14615                           ; 1 bytes @ 0x0
 14616                           
 14617  0070                     ?_INTERRUPT_InterruptManager:	
 14618                           ; 1 bytes @ 0x0
 14619                           
 14620  0070                     ?_I2C1_Initialize_ClockStreach:	
 14621                           ; 1 bytes @ 0x0
 14622                           
 14623  0070                     ??_I2C1_Initialize_ClockStreach:	
 14624                           ; 1 bytes @ 0x0
 14625                           
 14626  0070                     ?_PWM5_Initialize:	
 14627                           ; 1 bytes @ 0x0
 14628                           
 14629  0070                     ??_PWM5_Initialize:	
 14630                           ; 1 bytes @ 0x0
 14631                           
 14632  0070                     ?_PWM3_Initialize:	
 14633                           ; 1 bytes @ 0x0
 14634                           
 14635  0070                     ??_PWM3_Initialize:	
 14636                           ; 1 bytes @ 0x0
 14637                           
 14638  0070                     ?_PWM4_Initialize:	
 14639                           ; 1 bytes @ 0x0
 14640                           
 14641  0070                     ??_PWM4_Initialize:	
 14642                           ; 1 bytes @ 0x0
 14643                           
 14644  0070                     ?_ADC_Initialize:	
 14645                           ; 1 bytes @ 0x0
 14646                           
 14647  0070                     ?_PWM1_Initialize:	
 14648                           ; 1 bytes @ 0x0
 14649                           
 14650  0070                     ??_PWM1_Initialize:	
 14651                           ; 1 bytes @ 0x0
 14652                           
 14653  0070                     ?_PWM2_Initialize:	
 14654                           ; 1 bytes @ 0x0
 14655                           
 14656  0070                     ??_PWM2_Initialize:	
 14657                           ; 1 bytes @ 0x0
 14658                           
 14659  0070                     ?_TMR3_StartTimer:	
 14660                           ; 1 bytes @ 0x0
 14661                           
 14662  0070                     ?_TMR3_WriteTimer:	
 14663                           ; 1 bytes @ 0x0
 14664                           
 14665  0070                     ?_SetInterrupt:	
 14666                           ; 1 bytes @ 0x0
 14667                           
 14668  0070                     ?_ClearInterrupt:	
 14669                           ; 1 bytes @ 0x0
 14670                           
 14671  0070                     ?_TimerInt:	
 14672                           ; 1 bytes @ 0x0
 14673                           
 14674  0070                     ??_TimerInt:	
 14675                           ; 1 bytes @ 0x0
 14676                           
 14677  0070                     ?_main:	
 14678                           ; 1 bytes @ 0x0
 14679                           
 14680  0070                     ?_FirstDataSplit:	
 14681                           ; 1 bytes @ 0x0
 14682                           
 14683  0070                     ??_FirstDataSplit:	
 14684                           ; 1 bytes @ 0x0
 14685                           
 14686  0070                     ?_SecondDataSplit:	
 14687                           ; 1 bytes @ 0x0
 14688                           
 14689  0070                     ??_SecondDataSplit:	
 14690                           ; 1 bytes @ 0x0
 14691                           
 14692  0070                     ?_EncoderStatusUpdate:	
 14693                           ; 1 bytes @ 0x0
 14694                           
 14695  0070                     ?_Int2StatusUpdate:	
 14696                           ; 1 bytes @ 0x0
 14697                           
 14698  0070                     ?_FadeProcessSet:	
 14699                           ; 1 bytes @ 0x0
 14700                           
 14701  0070                     ?_FadeProcessClear:	
 14702                           ; 1 bytes @ 0x0
 14703                           
 14704  0070                     ?_FADE_GP1:	
 14705                           ; 1 bytes @ 0x0
 14706                           
 14707  0070                     ?_FADE_GP2:	
 14708                           ; 1 bytes @ 0x0
 14709                           
 14710  0070                     ?_FADE_GP3:	
 14711                           ; 1 bytes @ 0x0
 14712                           
 14713  0070                     ?_GP1_FSM:	
 14714                           ; 1 bytes @ 0x0
 14715                           
 14716  0070                     ?_GP2_FSM:	
 14717                           ; 1 bytes @ 0x0
 14718                           
 14719  0070                     ?_GP3_FSM:	
 14720                           ; 1 bytes @ 0x0
 14721                           
 14722  0070                     ?_EncoderSwitch_GetValue:	
 14723                           ; 1 bytes @ 0x0
 14724                           
 14725  0070                     ?_EncoderSwitch_GetValueFiltered:	
 14726                           ; 1 bytes @ 0x0
 14727                           
 14728  0070                     ?_FADE_LEDS:	
 14729                           ; 1 bytes @ 0x0
 14730                           
 14731  0070                     ?_Encoder_PushButton_FSM:	
 14732                           ; 1 bytes @ 0x0
 14733                           
 14734  0070                     ?i1_I2C1_Initialize:	
 14735                           ; 1 bytes @ 0x0
 14736                           
 14737  0070                     ??i1_I2C1_Initialize:	
 14738                           ; 1 bytes @ 0x0
 14739                           
 14740  0070                     ?i1_SetInterrupt:	
 14741                           ; 1 bytes @ 0x0
 14742                           
 14743  0070                     ??i1_SetInterrupt:	
 14744                           ; 1 bytes @ 0x0
 14745                           
 14746  0070                     ?i1_EncoderStatusUpdate:	
 14747                           ; 1 bytes @ 0x0
 14748                           
 14749  0070                     ??i1_EncoderStatusUpdate:	
 14750                           ; 1 bytes @ 0x0
 14751                           
 14752  0070                     ?i1_PWM_GP1:	
 14753                           ; 1 bytes @ 0x0
 14754                           
 14755  0070                     ?i1_PWM_GP2:	
 14756                           ; 1 bytes @ 0x0
 14757                           
 14758  0070                     ?i1_PWM_GP3_RLED:	
 14759                           ; 1 bytes @ 0x0
 14760                           
 14761  0070                     ?i1___wmul:	
 14762                           ; 1 bytes @ 0x0
 14763                           
 14764  0070                     ?___fladd:	
 14765                           ; 2 bytes @ 0x0
 14766                           
 14767  0070                     eeprom_read@addr:	
 14768                           ; 4 bytes @ 0x0
 14769                           
 14770  0070                     eeprom_write@value:	
 14771                           ; 1 bytes @ 0x0
 14772                           
 14773  0070                     i1EncoderStatusUpdate@stat:	
 14774                           ; 1 bytes @ 0x0
 14775                           
 14776  0070                     TMR3_WriteTimer@timerVal:	
 14777                           ; 1 bytes @ 0x0
 14778                           
 14779  0070                     i1___wmul@multiplier:	
 14780                           ; 2 bytes @ 0x0
 14781                           
 14782  0070                     ___flge@ff1:	
 14783                           ; 2 bytes @ 0x0
 14784                           
 14785  0070                     ___fladd@b:	
 14786                           ; 4 bytes @ 0x0
 14787                           
 14788                           
 14789                           ; 4 bytes @ 0x0
 14790  0070                     	ds	1
 14791  0071                     ??_RegisterRead:	
 14792  0071                     ??_eeprom_write:	
 14793                           ; 1 bytes @ 0x1
 14794                           
 14795  0071                     RegisterRead@add:	
 14796                           ; 1 bytes @ 0x1
 14797                           
 14798  0071                     eeprom_write@addr:	
 14799                           ; 1 bytes @ 0x1
 14800                           
 14801                           
 14802                           ; 1 bytes @ 0x1
 14803  0071                     	ds	1
 14804  0072                     ??_TMR3_ISR:	
 14805  0072                     ??_TMR3_WriteTimer:	
 14806                           ; 1 bytes @ 0x2
 14807                           
 14808  0072                     RegisterRead@return_value:	
 14809                           ; 1 bytes @ 0x2
 14810                           
 14811  0072                     i1___wmul@multiplicand:	
 14812                           ; 1 bytes @ 0x2
 14813                           
 14814                           
 14815                           ; 2 bytes @ 0x2
 14816  0072                     	ds	2
 14817  0074                     ??i1___wmul:	
 14818  0074                     i1___wmul@product:	
 14819                           ; 1 bytes @ 0x4
 14820                           
 14821  0074                     ___flge@ff2:	
 14822                           ; 2 bytes @ 0x4
 14823                           
 14824  0074                     ___fladd@a:	
 14825                           ; 4 bytes @ 0x4
 14826                           
 14827                           
 14828                           ; 4 bytes @ 0x4
 14829  0074                     	ds	2
 14830  0076                     ??i1_PWM_GP1:	
 14831  0076                     ??i1_PWM_GP2:	
 14832                           ; 1 bytes @ 0x6
 14833                           
 14834  0076                     ??i1_PWM_GP3_RLED:	
 14835                           ; 1 bytes @ 0x6
 14836                           
 14837                           
 14838                           ; 1 bytes @ 0x6
 14839  0076                     	ds	2
 14840  0078                     ??___flge:	
 14841  0078                     ___fladd@signs:	
 14842                           ; 1 bytes @ 0x8
 14843                           
 14844                           
 14845                           ; 1 bytes @ 0x8
 14846  0078                     	ds	1
 14847  0079                     ___fladd@aexp:	
 14848                           
 14849                           ; 1 bytes @ 0x9
 14850  0079                     	ds	1
 14851  007A                     ___fladd@bexp:	
 14852                           
 14853                           ; 1 bytes @ 0xA
 14854  007A                     	ds	1
 14855  007B                     ___fladd@grs:	
 14856                           
 14857                           ; 1 bytes @ 0xB
 14858  007B                     	ds	1
 14859  007C                     ??_CLC2_ISR:	
 14860  007C                     ??_CLC1_ISR:	
 14861                           ; 1 bytes @ 0xC
 14862                           
 14863  007C                     ??___flsub:	
 14864                           ; 1 bytes @ 0xC
 14865                           
 14866  007C                     i1PWM_GP2@duty:	
 14867                           ; 1 bytes @ 0xC
 14868                           
 14869  007C                     i1PWM_GP3_RLED@duty:	
 14870                           ; 1 bytes @ 0xC
 14871                           
 14872                           
 14873                           ; 1 bytes @ 0xC
 14874  007C                     	ds	2
 14875  007E                     ??_I2C1_ISR:	
 14876  007E                     ??_I2C1_StatusCallback:	
 14877                           ; 1 bytes @ 0xE
 14878                           
 14879  007E                     ??_RegisterWrite:	
 14880                           ; 1 bytes @ 0xE
 14881                           
 14882  007E                     ??_INTERRUPT_InterruptManager:	
 14883                           ; 1 bytes @ 0xE
 14884                           
 14885                           
 14886                           	psect	cstackBANK0
 14887  004C                     __pcstackBANK0:	
 14888                           ; 1 bytes @ 0xE
 14889                           
 14890  004C                     ??_Config_GP2:	
 14891  004C                     ??_Config_GP3:	
 14892                           ; 1 bytes @ 0x0
 14893                           
 14894  004C                     ??___fladd:	
 14895                           ; 1 bytes @ 0x0
 14896                           
 14897  004C                     i1PWM_GP1@duty:	
 14898                           ; 1 bytes @ 0x0
 14899                           
 14900                           
 14901                           ; 1 bytes @ 0x0
 14902  004C                     	ds	1
 14903  004D                     ??_Config_GP1:	
 14904                           
 14905                           ; 1 bytes @ 0x1
 14906  004D                     	ds	2
 14907  004F                     ?_RegisterWrite:	
 14908  004F                     RegisterWrite@data:	
 14909                           ; 1 bytes @ 0x3
 14910                           
 14911                           
 14912                           ; 1 bytes @ 0x3
 14913  004F                     	ds	1
 14914  0050                     RegisterWrite@add:	
 14915                           
 14916                           ; 1 bytes @ 0x4
 14917  0050                     	ds	1
 14918  0051                     I2C1_StatusCallback@i2c_bus_state:	
 14919                           
 14920                           ; 1 bytes @ 0x5
 14921  0051                     	ds	1
 14922  0052                     I2C1_ISR@i2c_data:	
 14923                           
 14924                           ; 1 bytes @ 0x6
 14925  0052                     	ds	2
 14926  0054                     ??_CLC_1_Interrupt:	
 14927  0054                     ?___flsub:	
 14928                           ; 1 bytes @ 0x8
 14929                           
 14930  0054                     ___flsub@a:	
 14931                           ; 4 bytes @ 0x8
 14932                           
 14933                           
 14934                           ; 4 bytes @ 0x8
 14935  0054                     	ds	4
 14936  0058                     ___flsub@b:	
 14937                           
 14938                           ; 4 bytes @ 0xC
 14939  0058                     	ds	4
 14940  005C                     ??_CLC_2_Interrupt:	
 14941                           
 14942                           ; 1 bytes @ 0x10
 14943  005C                     	ds	4
 14944                           
 14945                           	psect	swtext1
 14946  10F2                     __pswtext1:	
 14947  10F2                     S8599:	
 14948  10F2  3181  29EE         	ljmp	l7981
 14949  10F4  3182  2A05         	ljmp	l7995
 14950  10F6  3182  2A13         	ljmp	l1348
 14951  10F8  3182  2A22         	ljmp	l1351
 14952                           
 14953                           	psect	swtext2
 14954  1100                     __pswtext2:	
 14955  1100                     S8601:	
 14956  1100  3181  299E         	ljmp	l7933
 14957  1102  3181  29B5         	ljmp	l7947
 14958  1104  3181  29C3         	ljmp	l1332
 14959  1106  3181  29D2         	ljmp	l1335
 14960                           
 14961                           	psect	swtext3
 14962  1108                     __pswtext3:	
 14963  1108                     S8603:	
 14964  1108  3181  2953         	ljmp	l7887
 14965  110A  3181  296A         	ljmp	l7901
 14966  110C  3181  2978         	ljmp	l1317
 14967  110E  3181  2986         	ljmp	l1320
 14968                           
 14969                           	psect	swtext4
 14970  10E4                     __pswtext4:	
 14971  10E4                     S8605:	
 14972  10E4  3180  28BF         	ljmp	l8117
 14973  10E6  3180  28C9         	ljmp	l8123
 14974  10E8  3180  28D1         	ljmp	l8127
 14975  10EA  3180  28D9         	ljmp	l8131
 14976  10EC  3180  28E7         	ljmp	l8141
 14977  10EE  3180  28F7         	ljmp	l8149
 14978  10F0  3181  2904         	ljmp	l8163
 14979                           
 14980                           	psect	intentry
 14981  0004                     __pintentry:	
 14982 ;; *************** function _INTERRUPT_InterruptManager *****************
 14983 ;; Defined at:
 14984 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14985 ;; Parameters:    Size  Location     Type
 14986 ;;		None
 14987 ;; Auto vars:     Size  Location     Type
 14988 ;;		None
 14989 ;; Return value:  Size  Location     Type
 14990 ;;                  1    wreg      void 
 14991 ;; Registers used:
 14992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14993 ;; Tracked objects:
 14994 ;;		On entry : 0/0
 14995 ;;		On exit  : 0/0
 14996 ;;		Unchanged: 0/0
 14997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15002 ;;Total ram usage:        0 bytes
 15003 ;; Hardware stack levels used:    1
 15004 ;; Hardware stack levels required when called:    6
 15005 ;; This function calls:
 15006 ;;		_CLC1_ISR
 15007 ;;		_CLC2_ISR
 15008 ;;		_I2C1_ISR
 15009 ;;		_TMR3_ISR
 15010 ;; This function is called by:
 15011 ;;		Interrupt level 1
 15012 ;; This function uses a non-reentrant model
 15013 ;;
 15014                           
 15015  0004                     _INTERRUPT_InterruptManager:	
 15016                           
 15017                           ;incstack = 0
 15018  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 15019                           
 15020                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15021  0005  3180               	pagesel	$
 15022                           
 15023                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
 15024  0006  1F0B               	btfss	11,6	;volatile
 15025  0007  282E               	goto	i1l89
 15026                           
 15027                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE3bits.CLC2IE == 1 && PIR3bits
      +                          .CLC2IF == 1)
 15028  0008  0021               	movlb	1	; select bank1
 15029  0009  1C93               	btfss	19,1	;volatile
 15030  000A  2812               	goto	i1l80
 15031  000B  0020               	movlb	0	; select bank0
 15032  000C  1C93               	btfss	19,1	;volatile
 15033  000D  2812               	goto	i1l80
 15034                           
 15035                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: CLC2_ISR();
 15036  000E  318D  2504  3180   	fcall	_CLC2_ISR
 15037                           
 15038                           ;interrupt_manager.c: 60: }
 15039  0011  282E               	goto	i1l89
 15040  0012                     i1l80:	
 15041                           
 15042                           ;interrupt_manager.c: 61: else if(PIE3bits.CLC1IE == 1 && PIR3bits.CLC1IF == 1)
 15043  0012  0021               	movlb	1	; select bank1
 15044  0013  1C13               	btfss	19,0	;volatile
 15045  0014  281C               	goto	i1l82
 15046  0015  0020               	movlb	0	; select bank0
 15047  0016  1C13               	btfss	19,0	;volatile
 15048  0017  281C               	goto	i1l82
 15049                           
 15050                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: CLC1_ISR();
 15051  0018  318D  2510  3180   	fcall	_CLC1_ISR
 15052                           
 15053                           ;interrupt_manager.c: 64: }
 15054  001B  282E               	goto	i1l89
 15055  001C                     i1l82:	
 15056                           
 15057                           ;interrupt_manager.c: 65: else if(PIE1bits.SSP1IE == 1 && PIR1bits.SSP1IF == 1)
 15058  001C  0021               	movlb	1	; select bank1
 15059  001D  1D91               	btfss	17,3	;volatile
 15060  001E  2826               	goto	i1l84
 15061  001F  0020               	movlb	0	; select bank0
 15062  0020  1D91               	btfss	17,3	;volatile
 15063  0021  2826               	goto	i1l84
 15064                           
 15065                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: I2C1_ISR();
 15066  0022  3192  22F4  3180   	fcall	_I2C1_ISR
 15067                           
 15068                           ;interrupt_manager.c: 68: }
 15069  0025  282E               	goto	i1l89
 15070  0026                     i1l84:	
 15071                           
 15072                           ;interrupt_manager.c: 69: else if(PIE3bits.TMR3IE == 1 && PIR3bits.TMR3IF == 1)
 15073  0026  0021               	movlb	1	; select bank1
 15074  0027  1E13               	btfss	19,4	;volatile
 15075  0028  282E               	goto	i1l89
 15076  0029  0020               	movlb	0	; select bank0
 15077  002A  1E13               	btfss	19,4	;volatile
 15078  002B  282E               	goto	i1l89
 15079                           
 15080                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: TMR3_ISR();
 15081  002C  3191  21FE         	fcall	_TMR3_ISR
 15082  002E                     i1l89:	
 15083                           ;interrupt_manager.c: 72: }
 15084                           
 15085  002E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 15086  002F  0009               	retfie
 15087  0030                     __end_of_INTERRUPT_InterruptManager:	
 15088                           
 15089                           	psect	text42
 15090  11FE                     __ptext42:	
 15091 ;; *************** function _TMR3_ISR *****************
 15092 ;; Defined at:
 15093 ;;		line 157 in file "mcc_generated_files/tmr3.c"
 15094 ;; Parameters:    Size  Location     Type
 15095 ;;		None
 15096 ;; Auto vars:     Size  Location     Type
 15097 ;;		None
 15098 ;; Return value:  Size  Location     Type
 15099 ;;                  1    wreg      void 
 15100 ;; Registers used:
 15101 ;;		wreg, status,2, status,0, pclath, cstack
 15102 ;; Tracked objects:
 15103 ;;		On entry : 1F/0
 15104 ;;		On exit  : 0/0
 15105 ;;		Unchanged: 0/0
 15106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15111 ;;Total ram usage:        0 bytes
 15112 ;; Hardware stack levels used:    1
 15113 ;; Hardware stack levels required when called:    2
 15114 ;; This function calls:
 15115 ;;		_TMR3_CallBack
 15116 ;;		_TMR3_WriteTimer
 15117 ;; This function is called by:
 15118 ;;		_INTERRUPT_InterruptManager
 15119 ;; This function uses a non-reentrant model
 15120 ;;
 15121                           
 15122                           
 15123                           ;psect for function _TMR3_ISR
 15124  11FE                     _TMR3_ISR:	
 15125                           
 15126                           ;tmr3.c: 161: PIR3bits.TMR3IF = 0;
 15127                           
 15128                           ;incstack = 0
 15129                           ; Regs used in _TMR3_ISR: [wreg+status,2+status,0+pclath+cstack]
 15130  11FE  1213               	bcf	19,4	;volatile
 15131                           
 15132                           ;tmr3.c: 162: TMR3_WriteTimer(timer3ReloadVal);
 15133  11FF  0021               	movlb	1	; select bank1
 15134  1200  082D               	movf	(_timer3ReloadVal+1)^(0+128),w	;volatile
 15135  1201  00F1               	movwf	TMR3_WriteTimer@timerVal+1
 15136  1202  082C               	movf	_timer3ReloadVal^(0+128),w	;volatile
 15137  1203  00F0               	movwf	TMR3_WriteTimer@timerVal
 15138  1204  2212  3191         	fcall	_TMR3_WriteTimer
 15139                           
 15140                           ;tmr3.c: 166: TMR3_CallBack();
 15141  1206  2A07               	ljmp	i1l6433
 15142  1207                     __end_of_TMR3_ISR:	
 15143  1207                     __ptext44:	
 15144 ;; *************** function _TMR3_CallBack *****************
 15145 ;; Defined at:
 15146 ;;		line 169 in file "mcc_generated_files/tmr3.c"
 15147 ;; Parameters:    Size  Location     Type
 15148 ;;		None
 15149 ;; Auto vars:     Size  Location     Type
 15150 ;;		None
 15151 ;; Return value:  Size  Location     Type
 15152 ;;                  1    wreg      void 
 15153 ;; Registers used:
 15154 ;;		wreg, status,2, status,0, pclath, cstack
 15155 ;; Tracked objects:
 15156 ;;		On entry : 1F/8
 15157 ;;		On exit  : 0/0
 15158 ;;		Unchanged: 0/0
 15159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15164 ;;Total ram usage:        0 bytes
 15165 ;; Hardware stack levels used:    1
 15166 ;; Hardware stack levels required when called:    1
 15167 ;; This function calls:
 15168 ;;		Absolute function
 15169 ;;		_TMR3_DefaultInterruptHandler
 15170 ;;		_TimerInt
 15171 ;; This function is called by:
 15172 ;;		_TMR3_ISR
 15173 ;; This function uses a non-reentrant model
 15174 ;;
 15175                           
 15176                           
 15177                           ;psect for function _TMR3_CallBack
 15178  1207                     _TMR3_CallBack:	
 15179  1207                     i1l6433:	
 15180                           ;incstack = 0
 15181                           ; Regs used in _TMR3_CallBack: [wreg+status,2+status,0+pclath+cstack]
 15182                           
 15183                           
 15184                           ;tmr3.c: 172: if(TMR3_InterruptHandler)
 15185  1207  0021               	movlb	1	; select bank1
 15186  1208  082A               	movf	_TMR3_InterruptHandler^(0+128),w
 15187  1209  042B               	iorwf	(_TMR3_InterruptHandler+1)^(0+128),w
 15188  120A  1903               	btfsc	3,2
 15189  120B  0008               	return
 15190                           
 15191                           ;tmr3.c: 173: {;tmr3.c: 174: TMR3_InterruptHandler();
 15192  120C  082B               	movf	(_TMR3_InterruptHandler+1)^(0+128),w
 15193  120D  008A               	movwf	10
 15194  120E  082A               	movf	_TMR3_InterruptHandler^(0+128),w
 15195  120F  000A               	callw
 15196  1210  3191               	pagesel	$
 15197  1211  0008               	return
 15198  1212                     __end_of_TMR3_CallBack:	
 15199  1212                     __ptext43:	
 15200 ;; *************** function _TMR3_WriteTimer *****************
 15201 ;; Defined at:
 15202 ;;		line 120 in file "mcc_generated_files/tmr3.c"
 15203 ;; Parameters:    Size  Location     Type
 15204 ;;  timerVal        2    0[COMMON] unsigned int 
 15205 ;; Auto vars:     Size  Location     Type
 15206 ;;		None
 15207 ;; Return value:  Size  Location     Type
 15208 ;;                  1    wreg      void 
 15209 ;; Registers used:
 15210 ;;		wreg
 15211 ;; Tracked objects:
 15212 ;;		On entry : 1F/1
 15213 ;;		On exit  : 1F/8
 15214 ;;		Unchanged: 0/0
 15215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15216 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15219 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15220 ;;Total ram usage:        2 bytes
 15221 ;; Hardware stack levels used:    1
 15222 ;; This function calls:
 15223 ;;		Nothing
 15224 ;; This function is called by:
 15225 ;;		_TMR3_ISR
 15226 ;; This function uses a non-reentrant model
 15227 ;;
 15228                           
 15229                           
 15230                           ;psect for function _TMR3_WriteTimer
 15231  1212                     _TMR3_WriteTimer:	
 15232                           
 15233                           ;tmr3.c: 122: if (T3CONbits.T3SYNC == 1)
 15234                           
 15235                           ;incstack = 0
 15236                           ; Regs used in _TMR3_WriteTimer: [wreg]
 15237  1212  0028               	movlb	8	; select bank8
 15238  1213  1D13               	btfss	19,2	;volatile
 15239  1214  2A1C               	goto	i1l6431
 15240                           
 15241                           ;tmr3.c: 123: {;tmr3.c: 125: T3CONbits.TMR3ON = 0;
 15242  1215  1013               	bcf	19,0	;volatile
 15243                           
 15244                           ;tmr3.c: 128: TMR3H = (timerVal >> 8);
 15245  1216  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 15246  1217  0092               	movwf	18	;volatile
 15247                           
 15248                           ;tmr3.c: 129: TMR3L = timerVal;
 15249  1218  0870               	movf	TMR3_WriteTimer@timerVal,w
 15250  1219  0091               	movwf	17	;volatile
 15251                           
 15252                           ;tmr3.c: 132: T3CONbits.TMR3ON =1;
 15253  121A  1413               	bsf	19,0	;volatile
 15254                           
 15255                           ;tmr3.c: 133: }
 15256  121B  0008               	return
 15257  121C                     i1l6431:	
 15258                           
 15259                           ;tmr3.c: 134: else;tmr3.c: 135: {;tmr3.c: 137: TMR3H = (timerVal >> 8);
 15260  121C  0871               	movf	TMR3_WriteTimer@timerVal+1,w
 15261  121D  0092               	movwf	18	;volatile
 15262                           
 15263                           ;tmr3.c: 138: TMR3L = timerVal;
 15264  121E  0870               	movf	TMR3_WriteTimer@timerVal,w
 15265  121F  0091               	movwf	17	;volatile
 15266  1220  0008               	return
 15267  1221                     __end_of_TMR3_WriteTimer:	
 15268                           
 15269                           	psect	text45
 15270  0003                     __ptext45:	
 15271 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 15272 ;; Defined at:
 15273 ;;		line 182 in file "mcc_generated_files/tmr3.c"
 15274 ;; Parameters:    Size  Location     Type
 15275 ;;		None
 15276 ;; Auto vars:     Size  Location     Type
 15277 ;;		None
 15278 ;; Return value:  Size  Location     Type
 15279 ;;                  1    wreg      void 
 15280 ;; Registers used:
 15281 ;;		None
 15282 ;; Tracked objects:
 15283 ;;		On entry : 1F/1
 15284 ;;		On exit  : 1F/1
 15285 ;;		Unchanged: 1F/0
 15286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15291 ;;Total ram usage:        0 bytes
 15292 ;; Hardware stack levels used:    1
 15293 ;; This function calls:
 15294 ;;		Nothing
 15295 ;; This function is called by:
 15296 ;;		_TMR3_Initialize
 15297 ;;		_TMR3_CallBack
 15298 ;; This function uses a non-reentrant model
 15299 ;;
 15300                           
 15301                           
 15302                           ;psect for function _TMR3_DefaultInterruptHandler
 15303  0003                     _TMR3_DefaultInterruptHandler:	
 15304                           
 15305                           ;incstack = 0
 15306                           ; Regs used in _TMR3_DefaultInterruptHandler: []
 15307  0003  0008               	return
 15308  0004                     __end_of_TMR3_DefaultInterruptHandler:	
 15309                           
 15310                           	psect	text46
 15311  1136                     __ptext46:	
 15312 ;; *************** function _TimerInt *****************
 15313 ;; Defined at:
 15314 ;;		line 73 in file "main.c"
 15315 ;; Parameters:    Size  Location     Type
 15316 ;;		None
 15317 ;; Auto vars:     Size  Location     Type
 15318 ;;		None
 15319 ;; Return value:  Size  Location     Type
 15320 ;;                  1    wreg      void 
 15321 ;; Registers used:
 15322 ;;		None
 15323 ;; Tracked objects:
 15324 ;;		On entry : 1F/1
 15325 ;;		On exit  : 1F/1
 15326 ;;		Unchanged: 0/0
 15327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15332 ;;Total ram usage:        0 bytes
 15333 ;; Hardware stack levels used:    1
 15334 ;; This function calls:
 15335 ;;		Nothing
 15336 ;; This function is called by:
 15337 ;;		_main
 15338 ;;		_TMR3_CallBack
 15339 ;; This function uses a non-reentrant model
 15340 ;;
 15341                           
 15342                           
 15343                           ;psect for function _TimerInt
 15344  1136                     _TimerInt:	
 15345                           
 15346                           ;main.c: 74: fsm_tmr = 1;
 15347                           
 15348                           ;incstack = 0
 15349                           ; Regs used in _TimerInt: []
 15350  1136  01C8               	clrf	_fsm_tmr^(0+128)
 15351  1137  0AC8               	incf	_fsm_tmr^(0+128),f
 15352  1138  0008               	return
 15353  1139                     __end_of_TimerInt:	
 15354                           
 15355                           	psect	text47
 15356  12F4                     __ptext47:	
 15357 ;; *************** function _I2C1_ISR *****************
 15358 ;; Defined at:
 15359 ;;		line 121 in file "mcc_generated_files/i2c1.c"
 15360 ;; Parameters:    Size  Location     Type
 15361 ;;		None
 15362 ;; Auto vars:     Size  Location     Type
 15363 ;;  i2c_data        1    6[BANK0 ] unsigned char 
 15364 ;; Return value:  Size  Location     Type
 15365 ;;                  1    wreg      void 
 15366 ;; Registers used:
 15367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15368 ;; Tracked objects:
 15369 ;;		On entry : 1F/0
 15370 ;;		On exit  : 1F/4
 15371 ;;		Unchanged: 0/0
 15372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15374 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15376 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15377 ;;Total ram usage:        1 bytes
 15378 ;; Hardware stack levels used:    1
 15379 ;; Hardware stack levels required when called:    5
 15380 ;; This function calls:
 15381 ;;		_I2C1_StatusCallback
 15382 ;; This function is called by:
 15383 ;;		_INTERRUPT_InterruptManager
 15384 ;; This function uses a non-reentrant model
 15385 ;;
 15386                           
 15387                           
 15388                           ;psect for function _I2C1_ISR
 15389  12F4                     _I2C1_ISR:	
 15390                           
 15391                           ;i2c1.c: 129: PIR1bits.SSP1IF = 0;
 15392                           
 15393                           ;incstack = 0
 15394                           ; Regs used in _I2C1_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15395  12F4  1191               	bcf	17,3	;volatile
 15396                           
 15397                           ;i2c1.c: 130: i2c_data = SSP1BUF;
 15398  12F5  0024               	movlb	4	; select bank4
 15399  12F6  0811               	movf	17,w	;volatile
 15400  12F7  0020               	movlb	0	; select bank0
 15401  12F8  00D2               	movwf	I2C1_ISR@i2c_data
 15402                           
 15403                           ;i2c1.c: 131: if(1 == SSP1STATbits.R_nW)
 15404  12F9  0024               	movlb	4	; select bank4
 15405  12FA  1D14               	btfss	20,2	;volatile
 15406  12FB  2B03               	goto	i1l175
 15407                           
 15408                           ;i2c1.c: 132: {;i2c1.c: 133: if((1 == SSP1STATbits.D_nA) && (1 == SSP1CON2bits.ACKSTAT))
 15409  12FC  1A94               	btfsc	20,5	;volatile
 15410  12FD  1F16               	btfss	22,6	;volatile
 15411  12FE  2B01               	goto	i1l6877
 15412                           
 15413                           ;i2c1.c: 134: {;i2c1.c: 136: I2C1_StatusCallback(I2C1_SLAVE_READ_COMPLETED);
 15414  12FF  3003               	movlw	3
 15415  1300  2B0C               	goto	L8
 15416  1301                     i1l6877:	
 15417                           ;i2c1.c: 137: }
 15418                           
 15419                           
 15420                           ;i2c1.c: 138: else;i2c1.c: 139: {;i2c1.c: 141: I2C1_StatusCallback(I2C1_SLAVE_READ_REQUE
      +                          ST);
 15421  1301  3001               	movlw	1
 15422  1302  2B0C               	goto	L8
 15423  1303                     i1l175:	
 15424                           
 15425                           ;i2c1.c: 144: else if(0 == SSP1STATbits.D_nA)
 15426  1303  1A94               	btfsc	20,5	;volatile
 15427  1304  2B07               	goto	i1l6881
 15428                           
 15429                           ;i2c1.c: 145: {;i2c1.c: 149: I2C1_StatusCallback(I2C1_SLAVE_WRITE_REQUEST);
 15430  1305  3000               	movlw	0
 15431  1306  2B0C               	goto	L8
 15432  1307                     i1l6881:	
 15433                           ;i2c1.c: 150: }
 15434                           
 15435                           
 15436                           ;i2c1.c: 151: else;i2c1.c: 152: {;i2c1.c: 153: I2C1_slaveWriteData = i2c_data;
 15437  1307  0020               	movlb	0	; select bank0
 15438  1308  0852               	movf	I2C1_ISR@i2c_data,w
 15439  1309  0021               	movlb	1	; select bank1
 15440  130A  00DA               	movwf	_I2C1_slaveWriteData^(0+128)	;volatile
 15441                           
 15442                           ;i2c1.c: 156: I2C1_StatusCallback(I2C1_SLAVE_WRITE_COMPLETED);
 15443  130B  3002               	movlw	2
 15444  130C                     L8:	
 15445  130C  2310               	fcall	_I2C1_StatusCallback
 15446                           
 15447                           ;i2c1.c: 157: };i2c1.c: 159: SSP1CON1bits.CKP = 1;
 15448  130D  0024               	movlb	4	; select bank4
 15449  130E  1615               	bsf	21,4	;volatile
 15450  130F  0008               	return
 15451  1310                     __end_of_I2C1_ISR:	
 15452  1310                     __ptext48:	
 15453 ;; *************** function _I2C1_StatusCallback *****************
 15454 ;; Defined at:
 15455 ;;		line 56 in file "i2c_register.c"
 15456 ;; Parameters:    Size  Location     Type
 15457 ;;  i2c_bus_stat    1    wreg     enum E75
 15458 ;; Auto vars:     Size  Location     Type
 15459 ;;  i2c_bus_stat    1    5[BANK0 ] enum E75
 15460 ;; Return value:  Size  Location     Type
 15461 ;;                  1    wreg      void 
 15462 ;; Registers used:
 15463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15464 ;; Tracked objects:
 15465 ;;		On entry : 1A/4
 15466 ;;		On exit  : 1E/0
 15467 ;;		Unchanged: 0/0
 15468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15470 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15472 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15473 ;;Total ram usage:        1 bytes
 15474 ;; Hardware stack levels used:    1
 15475 ;; Hardware stack levels required when called:    4
 15476 ;; This function calls:
 15477 ;;		_RegisterRead
 15478 ;;		_RegisterWrite
 15479 ;; This function is called by:
 15480 ;;		_I2C1_ISR
 15481 ;; This function uses a non-reentrant model
 15482 ;;
 15483                           
 15484                           
 15485                           ;psect for function _I2C1_StatusCallback
 15486  1310                     _I2C1_StatusCallback:	
 15487                           
 15488                           ;incstack = 0
 15489                           ; Regs used in _I2C1_StatusCallback: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15490                           ;I2C1_StatusCallback@i2c_bus_state stored from wreg
 15491  1310  0020               	movlb	0	; select bank0
 15492  1311  00D1               	movwf	I2C1_StatusCallback@i2c_bus_state
 15493                           
 15494                           ;i2c_register.c: 57: static uint8_t slaveWriteType = SLAVE_NORMAL_DATA;;i2c_register.c: 
      +                          59: switch (i2c_bus_state) {
 15495  1312  2B38               	goto	i1l6415
 15496  1313                     i1l839:	
 15497                           ;i2c_register.c: 60: case I2C1_SLAVE_WRITE_REQUEST:
 15498                           
 15499                           
 15500                           ;i2c_register.c: 62: slaveWriteType = SLAVE_DATA_ADDRESS;
 15501  1313  0021               	movlb	1	; select bank1
 15502  1314  01B8               	clrf	I2C1_StatusCallback@slaveWriteType^(0+128)
 15503  1315  0AB8               	incf	I2C1_StatusCallback@slaveWriteType^(0+128),f
 15504                           
 15505                           ;i2c_register.c: 63: break;
 15506  1316  0008               	return
 15507  1317                     i1l6397:	
 15508                           
 15509                           ;i2c_register.c: 70: EncoderReg = I2C1_slaveWriteData;
 15510  1317  085A               	movf	_I2C1_slaveWriteData^(0+128),w	;volatile
 15511  1318  00BB               	movwf	_EncoderReg^(0+128)	;volatile
 15512                           
 15513                           ;i2c_register.c: 71: break;
 15514  1319  2B2E               	goto	i1l6407
 15515  131A                     i1l6399:	
 15516                           
 15517                           ;i2c_register.c: 75: RegisterWrite(EncoderReg, I2C1_slaveWriteData);
 15518  131A  085A               	movf	_I2C1_slaveWriteData^(0+128),w	;volatile
 15519  131B  0020               	movlb	0	; select bank0
 15520  131C  00CF               	movwf	RegisterWrite@data
 15521  131D  0021               	movlb	1	; select bank1
 15522  131E  083B               	movf	_EncoderReg^(0+128),w	;volatile
 15523  131F  3194  2496  3192   	fcall	_RegisterWrite
 15524                           
 15525                           ;i2c_register.c: 76: EncoderReg++;
 15526  1322  0021               	movlb	1	; select bank1
 15527  1323  0ABB               	incf	_EncoderReg^(0+128),f	;volatile
 15528                           
 15529                           ;i2c_register.c: 77: break;
 15530  1324  2B2E               	goto	i1l6407
 15531  1325                     i1l6405:	
 15532  1325  0021               	movlb	1	; select bank1
 15533  1326  0838               	movf	I2C1_StatusCallback@slaveWriteType^(0+128),w
 15534                           
 15535                           ; Switch size 1, requested type "speed"
 15536                           ; Number of cases is 2, Range of values is 0 to 1
 15537                           ; switch strategies available:
 15538                           ; Name         Instructions Cycles
 15539                           ; simple_byte            7     4 (average)
 15540                           ; direct_byte           10     6 (fixed)
 15541                           ; jumptable            260     6 (fixed)
 15542                           ;	Chosen strategy is simple_byte
 15543  1327  3A00               	xorlw	0	; case 0
 15544  1328  1903               	skipnz
 15545  1329  2B1A               	goto	i1l6399
 15546  132A  3A01               	xorlw	1	; case 1
 15547  132B  1903               	skipnz
 15548  132C  2B17               	goto	i1l6397
 15549  132D  2B1A               	goto	i1l6399
 15550  132E                     i1l6407:	
 15551                           
 15552                           ;i2c_register.c: 81: slaveWriteType = SLAVE_NORMAL_DATA;
 15553  132E  01B8               	clrf	I2C1_StatusCallback@slaveWriteType^(0+128)
 15554                           
 15555                           ;i2c_register.c: 82: break;
 15556  132F  0008               	return
 15557  1330                     i1l6409:	
 15558                           
 15559                           ;i2c_register.c: 85: SSP1BUF = RegisterRead(EncoderReg);
 15560  1330  0021               	movlb	1	; select bank1
 15561  1331  083B               	movf	_EncoderReg^(0+128),w	;volatile
 15562  1332  2343               	fcall	_RegisterRead
 15563  1333  0024               	movlb	4	; select bank4
 15564  1334  0091               	movwf	17	;volatile
 15565                           
 15566                           ;i2c_register.c: 86: EncoderReg++;
 15567  1335  0021               	movlb	1	; select bank1
 15568  1336  0ABB               	incf	_EncoderReg^(0+128),f	;volatile
 15569                           
 15570                           ;i2c_register.c: 87: break;
 15571  1337  0008               	return
 15572  1338                     i1l6415:	
 15573  1338  0851               	movf	I2C1_StatusCallback@i2c_bus_state,w
 15574                           
 15575                           ; Switch size 1, requested type "speed"
 15576                           ; Number of cases is 4, Range of values is 0 to 3
 15577                           ; switch strategies available:
 15578                           ; Name         Instructions Cycles
 15579                           ; direct_byte           14     6 (fixed)
 15580                           ; simple_byte           13     7 (average)
 15581                           ; jumptable            260     6 (fixed)
 15582                           ;	Chosen strategy is direct_byte
 15583  1339  0084               	movwf	4
 15584  133A  3004               	movlw	4
 15585  133B  0204               	subwf	4,w
 15586  133C  1803               	skipnc
 15587  133D  0008               	return
 15588  133E  3191               	movlp	high i1S8607
 15589  133F  3504               	lslf	4,w
 15590  1340  3E10               	addlw	low i1S8607
 15591  1341  0082               	movwf	2
 15592  1342                     i1l850:	
 15593  1342  0008               	return
 15594  1343                     __end_of_I2C1_StatusCallback:	
 15595  1343                     __ptext74:	
 15596 ;; *************** function _RegisterRead *****************
 15597 ;; Defined at:
 15598 ;;		line 303 in file "i2c_register.c"
 15599 ;; Parameters:    Size  Location     Type
 15600 ;;  add             1    wreg     unsigned char 
 15601 ;; Auto vars:     Size  Location     Type
 15602 ;;  add             1    1[COMMON] unsigned char 
 15603 ;;  return_value    1    2[COMMON] unsigned char 
 15604 ;; Return value:  Size  Location     Type
 15605 ;;                  1    wreg      unsigned char 
 15606 ;; Registers used:
 15607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15608 ;; Tracked objects:
 15609 ;;		On entry : 1F/1
 15610 ;;		On exit  : C/0
 15611 ;;		Unchanged: 0/0
 15612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15616 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15617 ;;Total ram usage:        2 bytes
 15618 ;; Hardware stack levels used:    1
 15619 ;; Hardware stack levels required when called:    1
 15620 ;; This function calls:
 15621 ;;		_eeprom_read
 15622 ;; This function is called by:
 15623 ;;		_I2C1_StatusCallback
 15624 ;; This function uses a non-reentrant model
 15625 ;;
 15626                           
 15627                           
 15628                           ;psect for function _RegisterRead
 15629  1343                     _RegisterRead:	
 15630                           
 15631                           ;incstack = 0
 15632                           ; Regs used in _RegisterRead: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15633                           ;RegisterRead@add stored from wreg
 15634  1343  00F1               	movwf	RegisterRead@add
 15635                           
 15636                           ;i2c_register.c: 306: switch (add) {
 15637  1344  2BDE               	goto	i1l5883
 15638  1345                     i1l5763:	
 15639                           
 15640                           ;i2c_register.c: 308: return_value = GCONF;
 15641  1345  0020               	movlb	0	; select bank0
 15642  1346  0848               	movf	_GCONF,w	;volatile
 15643  1347  2BDC               	goto	L46
 15644  1348                     i1l5765:	
 15645                           ;i2c_register.c: 309: break;
 15646                           
 15647                           
 15648                           ;i2c_register.c: 312: return_value = GP1CONF;
 15649  1348  0020               	movlb	0	; select bank0
 15650  1349  0847               	movf	_GP1CONF,w	;volatile
 15651  134A  2BDC               	goto	L46
 15652  134B                     i1l5767:	
 15653                           ;i2c_register.c: 313: break;
 15654                           
 15655                           
 15656                           ;i2c_register.c: 316: return_value = GP2CONF;
 15657  134B  0020               	movlb	0	; select bank0
 15658  134C  0846               	movf	_GP2CONF,w	;volatile
 15659  134D  2BDC               	goto	L46
 15660  134E                     i1l5769:	
 15661                           ;i2c_register.c: 317: break;
 15662                           
 15663                           
 15664                           ;i2c_register.c: 320: if (C_ETYPE == 0) {
 15665  134E  0020               	movlb	0	; select bank0
 15666  134F  0838               	movf	_C_ETYPE,w	;volatile
 15667  1350  1D03               	btfss	3,2
 15668  1351  2B54               	goto	i1l5773
 15669                           
 15670                           ;i2c_register.c: 321: return_value = GP3CONF;
 15671  1352  0845               	movf	_GP3CONF,w	;volatile
 15672  1353  2BDC               	goto	L46
 15673  1354                     i1l5773:	
 15674                           ;i2c_register.c: 322: } else {
 15675                           
 15676                           
 15677                           ;i2c_register.c: 323: return_value = 0;
 15678  1354  01F2               	clrf	RegisterRead@return_value
 15679  1355  2BE8               	goto	i1l5885
 15680  1356                     i1l5775:	
 15681                           
 15682                           ;i2c_register.c: 328: return_value = INTCONF;
 15683  1356  0849               	movf	_INTCONF^(0+128),w	;volatile
 15684  1357  2BDC               	goto	L46
 15685  1358                     i1l5777:	
 15686                           ;i2c_register.c: 329: break;
 15687                           
 15688                           
 15689                           ;i2c_register.c: 332: return_value = ESTATUS;
 15690  1358  0020               	movlb	0	; select bank0
 15691  1359  0849               	movf	_ESTATUS,w	;volatile
 15692  135A  00F2               	movwf	RegisterRead@return_value
 15693                           
 15694                           ;i2c_register.c: 333: ESTATUS = 0;
 15695  135B  01C9               	clrf	_ESTATUS	;volatile
 15696  135C  0022               	movlb	2	; select bank2
 15697  135D  168D               	bsf	13,5	;volatile
 15698  135E  2BE8               	goto	i1l5885
 15699  135F                     i1l5783:	
 15700                           
 15701                           ;i2c_register.c: 338: return_value = I2STATUS;
 15702  135F  0847               	movf	_I2STATUS^(0+128),w	;volatile
 15703  1360  00F2               	movwf	RegisterRead@return_value
 15704                           
 15705                           ;i2c_register.c: 339: I2STATUS = 0;
 15706  1361  01C7               	clrf	_I2STATUS^(0+128)	;volatile
 15707                           
 15708                           ;i2c_register.c: 340: break;
 15709  1362  2BE8               	goto	i1l5885
 15710  1363                     i1l5787:	
 15711                           
 15712                           ;i2c_register.c: 343: return_value = FSTATUS;
 15713  1363  0846               	movf	_FSTATUS^(0+128),w	;volatile
 15714  1364  2BDC               	goto	L46
 15715  1365                     i1l5789:	
 15716                           ;i2c_register.c: 344: break;
 15717                           
 15718                           
 15719                           ;i2c_register.c: 348: return_value = CVAL.bval[3];
 15720  1365  0020               	movlb	0	; select bank0
 15721  1366  082F               	movf	_CVAL+3,w	;volatile
 15722  1367  00F2               	movwf	RegisterRead@return_value
 15723                           
 15724                           ;i2c_register.c: 349: if (S_RELATIVE == 1)
 15725  1368  0B36               	decfsz	_S_RELATIVE,w	;volatile
 15726  1369  2BE8               	goto	i1l5885
 15727  136A  2B84               	goto	L17
 15728  136B                     i1l5795:	
 15729                           ;i2c_register.c: 350: CVAL.bval[3] = 0;
 15730                           
 15731                           
 15732                           ;i2c_register.c: 353: return_value = CVAL.bval[2];
 15733  136B  0020               	movlb	0	; select bank0
 15734  136C  082E               	movf	_CVAL+2,w	;volatile
 15735  136D  00F2               	movwf	RegisterRead@return_value
 15736                           
 15737                           ;i2c_register.c: 354: if (S_RELATIVE == 1){
 15738  136E  0B36               	decfsz	_S_RELATIVE,w	;volatile
 15739  136F  2BE8               	goto	i1l5885
 15740                           
 15741                           ;i2c_register.c: 355: CVAL.bval[3] = 0;
 15742  1370  01AF               	clrf	_CVAL+3	;volatile
 15743                           
 15744                           ;i2c_register.c: 356: CVAL.bval[2] = 0;
 15745  1371  01AE               	clrf	_CVAL+2	;volatile
 15746  1372  2BE8               	goto	i1l5885
 15747  1373                     i1l5801:	
 15748                           
 15749                           ;i2c_register.c: 360: return_value = CVAL.bval[1];
 15750  1373  0020               	movlb	0	; select bank0
 15751  1374  082D               	movf	_CVAL+1,w	;volatile
 15752  1375  00F2               	movwf	RegisterRead@return_value
 15753                           
 15754                           ;i2c_register.c: 361: if (S_RELATIVE == 1){
 15755  1376  0B36               	decfsz	_S_RELATIVE,w	;volatile
 15756  1377  2BE8               	goto	i1l5885
 15757                           
 15758                           ;i2c_register.c: 362: CVAL.bval[3] = 0;
 15759  1378  01AF               	clrf	_CVAL+3	;volatile
 15760                           
 15761                           ;i2c_register.c: 363: CVAL.bval[2] = 0;
 15762  1379  01AE               	clrf	_CVAL+2	;volatile
 15763                           
 15764                           ;i2c_register.c: 364: CVAL.bval[1] = 0;
 15765  137A  01AD               	clrf	_CVAL+1	;volatile
 15766  137B  2BE8               	goto	i1l5885
 15767  137C                     i1l5807:	
 15768                           
 15769                           ;i2c_register.c: 368: return_value = CVAL.bval[0];
 15770  137C  0020               	movlb	0	; select bank0
 15771  137D  082C               	movf	_CVAL,w	;volatile
 15772  137E  00F2               	movwf	RegisterRead@return_value
 15773                           
 15774                           ;i2c_register.c: 369: if (S_RELATIVE == 1)
 15775  137F  0B36               	decfsz	_S_RELATIVE,w	;volatile
 15776  1380  2BE8               	goto	i1l5885
 15777                           
 15778                           ;i2c_register.c: 370: CVAL.val = 0;
 15779  1381  01AC               	clrf	_CVAL	;volatile
 15780  1382  01AD               	clrf	_CVAL+1	;volatile
 15781  1383  01AE               	clrf	_CVAL+2	;volatile
 15782  1384                     L17:	
 15783  1384  01AF               	clrf	_CVAL+3	;volatile
 15784  1385  2BE8               	goto	i1l5885
 15785  1386                     i1l5813:	
 15786                           
 15787                           ;i2c_register.c: 375: return_value = CMAX.bval[3];
 15788  1386  0020               	movlb	0	; select bank0
 15789  1387  082B               	movf	_CMAX+3,w	;volatile
 15790  1388  2BDC               	goto	L46
 15791  1389                     i1l5815:	
 15792                           ;i2c_register.c: 376: break;
 15793                           
 15794                           
 15795                           ;i2c_register.c: 378: return_value = CMAX.bval[2];
 15796  1389  0020               	movlb	0	; select bank0
 15797  138A  082A               	movf	_CMAX+2,w	;volatile
 15798  138B  2BDC               	goto	L46
 15799  138C                     i1l5817:	
 15800                           ;i2c_register.c: 379: break;
 15801                           
 15802                           
 15803                           ;i2c_register.c: 381: return_value = CMAX.bval[1];
 15804  138C  0020               	movlb	0	; select bank0
 15805  138D  0829               	movf	_CMAX+1,w	;volatile
 15806  138E  2BDC               	goto	L46
 15807  138F                     i1l5819:	
 15808                           ;i2c_register.c: 382: break;
 15809                           
 15810                           
 15811                           ;i2c_register.c: 384: return_value = CMAX.bval[0];
 15812  138F  0020               	movlb	0	; select bank0
 15813  1390  0828               	movf	_CMAX,w	;volatile
 15814  1391  2BDC               	goto	L46
 15815  1392                     i1l5821:	
 15816                           ;i2c_register.c: 385: break;
 15817                           
 15818                           
 15819                           ;i2c_register.c: 389: return_value = CMIN.bval[3];
 15820  1392  0020               	movlb	0	; select bank0
 15821  1393  0827               	movf	_CMIN+3,w	;volatile
 15822  1394  2BDC               	goto	L46
 15823  1395                     i1l5823:	
 15824                           ;i2c_register.c: 390: break;
 15825                           
 15826                           
 15827                           ;i2c_register.c: 392: return_value = CMIN.bval[2];
 15828  1395  0020               	movlb	0	; select bank0
 15829  1396  0826               	movf	_CMIN+2,w	;volatile
 15830  1397  2BDC               	goto	L46
 15831  1398                     i1l5825:	
 15832                           ;i2c_register.c: 393: break;
 15833                           
 15834                           
 15835                           ;i2c_register.c: 395: return_value = CMIN.bval[1];
 15836  1398  0020               	movlb	0	; select bank0
 15837  1399  0825               	movf	_CMIN+1,w	;volatile
 15838  139A  2BDC               	goto	L46
 15839  139B                     i1l5827:	
 15840                           ;i2c_register.c: 396: break;
 15841                           
 15842                           
 15843                           ;i2c_register.c: 398: return_value = CMIN.bval[0];
 15844  139B  0020               	movlb	0	; select bank0
 15845  139C  0824               	movf	_CMIN,w	;volatile
 15846  139D  2BDC               	goto	L46
 15847  139E                     i1l5829:	
 15848                           ;i2c_register.c: 399: break;
 15849                           
 15850                           
 15851                           ;i2c_register.c: 403: return_value = ISTEP.bval[3];
 15852  139E  0020               	movlb	0	; select bank0
 15853  139F  0823               	movf	_ISTEP+3,w	;volatile
 15854  13A0  2BDC               	goto	L46
 15855  13A1                     i1l5831:	
 15856                           ;i2c_register.c: 404: break;
 15857                           
 15858                           
 15859                           ;i2c_register.c: 406: return_value = ISTEP.bval[2];
 15860  13A1  0020               	movlb	0	; select bank0
 15861  13A2  0822               	movf	_ISTEP+2,w	;volatile
 15862  13A3  2BDC               	goto	L46
 15863  13A4                     i1l5833:	
 15864                           ;i2c_register.c: 407: break;
 15865                           
 15866                           
 15867                           ;i2c_register.c: 409: return_value = ISTEP.bval[1];
 15868  13A4  0020               	movlb	0	; select bank0
 15869  13A5  0821               	movf	_ISTEP+1,w	;volatile
 15870  13A6  2BDC               	goto	L46
 15871  13A7                     i1l5835:	
 15872                           ;i2c_register.c: 410: break;
 15873                           
 15874                           
 15875                           ;i2c_register.c: 412: return_value = ISTEP.bval[0];
 15876  13A7  0020               	movlb	0	; select bank0
 15877  13A8  0820               	movf	_ISTEP,w	;volatile
 15878  13A9  2BDC               	goto	L46
 15879  13AA                     i1l5837:	
 15880                           ;i2c_register.c: 413: break;
 15881                           
 15882                           
 15883                           ;i2c_register.c: 417: return_value = RLED;
 15884  13AA  0020               	movlb	0	; select bank0
 15885  13AB  0844               	movf	_RLED,w	;volatile
 15886  13AC  2BDC               	goto	L46
 15887  13AD                     i1l5839:	
 15888                           ;i2c_register.c: 418: break;
 15889                           
 15890                           
 15891                           ;i2c_register.c: 421: return_value = GLED;
 15892  13AD  0020               	movlb	0	; select bank0
 15893  13AE  0843               	movf	_GLED,w	;volatile
 15894  13AF  2BDC               	goto	L46
 15895  13B0                     i1l5841:	
 15896                           ;i2c_register.c: 422: break;
 15897                           
 15898                           
 15899                           ;i2c_register.c: 425: return_value = BLED;
 15900  13B0  0020               	movlb	0	; select bank0
 15901  13B1  0842               	movf	_BLED,w	;volatile
 15902  13B2  2BDC               	goto	L46
 15903  13B3                     i1l5843:	
 15904                           ;i2c_register.c: 426: break;
 15905                           
 15906                           
 15907                           ;i2c_register.c: 429: return_value = GP1REG;
 15908  13B3  0020               	movlb	0	; select bank0
 15909  13B4  0841               	movf	_GP1REG,w	;volatile
 15910  13B5  2BDC               	goto	L46
 15911  13B6                     i1l5845:	
 15912                           ;i2c_register.c: 430: break;
 15913                           
 15914                           
 15915                           ;i2c_register.c: 433: return_value = GP2REG;
 15916  13B6  0020               	movlb	0	; select bank0
 15917  13B7  0840               	movf	_GP2REG,w	;volatile
 15918  13B8  2BDC               	goto	L46
 15919  13B9                     i1l5847:	
 15920                           ;i2c_register.c: 434: break;
 15921                           
 15922                           
 15923                           ;i2c_register.c: 437: if (C_ETYPE == 0) {
 15924  13B9  0020               	movlb	0	; select bank0
 15925  13BA  0838               	movf	_C_ETYPE,w	;volatile
 15926  13BB  1D03               	btfss	3,2
 15927  13BC  2B54               	goto	i1l5773
 15928                           
 15929                           ;i2c_register.c: 438: return_value = GP3REG;
 15930  13BD  083F               	movf	_GP3REG,w	;volatile
 15931  13BE  2BDC               	goto	L46
 15932  13BF                     i1l5853:	
 15933                           ;i2c_register.c: 439: } else {
 15934                           
 15935                           
 15936                           ;i2c_register.c: 445: return_value = ANTBOUNC;
 15937  13BF  0845               	movf	_ANTBOUNC^(0+128),w	;volatile
 15938  13C0  2BDC               	goto	L46
 15939  13C1                     i1l5855:	
 15940                           ;i2c_register.c: 446: break;
 15941                           
 15942                           
 15943                           ;i2c_register.c: 449: return_value = DPPERIOD;
 15944  13C1  0844               	movf	_DPPERIOD^(0+128),w	;volatile
 15945  13C2  2BDC               	goto	L46
 15946  13C3                     i1l5857:	
 15947                           ;i2c_register.c: 450: break;
 15948                           
 15949                           
 15950                           ;i2c_register.c: 453: return_value = FADERGB;
 15951  13C3  0843               	movf	_FADERGB^(0+128),w	;volatile
 15952  13C4  2BDC               	goto	L46
 15953  13C5                     i1l5859:	
 15954                           ;i2c_register.c: 454: break;
 15955                           
 15956                           
 15957                           ;i2c_register.c: 457: return_value = FADEGP;
 15958  13C5  0020               	movlb	0	; select bank0
 15959  13C6  083E               	movf	_FADEGP,w	;volatile
 15960  13C7  2BDC               	goto	L46
 15961  13C8                     i1l5861:	
 15962                           ;i2c_register.c: 458: break;
 15963                           
 15964                           
 15965                           ;i2c_register.c: 462: return_value = GAMMAGP3_RLED;
 15966  13C8  0020               	movlb	0	; select bank0
 15967  13C9  083B               	movf	_GAMMAGP3_RLED,w	;volatile
 15968  13CA  2BDC               	goto	L46
 15969  13CB                     i1l5863:	
 15970                           ;i2c_register.c: 463: break;
 15971                           
 15972                           
 15973                           ;i2c_register.c: 466: return_value = GAMMAGLED;
 15974  13CB  0020               	movlb	0	; select bank0
 15975  13CC  083A               	movf	_GAMMAGLED,w	;volatile
 15976  13CD  2BDC               	goto	L46
 15977  13CE                     i1l5865:	
 15978                           ;i2c_register.c: 467: break;
 15979                           
 15980                           
 15981                           ;i2c_register.c: 470: return_value = GAMMABLED;
 15982  13CE  0020               	movlb	0	; select bank0
 15983  13CF  0839               	movf	_GAMMABLED,w	;volatile
 15984  13D0  2BDC               	goto	L46
 15985  13D1                     i1l5867:	
 15986                           ;i2c_register.c: 471: break;
 15987                           
 15988                           
 15989                           ;i2c_register.c: 474: return_value = GAMMAGP1;
 15990  13D1  0020               	movlb	0	; select bank0
 15991  13D2  083D               	movf	_GAMMAGP1,w	;volatile
 15992  13D3  2BDC               	goto	L46
 15993  13D4                     i1l5869:	
 15994                           ;i2c_register.c: 475: break;
 15995                           
 15996                           
 15997                           ;i2c_register.c: 478: return_value = GAMMAGP2;
 15998  13D4  0020               	movlb	0	; select bank0
 15999  13D5  083C               	movf	_GAMMAGP2,w	;volatile
 16000  13D6  2BDC               	goto	L46
 16001  13D7                     i1l5873:	
 16002                           ;i2c_register.c: 479: break;
 16003                           
 16004                           
 16005                           ;i2c_register.c: 486: return_value = GCONF2;
 16006  13D7  0842               	movf	_GCONF2^(0+128),w	;volatile
 16007  13D8  2BDC               	goto	L46
 16008  13D9                     i1l5875:	
 16009                           ;i2c_register.c: 487: break;
 16010                           
 16011                           
 16012                           ;i2c_register.c: 490: return_value = 0x53;;
 16013  13D9  3053               	movlw	83
 16014  13DA  2BDC               	goto	L46
 16015  13DB                     i1l5877:	
 16016                           ;i2c_register.c: 491: break;
 16017                           
 16018                           
 16019                           ;i2c_register.c: 494: return_value = 0x22;
 16020  13DB  3022               	movlw	34
 16021  13DC                     L46:	
 16022  13DC  00F2               	movwf	RegisterRead@return_value
 16023                           
 16024                           ;i2c_register.c: 495: break;
 16025  13DD  2BE8               	goto	i1l5885
 16026  13DE                     i1l5883:	
 16027  13DE  0871               	movf	RegisterRead@add,w
 16028                           
 16029                           ; Switch size 1, requested type "speed"
 16030                           ; Number of cases is 43, Range of values is 0 to 113
 16031                           ; switch strategies available:
 16032                           ; Name         Instructions Cycles
 16033                           ; direct_byte          234     6 (fixed)
 16034                           ; simple_byte          130    66 (average)
 16035                           ; jumptable            260     6 (fixed)
 16036                           ;	Chosen strategy is direct_byte
 16037  13DF  0084               	movwf	4
 16038  13E0  3072               	movlw	114
 16039  13E1  0204               	subwf	4,w
 16040  13E2  1803               	skipnc
 16041  13E3  2B54               	goto	i1l5773
 16042  13E4  3190               	movlp	high i1S8629
 16043  13E5  3504               	lslf	4,w
 16044  13E6  3E00               	addlw	low i1S8629
 16045  13E7  0082               	movwf	2
 16046  13E8                     i1l5885:	
 16047                           
 16048                           ;i2c_register.c: 502: if (add >= REG_EEPROMS) {
 16049  13E8  3080               	movlw	128
 16050  13E9  0271               	subwf	RegisterRead@add,w
 16051  13EA  1C03               	skipc
 16052  13EB  2BF6               	goto	i1l5893
 16053                           
 16054                           ;i2c_register.c: 503: if (C_MBANK == 0) {
 16055  13EC  0021               	movlb	1	; select bank1
 16056  13ED  0840               	movf	_C_MBANK^(0+128),w	;volatile
 16057  13EE  1D03               	btfss	3,2
 16058  13EF  2BF3               	goto	i1l5891
 16059                           
 16060                           ;i2c_register.c: 504: return_value = eeprom_read((uint8_t) (add - REG_EEPROMS));
 16061  13F0  0871               	movf	RegisterRead@add,w
 16062  13F1  3E80               	addlw	128
 16063  13F2  2BF4               	goto	L47
 16064  13F3                     i1l5891:	
 16065                           ;i2c_register.c: 505: } else {
 16066                           
 16067                           
 16068                           ;i2c_register.c: 506: return_value = eeprom_read(add);
 16069  13F3  0871               	movf	RegisterRead@add,w
 16070  13F4                     L47:	
 16071  13F4  23F8               	fcall	_eeprom_read
 16072  13F5  00F2               	movwf	RegisterRead@return_value
 16073  13F6                     i1l5893:	
 16074                           
 16075                           ;i2c_register.c: 507: };i2c_register.c: 508: };i2c_register.c: 509: return return_value;
 16076  13F6  0872               	movf	RegisterRead@return_value,w
 16077  13F7  0008               	return
 16078  13F8                     __end_of_RegisterRead:	
 16079  13F8                     __ptext75:	
 16080 ;; *************** function _eeprom_read *****************
 16081 ;; Defined at:
 16082 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eeread.c"
 16083 ;; Parameters:    Size  Location     Type
 16084 ;;  addr            1    wreg     unsigned char 
 16085 ;; Auto vars:     Size  Location     Type
 16086 ;;  addr            1    0[COMMON] unsigned char 
 16087 ;; Return value:  Size  Location     Type
 16088 ;;                  1    wreg      unsigned char 
 16089 ;; Registers used:
 16090 ;;		wreg
 16091 ;; Tracked objects:
 16092 ;;		On entry : 1F/1
 16093 ;;		On exit  : 1F/11
 16094 ;;		Unchanged: 0/0
 16095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16097 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16099 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16100 ;;Total ram usage:        1 bytes
 16101 ;; Hardware stack levels used:    1
 16102 ;; This function calls:
 16103 ;;		Nothing
 16104 ;; This function is called by:
 16105 ;;		_RegisterRead
 16106 ;; This function uses a non-reentrant model
 16107 ;;
 16108                           
 16109                           
 16110                           ;psect for function _eeprom_read
 16111  13F8                     _eeprom_read:	
 16112                           
 16113                           ;incstack = 0
 16114                           ; Regs used in _eeprom_read: [wreg]
 16115                           ;eeprom_read@addr stored from wreg
 16116  13F8  00F0               	movwf	eeprom_read@addr
 16117  13F9  2BFB               	goto	i1l1770
 16118  13FA                     u275_21:	
 16119  13FA  0021               	movlb	1	; select bank1
 16120  13FB                     i1l1770:	
 16121                           ;__eeread.c: 8: do
 16122                           
 16123  13FB  0064               	clrwdt	;# 
 16124                           
 16125                           ;__eeread.c: 14: while (NVMCON1bits.WR);
 16126  13FC  0031               	movlb	17	; select bank17
 16127  13FD  1895               	btfsc	21,1	;volsfr
 16128  13FE  2BFA               	goto	u275_21
 16129                           
 16130                           ;__eeread.c: 18: return ( NVMCON1bits.NVMREGS = 1, NVMADRL = (addr) & 0xFFU, NVMADRH = 0
      +                          x70, NVMCON1bits.RD = 1, NVMDATL);
 16131  13FF  1715               	bsf	21,6	;volsfr
 16132  1400  0870               	movf	eeprom_read@addr,w
 16133  1401  0091               	movwf	17	;volatile
 16134  1402  3070               	movlw	112
 16135  1403  0092               	movwf	18	;volatile
 16136  1404  1415               	bsf	21,0	;volsfr
 16137  1405  0813               	movf	19,w	;volatile
 16138  1406  0008               	return
 16139  1407                     __end_of_eeprom_read:	
 16140                           
 16141                           	psect	swtext5
 16142  1110                     __pswtext5:	
 16143  1110                     i1S8607:	
 16144  1110  3193  2B13         	ljmp	i1l839
 16145  1112  3193  2B30         	ljmp	i1l6409
 16146  1114  3193  2B25         	ljmp	i1l6405
 16147  1116  3193  2B42         	ljmp	i1l850
 16148                           
 16149                           	psect	swtext6
 16150  0C5A                     __pswtext6:	
 16151  0C5A                     i1S8609:	
 16152  0C5A  3194  2C99         	ljmp	i1l5627
 16153  0C5C  3194  2CA2         	ljmp	i1l5633
 16154  0C5E  3194  2CA7         	ljmp	i1l5637
 16155  0C60  3194  2CAC         	ljmp	i1l5641
 16156  0C62  3194  2CB4         	ljmp	i1l5647
 16157  0C64  3195  2D6E         	ljmp	i1l5747
 16158  0C66  3195  2D6E         	ljmp	i1l5747
 16159  0C68  3195  2D6E         	ljmp	i1l5747
 16160  0C6A  3194  2CB8         	ljmp	i1l5649
 16161  0C6C  3194  2CBB         	ljmp	i1l5651
 16162  0C6E  3194  2CBE         	ljmp	i1l5653
 16163  0C70  3194  2CC1         	ljmp	i1l5655
 16164  0C72  3194  2CC4         	ljmp	i1l5657
 16165  0C74  3194  2CC7         	ljmp	i1l5659
 16166  0C76  3194  2CCA         	ljmp	i1l5661
 16167  0C78  3194  2CCD         	ljmp	i1l5663
 16168  0C7A  3194  2CD0         	ljmp	i1l5665
 16169  0C7C  3194  2CD3         	ljmp	i1l5667
 16170  0C7E  3194  2CD6         	ljmp	i1l5669
 16171  0C80  3194  2CD9         	ljmp	i1l5671
 16172  0C82  3194  2CDC         	ljmp	i1l5673
 16173  0C84  3194  2CDF         	ljmp	i1l5675
 16174  0C86  3194  2CE2         	ljmp	i1l5677
 16175  0C88  3194  2CE5         	ljmp	i1l5679
 16176  0C8A  3194  2CE8         	ljmp	i1l5681
 16177  0C8C  3194  2CEB         	ljmp	i1l5683
 16178  0C8E  3194  2CEE         	ljmp	i1l5685
 16179  0C90  3194  2CF1         	ljmp	i1l5687
 16180  0C92  3194  2CF6         	ljmp	i1l5691
 16181  0C94  3194  2CFC         	ljmp	i1l5695
 16182  0C96  3195  2D05         	ljmp	i1l5701
 16183  0C98  3195  2D16         	ljmp	i1l5705
 16184  0C9A  3195  2D27         	ljmp	i1l5709
 16185  0C9C  3195  2D2B         	ljmp	i1l5711
 16186  0C9E  3195  2D6E         	ljmp	i1l5747
 16187  0CA0  3195  2D6E         	ljmp	i1l5747
 16188  0CA2  3195  2D6E         	ljmp	i1l5747
 16189  0CA4  3195  2D6E         	ljmp	i1l5747
 16190  0CA6  3195  2D6E         	ljmp	i1l5747
 16191  0CA8  3195  2D2E         	ljmp	i1l5713
 16192  0CAA  3195  2D37         	ljmp	i1l5717
 16193  0CAC  3195  2D40         	ljmp	i1l5721
 16194  0CAE  3195  2D49         	ljmp	i1l5725
 16195  0CB0  3195  2D52         	ljmp	i1l5729
 16196  0CB2  3195  2D5B         	ljmp	i1l5733
 16197  0CB4  3195  2D6E         	ljmp	i1l5747
 16198  0CB6  3195  2D6E         	ljmp	i1l5747
 16199  0CB8  3195  2D6E         	ljmp	i1l5747
 16200  0CBA  3195  2D5C         	ljmp	i1l5737
 16201                           
 16202                           	psect	text50
 16203  11E2                     __ptext50:	
 16204 ;; *************** function _eeprom_write *****************
 16205 ;; Defined at:
 16206 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\pic\__eewrite.c"
 16207 ;; Parameters:    Size  Location     Type
 16208 ;;  addr            1    wreg     unsigned char 
 16209 ;;  value           1    0[COMMON] unsigned char 
 16210 ;; Auto vars:     Size  Location     Type
 16211 ;;  addr            1    1[COMMON] unsigned char 
 16212 ;; Return value:  Size  Location     Type
 16213 ;;                  1    wreg      void 
 16214 ;; Registers used:
 16215 ;;		wreg, status,2
 16216 ;; Tracked objects:
 16217 ;;		On entry : 1F/0
 16218 ;;		On exit  : 1F/11
 16219 ;;		Unchanged: 0/0
 16220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16221 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16224 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16225 ;;Total ram usage:        2 bytes
 16226 ;; Hardware stack levels used:    1
 16227 ;; This function calls:
 16228 ;;		Nothing
 16229 ;; This function is called by:
 16230 ;;		_RegisterWrite
 16231 ;; This function uses a non-reentrant model
 16232 ;;
 16233                           
 16234                           
 16235                           ;psect for function _eeprom_write
 16236  11E2                     _eeprom_write:	
 16237                           
 16238                           ;incstack = 0
 16239                           ; Regs used in _eeprom_write: [wreg+status,2]
 16240                           ;eeprom_write@addr stored from wreg
 16241  11E2  00F1               	movwf	eeprom_write@addr
 16242  11E3                     i1l1792:	
 16243                           ;__eewrite.c: 8: do { while (NVMCON1bits.WR) { continue; } NVMCON1bits.NVMREGS = 1; NVMA
      +                          DRL = (addr) & 0xFFU; NVMADRH = 0x70; NVMDATH = 0; NVMDATL = (value) & 0xFFU; STATUSbits
      +                          .CARRY = 0; if (INTCONbits.GIE) { STATUSbits.CARRY = 1; } INTCONbits.GIE = 0; NVMCON1bit
      +                          s.W
 16244                           
 16245  11E3  0031               	movlb	17	; select bank17
 16246  11E4  1895               	btfsc	21,1	;volsfr
 16247  11E5  29E3               	goto	i1l1792
 16248  11E6  1715               	bsf	21,6	;volsfr
 16249  11E7  0871               	movf	eeprom_write@addr,w
 16250  11E8  0091               	movwf	17	;volatile
 16251  11E9  3070               	movlw	112
 16252  11EA  0092               	movwf	18	;volatile
 16253  11EB  0194               	clrf	20	;volatile
 16254  11EC  0870               	movf	eeprom_write@value,w
 16255  11ED  0093               	movwf	19	;volatile
 16256  11EE  1003               	bcf	3,0	;volatile
 16257  11EF  1B8B               	btfsc	11,7	;volatile
 16258  11F0  1403               	bsf	3,0	;volatile
 16259  11F1  138B               	bcf	11,7	;volatile
 16260  11F2  1515               	bsf	21,2	;volsfr
 16261  11F3  3055               	movlw	85
 16262  11F4  0096               	movwf	22	;volsfr
 16263  11F5  30AA               	movlw	170
 16264  11F6  0096               	movwf	22	;volsfr
 16265  11F7  1495               	bsf	21,1	;volsfr
 16266  11F8                     i1l1796:	
 16267  11F8  1895               	btfsc	21,1	;volsfr
 16268  11F9  29F8               	goto	i1l1796
 16269  11FA  1115               	bcf	21,2	;volsfr
 16270  11FB  1803               	btfsc	3,0	;volatile
 16271  11FC  178B               	bsf	11,7	;volatile
 16272  11FD  0008               	return
 16273  11FE                     __end_of_eeprom_write:	
 16274                           
 16275                           	psect	text51
 16276  11CE                     __ptext51:	
 16277 ;; *************** function _UpdateOut_GP3 *****************
 16278 ;; Defined at:
 16279 ;;		line 376 in file "GPports.c"
 16280 ;; Parameters:    Size  Location     Type
 16281 ;;		None
 16282 ;; Auto vars:     Size  Location     Type
 16283 ;;		None
 16284 ;; Return value:  Size  Location     Type
 16285 ;;                  1    wreg      void 
 16286 ;; Registers used:
 16287 ;;		wreg, status,2, status,0
 16288 ;; Tracked objects:
 16289 ;;		On entry : 1F/0
 16290 ;;		On exit  : 1D/0
 16291 ;;		Unchanged: 0/0
 16292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16295 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16296 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16297 ;;Total ram usage:        1 bytes
 16298 ;; Hardware stack levels used:    1
 16299 ;; This function calls:
 16300 ;;		Nothing
 16301 ;; This function is called by:
 16302 ;;		_RegisterWrite
 16303 ;; This function uses a non-reentrant model
 16304 ;;
 16305                           
 16306                           
 16307                           ;psect for function _UpdateOut_GP3
 16308  11CE                     _UpdateOut_GP3:	
 16309                           
 16310                           ;GPports.c: 377: if (C_ETYPE == 1)
 16311                           
 16312                           ;incstack = 0
 16313                           ; Regs used in _UpdateOut_GP3: [wreg+status,2+status,0]
 16314  11CE  0B38               	decfsz	_C_ETYPE,w	;volatile
 16315  11CF  29D1               	goto	i1l5351
 16316  11D0  0008               	return
 16317  11D1                     i1l5351:	
 16318                           
 16319                           ;GPports.c: 380: if ((GP3CONF & 0x03) == 0x01) {
 16320  11D1  3003               	movlw	3
 16321  11D2  0545               	andwf	_GP3CONF,w	;volatile
 16322  11D3  00F0               	movwf	??_UpdateOut_GP3
 16323  11D4  0B70               	decfsz	??_UpdateOut_GP3,w
 16324  11D5  0008               	return
 16325                           
 16326                           ;GPports.c: 381: if (GP3REG == 0) {
 16327  11D6  083F               	movf	_GP3REG,w	;volatile
 16328  11D7  1D03               	btfss	3,2
 16329  11D8  29DC               	goto	i1l1306
 16330                           
 16331                           ;GPports.c: 382: LATCbits.LATC5 = 0;
 16332  11D9  0022               	movlb	2	; select bank2
 16333  11DA  128E               	bcf	14,5	;volatile
 16334                           
 16335                           ;GPports.c: 383: } else {
 16336  11DB  0008               	return
 16337  11DC                     i1l1306:	
 16338                           
 16339                           ;GPports.c: 384: LATCbits.LATC5 = 1;
 16340  11DC  0022               	movlb	2	; select bank2
 16341  11DD  168E               	bsf	14,5	;volatile
 16342                           
 16343                           ;GPports.c: 385: GP3REG = 1;
 16344  11DE  3001               	movlw	1
 16345  11DF  0020               	movlb	0	; select bank0
 16346  11E0  00BF               	movwf	_GP3REG	;volatile
 16347  11E1  0008               	return
 16348  11E2                     __end_of_UpdateOut_GP3:	
 16349                           
 16350                           	psect	text52
 16351  11A9                     __ptext52:	
 16352 ;; *************** function _UpdateOut_GP2 *****************
 16353 ;; Defined at:
 16354 ;;		line 360 in file "GPports.c"
 16355 ;; Parameters:    Size  Location     Type
 16356 ;;		None
 16357 ;; Auto vars:     Size  Location     Type
 16358 ;;		None
 16359 ;; Return value:  Size  Location     Type
 16360 ;;                  1    wreg      void 
 16361 ;; Registers used:
 16362 ;;		wreg, status,2, status,0
 16363 ;; Tracked objects:
 16364 ;;		On entry : 1F/0
 16365 ;;		On exit  : 1D/0
 16366 ;;		Unchanged: 0/0
 16367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16370 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16371 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16372 ;;Total ram usage:        1 bytes
 16373 ;; Hardware stack levels used:    1
 16374 ;; This function calls:
 16375 ;;		Nothing
 16376 ;; This function is called by:
 16377 ;;		_RegisterWrite
 16378 ;; This function uses a non-reentrant model
 16379 ;;
 16380                           
 16381                           
 16382                           ;psect for function _UpdateOut_GP2
 16383  11A9                     _UpdateOut_GP2:	
 16384                           
 16385                           ;GPports.c: 361: if ((GP2CONF & 0x03) == 0x01) {
 16386                           
 16387                           ;incstack = 0
 16388                           ; Regs used in _UpdateOut_GP2: [wreg+status,2+status,0]
 16389  11A9  3003               	movlw	3
 16390  11AA  0546               	andwf	_GP2CONF,w	;volatile
 16391  11AB  00F0               	movwf	??_UpdateOut_GP2
 16392  11AC  0B70               	decfsz	??_UpdateOut_GP2,w
 16393  11AD  0008               	return
 16394                           
 16395                           ;GPports.c: 362: if (GP2REG == 0) {
 16396  11AE  0840               	movf	_GP2REG,w	;volatile
 16397  11AF  1D03               	btfss	3,2
 16398  11B0  29B4               	goto	i1l1298
 16399                           
 16400                           ;GPports.c: 363: LATCbits.LATC6 = 0;
 16401  11B1  0022               	movlb	2	; select bank2
 16402  11B2  130E               	bcf	14,6	;volatile
 16403                           
 16404                           ;GPports.c: 364: } else {
 16405  11B3  0008               	return
 16406  11B4                     i1l1298:	
 16407                           
 16408                           ;GPports.c: 366: LATCbits.LATC6 = 1;
 16409  11B4  0022               	movlb	2	; select bank2
 16410  11B5  170E               	bsf	14,6	;volatile
 16411                           
 16412                           ;GPports.c: 367: GP2REG = 1;
 16413  11B6  3001               	movlw	1
 16414  11B7  0020               	movlb	0	; select bank0
 16415  11B8  00C0               	movwf	_GP2REG	;volatile
 16416  11B9  0008               	return
 16417  11BA                     __end_of_UpdateOut_GP2:	
 16418                           
 16419                           	psect	text56
 16420  1198                     __ptext56:	
 16421 ;; *************** function i1_I2C1_Initialize *****************
 16422 ;; Defined at:
 16423 ;;		line 75 in file "mcc_generated_files/i2c1.c"
 16424 ;; Parameters:    Size  Location     Type
 16425 ;;		None
 16426 ;; Auto vars:     Size  Location     Type
 16427 ;;		None
 16428 ;; Return value:  Size  Location     Type
 16429 ;;                  1    wreg      void 
 16430 ;; Registers used:
 16431 ;;		wreg, status,2
 16432 ;; Tracked objects:
 16433 ;;		On entry : 1F/1
 16434 ;;		On exit  : 1F/1
 16435 ;;		Unchanged: 0/0
 16436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16441 ;;Total ram usage:        0 bytes
 16442 ;; Hardware stack levels used:    1
 16443 ;; This function calls:
 16444 ;;		Nothing
 16445 ;; This function is called by:
 16446 ;;		_SecondConfig
 16447 ;; This function uses a non-reentrant model
 16448 ;;
 16449                           
 16450                           
 16451                           ;psect for function i1_I2C1_Initialize
 16452  1198                     i1_I2C1_Initialize:	
 16453                           
 16454                           ;i2c1.c: 78: SSP1STAT = 0x00;
 16455                           
 16456                           ;incstack = 0
 16457                           ; Regs used in i1_I2C1_Initialize: [wreg+status,2]
 16458  1198  0024               	movlb	4	; select bank4
 16459  1199  0194               	clrf	20	;volatile
 16460                           
 16461                           ;i2c1.c: 80: SSP1CON1 = 0x26;
 16462  119A  3026               	movlw	38
 16463  119B  0095               	movwf	21	;volatile
 16464                           
 16465                           ;i2c1.c: 82: SSP1CON2 = 0x00;
 16466  119C  0196               	clrf	22	;volatile
 16467                           
 16468                           ;i2c1.c: 84: SSP1CON3 = 0x00;
 16469  119D  0197               	clrf	23	;volatile
 16470                           
 16471                           ;i2c1.c: 86: SSP1MSK = (0x7F << 1);
 16472  119E  30FE               	movlw	254
 16473  119F  0093               	movwf	19	;volatile
 16474                           
 16475                           ;i2c1.c: 88: SSP1ADD = i2c_address;
 16476  11A0  0020               	movlb	0	; select bank0
 16477  11A1  084A               	movf	_i2c_address,w	;volatile
 16478  11A2  0024               	movlb	4	; select bank4
 16479  11A3  0092               	movwf	18	;volatile
 16480                           
 16481                           ;i2c1.c: 91: PIR1bits.SSP1IF = 0;
 16482  11A4  0020               	movlb	0	; select bank0
 16483  11A5  1191               	bcf	17,3	;volatile
 16484                           
 16485                           ;i2c1.c: 93: PIE1bits.SSP1IE = 1;
 16486  11A6  0021               	movlb	1	; select bank1
 16487  11A7  1591               	bsf	17,3	;volatile
 16488  11A8  0008               	return
 16489  11A9                     __end_ofi1_I2C1_Initialize:	
 16490                           
 16491                           	psect	text57
 16492  11BA                     __ptext57:	
 16493 ;; *************** function _I2C1_Initialize_ClockStreach *****************
 16494 ;; Defined at:
 16495 ;;		line 97 in file "mcc_generated_files/i2c1.c"
 16496 ;; Parameters:    Size  Location     Type
 16497 ;;		None
 16498 ;; Auto vars:     Size  Location     Type
 16499 ;;		None
 16500 ;; Return value:  Size  Location     Type
 16501 ;;                  1    wreg      void 
 16502 ;; Registers used:
 16503 ;;		wreg, status,2
 16504 ;; Tracked objects:
 16505 ;;		On entry : 1F/1
 16506 ;;		On exit  : 1F/1
 16507 ;;		Unchanged: 0/0
 16508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16513 ;;Total ram usage:        0 bytes
 16514 ;; Hardware stack levels used:    1
 16515 ;; This function calls:
 16516 ;;		Nothing
 16517 ;; This function is called by:
 16518 ;;		_SecondConfig
 16519 ;; This function uses a non-reentrant model
 16520 ;;
 16521                           
 16522                           
 16523                           ;psect for function _I2C1_Initialize_ClockStreach
 16524  11BA                     _I2C1_Initialize_ClockStreach:	
 16525  11BA                     i1l4853:	
 16526                           ;incstack = 0
 16527                           ; Regs used in _I2C1_Initialize_ClockStreach: [wreg+status,2]
 16528                           
 16529                           
 16530                           ;i2c1.c: 100: SSP1CON1 = 0x00;
 16531  11BA  0024               	movlb	4	; select bank4
 16532  11BB  0195               	clrf	21	;volatile
 16533                           
 16534                           ;i2c1.c: 101: SSP1CON2 = 0x00;
 16535  11BC  0196               	clrf	22	;volatile
 16536                           
 16537                           ;i2c1.c: 103: SSP1STAT = 0x00;
 16538  11BD  0194               	clrf	20	;volatile
 16539                           
 16540                           ;i2c1.c: 105: SSP1CON1 = 0x26;
 16541  11BE  3026               	movlw	38
 16542  11BF  0095               	movwf	21	;volatile
 16543                           
 16544                           ;i2c1.c: 107: SSP1CON2 = 0x01;
 16545  11C0  3001               	movlw	1
 16546  11C1  0096               	movwf	22	;volatile
 16547                           
 16548                           ;i2c1.c: 109: SSP1CON3 = 0x00;
 16549  11C2  0197               	clrf	23	;volatile
 16550                           
 16551                           ;i2c1.c: 111: SSP1MSK = (0x7F << 1);
 16552  11C3  30FE               	movlw	254
 16553  11C4  0093               	movwf	19	;volatile
 16554                           
 16555                           ;i2c1.c: 113: SSP1ADD = i2c_address;
 16556  11C5  0020               	movlb	0	; select bank0
 16557  11C6  084A               	movf	_i2c_address,w	;volatile
 16558  11C7  0024               	movlb	4	; select bank4
 16559  11C8  0092               	movwf	18	;volatile
 16560                           
 16561                           ;i2c1.c: 116: PIR1bits.SSP1IF = 0;
 16562  11C9  0020               	movlb	0	; select bank0
 16563  11CA  1191               	bcf	17,3	;volatile
 16564                           
 16565                           ;i2c1.c: 118: PIE1bits.SSP1IE = 1;
 16566  11CB  0021               	movlb	1	; select bank1
 16567  11CC  1591               	bsf	17,3	;volatile
 16568  11CD  0008               	return
 16569  11CE                     __end_of_I2C1_Initialize_ClockStreach:	
 16570                           
 16571                           	psect	text58
 16572  0CBE                     __ptext58:	
 16573 ;; *************** function _FirstDataSplit *****************
 16574 ;; Defined at:
 16575 ;;		line 111 in file "DataVariable.c"
 16576 ;; Parameters:    Size  Location     Type
 16577 ;;		None
 16578 ;; Auto vars:     Size  Location     Type
 16579 ;;		None
 16580 ;; Return value:  Size  Location     Type
 16581 ;;                  1    wreg      void 
 16582 ;; Registers used:
 16583 ;;		wreg, status,2, status,0
 16584 ;; Tracked objects:
 16585 ;;		On entry : 1F/0
 16586 ;;		On exit  : 1F/1
 16587 ;;		Unchanged: 0/0
 16588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16591 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16592 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16593 ;;Total ram usage:        1 bytes
 16594 ;; Hardware stack levels used:    1
 16595 ;; This function calls:
 16596 ;;		Nothing
 16597 ;; This function is called by:
 16598 ;;		_RegisterWrite
 16599 ;; This function uses a non-reentrant model
 16600 ;;
 16601                           
 16602                           
 16603                           ;psect for function _FirstDataSplit
 16604  0CBE                     _FirstDataSplit:	
 16605                           
 16606                           ;DataVariable.c: 113: C_DTYPE = GCONF & 0x01U;
 16607                           
 16608                           ;incstack = 0
 16609                           ; Regs used in _FirstDataSplit: [wreg+status,2+status,0]
 16610  0CBE  0848               	movf	_GCONF,w	;volatile
 16611  0CBF  0021               	movlb	1	; select bank1
 16612  0CC0  00BD               	movwf	_C_DTYPE^(0+128)	;volatile
 16613  0CC1  3001               	movlw	1
 16614  0CC2  05BD               	andwf	_C_DTYPE^(0+128),f	;volatile
 16615                           
 16616                           ;DataVariable.c: 114: C_WRAPE = (bool) (GCONF >> 1) & 0x01U;
 16617  0CC3  0020               	movlb	0	; select bank0
 16618  0CC4  3648               	lsrf	_GCONF,w	;volatile
 16619  0CC5  00B7               	movwf	_C_WRAPE	;volatile
 16620  0CC6  3001               	movlw	1
 16621  0CC7  05B7               	andwf	_C_WRAPE,f	;volatile
 16622                           
 16623                           ;DataVariable.c: 115: C_DIRE = (bool) (GCONF >> 2) & 0x01U;
 16624  0CC8  0848               	movf	_GCONF,w	;volatile
 16625  0CC9  00F0               	movwf	??_FirstDataSplit
 16626  0CCA  36F0               	lsrf	??_FirstDataSplit,f
 16627  0CCB  36F0               	lsrf	??_FirstDataSplit,f
 16628  0CCC  0870               	movf	??_FirstDataSplit,w
 16629  0CCD  0021               	movlb	1	; select bank1
 16630  0CCE  00BE               	movwf	_C_DIRE^(0+128)	;volatile
 16631  0CCF  3001               	movlw	1
 16632  0CD0  05BE               	andwf	_C_DIRE^(0+128),f	;volatile
 16633                           
 16634                           ;DataVariable.c: 116: C_IPUD = (bool) (GCONF >> 3) & 0x01U;
 16635  0CD1  0020               	movlb	0	; select bank0
 16636  0CD2  0848               	movf	_GCONF,w	;volatile
 16637  0CD3  00F0               	movwf	??_FirstDataSplit
 16638  0CD4  36F0               	lsrf	??_FirstDataSplit,f
 16639  0CD5  36F0               	lsrf	??_FirstDataSplit,f
 16640  0CD6  36F0               	lsrf	??_FirstDataSplit,f
 16641  0CD7  0870               	movf	??_FirstDataSplit,w
 16642  0CD8  0021               	movlb	1	; select bank1
 16643  0CD9  00BF               	movwf	_C_IPUD^(0+128)	;volatile
 16644  0CDA  3001               	movlw	1
 16645  0CDB  05BF               	andwf	_C_IPUD^(0+128),f	;volatile
 16646                           
 16647                           ;DataVariable.c: 117: C_RMOD = (bool) (GCONF >> 4) & 0x01U;
 16648  0CDC  0020               	movlb	0	; select bank0
 16649  0CDD  0E48               	swapf	_GCONF,w	;volatile
 16650  0CDE  390F               	andlw	15
 16651  0CDF  00CB               	movwf	_C_RMOD	;volatile
 16652  0CE0  3001               	movlw	1
 16653  0CE1  05CB               	andwf	_C_RMOD,f	;volatile
 16654                           
 16655                           ;DataVariable.c: 118: C_ETYPE = (bool) (GCONF >> 5) & 0x01U;
 16656  0CE2  0848               	movf	_GCONF,w	;volatile
 16657  0CE3  00F0               	movwf	??_FirstDataSplit
 16658  0CE4  3005               	movlw	5
 16659  0CE5                     u254_25:	
 16660  0CE5  36F0               	lsrf	??_FirstDataSplit,f
 16661  0CE6  0B89               	decfsz	9,f
 16662  0CE7  2CE5               	goto	u254_25
 16663  0CE8  0870               	movf	??_FirstDataSplit,w
 16664  0CE9  00B8               	movwf	_C_ETYPE	;volatile
 16665  0CEA  3001               	movlw	1
 16666  0CEB  05B8               	andwf	_C_ETYPE,f	;volatile
 16667                           
 16668                           ;DataVariable.c: 119: C_MBANK = (bool) (GCONF >> 6) & 0x01U;
 16669  0CEC  0848               	movf	_GCONF,w	;volatile
 16670  0CED  00F0               	movwf	??_FirstDataSplit
 16671  0CEE  3006               	movlw	6
 16672  0CEF                     u255_25:	
 16673  0CEF  36F0               	lsrf	??_FirstDataSplit,f
 16674  0CF0  0B89               	decfsz	9,f
 16675  0CF1  2CEF               	goto	u255_25
 16676  0CF2  0870               	movf	??_FirstDataSplit,w
 16677  0CF3  0021               	movlb	1	; select bank1
 16678  0CF4  00C0               	movwf	_C_MBANK^(0+128)	;volatile
 16679  0CF5  3001               	movlw	1
 16680  0CF6  05C0               	andwf	_C_MBANK^(0+128),f	;volatile
 16681                           
 16682                           ;DataVariable.c: 120: C_RESET = (bool) (GCONF >> 7) & 0x01U;
 16683  0CF7  0020               	movlb	0	; select bank0
 16684  0CF8  0848               	movf	_GCONF,w	;volatile
 16685  0CF9  00F0               	movwf	??_FirstDataSplit
 16686  0CFA  3007               	movlw	7
 16687  0CFB                     u256_25:	
 16688  0CFB  36F0               	lsrf	??_FirstDataSplit,f
 16689  0CFC  0B89               	decfsz	9,f
 16690  0CFD  2CFB               	goto	u256_25
 16691  0CFE  0870               	movf	??_FirstDataSplit,w
 16692  0CFF  0021               	movlb	1	; select bank1
 16693  0D00  00C1               	movwf	_C_RESET^(0+128)	;volatile
 16694  0D01  3001               	movlw	1
 16695  0D02  05C1               	andwf	_C_RESET^(0+128),f	;volatile
 16696  0D03  0008               	return
 16697  0D04                     __end_of_FirstDataSplit:	
 16698                           
 16699                           	psect	text59
 16700  1221                     __ptext59:	
 16701 ;; *************** function _FirstConfig *****************
 16702 ;; Defined at:
 16703 ;;		line 515 in file "i2c_register.c"
 16704 ;; Parameters:    Size  Location     Type
 16705 ;;		None
 16706 ;; Auto vars:     Size  Location     Type
 16707 ;;		None
 16708 ;; Return value:  Size  Location     Type
 16709 ;;                  1    wreg      void 
 16710 ;; Registers used:
 16711 ;;		wreg, status,2, status,0, pclath, cstack
 16712 ;; Tracked objects:
 16713 ;;		On entry : 1F/1
 16714 ;;		On exit  : 0/0
 16715 ;;		Unchanged: 0/0
 16716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16721 ;;Total ram usage:        0 bytes
 16722 ;; Hardware stack levels used:    1
 16723 ;; Hardware stack levels required when called:    2
 16724 ;; This function calls:
 16725 ;;		_RGB_EncoderMode
 16726 ;;		_STD_EncoderMode
 16727 ;; This function is called by:
 16728 ;;		_RegisterWrite
 16729 ;; This function uses a non-reentrant model
 16730 ;;
 16731                           
 16732                           
 16733                           ;psect for function _FirstConfig
 16734  1221                     _FirstConfig:	
 16735                           
 16736                           ;i2c_register.c: 517: if (C_ETYPE == 1) {
 16737                           
 16738                           ;incstack = 0
 16739                           ; Regs used in _FirstConfig: [wreg+status,2+status,0+pclath+cstack]
 16740  1221  0020               	movlb	0	; select bank0
 16741  1222  0338               	decf	_C_ETYPE,w	;volatile
 16742  1223  1D03               	btfss	3,2
 16743  1224  2A28               	goto	i1l5111
 16744                           
 16745                           ;i2c_register.c: 518: RGB_EncoderMode();
 16746  1225  228C  3192         	fcall	_RGB_EncoderMode
 16747                           
 16748                           ;i2c_register.c: 519: } else {
 16749  1227  2A2A               	goto	i1l5113
 16750  1228                     i1l5111:	
 16751                           
 16752                           ;i2c_register.c: 520: STD_EncoderMode();
 16753  1228  22C5  3192         	fcall	_STD_EncoderMode
 16754  122A                     i1l5113:	
 16755                           
 16756                           ;i2c_register.c: 521: };i2c_register.c: 524: if (C_DIRE == 1) {
 16757  122A  0021               	movlb	1	; select bank1
 16758  122B  0B3E               	decfsz	_C_DIRE^(0+128),w	;volatile
 16759  122C  2A41               	goto	i1l5125
 16760                           
 16761                           ;i2c_register.c: 525: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16762  122D  3055               	movlw	85
 16763  122E  003C               	movlb	28	; select bank28
 16764  122F  008F               	movwf	15	;volsfr
 16765  1230  30AA               	movlw	170
 16766  1231  008F               	movwf	15	;volsfr
 16767  1232  100F               	bcf	15,0	;volsfr
 16768                           
 16769                           ;i2c_register.c: 526: CLCIN1PPSbits.CLCIN1PPS = 0x11;
 16770  1233  0829               	movf	41,w	;volatile
 16771  1234  39E0               	andlw	-32
 16772  1235  3811               	iorlw	17
 16773  1236  00A9               	movwf	41	;volatile
 16774                           
 16775                           ;i2c_register.c: 527: CLCIN0PPSbits.CLCIN0PPS = 0x10;
 16776  1237  0828               	movf	40,w	;volatile
 16777  1238  39E0               	andlw	-32
 16778  1239  3810               	iorlw	16
 16779  123A  00A8               	movwf	40	;volatile
 16780                           
 16781                           ;i2c_register.c: 528: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16782  123B  3055               	movlw	85
 16783  123C  008F               	movwf	15	;volsfr
 16784  123D  30AA               	movlw	170
 16785  123E  008F               	movwf	15	;volsfr
 16786  123F  140F               	bsf	15,0	;volsfr
 16787                           
 16788                           ;i2c_register.c: 529: } else {
 16789  1240  2A54               	goto	i1l5135
 16790  1241                     i1l5125:	
 16791                           
 16792                           ;i2c_register.c: 530: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 16793  1241  3055               	movlw	85
 16794  1242  003C               	movlb	28	; select bank28
 16795  1243  008F               	movwf	15	;volsfr
 16796  1244  30AA               	movlw	170
 16797  1245  008F               	movwf	15	;volsfr
 16798  1246  100F               	bcf	15,0	;volsfr
 16799                           
 16800                           ;i2c_register.c: 531: CLCIN1PPSbits.CLCIN1PPS = 0x10;
 16801  1247  0829               	movf	41,w	;volatile
 16802  1248  39E0               	andlw	-32
 16803  1249  3810               	iorlw	16
 16804  124A  00A9               	movwf	41	;volatile
 16805                           
 16806                           ;i2c_register.c: 532: CLCIN0PPSbits.CLCIN0PPS = 0x11;
 16807  124B  0828               	movf	40,w	;volatile
 16808  124C  39E0               	andlw	-32
 16809  124D  3811               	iorlw	17
 16810  124E  00A8               	movwf	40	;volatile
 16811                           
 16812                           ;i2c_register.c: 533: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 16813  124F  3055               	movlw	85
 16814  1250  008F               	movwf	15	;volsfr
 16815  1251  30AA               	movlw	170
 16816  1252  008F               	movwf	15	;volsfr
 16817  1253  140F               	bsf	15,0	;volsfr
 16818  1254                     i1l5135:	
 16819                           
 16820                           ;i2c_register.c: 534: };i2c_register.c: 536: if (C_IPUD == 1) {
 16821  1254  0021               	movlb	1	; select bank1
 16822  1255  0B3F               	decfsz	_C_IPUD^(0+128),w	;volatile
 16823  1256  2A5A               	goto	i1l979
 16824                           
 16825                           ;i2c_register.c: 537: do { WPUBbits.WPUB5 = 0; } while(0);
 16826  1257  0024               	movlb	4	; select bank4
 16827  1258  128D               	bcf	13,5	;volatile
 16828  1259  2A5C               	goto	i1l981
 16829  125A                     i1l979:	
 16830                           ;i2c_register.c: 540: do { WPUBbits.WPUB5 = 1; } while(0);
 16831                           
 16832                           ;i2c_register.c: 538: do { LATBbits.LATB5 = 1; } while(0);
 16833                           
 16834  125A  0024               	movlb	4	; select bank4
 16835  125B  168D               	bsf	13,5	;volatile
 16836  125C                     i1l981:	
 16837                           ;i2c_register.c: 541: do { LATBbits.LATB5 = 1; } while(0);
 16838                           
 16839  125C  0022               	movlb	2	; select bank2
 16840  125D  168D               	bsf	13,5	;volatile
 16841                           
 16842                           ;i2c_register.c: 543: };i2c_register.c: 545: if (C_RMOD == 1) {
 16843  125E  0020               	movlb	0	; select bank0
 16844  125F  0B4B               	decfsz	_C_RMOD,w	;volatile
 16845  1260  2A66               	goto	i1l983
 16846                           
 16847                           ;i2c_register.c: 546: PIR3bits.CLC1IF = 0;
 16848  1261  1013               	bcf	19,0	;volatile
 16849                           
 16850                           ;i2c_register.c: 547: PIE3bits.CLC1IE = 0;
 16851  1262  0021               	movlb	1	; select bank1
 16852  1263  1013               	bcf	19,0	;volatile
 16853                           
 16854                           ;i2c_register.c: 548: CLC1CON = 0x9D;
 16855  1264  309D               	movlw	157
 16856  1265  2A6A               	goto	L10
 16857  1266                     i1l983:	
 16858                           ;i2c_register.c: 556: } else {
 16859                           
 16860                           ;i2c_register.c: 554: PIE3bits.CLC2IE = 1;
 16861                           
 16862                           ;i2c_register.c: 553: CLC2CON = 0x9D;
 16863                           
 16864                           ;i2c_register.c: 552: PIE3bits.CLC2IE = 0;
 16865                           
 16866                           ;i2c_register.c: 551: PIR3bits.CLC2IF = 0;
 16867                           
 16868                           ;i2c_register.c: 549: PIE3bits.CLC1IE = 1;
 16869                           
 16870                           
 16871                           ;i2c_register.c: 557: PIR3bits.CLC1IF = 0;
 16872  1266  1013               	bcf	19,0	;volatile
 16873                           
 16874                           ;i2c_register.c: 558: PIE3bits.CLC1IE = 0;
 16875  1267  0021               	movlb	1	; select bank1
 16876  1268  1013               	bcf	19,0	;volatile
 16877                           
 16878                           ;i2c_register.c: 559: CLC1CON = 0x95;
 16879  1269  3095               	movlw	149
 16880  126A                     L10:	
 16881  126A  003E               	movlb	30	; select bank30
 16882  126B  0090               	movwf	16	;volatile
 16883                           
 16884                           ;i2c_register.c: 560: PIE3bits.CLC1IE = 1;
 16885  126C  0021               	movlb	1	; select bank1
 16886  126D  1413               	bsf	19,0	;volatile
 16887                           
 16888                           ;i2c_register.c: 562: PIR3bits.CLC2IF = 0;
 16889  126E  0020               	movlb	0	; select bank0
 16890  126F  1093               	bcf	19,1	;volatile
 16891                           
 16892                           ;i2c_register.c: 563: PIE3bits.CLC2IE = 0;
 16893  1270  0021               	movlb	1	; select bank1
 16894  1271  1093               	bcf	19,1	;volatile
 16895                           
 16896                           ;i2c_register.c: 564: CLC2CON = 0x95;
 16897  1272  003E               	movlb	30	; select bank30
 16898  1273  009A               	movwf	26	;volatile
 16899                           
 16900                           ;i2c_register.c: 565: PIE3bits.CLC2IE = 1;
 16901  1274  0021               	movlb	1	; select bank1
 16902  1275  1493               	bsf	19,1	;volatile
 16903                           
 16904                           ;i2c_register.c: 566: };i2c_register.c: 569: if (C_DTYPE == 0) {
 16905  1276  083D               	movf	_C_DTYPE^(0+128),w	;volatile
 16906  1277  1D03               	btfss	3,2
 16907  1278  2A80               	goto	i1l5165
 16908                           
 16909                           ;i2c_register.c: 570: ISTEP.val = 1;
 16910  1279  3001               	movlw	1
 16911  127A  0020               	movlb	0	; select bank0
 16912  127B  00A0               	movwf	_ISTEP	;volatile
 16913  127C  01A1               	clrf	_ISTEP+1	;volatile
 16914  127D  01A2               	clrf	_ISTEP+2	;volatile
 16915  127E  01A3               	clrf	_ISTEP+3	;volatile
 16916                           
 16917                           ;i2c_register.c: 571: } else {
 16918  127F  2A87               	goto	i1l5167
 16919  1280                     i1l5165:	
 16920                           
 16921                           ;i2c_register.c: 572: ISTEP.fval = 1.0;
 16922  1280  303F               	movlw	63
 16923  1281  0020               	movlb	0	; select bank0
 16924  1282  00A3               	movwf	_ISTEP+3	;volatile
 16925  1283  3080               	movlw	128
 16926  1284  00A2               	movwf	_ISTEP+2	;volatile
 16927  1285  01A1               	clrf	_ISTEP+1	;volatile
 16928  1286  01A0               	clrf	_ISTEP	;volatile
 16929  1287                     i1l5167:	
 16930                           
 16931                           ;i2c_register.c: 573: };i2c_register.c: 575: if (C_RESET == 1) {
 16932  1287  0021               	movlb	1	; select bank1
 16933  1288  0B41               	decfsz	_C_RESET^(0+128),w	;volatile
 16934  1289  0008               	return
 16935  128A  0001               	reset	;# 
 16936  128B  0008               	return
 16937  128C                     __end_of_FirstConfig:	
 16938  128C                     __ptext61:	
 16939 ;; *************** function _RGB_EncoderMode *****************
 16940 ;; Defined at:
 16941 ;;		line 138 in file "GPports.c"
 16942 ;; Parameters:    Size  Location     Type
 16943 ;;		None
 16944 ;; Auto vars:     Size  Location     Type
 16945 ;;		None
 16946 ;; Return value:  Size  Location     Type
 16947 ;;                  1    wreg      void 
 16948 ;; Registers used:
 16949 ;;		wreg, status,2, status,0, pclath, cstack
 16950 ;; Tracked objects:
 16951 ;;		On entry : 1F/0
 16952 ;;		On exit  : 1F/5
 16953 ;;		Unchanged: 0/0
 16954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16959 ;;Total ram usage:        0 bytes
 16960 ;; Hardware stack levels used:    1
 16961 ;; Hardware stack levels required when called:    1
 16962 ;; This function calls:
 16963 ;;		_PWM1_Initialize
 16964 ;;		_PWM2_Initialize
 16965 ;;		_PWM3_Initialize
 16966 ;; This function is called by:
 16967 ;;		_FirstConfig
 16968 ;; This function uses a non-reentrant model
 16969 ;;
 16970                           
 16971                           
 16972                           ;psect for function _RGB_EncoderMode
 16973  128C                     _RGB_EncoderMode:	
 16974                           
 16975                           ;incstack = 0
 16976                           ; Regs used in _RGB_EncoderMode: [wreg+status,2+status,0+pclath+cstack]
 16977                           ;GPports.c: 140: do { ANSELCbits.ANSC3 = 0; } while(0);
 16978  128C  0023               	movlb	3	; select bank3
 16979  128D  118E               	bcf	14,3	;volatile
 16980                           
 16981                           ;GPports.c: 141: do { ODCONCbits.ODCC3 = 0; } while(0);
 16982  128E  0025               	movlb	5	; select bank5
 16983  128F  118E               	bcf	14,3	;volatile
 16984                           
 16985                           ;GPports.c: 142: do { WPUCbits.WPUC3 = 0; } while(0);
 16986  1290  0024               	movlb	4	; select bank4
 16987  1291  118E               	bcf	14,3	;volatile
 16988                           
 16989                           ;GPports.c: 143: do { TRISCbits.TRISC3 = 0; } while(0);
 16990  1292  0021               	movlb	1	; select bank1
 16991  1293  118E               	bcf	14,3	;volatile
 16992                           
 16993                           ;GPports.c: 145: do { ANSELCbits.ANSC4 = 0; } while(0);
 16994  1294  0023               	movlb	3	; select bank3
 16995  1295  120E               	bcf	14,4	;volatile
 16996                           
 16997                           ;GPports.c: 146: do { ODCONCbits.ODCC4 = 0; } while(0);
 16998  1296  0025               	movlb	5	; select bank5
 16999  1297  120E               	bcf	14,4	;volatile
 17000                           
 17001                           ;GPports.c: 147: do { WPUCbits.WPUC4 = 0; } while(0);
 17002  1298  0024               	movlb	4	; select bank4
 17003  1299  120E               	bcf	14,4	;volatile
 17004                           
 17005                           ;GPports.c: 148: do { TRISCbits.TRISC4 = 0; } while(0);
 17006  129A  0021               	movlb	1	; select bank1
 17007  129B  120E               	bcf	14,4	;volatile
 17008                           
 17009                           ;GPports.c: 150: do { ANSELCbits.ANSC5 = 0; } while(0);
 17010  129C  0023               	movlb	3	; select bank3
 17011  129D  128E               	bcf	14,5	;volatile
 17012                           
 17013                           ;GPports.c: 151: do { ODCONCbits.ODCC5 = 0; } while(0);
 17014  129E  0025               	movlb	5	; select bank5
 17015  129F  128E               	bcf	14,5	;volatile
 17016                           
 17017                           ;GPports.c: 152: do { TRISCbits.TRISC5 = 0; } while(0);
 17018  12A0  0021               	movlb	1	; select bank1
 17019  12A1  128E               	bcf	14,5	;volatile
 17020                           
 17021                           ;GPports.c: 154: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 17022  12A2  3055               	movlw	85
 17023  12A3  003C               	movlb	28	; select bank28
 17024  12A4  008F               	movwf	15	;volsfr
 17025  12A5  30AA               	movlw	170
 17026  12A6  008F               	movwf	15	;volsfr
 17027  12A7  100F               	bcf	15,0	;volsfr
 17028                           
 17029                           ;GPports.c: 155: RC5PPSbits.RC5PPS = 0x0C;
 17030  12A8  003D               	movlb	29	; select bank29
 17031  12A9  0825               	movf	37,w	;volatile
 17032  12AA  39E0               	andlw	-32
 17033  12AB  380C               	iorlw	12
 17034  12AC  00A5               	movwf	37	;volatile
 17035                           
 17036                           ;GPports.c: 156: RC4PPSbits.RC4PPS = 0x0D;
 17037  12AD  0824               	movf	36,w	;volatile
 17038  12AE  39E0               	andlw	-32
 17039  12AF  380D               	iorlw	13
 17040  12B0  00A4               	movwf	36	;volatile
 17041                           
 17042                           ;GPports.c: 157: RC3PPSbits.RC3PPS = 0x0E;
 17043  12B1  0823               	movf	35,w	;volatile
 17044  12B2  39E0               	andlw	-32
 17045  12B3  380E               	iorlw	14
 17046  12B4  00A3               	movwf	35	;volatile
 17047                           
 17048                           ;GPports.c: 158: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 17049  12B5  3055               	movlw	85
 17050  12B6  003C               	movlb	28	; select bank28
 17051  12B7  008F               	movwf	15	;volsfr
 17052  12B8  30AA               	movlw	170
 17053  12B9  008F               	movwf	15	;volsfr
 17054  12BA  140F               	bsf	15,0	;volsfr
 17055  12BB  0023               	movlb	3	; select bank3
 17056  12BC  110E               	bcf	14,2	;volatile
 17057  12BD  0021               	movlb	1	; select bank1
 17058  12BE  150E               	bsf	14,2	;volatile
 17059                           
 17060                           ;GPports.c: 163: PWM1_Initialize();
 17061  12BF  3197  2766  3192   	fcall	_PWM1_Initialize
 17062                           
 17063                           ;GPports.c: 164: PWM2_Initialize();
 17064  12C2  22DC  3192         	fcall	_PWM2_Initialize
 17065                           
 17066                           ;GPports.c: 165: PWM3_Initialize();
 17067  12C4  2AE7               	ljmp	i1l4825
 17068  12C5                     __end_of_RGB_EncoderMode:	
 17069  12C5                     __ptext60:	
 17070 ;; *************** function _STD_EncoderMode *****************
 17071 ;; Defined at:
 17072 ;;		line 171 in file "GPports.c"
 17073 ;; Parameters:    Size  Location     Type
 17074 ;;		None
 17075 ;; Auto vars:     Size  Location     Type
 17076 ;;		None
 17077 ;; Return value:  Size  Location     Type
 17078 ;;                  1    wreg      void 
 17079 ;; Registers used:
 17080 ;;		status,2
 17081 ;; Tracked objects:
 17082 ;;		On entry : 1F/0
 17083 ;;		On exit  : 1F/1
 17084 ;;		Unchanged: 0/0
 17085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17090 ;;Total ram usage:        0 bytes
 17091 ;; Hardware stack levels used:    1
 17092 ;; This function calls:
 17093 ;;		Nothing
 17094 ;; This function is called by:
 17095 ;;		_FirstConfig
 17096 ;; This function uses a non-reentrant model
 17097 ;;
 17098                           
 17099                           
 17100                           ;psect for function _STD_EncoderMode
 17101  12C5                     _STD_EncoderMode:	
 17102                           
 17103                           ;incstack = 0
 17104                           ; Regs used in _STD_EncoderMode: [status,2]
 17105                           ;GPports.c: 173: do { ANSELCbits.ANSC4 = 0; } while(0);
 17106  12C5  0023               	movlb	3	; select bank3
 17107  12C6  120E               	bcf	14,4	;volatile
 17108                           
 17109                           ;GPports.c: 174: do { WPUCbits.WPUC4 = 1; } while(0);
 17110  12C7  0024               	movlb	4	; select bank4
 17111  12C8  160E               	bsf	14,4	;volatile
 17112                           
 17113                           ;GPports.c: 175: do { TRISCbits.TRISC4 = 1; } while(0);
 17114  12C9  0021               	movlb	1	; select bank1
 17115  12CA  160E               	bsf	14,4	;volatile
 17116                           
 17117                           ;GPports.c: 177: do { ANSELCbits.ANSC3 = 0; } while(0);
 17118  12CB  0023               	movlb	3	; select bank3
 17119  12CC  118E               	bcf	14,3	;volatile
 17120                           
 17121                           ;GPports.c: 178: do { ODCONCbits.ODCC3 = 0; } while(0);
 17122  12CD  0025               	movlb	5	; select bank5
 17123  12CE  118E               	bcf	14,3	;volatile
 17124                           
 17125                           ;GPports.c: 179: do { TRISCbits.TRISC3 = 0; } while(0);
 17126  12CF  0021               	movlb	1	; select bank1
 17127  12D0  118E               	bcf	14,3	;volatile
 17128                           
 17129                           ;GPports.c: 180: do { LATCbits.LATC3 = 0; } while(0);
 17130  12D1  0022               	movlb	2	; select bank2
 17131  12D2  118E               	bcf	14,3	;volatile
 17132                           
 17133                           ;GPports.c: 182: CCP2CON = 0x00;
 17134  12D3  0025               	movlb	5	; select bank5
 17135  12D4  0197               	clrf	23	;volatile
 17136                           
 17137                           ;GPports.c: 183: CCP3CON = 0x00;
 17138  12D5  0026               	movlb	6	; select bank6
 17139  12D6  0193               	clrf	19	;volatile
 17140  12D7  0023               	movlb	3	; select bank3
 17141  12D8  110E               	bcf	14,2	;volatile
 17142  12D9  0021               	movlb	1	; select bank1
 17143  12DA  150E               	bsf	14,2	;volatile
 17144  12DB  0008               	return
 17145  12DC                     __end_of_STD_EncoderMode:	
 17146  12DC                     __ptext63:	
 17147 ;; *************** function _PWM2_Initialize *****************
 17148 ;; Defined at:
 17149 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 17150 ;; Parameters:    Size  Location     Type
 17151 ;;		None
 17152 ;; Auto vars:     Size  Location     Type
 17153 ;;		None
 17154 ;; Return value:  Size  Location     Type
 17155 ;;                  1    wreg      void 
 17156 ;; Registers used:
 17157 ;;		wreg, status,2, status,0
 17158 ;; Tracked objects:
 17159 ;;		On entry : 1F/5
 17160 ;;		On exit  : 1F/5
 17161 ;;		Unchanged: 0/0
 17162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17167 ;;Total ram usage:        0 bytes
 17168 ;; Hardware stack levels used:    1
 17169 ;; This function calls:
 17170 ;;		Nothing
 17171 ;; This function is called by:
 17172 ;;		_RGB_EncoderMode
 17173 ;; This function uses a non-reentrant model
 17174 ;;
 17175                           
 17176                           
 17177                           ;psect for function _PWM2_Initialize
 17178  12DC                     _PWM2_Initialize:	
 17179                           
 17180                           ;pwm2.c: 69: CCP2CON = 0x8F;
 17181                           
 17182                           ;incstack = 0
 17183                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0]
 17184  12DC  308F               	movlw	143
 17185  12DD  0097               	movwf	23	;volatile
 17186                           
 17187                           ;pwm2.c: 72: CCPR2H = 0x03;
 17188  12DE  3003               	movlw	3
 17189  12DF  0096               	movwf	22	;volatile
 17190                           
 17191                           ;pwm2.c: 75: CCPR2L = 0xFF;
 17192  12E0  30FF               	movlw	255
 17193  12E1  0095               	movwf	21	;volatile
 17194                           
 17195                           ;pwm2.c: 78: CCPTMRSbits.C2TSEL = 0x1;
 17196  12E2  081F               	movf	31,w	;volatile
 17197  12E3  39F3               	andlw	-13
 17198  12E4  3804               	iorlw	4
 17199  12E5  009F               	movwf	31	;volatile
 17200  12E6  0008               	return
 17201  12E7                     __end_of_PWM2_Initialize:	
 17202  12E7                     __ptext62:	
 17203 ;; *************** function _PWM3_Initialize *****************
 17204 ;; Defined at:
 17205 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 17206 ;; Parameters:    Size  Location     Type
 17207 ;;		None
 17208 ;; Auto vars:     Size  Location     Type
 17209 ;;		None
 17210 ;; Return value:  Size  Location     Type
 17211 ;;                  1    wreg      void 
 17212 ;; Registers used:
 17213 ;;		wreg, status,2, status,0
 17214 ;; Tracked objects:
 17215 ;;		On entry : 1F/5
 17216 ;;		On exit  : 1F/5
 17217 ;;		Unchanged: 0/0
 17218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17223 ;;Total ram usage:        0 bytes
 17224 ;; Hardware stack levels used:    1
 17225 ;; This function calls:
 17226 ;;		Nothing
 17227 ;; This function is called by:
 17228 ;;		_RGB_EncoderMode
 17229 ;; This function uses a non-reentrant model
 17230 ;;
 17231                           
 17232                           
 17233                           ;psect for function _PWM3_Initialize
 17234  12E7                     _PWM3_Initialize:	
 17235  12E7                     i1l4825:	
 17236                           ;incstack = 0
 17237                           ; Regs used in _PWM3_Initialize: [wreg+status,2+status,0]
 17238                           
 17239                           
 17240                           ;pwm3.c: 69: CCP3CON = 0x8F;
 17241  12E7  308F               	movlw	143
 17242  12E8  0026               	movlb	6	; select bank6
 17243  12E9  0093               	movwf	19	;volatile
 17244                           
 17245                           ;pwm3.c: 72: CCPR3H = 0x03;
 17246  12EA  3003               	movlw	3
 17247  12EB  0092               	movwf	18	;volatile
 17248                           
 17249                           ;pwm3.c: 75: CCPR3L = 0xFF;
 17250  12EC  30FF               	movlw	255
 17251  12ED  0091               	movwf	17	;volatile
 17252                           
 17253                           ;pwm3.c: 78: CCPTMRSbits.C3TSEL = 0x1;
 17254  12EE  0025               	movlb	5	; select bank5
 17255  12EF  081F               	movf	31,w	;volatile
 17256  12F0  39CF               	andlw	-49
 17257  12F1  3810               	iorlw	16
 17258  12F2  009F               	movwf	31	;volatile
 17259  12F3  0008               	return
 17260  12F4                     __end_of_PWM3_Initialize:	
 17261                           
 17262                           	psect	swtext7
 17263  1118                     __pswtext7:	
 17264  1118                     i1S8613:	
 17265  1118  3197  2F09         	ljmp	i1l1256
 17266  111A  3197  2F26         	ljmp	i1l1264
 17267  111C  3197  2F2D         	ljmp	i1l1271
 17268  111E  3197  2F34         	ljmp	i1l1276
 17269                           
 17270                           	psect	swtext8
 17271  1120                     __pswtext8:	
 17272  1120                     i1S8619:	
 17273  1120  3196  2E24         	ljmp	i1l1219
 17274  1122  3196  2E41         	ljmp	i1l1227
 17275  1124  3196  2E48         	ljmp	i1l1234
 17276  1126  3196  2E4F         	ljmp	i1l1239
 17277                           
 17278                           	psect	swtext9
 17279  1128                     __pswtext9:	
 17280  1128                     i1S8625:	
 17281  1128  3195  2DAB         	ljmp	i1l1182
 17282  112A  3195  2DC8         	ljmp	i1l1190
 17283  112C  3195  2DCF         	ljmp	i1l1197
 17284  112E  3195  2DD6         	ljmp	i1l1202
 17285                           
 17286                           	psect	text71
 17287  1407                     __ptext71:	
 17288 ;; *************** function i1_PWM_GP1 *****************
 17289 ;; Defined at:
 17290 ;;		line 30 in file "PWM.c"
 17291 ;; Parameters:    Size  Location     Type
 17292 ;;  duty            1    wreg     unsigned char 
 17293 ;; Auto vars:     Size  Location     Type
 17294 ;;  duty            1    0[BANK0 ] unsigned char 
 17295 ;; Return value:  Size  Location     Type
 17296 ;;                  1    wreg      void 
 17297 ;; Registers used:
 17298 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17299 ;; Tracked objects:
 17300 ;;		On entry : 1F/C
 17301 ;;		On exit  : 1F/C
 17302 ;;		Unchanged: 0/0
 17303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17305 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17306 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17307 ;;      Totals:         8       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17308 ;;Total ram usage:        9 bytes
 17309 ;; Hardware stack levels used:    1
 17310 ;; Hardware stack levels required when called:    1
 17311 ;; This function calls:
 17312 ;;		i1___wmul
 17313 ;; This function is called by:
 17314 ;;		_Config_GP1
 17315 ;; This function uses a non-reentrant model
 17316 ;;
 17317                           
 17318                           
 17319                           ;psect for function i1_PWM_GP1
 17320  1407                     i1_PWM_GP1:	
 17321                           
 17322                           ;incstack = 0
 17323                           ; Regs used in i1_PWM_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17324                           ;i1PWM_GP1@duty stored from wreg
 17325  1407  0020               	movlb	0	; select bank0
 17326  1408  00CC               	movwf	i1PWM_GP1@duty
 17327                           
 17328                           ;PWM.c: 32: if (duty == 0) {
 17329  1409  084C               	movf	i1PWM_GP1@duty,w
 17330  140A  1D03               	btfss	3,2
 17331  140B  2C20               	goto	i1l4947
 17332                           
 17333                           ;PWM.c: 34: do { LATCbits.LATC7 = 1; } while(0);
 17334  140C  0022               	movlb	2	; select bank2
 17335  140D  178E               	bsf	14,7	;volatile
 17336                           
 17337                           ;PWM.c: 35: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 17338  140E  3055               	movlw	85
 17339  140F  003C               	movlb	28	; select bank28
 17340  1410  008F               	movwf	15	;volsfr
 17341  1411  30AA               	movlw	170
 17342  1412  008F               	movwf	15	;volsfr
 17343  1413  100F               	bcf	15,0	;volsfr
 17344                           
 17345                           ;PWM.c: 36: RC7PPSbits.RC7PPS = 0x00;
 17346  1414  30E0               	movlw	-32
 17347  1415  003D               	movlb	29	; select bank29
 17348  1416  05A7               	andwf	39,f	;volatile
 17349                           
 17350                           ;PWM.c: 37: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 17351  1417  3055               	movlw	85
 17352  1418  003C               	movlb	28	; select bank28
 17353  1419  008F               	movwf	15	;volsfr
 17354  141A  30AA               	movlw	170
 17355  141B  008F               	movwf	15	;volsfr
 17356  141C  140F               	bsf	15,0	;volsfr
 17357                           
 17358                           ;PWM.c: 38: PWM5CON = 0;
 17359  141D  002C               	movlb	12	; select bank12
 17360  141E  0199               	clrf	25	;volatile
 17361  141F  0008               	return
 17362  1420                     i1l4947:	
 17363                           
 17364                           ;PWM.c: 40: };PWM.c: 42: if (PWM5CON == 0) {
 17365  1420  002C               	movlb	12	; select bank12
 17366  1421  0819               	movf	25,w	;volatile
 17367  1422  1D03               	btfss	3,2
 17368  1423  2C38               	goto	i1l1568
 17369                           
 17370                           ;PWM.c: 43: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 17371  1424  3055               	movlw	85
 17372  1425  003C               	movlb	28	; select bank28
 17373  1426  008F               	movwf	15	;volsfr
 17374  1427  30AA               	movlw	170
 17375  1428  008F               	movwf	15	;volsfr
 17376  1429  100F               	bcf	15,0	;volsfr
 17377                           
 17378                           ;PWM.c: 44: RC7PPSbits.RC7PPS = 0x02;
 17379  142A  003D               	movlb	29	; select bank29
 17380  142B  0827               	movf	39,w	;volatile
 17381  142C  39E0               	andlw	-32
 17382  142D  3802               	iorlw	2
 17383  142E  00A7               	movwf	39	;volatile
 17384                           
 17385                           ;PWM.c: 45: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 17386  142F  3055               	movlw	85
 17387  1430  003C               	movlb	28	; select bank28
 17388  1431  008F               	movwf	15	;volsfr
 17389  1432  30AA               	movlw	170
 17390  1433  008F               	movwf	15	;volsfr
 17391  1434  140F               	bsf	15,0	;volsfr
 17392                           
 17393                           ;PWM.c: 46: PWM5CON = 0x80;
 17394  1435  3080               	movlw	128
 17395  1436  002C               	movlb	12	; select bank12
 17396  1437  0099               	movwf	25	;volatile
 17397  1438                     i1l1568:	
 17398                           
 17399                           ;PWM.c: 47: };PWM.c: 49: if (GAMMAGP1 == 0) {
 17400  1438  0020               	movlb	0	; select bank0
 17401  1439  083D               	movf	_GAMMAGP1,w	;volatile
 17402  143A  1D03               	btfss	3,2
 17403  143B  2C41               	goto	i1l4967
 17404                           
 17405                           ;PWM.c: 50: PWM5DCH = 0xFFU - duty;
 17406  143C  094C               	comf	i1PWM_GP1@duty,w
 17407  143D  002C               	movlb	12	; select bank12
 17408  143E  0098               	movwf	24	;volatile
 17409                           
 17410                           ;PWM.c: 51: PWM5DCL = 0;
 17411  143F  0197               	clrf	23	;volatile
 17412                           
 17413                           ;PWM.c: 52: } else {
 17414  1440  0008               	return
 17415  1441                     i1l4967:	
 17416                           
 17417                           ;PWM.c: 53: if (duty > 100)
 17418  1441  3065               	movlw	101
 17419  1442  024C               	subwf	i1PWM_GP1@duty,w
 17420  1443  1C03               	skipc
 17421  1444  2C47               	goto	i1l4971
 17422                           
 17423                           ;PWM.c: 54: duty = 100;
 17424  1445  3064               	movlw	100
 17425  1446  00CC               	movwf	i1PWM_GP1@duty
 17426  1447                     i1l4971:	
 17427                           
 17428                           ;PWM.c: 55: PWM5DCH = (gamma_table[GAMMAGP1 - 1U][(duty - 1U)] & 0x03FC) >> 2U;
 17429  1447  084C               	movf	i1PWM_GP1@duty,w
 17430  1448  00F6               	movwf	??i1_PWM_GP1
 17431  1449  01F7               	clrf	??i1_PWM_GP1+1
 17432  144A  35F6               	lslf	??i1_PWM_GP1,f
 17433  144B  0DF7               	rlf	??i1_PWM_GP1+1,f
 17434  144C  083D               	movf	_GAMMAGP1,w	;volatile
 17435  144D  00F0               	movwf	i1___wmul@multiplier
 17436  144E  30C8               	movlw	200
 17437  144F  01F1               	clrf	i1___wmul@multiplier+1
 17438  1450  00F2               	movwf	i1___wmul@multiplicand
 17439  1451  01F3               	clrf	i1___wmul@multiplicand+1
 17440  1452  2584  3194         	fcall	i1___wmul
 17441  1454  3018               	movlw	low ((_gamma_table| (0+32768)+65334))
 17442  1455  00F8               	movwf	??i1_PWM_GP1+2
 17443  1456  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 17444  1457  00F9               	movwf	??i1_PWM_GP1+3
 17445  1458  0870               	movf	?i1___wmul,w
 17446  1459  0778               	addwf	??i1_PWM_GP1+2,w
 17447  145A  00FA               	movwf	??i1_PWM_GP1+4
 17448  145B  0871               	movf	?i1___wmul+1,w
 17449  145C  3D79               	addwfc	??i1_PWM_GP1+3,w
 17450  145D  00FB               	movwf	??i1_PWM_GP1+5
 17451  145E  087A               	movf	??i1_PWM_GP1+4,w
 17452  145F  0776               	addwf	??i1_PWM_GP1,w
 17453  1460  0084               	movwf	4
 17454  1461  087B               	movf	??i1_PWM_GP1+5,w
 17455  1462  3D77               	addwfc	??i1_PWM_GP1+1,w
 17456  1463  0085               	movwf	5
 17457  1464  3F00               	moviw [0]fsr0
 17458  1465  00FC               	movwf	??i1_PWM_GP1+6
 17459  1466  3F01               	moviw [1]fsr0
 17460  1467  00FD               	movwf	??i1_PWM_GP1+7
 17461  1468  36FD               	lsrf	??i1_PWM_GP1+7,f
 17462  1469  0CFC               	rrf	??i1_PWM_GP1+6,f
 17463  146A  36FD               	lsrf	??i1_PWM_GP1+7,f
 17464  146B  0CFC               	rrf	??i1_PWM_GP1+6,f
 17465  146C  087C               	movf	??i1_PWM_GP1+6,w
 17466  146D  002C               	movlb	12	; select bank12
 17467  146E  0098               	movwf	24	;volatile
 17468                           
 17469                           ;PWM.c: 56: PWM5DCL = (gamma_table[GAMMAGP1 - 1U][(duty - 1U)] & 0x0003) << 6U;
 17470  146F  0020               	movlb	0	; select bank0
 17471  1470  084C               	movf	i1PWM_GP1@duty,w
 17472  1471  00F6               	movwf	??i1_PWM_GP1
 17473  1472  01F7               	clrf	??i1_PWM_GP1+1
 17474  1473  35F6               	lslf	??i1_PWM_GP1,f
 17475  1474  0DF7               	rlf	??i1_PWM_GP1+1,f
 17476  1475  083D               	movf	_GAMMAGP1,w	;volatile
 17477  1476  00F0               	movwf	i1___wmul@multiplier
 17478  1477  30C8               	movlw	200
 17479  1478  01F1               	clrf	i1___wmul@multiplier+1
 17480  1479  00F2               	movwf	i1___wmul@multiplicand
 17481  147A  01F3               	clrf	i1___wmul@multiplicand+1
 17482  147B  2584               	fcall	i1___wmul
 17483  147C  3018               	movlw	low ((_gamma_table| (0+32768)+65334))
 17484  147D  00F8               	movwf	??i1_PWM_GP1+2
 17485  147E  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 17486  147F  00F9               	movwf	??i1_PWM_GP1+3
 17487  1480  0870               	movf	?i1___wmul,w
 17488  1481  0778               	addwf	??i1_PWM_GP1+2,w
 17489  1482  00FA               	movwf	??i1_PWM_GP1+4
 17490  1483  0871               	movf	?i1___wmul+1,w
 17491  1484  3D79               	addwfc	??i1_PWM_GP1+3,w
 17492  1485  00FB               	movwf	??i1_PWM_GP1+5
 17493  1486  087A               	movf	??i1_PWM_GP1+4,w
 17494  1487  0776               	addwf	??i1_PWM_GP1,w
 17495  1488  0084               	movwf	4
 17496  1489  087B               	movf	??i1_PWM_GP1+5,w
 17497  148A  3D77               	addwfc	??i1_PWM_GP1+1,w
 17498  148B  0085               	movwf	5
 17499  148C  0800               	movf	0,w	;code access
 17500  148D  3903               	andlw	3
 17501  148E  00FC               	movwf	??i1_PWM_GP1+6
 17502  148F  0CFC               	rrf	??i1_PWM_GP1+6,f
 17503  1490  0CFC               	rrf	??i1_PWM_GP1+6,f
 17504  1491  0C7C               	rrf	??i1_PWM_GP1+6,w
 17505  1492  39C0               	andlw	192
 17506  1493  002C               	movlb	12	; select bank12
 17507  1494  0097               	movwf	23	;volatile
 17508  1495  0008               	return
 17509  1496                     __end_ofi1_PWM_GP1:	
 17510  1496                     __ptext49:	
 17511 ;; *************** function _RegisterWrite *****************
 17512 ;; Defined at:
 17513 ;;		line 105 in file "i2c_register.c"
 17514 ;; Parameters:    Size  Location     Type
 17515 ;;  add             1    wreg     unsigned char 
 17516 ;;  data            1    3[BANK0 ] unsigned char 
 17517 ;; Auto vars:     Size  Location     Type
 17518 ;;  add             1    4[BANK0 ] unsigned char 
 17519 ;; Return value:  Size  Location     Type
 17520 ;;                  1    wreg      void 
 17521 ;; Registers used:
 17522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17523 ;; Tracked objects:
 17524 ;;		On entry : 1F/1
 17525 ;;		On exit  : E/0
 17526 ;;		Unchanged: 0/0
 17527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17528 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17529 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17531 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17532 ;;Total ram usage:        2 bytes
 17533 ;; Hardware stack levels used:    1
 17534 ;; Hardware stack levels required when called:    3
 17535 ;; This function calls:
 17536 ;;		_Config_GP1
 17537 ;;		_Config_GP2
 17538 ;;		_Config_GP3
 17539 ;;		_FirstConfig
 17540 ;;		_FirstDataSplit
 17541 ;;		_SecondConfig
 17542 ;;		_SecondDataSplit
 17543 ;;		_UpdateOut_GP1
 17544 ;;		_UpdateOut_GP2
 17545 ;;		_UpdateOut_GP3
 17546 ;;		_eeprom_write
 17547 ;;		i1___wmul
 17548 ;; This function is called by:
 17549 ;;		_I2C1_StatusCallback
 17550 ;; This function uses a non-reentrant model
 17551 ;;
 17552                           
 17553                           
 17554                           ;psect for function _RegisterWrite
 17555  1496                     _RegisterWrite:	
 17556                           
 17557                           ;incstack = 0
 17558                           ; Regs used in _RegisterWrite: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17559                           ;RegisterWrite@add stored from wreg
 17560  1496  0020               	movlb	0	; select bank0
 17561  1497  00D0               	movwf	RegisterWrite@add
 17562                           
 17563                           ;i2c_register.c: 107: switch (add) {
 17564  1498  2D64               	goto	i1l5745
 17565  1499                     i1l5627:	
 17566                           
 17567                           ;i2c_register.c: 109: GCONF = data;
 17568  1499  084F               	movf	RegisterWrite@data,w
 17569  149A  00C8               	movwf	_GCONF	;volatile
 17570                           
 17571                           ;i2c_register.c: 110: FirstDataSplit();
 17572  149B  318C  24BE  3194   	fcall	_FirstDataSplit
 17573                           
 17574                           ;i2c_register.c: 111: FirstConfig();
 17575  149E  3192  2221  3194   	fcall	_FirstConfig
 17576                           
 17577                           ;i2c_register.c: 112: break;
 17578  14A1  2D6E               	goto	i1l5747
 17579  14A2                     i1l5633:	
 17580                           
 17581                           ;i2c_register.c: 115: GP1CONF = data;
 17582  14A2  084F               	movf	RegisterWrite@data,w
 17583  14A3  00C7               	movwf	_GP1CONF	;volatile
 17584                           
 17585                           ;i2c_register.c: 116: Config_GP1();
 17586  14A4  2599  3194         	fcall	_Config_GP1
 17587                           
 17588                           ;i2c_register.c: 117: break;
 17589  14A6  2D6E               	goto	i1l5747
 17590  14A7                     i1l5637:	
 17591                           
 17592                           ;i2c_register.c: 120: GP2CONF = data;
 17593  14A7  084F               	movf	RegisterWrite@data,w
 17594  14A8  00C6               	movwf	_GP2CONF	;volatile
 17595                           
 17596                           ;i2c_register.c: 121: Config_GP2();
 17597  14A9  2612  3194         	fcall	_Config_GP2
 17598                           
 17599                           ;i2c_register.c: 122: break;
 17600  14AB  2D6E               	goto	i1l5747
 17601  14AC                     i1l5641:	
 17602                           
 17603                           ;i2c_register.c: 125: if (C_ETYPE == 0) {
 17604  14AC  0838               	movf	_C_ETYPE,w	;volatile
 17605  14AD  1D03               	btfss	3,2
 17606  14AE  2D6E               	goto	i1l5747
 17607                           
 17608                           ;i2c_register.c: 126: GP3CONF = data;
 17609  14AF  084F               	movf	RegisterWrite@data,w
 17610  14B0  00C5               	movwf	_GP3CONF	;volatile
 17611                           
 17612                           ;i2c_register.c: 127: Config_GP3();
 17613  14B1  26F7  3194         	fcall	_Config_GP3
 17614  14B3  2D6E               	goto	i1l5747
 17615  14B4                     i1l5647:	
 17616                           
 17617                           ;i2c_register.c: 132: INTCONF = data;
 17618  14B4  084F               	movf	RegisterWrite@data,w
 17619  14B5  0021               	movlb	1	; select bank1
 17620  14B6  00C9               	movwf	_INTCONF^(0+128)	;volatile
 17621                           
 17622                           ;i2c_register.c: 133: break;
 17623  14B7  2D6E               	goto	i1l5747
 17624  14B8                     i1l5649:	
 17625                           
 17626                           ;i2c_register.c: 137: CVAL.bval[3] = data;
 17627  14B8  084F               	movf	RegisterWrite@data,w
 17628  14B9  00AF               	movwf	_CVAL+3	;volatile
 17629                           
 17630                           ;i2c_register.c: 138: break;
 17631  14BA  2D6E               	goto	i1l5747
 17632  14BB                     i1l5651:	
 17633                           
 17634                           ;i2c_register.c: 140: CVAL.bval[2] = data;
 17635  14BB  084F               	movf	RegisterWrite@data,w
 17636  14BC  00AE               	movwf	_CVAL+2	;volatile
 17637                           
 17638                           ;i2c_register.c: 141: break;
 17639  14BD  2D6E               	goto	i1l5747
 17640  14BE                     i1l5653:	
 17641                           
 17642                           ;i2c_register.c: 143: CVAL.bval[1] = data;
 17643  14BE  084F               	movf	RegisterWrite@data,w
 17644  14BF  00AD               	movwf	_CVAL+1	;volatile
 17645                           
 17646                           ;i2c_register.c: 144: break;
 17647  14C0  2D6E               	goto	i1l5747
 17648  14C1                     i1l5655:	
 17649                           
 17650                           ;i2c_register.c: 146: CVAL.bval[0] = data;
 17651  14C1  084F               	movf	RegisterWrite@data,w
 17652  14C2  00AC               	movwf	_CVAL	;volatile
 17653                           
 17654                           ;i2c_register.c: 147: break;
 17655  14C3  2D6E               	goto	i1l5747
 17656  14C4                     i1l5657:	
 17657                           
 17658                           ;i2c_register.c: 151: CMAX.bval[3] = data;
 17659  14C4  084F               	movf	RegisterWrite@data,w
 17660  14C5  00AB               	movwf	_CMAX+3	;volatile
 17661                           
 17662                           ;i2c_register.c: 152: break;
 17663  14C6  2D6E               	goto	i1l5747
 17664  14C7                     i1l5659:	
 17665                           
 17666                           ;i2c_register.c: 154: CMAX.bval[2] = data;
 17667  14C7  084F               	movf	RegisterWrite@data,w
 17668  14C8  00AA               	movwf	_CMAX+2	;volatile
 17669                           
 17670                           ;i2c_register.c: 155: break;
 17671  14C9  2D6E               	goto	i1l5747
 17672  14CA                     i1l5661:	
 17673                           
 17674                           ;i2c_register.c: 157: CMAX.bval[1] = data;
 17675  14CA  084F               	movf	RegisterWrite@data,w
 17676  14CB  00A9               	movwf	_CMAX+1	;volatile
 17677                           
 17678                           ;i2c_register.c: 158: break;
 17679  14CC  2D6E               	goto	i1l5747
 17680  14CD                     i1l5663:	
 17681                           
 17682                           ;i2c_register.c: 160: CMAX.bval[0] = data;
 17683  14CD  084F               	movf	RegisterWrite@data,w
 17684  14CE  00A8               	movwf	_CMAX	;volatile
 17685                           
 17686                           ;i2c_register.c: 161: break;
 17687  14CF  2D6E               	goto	i1l5747
 17688  14D0                     i1l5665:	
 17689                           
 17690                           ;i2c_register.c: 165: CMIN.bval[3] = data;
 17691  14D0  084F               	movf	RegisterWrite@data,w
 17692  14D1  00A7               	movwf	_CMIN+3	;volatile
 17693                           
 17694                           ;i2c_register.c: 166: break;
 17695  14D2  2D6E               	goto	i1l5747
 17696  14D3                     i1l5667:	
 17697                           
 17698                           ;i2c_register.c: 168: CMIN.bval[2] = data;
 17699  14D3  084F               	movf	RegisterWrite@data,w
 17700  14D4  00A6               	movwf	_CMIN+2	;volatile
 17701                           
 17702                           ;i2c_register.c: 169: break;
 17703  14D5  2D6E               	goto	i1l5747
 17704  14D6                     i1l5669:	
 17705                           
 17706                           ;i2c_register.c: 171: CMIN.bval[1] = data;
 17707  14D6  084F               	movf	RegisterWrite@data,w
 17708  14D7  00A5               	movwf	_CMIN+1	;volatile
 17709                           
 17710                           ;i2c_register.c: 172: break;
 17711  14D8  2D6E               	goto	i1l5747
 17712  14D9                     i1l5671:	
 17713                           
 17714                           ;i2c_register.c: 174: CMIN.bval[0] = data;
 17715  14D9  084F               	movf	RegisterWrite@data,w
 17716  14DA  00A4               	movwf	_CMIN	;volatile
 17717                           
 17718                           ;i2c_register.c: 175: break;
 17719  14DB  2D6E               	goto	i1l5747
 17720  14DC                     i1l5673:	
 17721                           
 17722                           ;i2c_register.c: 179: ISTEP.bval[3] = data;
 17723  14DC  084F               	movf	RegisterWrite@data,w
 17724  14DD  00A3               	movwf	_ISTEP+3	;volatile
 17725                           
 17726                           ;i2c_register.c: 180: break;
 17727  14DE  2D6E               	goto	i1l5747
 17728  14DF                     i1l5675:	
 17729                           
 17730                           ;i2c_register.c: 182: ISTEP.bval[2] = data;
 17731  14DF  084F               	movf	RegisterWrite@data,w
 17732  14E0  00A2               	movwf	_ISTEP+2	;volatile
 17733                           
 17734                           ;i2c_register.c: 183: break;
 17735  14E1  2D6E               	goto	i1l5747
 17736  14E2                     i1l5677:	
 17737                           
 17738                           ;i2c_register.c: 185: ISTEP.bval[1] = data;
 17739  14E2  084F               	movf	RegisterWrite@data,w
 17740  14E3  00A1               	movwf	_ISTEP+1	;volatile
 17741                           
 17742                           ;i2c_register.c: 186: break;
 17743  14E4  2D6E               	goto	i1l5747
 17744  14E5                     i1l5679:	
 17745                           
 17746                           ;i2c_register.c: 188: ISTEP.bval[0] = data;
 17747  14E5  084F               	movf	RegisterWrite@data,w
 17748  14E6  00A0               	movwf	_ISTEP	;volatile
 17749                           
 17750                           ;i2c_register.c: 189: break;
 17751  14E7  2D6E               	goto	i1l5747
 17752  14E8                     i1l5681:	
 17753                           
 17754                           ;i2c_register.c: 193: RLED = data;
 17755  14E8  084F               	movf	RegisterWrite@data,w
 17756  14E9  00C4               	movwf	_RLED	;volatile
 17757                           
 17758                           ;i2c_register.c: 195: break;
 17759  14EA  2D6E               	goto	i1l5747
 17760  14EB                     i1l5683:	
 17761                           
 17762                           ;i2c_register.c: 198: GLED = data;
 17763  14EB  084F               	movf	RegisterWrite@data,w
 17764  14EC  00C3               	movwf	_GLED	;volatile
 17765                           
 17766                           ;i2c_register.c: 199: break;
 17767  14ED  2D6E               	goto	i1l5747
 17768  14EE                     i1l5685:	
 17769                           
 17770                           ;i2c_register.c: 202: BLED = data;
 17771  14EE  084F               	movf	RegisterWrite@data,w
 17772  14EF  00C2               	movwf	_BLED	;volatile
 17773                           
 17774                           ;i2c_register.c: 203: break;
 17775  14F0  2D6E               	goto	i1l5747
 17776  14F1                     i1l5687:	
 17777                           
 17778                           ;i2c_register.c: 207: GP1REG = data;
 17779  14F1  084F               	movf	RegisterWrite@data,w
 17780  14F2  00C1               	movwf	_GP1REG	;volatile
 17781                           
 17782                           ;i2c_register.c: 208: UpdateOut_GP1();
 17783  14F3  27EF  3194         	fcall	_UpdateOut_GP1
 17784                           
 17785                           ;i2c_register.c: 209: break;
 17786  14F5  2D6E               	goto	i1l5747
 17787  14F6                     i1l5691:	
 17788                           
 17789                           ;i2c_register.c: 212: GP2REG = data;
 17790  14F6  084F               	movf	RegisterWrite@data,w
 17791  14F7  00C0               	movwf	_GP2REG	;volatile
 17792                           
 17793                           ;i2c_register.c: 213: UpdateOut_GP2();
 17794  14F8  3191  21A9  3194   	fcall	_UpdateOut_GP2
 17795                           
 17796                           ;i2c_register.c: 214: break;
 17797  14FB  2D6E               	goto	i1l5747
 17798  14FC                     i1l5695:	
 17799                           
 17800                           ;i2c_register.c: 218: if (C_ETYPE == 0) {
 17801  14FC  0838               	movf	_C_ETYPE,w	;volatile
 17802  14FD  1D03               	btfss	3,2
 17803  14FE  2D6E               	goto	i1l5747
 17804                           
 17805                           ;i2c_register.c: 219: GP3REG = data;
 17806  14FF  084F               	movf	RegisterWrite@data,w
 17807  1500  00BF               	movwf	_GP3REG	;volatile
 17808                           
 17809                           ;i2c_register.c: 220: UpdateOut_GP3();
 17810  1501  3191  21CE  3194   	fcall	_UpdateOut_GP3
 17811  1504  2D6E               	goto	i1l5747
 17812  1505                     i1l5701:	
 17813                           
 17814                           ;i2c_register.c: 227: ANTBOUNC = data;
 17815  1505  084F               	movf	RegisterWrite@data,w
 17816  1506  0021               	movlb	1	; select bank1
 17817  1507  00C5               	movwf	_ANTBOUNC^(0+128)	;volatile
 17818                           
 17819                           ;i2c_register.c: 228: DEBOUNCE = (uint16_t) ANTBOUNC * 10;
 17820  1508  0845               	movf	_ANTBOUNC^(0+128),w	;volatile
 17821  1509  00F0               	movwf	i1___wmul@multiplier
 17822  150A  300A               	movlw	10
 17823  150B  01F1               	clrf	i1___wmul@multiplier+1
 17824  150C  00F2               	movwf	i1___wmul@multiplicand
 17825  150D  01F3               	clrf	i1___wmul@multiplicand+1
 17826  150E  2584  3194         	fcall	i1___wmul
 17827  1510  0871               	movf	?i1___wmul+1,w
 17828  1511  0021               	movlb	1	; select bank1
 17829  1512  00A9               	movwf	(_DEBOUNCE+1)^(0+128)	;volatile
 17830  1513  0870               	movf	?i1___wmul,w
 17831  1514  00A8               	movwf	_DEBOUNCE^(0+128)	;volatile
 17832                           
 17833                           ;i2c_register.c: 229: break;
 17834  1515  2D6E               	goto	i1l5747
 17835  1516                     i1l5705:	
 17836                           
 17837                           ;i2c_register.c: 231: DPPERIOD = data;
 17838  1516  084F               	movf	RegisterWrite@data,w
 17839  1517  0021               	movlb	1	; select bank1
 17840  1518  00C4               	movwf	_DPPERIOD^(0+128)	;volatile
 17841                           
 17842                           ;i2c_register.c: 232: DoublePush = (uint16_t) DPPERIOD * 10;
 17843  1519  0844               	movf	_DPPERIOD^(0+128),w	;volatile
 17844  151A  00F0               	movwf	i1___wmul@multiplier
 17845  151B  300A               	movlw	10
 17846  151C  01F1               	clrf	i1___wmul@multiplier+1
 17847  151D  00F2               	movwf	i1___wmul@multiplicand
 17848  151E  01F3               	clrf	i1___wmul@multiplicand+1
 17849  151F  2584  3194         	fcall	i1___wmul
 17850  1521  0871               	movf	?i1___wmul+1,w
 17851  1522  0021               	movlb	1	; select bank1
 17852  1523  00A7               	movwf	(_DoublePush+1)^(0+128)	;volatile
 17853  1524  0870               	movf	?i1___wmul,w
 17854  1525  00A6               	movwf	_DoublePush^(0+128)	;volatile
 17855                           
 17856                           ;i2c_register.c: 233: break;
 17857  1526  2D6E               	goto	i1l5747
 17858  1527                     i1l5709:	
 17859                           
 17860                           ;i2c_register.c: 236: FADERGB = data;
 17861  1527  084F               	movf	RegisterWrite@data,w
 17862  1528  0021               	movlb	1	; select bank1
 17863  1529  00C3               	movwf	_FADERGB^(0+128)	;volatile
 17864                           
 17865                           ;i2c_register.c: 237: break;
 17866  152A  2D6E               	goto	i1l5747
 17867  152B                     i1l5711:	
 17868                           
 17869                           ;i2c_register.c: 240: FADEGP = data;
 17870  152B  084F               	movf	RegisterWrite@data,w
 17871  152C  00BE               	movwf	_FADEGP	;volatile
 17872                           
 17873                           ;i2c_register.c: 241: break;
 17874  152D  2D6E               	goto	i1l5747
 17875  152E                     i1l5713:	
 17876                           
 17877                           ;i2c_register.c: 244: GAMMAGP3_RLED = data;
 17878  152E  084F               	movf	RegisterWrite@data,w
 17879  152F  00BB               	movwf	_GAMMAGP3_RLED	;volatile
 17880                           
 17881                           ;i2c_register.c: 245: if (GAMMAGP3_RLED > 8)
 17882  1530  3009               	movlw	9
 17883  1531  023B               	subwf	_GAMMAGP3_RLED,w	;volatile
 17884  1532  1C03               	skipc
 17885  1533  2D6E               	goto	i1l5747
 17886                           
 17887                           ;i2c_register.c: 246: GAMMAGP3_RLED = 8;
 17888  1534  3008               	movlw	8
 17889  1535  00BB               	movwf	_GAMMAGP3_RLED	;volatile
 17890  1536  2D6E               	goto	i1l5747
 17891  1537                     i1l5717:	
 17892                           
 17893                           ;i2c_register.c: 250: GAMMAGLED = data;
 17894  1537  084F               	movf	RegisterWrite@data,w
 17895  1538  00BA               	movwf	_GAMMAGLED	;volatile
 17896                           
 17897                           ;i2c_register.c: 251: if (GAMMAGLED > 8)
 17898  1539  3009               	movlw	9
 17899  153A  023A               	subwf	_GAMMAGLED,w	;volatile
 17900  153B  1C03               	skipc
 17901  153C  2D6E               	goto	i1l5747
 17902                           
 17903                           ;i2c_register.c: 252: GAMMAGLED = 8;
 17904  153D  3008               	movlw	8
 17905  153E  00BA               	movwf	_GAMMAGLED	;volatile
 17906  153F  2D6E               	goto	i1l5747
 17907  1540                     i1l5721:	
 17908                           
 17909                           ;i2c_register.c: 256: GAMMABLED = data;
 17910  1540  084F               	movf	RegisterWrite@data,w
 17911  1541  00B9               	movwf	_GAMMABLED	;volatile
 17912                           
 17913                           ;i2c_register.c: 257: if (GAMMABLED > 8)
 17914  1542  3009               	movlw	9
 17915  1543  0239               	subwf	_GAMMABLED,w	;volatile
 17916  1544  1C03               	skipc
 17917  1545  2D6E               	goto	i1l5747
 17918                           
 17919                           ;i2c_register.c: 258: GAMMABLED = 8;
 17920  1546  3008               	movlw	8
 17921  1547  00B9               	movwf	_GAMMABLED	;volatile
 17922  1548  2D6E               	goto	i1l5747
 17923  1549                     i1l5725:	
 17924                           
 17925                           ;i2c_register.c: 262: GAMMAGP1 = data;
 17926  1549  084F               	movf	RegisterWrite@data,w
 17927  154A  00BD               	movwf	_GAMMAGP1	;volatile
 17928                           
 17929                           ;i2c_register.c: 263: if (GAMMAGP1 > 8)
 17930  154B  3009               	movlw	9
 17931  154C  023D               	subwf	_GAMMAGP1,w	;volatile
 17932  154D  1C03               	skipc
 17933  154E  2D6E               	goto	i1l5747
 17934                           
 17935                           ;i2c_register.c: 264: GAMMAGP1 = 8;
 17936  154F  3008               	movlw	8
 17937  1550  00BD               	movwf	_GAMMAGP1	;volatile
 17938  1551  2D6E               	goto	i1l5747
 17939  1552                     i1l5729:	
 17940                           
 17941                           ;i2c_register.c: 268: GAMMAGP2 = data;
 17942  1552  084F               	movf	RegisterWrite@data,w
 17943  1553  00BC               	movwf	_GAMMAGP2	;volatile
 17944                           
 17945                           ;i2c_register.c: 269: if (GAMMAGP2 > 8)
 17946  1554  3009               	movlw	9
 17947  1555  023C               	subwf	_GAMMAGP2,w	;volatile
 17948  1556  1C03               	skipc
 17949  1557  2D6E               	goto	i1l5747
 17950                           
 17951                           ;i2c_register.c: 270: GAMMAGP2 = 8;
 17952  1558  3008               	movlw	8
 17953  1559  00BC               	movwf	_GAMMAGP2	;volatile
 17954  155A  2D6E               	goto	i1l5747
 17955  155B                     i1l5733:	
 17956  155B  2D2E               	goto	i1l5713
 17957  155C                     i1l5737:	
 17958                           ;i2c_register.c: 275: if (GAMMAGP3_RLED > 8)
 17959                           
 17960                           ;i2c_register.c: 274: GAMMAGP3_RLED = data;
 17961                           
 17962                           
 17963                           ;i2c_register.c: 280: GCONF2 = data;
 17964  155C  084F               	movf	RegisterWrite@data,w
 17965  155D  0021               	movlb	1	; select bank1
 17966  155E  00C2               	movwf	_GCONF2^(0+128)	;volatile
 17967                           
 17968                           ;i2c_register.c: 281: SecondDataSplit();
 17969  155F  27E5  3194         	fcall	_SecondDataSplit
 17970                           
 17971                           ;i2c_register.c: 282: SecondConfig();
 17972  1561  27DD  3194         	fcall	_SecondConfig
 17973                           
 17974                           ;i2c_register.c: 283: break;
 17975  1563  2D6E               	goto	i1l5747
 17976  1564                     i1l5745:	
 17977  1564  0850               	movf	RegisterWrite@add,w
 17978                           
 17979                           ; Switch size 1, requested type "speed"
 17980                           ; Number of cases is 38, Range of values is 0 to 48
 17981                           ; switch strategies available:
 17982                           ; Name         Instructions Cycles
 17983                           ; direct_byte          104     6 (fixed)
 17984                           ; simple_byte          115    58 (average)
 17985                           ; jumptable            260     6 (fixed)
 17986                           ;	Chosen strategy is direct_byte
 17987  1565  0084               	movwf	4
 17988  1566  3031               	movlw	49
 17989  1567  0204               	subwf	4,w
 17990  1568  1803               	skipnc
 17991  1569  2D6E               	goto	i1l5747
 17992  156A  318C               	movlp	high i1S8609
 17993  156B  3504               	lslf	4,w
 17994  156C  3E5A               	addlw	low i1S8609
 17995  156D  0082               	movwf	2
 17996  156E                     i1l5747:	
 17997                           
 17998                           ;i2c_register.c: 286: if (add >= REG_EEPROMS) {
 17999  156E  3080               	movlw	128
 18000  156F  0020               	movlb	0	; select bank0
 18001  1570  0250               	subwf	RegisterWrite@add,w
 18002  1571  1C03               	skipc
 18003  1572  0008               	return
 18004                           
 18005                           ;i2c_register.c: 288: if (C_MBANK == 0) {
 18006  1573  0021               	movlb	1	; select bank1
 18007  1574  0840               	movf	_C_MBANK^(0+128),w	;volatile
 18008  1575  1D03               	btfss	3,2
 18009  1576  2D7E               	goto	i1l5753
 18010                           
 18011                           ;i2c_register.c: 289: eeprom_write((uint8_t) (add - REG_EEPROMS), (uint8_t) data);
 18012  1577  0020               	movlb	0	; select bank0
 18013  1578  084F               	movf	RegisterWrite@data,w
 18014  1579  00F0               	movwf	eeprom_write@value
 18015  157A  0850               	movf	RegisterWrite@add,w
 18016  157B  3E80               	addlw	128
 18017  157C  3191  29E2         	ljmp	_eeprom_write
 18018  157E                     i1l5753:	
 18019                           ;i2c_register.c: 291: } else {
 18020                           
 18021                           
 18022                           ;i2c_register.c: 292: eeprom_write((uint8_t) add, (uint8_t) data);
 18023  157E  0020               	movlb	0	; select bank0
 18024  157F  084F               	movf	RegisterWrite@data,w
 18025  1580  00F0               	movwf	eeprom_write@value
 18026  1581  0850               	movf	RegisterWrite@add,w
 18027  1582  3191  29E2         	ljmp	_eeprom_write
 18028  1584                     __end_of_RegisterWrite:	
 18029  1584                     __ptext72:	
 18030 ;; *************** function i1___wmul *****************
 18031 ;; Defined at:
 18032 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
 18033 ;; Parameters:    Size  Location     Type
 18034 ;;  multiplier      2    0[COMMON] unsigned int 
 18035 ;;  multiplicand    2    2[COMMON] unsigned int 
 18036 ;; Auto vars:     Size  Location     Type
 18037 ;;  __wmul          2    4[COMMON] unsigned int 
 18038 ;; Return value:  Size  Location     Type
 18039 ;;                  2    0[COMMON] unsigned int 
 18040 ;; Registers used:
 18041 ;;		wreg, status,2, status,0
 18042 ;; Tracked objects:
 18043 ;;		On entry : 1E/1
 18044 ;;		On exit  : 1E/0
 18045 ;;		Unchanged: 1E/0
 18046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18047 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18048 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18050 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18051 ;;Total ram usage:        6 bytes
 18052 ;; Hardware stack levels used:    1
 18053 ;; This function calls:
 18054 ;;		Nothing
 18055 ;; This function is called by:
 18056 ;;		_RegisterWrite
 18057 ;;		i1_PWM_GP1
 18058 ;;		i1_PWM_GP2
 18059 ;;		i1_PWM_GP3_RLED
 18060 ;; This function uses a non-reentrant model
 18061 ;;
 18062                           
 18063                           
 18064                           ;psect for function i1___wmul
 18065  1584                     i1___wmul:	
 18066                           
 18067                           ;incstack = 0
 18068                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 18069  1584  01F4               	clrf	i1___wmul@product
 18070  1585  01F5               	clrf	i1___wmul@product+1
 18071  1586                     i1l4839:	
 18072  1586  1C70               	btfss	i1___wmul@multiplier,0
 18073  1587  2D8C               	goto	i1l4843
 18074  1588  0872               	movf	i1___wmul@multiplicand,w
 18075  1589  07F4               	addwf	i1___wmul@product,f
 18076  158A  0873               	movf	i1___wmul@multiplicand+1,w
 18077  158B  3DF5               	addwfc	i1___wmul@product+1,f
 18078  158C                     i1l4843:	
 18079  158C  35F2               	lslf	i1___wmul@multiplicand,f
 18080  158D  0DF3               	rlf	i1___wmul@multiplicand+1,f
 18081  158E  36F1               	lsrf	i1___wmul@multiplier+1,f
 18082  158F  0CF0               	rrf	i1___wmul@multiplier,f
 18083  1590  0870               	movf	i1___wmul@multiplier,w
 18084  1591  0471               	iorwf	i1___wmul@multiplier+1,w
 18085  1592  1D03               	btfss	3,2
 18086  1593  2D86               	goto	i1l4839
 18087  1594  0875               	movf	i1___wmul@product+1,w
 18088  1595  00F1               	movwf	?i1___wmul+1
 18089  1596  0874               	movf	i1___wmul@product,w
 18090  1597  00F0               	movwf	?i1___wmul
 18091  1598  0008               	return
 18092  1599                     __end_ofi1___wmul:	
 18093  1599                     __ptext70:	
 18094 ;; *************** function _Config_GP1 *****************
 18095 ;; Defined at:
 18096 ;;		line 192 in file "GPports.c"
 18097 ;; Parameters:    Size  Location     Type
 18098 ;;		None
 18099 ;; Auto vars:     Size  Location     Type
 18100 ;;		None
 18101 ;; Return value:  Size  Location     Type
 18102 ;;                  1    wreg      void 
 18103 ;; Registers used:
 18104 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18105 ;; Tracked objects:
 18106 ;;		On entry : 1F/0
 18107 ;;		On exit  : 1B/0
 18108 ;;		Unchanged: 0/0
 18109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18112 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18113 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18114 ;;Total ram usage:        2 bytes
 18115 ;; Hardware stack levels used:    1
 18116 ;; Hardware stack levels required when called:    2
 18117 ;; This function calls:
 18118 ;;		_PWM5_Initialize
 18119 ;;		i1_PWM_GP1
 18120 ;; This function is called by:
 18121 ;;		_RegisterWrite
 18122 ;; This function uses a non-reentrant model
 18123 ;;
 18124                           
 18125                           
 18126                           ;psect for function _Config_GP1
 18127  1599                     _Config_GP1:	
 18128                           
 18129                           ;GPports.c: 194: PWM5CON = 0;
 18130                           
 18131                           ;incstack = 0
 18132                           ; Regs used in _Config_GP1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18133  1599  002C               	movlb	12	; select bank12
 18134  159A  0199               	clrf	25	;volatile
 18135                           
 18136                           ;GPports.c: 195: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18137  159B  3055               	movlw	85
 18138  159C  003C               	movlb	28	; select bank28
 18139  159D  008F               	movwf	15	;volsfr
 18140  159E  30AA               	movlw	170
 18141  159F  008F               	movwf	15	;volsfr
 18142  15A0  100F               	bcf	15,0	;volsfr
 18143                           
 18144                           ;GPports.c: 196: RC7PPSbits.RC7PPS = 0x00;
 18145  15A1  30E0               	movlw	-32
 18146  15A2  003D               	movlb	29	; select bank29
 18147  15A3  05A7               	andwf	39,f	;volatile
 18148                           
 18149                           ;GPports.c: 197: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18150  15A4  3055               	movlw	85
 18151  15A5  003C               	movlb	28	; select bank28
 18152  15A6  008F               	movwf	15	;volsfr
 18153  15A7  30AA               	movlw	170
 18154  15A8  008F               	movwf	15	;volsfr
 18155  15A9  140F               	bsf	15,0	;volsfr
 18156                           
 18157                           ;GPports.c: 199: switch (GP1CONF & 0x03) {
 18158  15AA  2DDB               	goto	i1l5205
 18159  15AB                     i1l1182:	
 18160                           ;GPports.c: 201: do { ANSELCbits.ANSC7 = 0; } while(0);
 18161                           
 18162  15AB  0023               	movlb	3	; select bank3
 18163  15AC  138E               	bcf	14,7	;volatile
 18164                           
 18165                           ;GPports.c: 202: do { LATCbits.LATC7 = 1; } while(0);
 18166  15AD  0022               	movlb	2	; select bank2
 18167  15AE  178E               	bsf	14,7	;volatile
 18168                           
 18169                           ;GPports.c: 203: do { TRISCbits.TRISC7 = 0; } while(0);
 18170  15AF  0021               	movlb	1	; select bank1
 18171  15B0  138E               	bcf	14,7	;volatile
 18172                           
 18173                           ;GPports.c: 204: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18174  15B1  3055               	movlw	85
 18175  15B2  003C               	movlb	28	; select bank28
 18176  15B3  008F               	movwf	15	;volsfr
 18177  15B4  30AA               	movlw	170
 18178  15B5  008F               	movwf	15	;volsfr
 18179  15B6  100F               	bcf	15,0	;volsfr
 18180                           
 18181                           ;GPports.c: 205: RC7PPSbits.RC7PPS = 0x02;
 18182  15B7  003D               	movlb	29	; select bank29
 18183  15B8  0827               	movf	39,w	;volatile
 18184  15B9  39E0               	andlw	-32
 18185  15BA  3802               	iorlw	2
 18186  15BB  00A7               	movwf	39	;volatile
 18187                           
 18188                           ;GPports.c: 206: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18189  15BC  3055               	movlw	85
 18190  15BD  003C               	movlb	28	; select bank28
 18191  15BE  008F               	movwf	15	;volsfr
 18192  15BF  30AA               	movlw	170
 18193  15C0  008F               	movwf	15	;volsfr
 18194  15C1  140F               	bsf	15,0	;volsfr
 18195                           
 18196                           ;GPports.c: 207: PWM5_Initialize();
 18197  15C2  2608  3194         	fcall	_PWM5_Initialize
 18198                           
 18199                           ;GPports.c: 208: PWM_GP1(0);
 18200  15C4  3000               	movlw	0
 18201  15C5  2407  3194         	fcall	i1_PWM_GP1
 18202                           
 18203                           ;GPports.c: 209: break;
 18204  15C7  2DF5               	goto	i1l5209
 18205  15C8                     i1l1190:	
 18206                           ;GPports.c: 212: do { ANSELCbits.ANSC7 = 0; } while(0);
 18207                           
 18208  15C8  0023               	movlb	3	; select bank3
 18209  15C9  138E               	bcf	14,7	;volatile
 18210                           
 18211                           ;GPports.c: 213: do { TRISCbits.TRISC7 = 0; } while(0);
 18212  15CA  0021               	movlb	1	; select bank1
 18213  15CB  138E               	bcf	14,7	;volatile
 18214                           
 18215                           ;GPports.c: 214: do { ODCONCbits.ODCC7 = 0; } while(0);
 18216  15CC  0025               	movlb	5	; select bank5
 18217  15CD  138E               	bcf	14,7	;volatile
 18218  15CE  2DF5               	goto	i1l5209
 18219  15CF                     i1l1197:	
 18220                           ;GPports.c: 218: do { TRISCbits.TRISC7 = 1; } while(0);
 18221                           
 18222  15CF  0021               	movlb	1	; select bank1
 18223  15D0  178E               	bsf	14,7	;volatile
 18224                           
 18225                           ;GPports.c: 219: do { ANSELCbits.ANSC7 = 1; } while(0);
 18226  15D1  0023               	movlb	3	; select bank3
 18227  15D2  178E               	bsf	14,7	;volatile
 18228                           
 18229                           ;GPports.c: 220: PMD2bits.ADCMD = 0;
 18230  15D3  0032               	movlb	18	; select bank18
 18231  15D4  1293               	bcf	19,5	;volatile
 18232                           
 18233                           ;GPports.c: 221: break;
 18234  15D5  2DF5               	goto	i1l5209
 18235  15D6                     i1l1202:	
 18236                           ;GPports.c: 223: do { ANSELCbits.ANSC7 = 0; } while(0);
 18237                           
 18238  15D6  0023               	movlb	3	; select bank3
 18239  15D7  138E               	bcf	14,7	;volatile
 18240                           
 18241                           ;GPports.c: 224: do { TRISCbits.TRISC7 = 1; } while(0);
 18242  15D8  0021               	movlb	1	; select bank1
 18243  15D9  178E               	bsf	14,7	;volatile
 18244  15DA  2DF5               	goto	i1l5209
 18245  15DB                     i1l5205:	
 18246  15DB  0020               	movlb	0	; select bank0
 18247  15DC  0847               	movf	_GP1CONF,w	;volatile
 18248  15DD  3903               	andlw	3
 18249  15DE  00CD               	movwf	??_Config_GP1
 18250  15DF  01CE               	clrf	??_Config_GP1+1
 18251                           
 18252                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18253                           ; Switch size 1, requested type "speed"
 18254                           ; Number of cases is 1, Range of values is 0 to 0
 18255                           ; switch strategies available:
 18256                           ; Name         Instructions Cycles
 18257                           ; simple_byte            4     3 (average)
 18258                           ; direct_byte            8     6 (fixed)
 18259                           ; jumptable            260     6 (fixed)
 18260                           ;	Chosen strategy is simple_byte
 18261  15E0  084E               	movf	??_Config_GP1+1,w
 18262  15E1  3A00               	xorlw	0	; case 0
 18263  15E2  1903               	skipnz
 18264  15E3  2DE5               	goto	i1l8623
 18265  15E4  2DF5               	goto	i1l5209
 18266  15E5                     i1l8623:	
 18267                           
 18268                           ; Switch size 1, requested type "speed"
 18269                           ; Number of cases is 4, Range of values is 0 to 3
 18270                           ; switch strategies available:
 18271                           ; Name         Instructions Cycles
 18272                           ; direct_byte           14     6 (fixed)
 18273                           ; simple_byte           13     7 (average)
 18274                           ; jumptable            260     6 (fixed)
 18275                           ;	Chosen strategy is direct_byte
 18276  15E5  084D               	movf	??_Config_GP1,w
 18277  15E6  0084               	movwf	4
 18278  15E7  3004               	movlw	4
 18279  15E8  0204               	subwf	4,w
 18280  15E9  1803               	skipnc
 18281  15EA  2DF5               	goto	i1l5209
 18282  15EB  3191               	movlp	high i1S8625
 18283  15EC  3504               	lslf	4,w
 18284  15ED  3E28               	addlw	low i1S8625
 18285  15EE  0082               	movwf	2
 18286  15EF                     i1l1208:	
 18287                           ;GPports.c: 230: do { WPUCbits.WPUC7 = 0; } while(0);
 18288                           
 18289  15EF  0024               	movlb	4	; select bank4
 18290  15F0  138E               	bcf	14,7	;volatile
 18291  15F1  0008               	return
 18292  15F2                     i1l1212:	
 18293                           ;GPports.c: 233: do { WPUCbits.WPUC7 = 1; } while(0);
 18294                           
 18295  15F2  0024               	movlb	4	; select bank4
 18296  15F3  178E               	bsf	14,7	;volatile
 18297  15F4  0008               	return
 18298  15F5                     i1l5209:	
 18299  15F5  0020               	movlb	0	; select bank0
 18300  15F6  0847               	movf	_GP1CONF,w	;volatile
 18301  15F7  3904               	andlw	4
 18302  15F8  00CD               	movwf	??_Config_GP1
 18303  15F9  01CE               	clrf	??_Config_GP1+1
 18304                           
 18305                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18306                           ; Switch size 1, requested type "speed"
 18307                           ; Number of cases is 1, Range of values is 0 to 0
 18308                           ; switch strategies available:
 18309                           ; Name         Instructions Cycles
 18310                           ; simple_byte            4     3 (average)
 18311                           ; direct_byte            8     6 (fixed)
 18312                           ; jumptable            260     6 (fixed)
 18313                           ;	Chosen strategy is simple_byte
 18314  15FA  084E               	movf	??_Config_GP1+1,w
 18315  15FB  3A00               	xorlw	0	; case 0
 18316  15FC  1903               	skipnz
 18317  15FD  2DFF               	goto	i1l8627
 18318  15FE  2E07               	goto	i1l1214
 18319  15FF                     i1l8627:	
 18320                           
 18321                           ; Switch size 1, requested type "speed"
 18322                           ; Number of cases is 2, Range of values is 0 to 4
 18323                           ; switch strategies available:
 18324                           ; Name         Instructions Cycles
 18325                           ; simple_byte            7     4 (average)
 18326                           ; direct_byte           16     6 (fixed)
 18327                           ; jumptable            260     6 (fixed)
 18328                           ;	Chosen strategy is simple_byte
 18329  15FF  084D               	movf	??_Config_GP1,w
 18330  1600  3A00               	xorlw	0	; case 0
 18331  1601  1903               	skipnz
 18332  1602  2DEF               	goto	i1l1208
 18333  1603  3A04               	xorlw	4	; case 4
 18334  1604  1903               	skipnz
 18335  1605  2DF2               	goto	i1l1212
 18336  1606  2E07               	goto	i1l1214
 18337  1607                     i1l1214:	
 18338  1607  0008               	return
 18339  1608                     __end_of_Config_GP1:	
 18340  1608                     __ptext73:	
 18341 ;; *************** function _PWM5_Initialize *****************
 18342 ;; Defined at:
 18343 ;;		line 58 in file "mcc_generated_files/pwm5.c"
 18344 ;; Parameters:    Size  Location     Type
 18345 ;;		None
 18346 ;; Auto vars:     Size  Location     Type
 18347 ;;		None
 18348 ;; Return value:  Size  Location     Type
 18349 ;;                  1    wreg      void 
 18350 ;; Registers used:
 18351 ;;		wreg, status,2, status,0
 18352 ;; Tracked objects:
 18353 ;;		On entry : 1F/1C
 18354 ;;		On exit  : 1F/C
 18355 ;;		Unchanged: 0/0
 18356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18361 ;;Total ram usage:        0 bytes
 18362 ;; Hardware stack levels used:    1
 18363 ;; This function calls:
 18364 ;;		Nothing
 18365 ;; This function is called by:
 18366 ;;		_Config_GP1
 18367 ;; This function uses a non-reentrant model
 18368 ;;
 18369                           
 18370                           
 18371                           ;psect for function _PWM5_Initialize
 18372  1608                     _PWM5_Initialize:	
 18373                           
 18374                           ;pwm5.c: 62: PWM5CON = 0x80;
 18375                           
 18376                           ;incstack = 0
 18377                           ; Regs used in _PWM5_Initialize: [wreg+status,2+status,0]
 18378  1608  3080               	movlw	128
 18379  1609  002C               	movlb	12	; select bank12
 18380  160A  0099               	movwf	25	;volatile
 18381                           
 18382                           ;pwm5.c: 65: PWM5DCH = 0x00;
 18383  160B  0198               	clrf	24	;volatile
 18384                           
 18385                           ;pwm5.c: 68: PWM5DCL = 0x00;
 18386  160C  0197               	clrf	23	;volatile
 18387                           
 18388                           ;pwm5.c: 71: PWMTMRSbits.P5TSEL = 1;
 18389  160D  081F               	movf	31,w	;volatile
 18390  160E  39FC               	andlw	-4
 18391  160F  3801               	iorlw	1
 18392  1610  009F               	movwf	31	;volatile
 18393  1611  0008               	return
 18394  1612                     __end_of_PWM5_Initialize:	
 18395  1612                     __ptext67:	
 18396 ;; *************** function _Config_GP2 *****************
 18397 ;; Defined at:
 18398 ;;		line 243 in file "GPports.c"
 18399 ;; Parameters:    Size  Location     Type
 18400 ;;		None
 18401 ;; Auto vars:     Size  Location     Type
 18402 ;;		None
 18403 ;; Return value:  Size  Location     Type
 18404 ;;                  1    wreg      void 
 18405 ;; Registers used:
 18406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18407 ;; Tracked objects:
 18408 ;;		On entry : 1F/0
 18409 ;;		On exit  : 1B/0
 18410 ;;		Unchanged: 0/0
 18411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18414 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18415 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18416 ;;Total ram usage:        2 bytes
 18417 ;; Hardware stack levels used:    1
 18418 ;; Hardware stack levels required when called:    2
 18419 ;; This function calls:
 18420 ;;		_PWM4_Initialize
 18421 ;;		i1_PWM_GP2
 18422 ;; This function is called by:
 18423 ;;		_RegisterWrite
 18424 ;; This function uses a non-reentrant model
 18425 ;;
 18426                           
 18427                           
 18428                           ;psect for function _Config_GP2
 18429  1612                     _Config_GP2:	
 18430                           
 18431                           ;GPports.c: 245: CCP4CON = 0;
 18432                           
 18433                           ;incstack = 0
 18434                           ; Regs used in _Config_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18435  1612  0026               	movlb	6	; select bank6
 18436  1613  0197               	clrf	23	;volatile
 18437                           
 18438                           ;GPports.c: 246: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18439  1614  3055               	movlw	85
 18440  1615  003C               	movlb	28	; select bank28
 18441  1616  008F               	movwf	15	;volsfr
 18442  1617  30AA               	movlw	170
 18443  1618  008F               	movwf	15	;volsfr
 18444  1619  100F               	bcf	15,0	;volsfr
 18445                           
 18446                           ;GPports.c: 247: RC6PPSbits.RC6PPS = 0x00;
 18447  161A  30E0               	movlw	-32
 18448  161B  003D               	movlb	29	; select bank29
 18449  161C  05A6               	andwf	38,f	;volatile
 18450                           
 18451                           ;GPports.c: 248: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18452  161D  3055               	movlw	85
 18453  161E  003C               	movlb	28	; select bank28
 18454  161F  008F               	movwf	15	;volsfr
 18455  1620  30AA               	movlw	170
 18456  1621  008F               	movwf	15	;volsfr
 18457  1622  140F               	bsf	15,0	;volsfr
 18458                           
 18459                           ;GPports.c: 250: switch (GP2CONF & 0x03) {
 18460  1623  2E54               	goto	i1l5257
 18461  1624                     i1l1219:	
 18462                           ;GPports.c: 252: do { ANSELCbits.ANSC6 = 0; } while(0);
 18463                           
 18464  1624  0023               	movlb	3	; select bank3
 18465  1625  130E               	bcf	14,6	;volatile
 18466                           
 18467                           ;GPports.c: 253: do { LATCbits.LATC6 = 1; } while(0);
 18468  1626  0022               	movlb	2	; select bank2
 18469  1627  170E               	bsf	14,6	;volatile
 18470                           
 18471                           ;GPports.c: 254: do { TRISCbits.TRISC6 = 0; } while(0);
 18472  1628  0021               	movlb	1	; select bank1
 18473  1629  130E               	bcf	14,6	;volatile
 18474                           
 18475                           ;GPports.c: 255: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18476  162A  3055               	movlw	85
 18477  162B  003C               	movlb	28	; select bank28
 18478  162C  008F               	movwf	15	;volsfr
 18479  162D  30AA               	movlw	170
 18480  162E  008F               	movwf	15	;volsfr
 18481  162F  100F               	bcf	15,0	;volsfr
 18482                           
 18483                           ;GPports.c: 256: RC6PPSbits.RC6PPS = 0x0F;
 18484  1630  003D               	movlb	29	; select bank29
 18485  1631  0826               	movf	38,w	;volatile
 18486  1632  39E0               	andlw	-32
 18487  1633  380F               	iorlw	15
 18488  1634  00A6               	movwf	38	;volatile
 18489                           
 18490                           ;GPports.c: 257: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18491  1635  3055               	movlw	85
 18492  1636  003C               	movlb	28	; select bank28
 18493  1637  008F               	movwf	15	;volsfr
 18494  1638  30AA               	movlw	170
 18495  1639  008F               	movwf	15	;volsfr
 18496  163A  140F               	bsf	15,0	;volsfr
 18497                           
 18498                           ;GPports.c: 258: PWM4_Initialize();
 18499  163B  2681  3194         	fcall	_PWM4_Initialize
 18500                           
 18501                           ;GPports.c: 259: PWM_GP2(0);
 18502  163D  3000               	movlw	0
 18503  163E  268E  3194         	fcall	i1_PWM_GP2
 18504                           
 18505                           ;GPports.c: 260: break;
 18506  1640  2E6E               	goto	i1l5261
 18507  1641                     i1l1227:	
 18508                           ;GPports.c: 263: do { ANSELCbits.ANSC6 = 0; } while(0);
 18509                           
 18510  1641  0023               	movlb	3	; select bank3
 18511  1642  130E               	bcf	14,6	;volatile
 18512                           
 18513                           ;GPports.c: 264: do { TRISCbits.TRISC6 = 0; } while(0);
 18514  1643  0021               	movlb	1	; select bank1
 18515  1644  130E               	bcf	14,6	;volatile
 18516                           
 18517                           ;GPports.c: 265: do { ODCONCbits.ODCC6 = 0; } while(0);
 18518  1645  0025               	movlb	5	; select bank5
 18519  1646  130E               	bcf	14,6	;volatile
 18520  1647  2E6E               	goto	i1l5261
 18521  1648                     i1l1234:	
 18522                           ;GPports.c: 269: do { TRISCbits.TRISC6 = 1; } while(0);
 18523                           
 18524  1648  0021               	movlb	1	; select bank1
 18525  1649  170E               	bsf	14,6	;volatile
 18526                           
 18527                           ;GPports.c: 270: do { ANSELCbits.ANSC6 = 1; } while(0);
 18528  164A  0023               	movlb	3	; select bank3
 18529  164B  170E               	bsf	14,6	;volatile
 18530                           
 18531                           ;GPports.c: 271: PMD2bits.ADCMD = 0;
 18532  164C  0032               	movlb	18	; select bank18
 18533  164D  1293               	bcf	19,5	;volatile
 18534                           
 18535                           ;GPports.c: 272: break;
 18536  164E  2E6E               	goto	i1l5261
 18537  164F                     i1l1239:	
 18538                           ;GPports.c: 275: do { ANSELCbits.ANSC6 = 0; } while(0);
 18539                           
 18540  164F  0023               	movlb	3	; select bank3
 18541  1650  130E               	bcf	14,6	;volatile
 18542                           
 18543                           ;GPports.c: 276: do { TRISCbits.TRISC6 = 1; } while(0);
 18544  1651  0021               	movlb	1	; select bank1
 18545  1652  170E               	bsf	14,6	;volatile
 18546  1653  2E6E               	goto	i1l5261
 18547  1654                     i1l5257:	
 18548  1654  0020               	movlb	0	; select bank0
 18549  1655  0846               	movf	_GP2CONF,w	;volatile
 18550  1656  3903               	andlw	3
 18551  1657  00CC               	movwf	??_Config_GP2
 18552  1658  01CD               	clrf	??_Config_GP2+1
 18553                           
 18554                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18555                           ; Switch size 1, requested type "speed"
 18556                           ; Number of cases is 1, Range of values is 0 to 0
 18557                           ; switch strategies available:
 18558                           ; Name         Instructions Cycles
 18559                           ; simple_byte            4     3 (average)
 18560                           ; direct_byte            8     6 (fixed)
 18561                           ; jumptable            260     6 (fixed)
 18562                           ;	Chosen strategy is simple_byte
 18563  1659  084D               	movf	??_Config_GP2+1,w
 18564  165A  3A00               	xorlw	0	; case 0
 18565  165B  1903               	skipnz
 18566  165C  2E5E               	goto	i1l8617
 18567  165D  2E6E               	goto	i1l5261
 18568  165E                     i1l8617:	
 18569                           
 18570                           ; Switch size 1, requested type "speed"
 18571                           ; Number of cases is 4, Range of values is 0 to 3
 18572                           ; switch strategies available:
 18573                           ; Name         Instructions Cycles
 18574                           ; direct_byte           14     6 (fixed)
 18575                           ; simple_byte           13     7 (average)
 18576                           ; jumptable            260     6 (fixed)
 18577                           ;	Chosen strategy is direct_byte
 18578  165E  084C               	movf	??_Config_GP2,w
 18579  165F  0084               	movwf	4
 18580  1660  3004               	movlw	4
 18581  1661  0204               	subwf	4,w
 18582  1662  1803               	skipnc
 18583  1663  2E6E               	goto	i1l5261
 18584  1664  3191               	movlp	high i1S8619
 18585  1665  3504               	lslf	4,w
 18586  1666  3E20               	addlw	low i1S8619
 18587  1667  0082               	movwf	2
 18588  1668                     i1l1245:	
 18589                           ;GPports.c: 282: do { WPUCbits.WPUC6 = 0; } while(0);
 18590                           
 18591  1668  0024               	movlb	4	; select bank4
 18592  1669  130E               	bcf	14,6	;volatile
 18593  166A  0008               	return
 18594  166B                     i1l1249:	
 18595                           ;GPports.c: 285: do { WPUCbits.WPUC6 = 1; } while(0);
 18596                           
 18597  166B  0024               	movlb	4	; select bank4
 18598  166C  170E               	bsf	14,6	;volatile
 18599  166D  0008               	return
 18600  166E                     i1l5261:	
 18601  166E  0020               	movlb	0	; select bank0
 18602  166F  0846               	movf	_GP2CONF,w	;volatile
 18603  1670  3904               	andlw	4
 18604  1671  00CC               	movwf	??_Config_GP2
 18605  1672  01CD               	clrf	??_Config_GP2+1
 18606                           
 18607                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18608                           ; Switch size 1, requested type "speed"
 18609                           ; Number of cases is 1, Range of values is 0 to 0
 18610                           ; switch strategies available:
 18611                           ; Name         Instructions Cycles
 18612                           ; simple_byte            4     3 (average)
 18613                           ; direct_byte            8     6 (fixed)
 18614                           ; jumptable            260     6 (fixed)
 18615                           ;	Chosen strategy is simple_byte
 18616  1673  084D               	movf	??_Config_GP2+1,w
 18617  1674  3A00               	xorlw	0	; case 0
 18618  1675  1903               	skipnz
 18619  1676  2E78               	goto	i1l8621
 18620  1677  2E80               	goto	i1l1251
 18621  1678                     i1l8621:	
 18622                           
 18623                           ; Switch size 1, requested type "speed"
 18624                           ; Number of cases is 2, Range of values is 0 to 4
 18625                           ; switch strategies available:
 18626                           ; Name         Instructions Cycles
 18627                           ; simple_byte            7     4 (average)
 18628                           ; direct_byte           16     6 (fixed)
 18629                           ; jumptable            260     6 (fixed)
 18630                           ;	Chosen strategy is simple_byte
 18631  1678  084C               	movf	??_Config_GP2,w
 18632  1679  3A00               	xorlw	0	; case 0
 18633  167A  1903               	skipnz
 18634  167B  2E68               	goto	i1l1245
 18635  167C  3A04               	xorlw	4	; case 4
 18636  167D  1903               	skipnz
 18637  167E  2E6B               	goto	i1l1249
 18638  167F  2E80               	goto	i1l1251
 18639  1680                     i1l1251:	
 18640  1680  0008               	return
 18641  1681                     __end_of_Config_GP2:	
 18642  1681                     __ptext69:	
 18643 ;; *************** function _PWM4_Initialize *****************
 18644 ;; Defined at:
 18645 ;;		line 64 in file "mcc_generated_files/pwm4.c"
 18646 ;; Parameters:    Size  Location     Type
 18647 ;;		None
 18648 ;; Auto vars:     Size  Location     Type
 18649 ;;		None
 18650 ;; Return value:  Size  Location     Type
 18651 ;;                  1    wreg      void 
 18652 ;; Registers used:
 18653 ;;		wreg, status,2, status,0
 18654 ;; Tracked objects:
 18655 ;;		On entry : 1F/1C
 18656 ;;		On exit  : 1F/5
 18657 ;;		Unchanged: 0/0
 18658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18663 ;;Total ram usage:        0 bytes
 18664 ;; Hardware stack levels used:    1
 18665 ;; This function calls:
 18666 ;;		Nothing
 18667 ;; This function is called by:
 18668 ;;		_Config_GP2
 18669 ;; This function uses a non-reentrant model
 18670 ;;
 18671                           
 18672                           
 18673                           ;psect for function _PWM4_Initialize
 18674  1681                     _PWM4_Initialize:	
 18675                           
 18676                           ;pwm4.c: 69: CCP4CON = 0x8F;
 18677                           
 18678                           ;incstack = 0
 18679                           ; Regs used in _PWM4_Initialize: [wreg+status,2+status,0]
 18680  1681  308F               	movlw	143
 18681  1682  0026               	movlb	6	; select bank6
 18682  1683  0097               	movwf	23	;volatile
 18683                           
 18684                           ;pwm4.c: 72: CCPR4H = 0x03;
 18685  1684  3003               	movlw	3
 18686  1685  0096               	movwf	22	;volatile
 18687                           
 18688                           ;pwm4.c: 75: CCPR4L = 0xFF;
 18689  1686  30FF               	movlw	255
 18690  1687  0095               	movwf	21	;volatile
 18691                           
 18692                           ;pwm4.c: 78: CCPTMRSbits.C4TSEL = 0x1;
 18693  1688  0025               	movlb	5	; select bank5
 18694  1689  081F               	movf	31,w	;volatile
 18695  168A  393F               	andlw	-193
 18696  168B  3840               	iorlw	64
 18697  168C  009F               	movwf	31	;volatile
 18698  168D  0008               	return
 18699  168E                     __end_of_PWM4_Initialize:	
 18700  168E                     __ptext68:	
 18701 ;; *************** function i1_PWM_GP2 *****************
 18702 ;; Defined at:
 18703 ;;		line 64 in file "PWM.c"
 18704 ;; Parameters:    Size  Location     Type
 18705 ;;  duty            1    wreg     unsigned char 
 18706 ;; Auto vars:     Size  Location     Type
 18707 ;;  duty            1   12[COMMON] unsigned char 
 18708 ;; Return value:  Size  Location     Type
 18709 ;;                  1    wreg      void 
 18710 ;; Registers used:
 18711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18712 ;; Tracked objects:
 18713 ;;		On entry : 1F/5
 18714 ;;		On exit  : 1F/6
 18715 ;;		Unchanged: 0/0
 18716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18718 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18719 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18720 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18721 ;;Total ram usage:        7 bytes
 18722 ;; Hardware stack levels used:    1
 18723 ;; Hardware stack levels required when called:    1
 18724 ;; This function calls:
 18725 ;;		i1___wmul
 18726 ;; This function is called by:
 18727 ;;		_Config_GP2
 18728 ;; This function uses a non-reentrant model
 18729 ;;
 18730                           
 18731                           
 18732                           ;psect for function i1_PWM_GP2
 18733  168E                     i1_PWM_GP2:	
 18734                           
 18735                           ;incstack = 0
 18736                           ; Regs used in i1_PWM_GP2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18737                           ;i1PWM_GP2@duty stored from wreg
 18738  168E  00FC               	movwf	i1PWM_GP2@duty
 18739                           
 18740                           ;PWM.c: 66: if (duty == 0) {
 18741  168F  087C               	movf	i1PWM_GP2@duty,w
 18742  1690  1D03               	btfss	3,2
 18743  1691  2EA6               	goto	i1l4993
 18744                           
 18745                           ;PWM.c: 68: do { LATCbits.LATC6 = 1; } while(0);
 18746  1692  0022               	movlb	2	; select bank2
 18747  1693  170E               	bsf	14,6	;volatile
 18748                           
 18749                           ;PWM.c: 69: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18750  1694  3055               	movlw	85
 18751  1695  003C               	movlb	28	; select bank28
 18752  1696  008F               	movwf	15	;volsfr
 18753  1697  30AA               	movlw	170
 18754  1698  008F               	movwf	15	;volsfr
 18755  1699  100F               	bcf	15,0	;volsfr
 18756                           
 18757                           ;PWM.c: 70: RC6PPSbits.RC6PPS = 0x00;
 18758  169A  30E0               	movlw	-32
 18759  169B  003D               	movlb	29	; select bank29
 18760  169C  05A6               	andwf	38,f	;volatile
 18761                           
 18762                           ;PWM.c: 71: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18763  169D  3055               	movlw	85
 18764  169E  003C               	movlb	28	; select bank28
 18765  169F  008F               	movwf	15	;volsfr
 18766  16A0  30AA               	movlw	170
 18767  16A1  008F               	movwf	15	;volsfr
 18768  16A2  140F               	bsf	15,0	;volsfr
 18769                           
 18770                           ;PWM.c: 72: CCP4CON = 0;
 18771  16A3  0026               	movlb	6	; select bank6
 18772  16A4  0197               	clrf	23	;volatile
 18773  16A5  0008               	return
 18774  16A6                     i1l4993:	
 18775                           
 18776                           ;PWM.c: 74: };PWM.c: 75: if (CCP4CON == 0) {
 18777  16A6  0026               	movlb	6	; select bank6
 18778  16A7  0817               	movf	23,w	;volatile
 18779  16A8  1D03               	btfss	3,2
 18780  16A9  2EBE               	goto	i1l1578
 18781                           
 18782                           ;PWM.c: 76: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18783  16AA  3055               	movlw	85
 18784  16AB  003C               	movlb	28	; select bank28
 18785  16AC  008F               	movwf	15	;volsfr
 18786  16AD  30AA               	movlw	170
 18787  16AE  008F               	movwf	15	;volsfr
 18788  16AF  100F               	bcf	15,0	;volsfr
 18789                           
 18790                           ;PWM.c: 77: RC6PPSbits.RC6PPS = 0x0F;
 18791  16B0  003D               	movlb	29	; select bank29
 18792  16B1  0826               	movf	38,w	;volatile
 18793  16B2  39E0               	andlw	-32
 18794  16B3  380F               	iorlw	15
 18795  16B4  00A6               	movwf	38	;volatile
 18796                           
 18797                           ;PWM.c: 78: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18798  16B5  3055               	movlw	85
 18799  16B6  003C               	movlb	28	; select bank28
 18800  16B7  008F               	movwf	15	;volsfr
 18801  16B8  30AA               	movlw	170
 18802  16B9  008F               	movwf	15	;volsfr
 18803  16BA  140F               	bsf	15,0	;volsfr
 18804                           
 18805                           ;PWM.c: 79: CCP4CON = 0x8F;
 18806  16BB  308F               	movlw	143
 18807  16BC  0026               	movlb	6	; select bank6
 18808  16BD  0097               	movwf	23	;volatile
 18809  16BE                     i1l1578:	
 18810                           
 18811                           ;PWM.c: 80: };PWM.c: 81: if (GAMMAGP2 == 0) {
 18812  16BE  0020               	movlb	0	; select bank0
 18813  16BF  083C               	movf	_GAMMAGP2,w	;volatile
 18814  16C0  1D03               	btfss	3,2
 18815  16C1  2ECF               	goto	i1l5011
 18816                           
 18817                           ;PWM.c: 83: CCPR4 = (uint16_t) (0xff - duty) << 2;
 18818  16C2  097C               	comf	i1PWM_GP2@duty,w
 18819  16C3  00F6               	movwf	??i1_PWM_GP2
 18820  16C4  01F7               	clrf	??i1_PWM_GP2+1
 18821  16C5  35F6               	lslf	??i1_PWM_GP2,f
 18822  16C6  0DF7               	rlf	??i1_PWM_GP2+1,f
 18823  16C7  35F6               	lslf	??i1_PWM_GP2,f
 18824  16C8  0DF7               	rlf	??i1_PWM_GP2+1,f
 18825  16C9  0876               	movf	??i1_PWM_GP2,w
 18826  16CA  0026               	movlb	6	; select bank6
 18827  16CB  0095               	movwf	21	;volatile
 18828  16CC  0877               	movf	??i1_PWM_GP2+1,w
 18829  16CD  0096               	movwf	22	;volatile
 18830                           
 18831                           ;PWM.c: 85: } else {
 18832  16CE  0008               	return
 18833  16CF                     i1l5011:	
 18834                           
 18835                           ;PWM.c: 86: if (duty > 100)
 18836  16CF  3065               	movlw	101
 18837  16D0  027C               	subwf	i1PWM_GP2@duty,w
 18838  16D1  1C03               	skipc
 18839  16D2  2ED5               	goto	i1l5015
 18840                           
 18841                           ;PWM.c: 87: duty = 100;
 18842  16D3  3064               	movlw	100
 18843  16D4  00FC               	movwf	i1PWM_GP2@duty
 18844  16D5                     i1l5015:	
 18845                           
 18846                           ;PWM.c: 88: CCPR4 = (uint16_t) gamma_table[GAMMAGP2 - 1U][(duty - 1U)];
 18847  16D5  087C               	movf	i1PWM_GP2@duty,w
 18848  16D6  00F6               	movwf	??i1_PWM_GP2
 18849  16D7  01F7               	clrf	??i1_PWM_GP2+1
 18850  16D8  35F6               	lslf	??i1_PWM_GP2,f
 18851  16D9  0DF7               	rlf	??i1_PWM_GP2+1,f
 18852  16DA  083C               	movf	_GAMMAGP2,w	;volatile
 18853  16DB  00F0               	movwf	i1___wmul@multiplier
 18854  16DC  30C8               	movlw	200
 18855  16DD  01F1               	clrf	i1___wmul@multiplier+1
 18856  16DE  00F2               	movwf	i1___wmul@multiplicand
 18857  16DF  01F3               	clrf	i1___wmul@multiplicand+1
 18858  16E0  2584               	fcall	i1___wmul
 18859  16E1  3018               	movlw	low ((_gamma_table| (0+32768)+65334))
 18860  16E2  00F8               	movwf	??i1_PWM_GP2+2
 18861  16E3  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 18862  16E4  00F9               	movwf	??i1_PWM_GP2+3
 18863  16E5  0870               	movf	?i1___wmul,w
 18864  16E6  0778               	addwf	??i1_PWM_GP2+2,w
 18865  16E7  00FA               	movwf	??i1_PWM_GP2+4
 18866  16E8  0871               	movf	?i1___wmul+1,w
 18867  16E9  3D79               	addwfc	??i1_PWM_GP2+3,w
 18868  16EA  00FB               	movwf	??i1_PWM_GP2+5
 18869  16EB  087A               	movf	??i1_PWM_GP2+4,w
 18870  16EC  0776               	addwf	??i1_PWM_GP2,w
 18871  16ED  0084               	movwf	4
 18872  16EE  087B               	movf	??i1_PWM_GP2+5,w
 18873  16EF  3D77               	addwfc	??i1_PWM_GP2+1,w
 18874  16F0  0085               	movwf	5
 18875  16F1  3F00               	moviw [0]fsr0
 18876  16F2  0026               	movlb	6	; select bank6
 18877  16F3  0095               	movwf	21	;volatile
 18878  16F4  3F01               	moviw [1]fsr0
 18879  16F5  0096               	movwf	22	;volatile
 18880  16F6  0008               	return
 18881  16F7                     __end_ofi1_PWM_GP2:	
 18882  16F7                     __ptext64:	
 18883 ;; *************** function _Config_GP3 *****************
 18884 ;; Defined at:
 18885 ;;		line 295 in file "GPports.c"
 18886 ;; Parameters:    Size  Location     Type
 18887 ;;		None
 18888 ;; Auto vars:     Size  Location     Type
 18889 ;;		None
 18890 ;; Return value:  Size  Location     Type
 18891 ;;                  1    wreg      void 
 18892 ;; Registers used:
 18893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18894 ;; Tracked objects:
 18895 ;;		On entry : 1F/0
 18896 ;;		On exit  : 1B/0
 18897 ;;		Unchanged: 0/0
 18898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18901 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18902 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18903 ;;Total ram usage:        2 bytes
 18904 ;; Hardware stack levels used:    1
 18905 ;; Hardware stack levels required when called:    2
 18906 ;; This function calls:
 18907 ;;		_PWM1_Initialize
 18908 ;;		i1_PWM_GP3_RLED
 18909 ;; This function is called by:
 18910 ;;		_RegisterWrite
 18911 ;; This function uses a non-reentrant model
 18912 ;;
 18913                           
 18914                           
 18915                           ;psect for function _Config_GP3
 18916  16F7                     _Config_GP3:	
 18917                           
 18918                           ;GPports.c: 296: CCP1CON = 0;
 18919                           
 18920                           ;incstack = 0
 18921                           ; Regs used in _Config_GP3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18922  16F7  0025               	movlb	5	; select bank5
 18923  16F8  0193               	clrf	19	;volatile
 18924                           
 18925                           ;GPports.c: 297: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18926  16F9  3055               	movlw	85
 18927  16FA  003C               	movlb	28	; select bank28
 18928  16FB  008F               	movwf	15	;volsfr
 18929  16FC  30AA               	movlw	170
 18930  16FD  008F               	movwf	15	;volsfr
 18931  16FE  100F               	bcf	15,0	;volsfr
 18932                           
 18933                           ;GPports.c: 298: RC5PPSbits.RC5PPS = 0x00;
 18934  16FF  30E0               	movlw	-32
 18935  1700  003D               	movlb	29	; select bank29
 18936  1701  05A5               	andwf	37,f	;volatile
 18937                           
 18938                           ;GPports.c: 299: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18939  1702  3055               	movlw	85
 18940  1703  003C               	movlb	28	; select bank28
 18941  1704  008F               	movwf	15	;volsfr
 18942  1705  30AA               	movlw	170
 18943  1706  008F               	movwf	15	;volsfr
 18944  1707  140F               	bsf	15,0	;volsfr
 18945                           
 18946                           ;GPports.c: 301: switch (GP3CONF & 0x03) {
 18947  1708  2F39               	goto	i1l5309
 18948  1709                     i1l1256:	
 18949                           ;GPports.c: 303: do { ANSELCbits.ANSC5 = 0; } while(0);
 18950                           
 18951  1709  0023               	movlb	3	; select bank3
 18952  170A  128E               	bcf	14,5	;volatile
 18953                           
 18954                           ;GPports.c: 304: do { LATCbits.LATC5 = 1; } while(0);
 18955  170B  0022               	movlb	2	; select bank2
 18956  170C  168E               	bsf	14,5	;volatile
 18957                           
 18958                           ;GPports.c: 305: do { TRISCbits.TRISC5 = 0; } while(0);
 18959  170D  0021               	movlb	1	; select bank1
 18960  170E  128E               	bcf	14,5	;volatile
 18961                           
 18962                           ;GPports.c: 306: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 18963  170F  3055               	movlw	85
 18964  1710  003C               	movlb	28	; select bank28
 18965  1711  008F               	movwf	15	;volsfr
 18966  1712  30AA               	movlw	170
 18967  1713  008F               	movwf	15	;volsfr
 18968  1714  100F               	bcf	15,0	;volsfr
 18969                           
 18970                           ;GPports.c: 307: RC5PPSbits.RC5PPS = 0x0C;
 18971  1715  003D               	movlb	29	; select bank29
 18972  1716  0825               	movf	37,w	;volatile
 18973  1717  39E0               	andlw	-32
 18974  1718  380C               	iorlw	12
 18975  1719  00A5               	movwf	37	;volatile
 18976                           
 18977                           ;GPports.c: 308: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 18978  171A  3055               	movlw	85
 18979  171B  003C               	movlb	28	; select bank28
 18980  171C  008F               	movwf	15	;volsfr
 18981  171D  30AA               	movlw	170
 18982  171E  008F               	movwf	15	;volsfr
 18983  171F  140F               	bsf	15,0	;volsfr
 18984                           
 18985                           ;GPports.c: 309: PWM1_Initialize();
 18986  1720  2766  3194         	fcall	_PWM1_Initialize
 18987                           
 18988                           ;GPports.c: 310: PWM_GP3_RLED(0);
 18989  1722  3000               	movlw	0
 18990  1723  2772  3194         	fcall	i1_PWM_GP3_RLED
 18991                           
 18992                           ;GPports.c: 311: break;
 18993  1725  2F53               	goto	i1l5313
 18994  1726                     i1l1264:	
 18995                           ;GPports.c: 314: do { ANSELCbits.ANSC5 = 0; } while(0);
 18996                           
 18997  1726  0023               	movlb	3	; select bank3
 18998  1727  128E               	bcf	14,5	;volatile
 18999                           
 19000                           ;GPports.c: 315: do { TRISCbits.TRISC5 = 0; } while(0);
 19001  1728  0021               	movlb	1	; select bank1
 19002  1729  128E               	bcf	14,5	;volatile
 19003                           
 19004                           ;GPports.c: 316: do { ODCONCbits.ODCC5 = 0; } while(0);
 19005  172A  0025               	movlb	5	; select bank5
 19006  172B  128E               	bcf	14,5	;volatile
 19007  172C  2F53               	goto	i1l5313
 19008  172D                     i1l1271:	
 19009                           ;GPports.c: 320: do { TRISCbits.TRISC5 = 1; } while(0);
 19010                           
 19011  172D  0021               	movlb	1	; select bank1
 19012  172E  168E               	bsf	14,5	;volatile
 19013                           
 19014                           ;GPports.c: 321: do { ANSELCbits.ANSC5 = 1; } while(0);
 19015  172F  0023               	movlb	3	; select bank3
 19016  1730  168E               	bsf	14,5	;volatile
 19017                           
 19018                           ;GPports.c: 322: PMD2bits.ADCMD = 0;
 19019  1731  0032               	movlb	18	; select bank18
 19020  1732  1293               	bcf	19,5	;volatile
 19021                           
 19022                           ;GPports.c: 323: break;
 19023  1733  2F53               	goto	i1l5313
 19024  1734                     i1l1276:	
 19025                           ;GPports.c: 326: do { ANSELCbits.ANSC5 = 0; } while(0);
 19026                           
 19027  1734  0023               	movlb	3	; select bank3
 19028  1735  128E               	bcf	14,5	;volatile
 19029                           
 19030                           ;GPports.c: 327: do { TRISCbits.TRISC5 = 1; } while(0);
 19031  1736  0021               	movlb	1	; select bank1
 19032  1737  168E               	bsf	14,5	;volatile
 19033  1738  2F53               	goto	i1l5313
 19034  1739                     i1l5309:	
 19035  1739  0020               	movlb	0	; select bank0
 19036  173A  0845               	movf	_GP3CONF,w	;volatile
 19037  173B  3903               	andlw	3
 19038  173C  00CC               	movwf	??_Config_GP3
 19039  173D  01CD               	clrf	??_Config_GP3+1
 19040                           
 19041                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19042                           ; Switch size 1, requested type "speed"
 19043                           ; Number of cases is 1, Range of values is 0 to 0
 19044                           ; switch strategies available:
 19045                           ; Name         Instructions Cycles
 19046                           ; simple_byte            4     3 (average)
 19047                           ; direct_byte            8     6 (fixed)
 19048                           ; jumptable            260     6 (fixed)
 19049                           ;	Chosen strategy is simple_byte
 19050  173E  084D               	movf	??_Config_GP3+1,w
 19051  173F  3A00               	xorlw	0	; case 0
 19052  1740  1903               	skipnz
 19053  1741  2F43               	goto	i1l8611
 19054  1742  2F53               	goto	i1l5313
 19055  1743                     i1l8611:	
 19056                           
 19057                           ; Switch size 1, requested type "speed"
 19058                           ; Number of cases is 4, Range of values is 0 to 3
 19059                           ; switch strategies available:
 19060                           ; Name         Instructions Cycles
 19061                           ; direct_byte           14     6 (fixed)
 19062                           ; simple_byte           13     7 (average)
 19063                           ; jumptable            260     6 (fixed)
 19064                           ;	Chosen strategy is direct_byte
 19065  1743  084C               	movf	??_Config_GP3,w
 19066  1744  0084               	movwf	4
 19067  1745  3004               	movlw	4
 19068  1746  0204               	subwf	4,w
 19069  1747  1803               	skipnc
 19070  1748  2F53               	goto	i1l5313
 19071  1749  3191               	movlp	high i1S8613
 19072  174A  3504               	lslf	4,w
 19073  174B  3E18               	addlw	low i1S8613
 19074  174C  0082               	movwf	2
 19075  174D                     i1l1282:	
 19076                           ;GPports.c: 333: do { WPUCbits.WPUC5 = 0; } while(0);
 19077                           
 19078  174D  0024               	movlb	4	; select bank4
 19079  174E  128E               	bcf	14,5	;volatile
 19080  174F  0008               	return
 19081  1750                     i1l1286:	
 19082                           ;GPports.c: 336: do { WPUCbits.WPUC5 = 1; } while(0);
 19083                           
 19084  1750  0024               	movlb	4	; select bank4
 19085  1751  168E               	bsf	14,5	;volatile
 19086  1752  0008               	return
 19087  1753                     i1l5313:	
 19088  1753  0020               	movlb	0	; select bank0
 19089  1754  0845               	movf	_GP3CONF,w	;volatile
 19090  1755  3904               	andlw	4
 19091  1756  00CC               	movwf	??_Config_GP3
 19092  1757  01CD               	clrf	??_Config_GP3+1
 19093                           
 19094                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19095                           ; Switch size 1, requested type "speed"
 19096                           ; Number of cases is 1, Range of values is 0 to 0
 19097                           ; switch strategies available:
 19098                           ; Name         Instructions Cycles
 19099                           ; simple_byte            4     3 (average)
 19100                           ; direct_byte            8     6 (fixed)
 19101                           ; jumptable            260     6 (fixed)
 19102                           ;	Chosen strategy is simple_byte
 19103  1758  084D               	movf	??_Config_GP3+1,w
 19104  1759  3A00               	xorlw	0	; case 0
 19105  175A  1903               	skipnz
 19106  175B  2F5D               	goto	i1l8615
 19107  175C  2F65               	goto	i1l1288
 19108  175D                     i1l8615:	
 19109                           
 19110                           ; Switch size 1, requested type "speed"
 19111                           ; Number of cases is 2, Range of values is 0 to 4
 19112                           ; switch strategies available:
 19113                           ; Name         Instructions Cycles
 19114                           ; simple_byte            7     4 (average)
 19115                           ; direct_byte           16     6 (fixed)
 19116                           ; jumptable            260     6 (fixed)
 19117                           ;	Chosen strategy is simple_byte
 19118  175D  084C               	movf	??_Config_GP3,w
 19119  175E  3A00               	xorlw	0	; case 0
 19120  175F  1903               	skipnz
 19121  1760  2F4D               	goto	i1l1282
 19122  1761  3A04               	xorlw	4	; case 4
 19123  1762  1903               	skipnz
 19124  1763  2F50               	goto	i1l1286
 19125  1764  2F65               	goto	i1l1288
 19126  1765                     i1l1288:	
 19127  1765  0008               	return
 19128  1766                     __end_of_Config_GP3:	
 19129  1766                     __ptext66:	
 19130 ;; *************** function _PWM1_Initialize *****************
 19131 ;; Defined at:
 19132 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 19133 ;; Parameters:    Size  Location     Type
 19134 ;;		None
 19135 ;; Auto vars:     Size  Location     Type
 19136 ;;		None
 19137 ;; Return value:  Size  Location     Type
 19138 ;;                  1    wreg      void 
 19139 ;; Registers used:
 19140 ;;		wreg, status,2, status,0
 19141 ;; Tracked objects:
 19142 ;;		On entry : 2/1
 19143 ;;		On exit  : 1F/5
 19144 ;;		Unchanged: 0/0
 19145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19150 ;;Total ram usage:        0 bytes
 19151 ;; Hardware stack levels used:    1
 19152 ;; This function calls:
 19153 ;;		Nothing
 19154 ;; This function is called by:
 19155 ;;		_RGB_EncoderMode
 19156 ;;		_Config_GP3
 19157 ;; This function uses a non-reentrant model
 19158 ;;
 19159                           
 19160                           
 19161                           ;psect for function _PWM1_Initialize
 19162  1766                     _PWM1_Initialize:	
 19163                           
 19164                           ;pwm1.c: 69: CCP1CON = 0x8F;
 19165                           
 19166                           ;incstack = 0
 19167                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 19168  1766  308F               	movlw	143
 19169  1767  0025               	movlb	5	; select bank5
 19170  1768  0093               	movwf	19	;volatile
 19171                           
 19172                           ;pwm1.c: 72: CCPR1H = 0x03;
 19173  1769  3003               	movlw	3
 19174  176A  0092               	movwf	18	;volatile
 19175                           
 19176                           ;pwm1.c: 75: CCPR1L = 0xFF;
 19177  176B  30FF               	movlw	255
 19178  176C  0091               	movwf	17	;volatile
 19179                           
 19180                           ;pwm1.c: 78: CCPTMRSbits.C1TSEL = 0x1;
 19181  176D  081F               	movf	31,w	;volatile
 19182  176E  39FC               	andlw	-4
 19183  176F  3801               	iorlw	1
 19184  1770  009F               	movwf	31	;volatile
 19185  1771  0008               	return
 19186  1772                     __end_of_PWM1_Initialize:	
 19187  1772                     __ptext65:	
 19188 ;; *************** function i1_PWM_GP3_RLED *****************
 19189 ;; Defined at:
 19190 ;;		line 95 in file "PWM.c"
 19191 ;; Parameters:    Size  Location     Type
 19192 ;;  duty            1    wreg     unsigned char 
 19193 ;; Auto vars:     Size  Location     Type
 19194 ;;  duty            1   12[COMMON] unsigned char 
 19195 ;; Return value:  Size  Location     Type
 19196 ;;                  1    wreg      void 
 19197 ;; Registers used:
 19198 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19199 ;; Tracked objects:
 19200 ;;		On entry : 1F/5
 19201 ;;		On exit  : 1F/5
 19202 ;;		Unchanged: 0/0
 19203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19206 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19207 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19208 ;;Total ram usage:        7 bytes
 19209 ;; Hardware stack levels used:    1
 19210 ;; Hardware stack levels required when called:    1
 19211 ;; This function calls:
 19212 ;;		i1___wmul
 19213 ;; This function is called by:
 19214 ;;		_Config_GP3
 19215 ;; This function uses a non-reentrant model
 19216 ;;
 19217                           
 19218                           
 19219                           ;psect for function i1_PWM_GP3_RLED
 19220  1772                     i1_PWM_GP3_RLED:	
 19221                           
 19222                           ;incstack = 0
 19223                           ; Regs used in i1_PWM_GP3_RLED: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19224                           ;i1PWM_GP3_RLED@duty stored from wreg
 19225  1772  00FC               	movwf	i1PWM_GP3_RLED@duty
 19226                           
 19227                           ;PWM.c: 97: if (duty == 0) {
 19228  1773  087C               	movf	i1PWM_GP3_RLED@duty,w
 19229  1774  1D03               	btfss	3,2
 19230  1775  2F8A               	goto	i1l5035
 19231                           
 19232                           ;PWM.c: 99: do { LATCbits.LATC5 = 1; } while(0);
 19233  1776  0022               	movlb	2	; select bank2
 19234  1777  168E               	bsf	14,5	;volatile
 19235                           
 19236                           ;PWM.c: 100: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 19237  1778  3055               	movlw	85
 19238  1779  003C               	movlb	28	; select bank28
 19239  177A  008F               	movwf	15	;volsfr
 19240  177B  30AA               	movlw	170
 19241  177C  008F               	movwf	15	;volsfr
 19242  177D  100F               	bcf	15,0	;volsfr
 19243                           
 19244                           ;PWM.c: 101: RC5PPSbits.RC5PPS = 0x00;
 19245  177E  30E0               	movlw	-32
 19246  177F  003D               	movlb	29	; select bank29
 19247  1780  05A5               	andwf	37,f	;volatile
 19248                           
 19249                           ;PWM.c: 102: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 19250  1781  3055               	movlw	85
 19251  1782  003C               	movlb	28	; select bank28
 19252  1783  008F               	movwf	15	;volsfr
 19253  1784  30AA               	movlw	170
 19254  1785  008F               	movwf	15	;volsfr
 19255  1786  140F               	bsf	15,0	;volsfr
 19256                           
 19257                           ;PWM.c: 103: CCP1CON = 0;
 19258  1787  0025               	movlb	5	; select bank5
 19259  1788  0193               	clrf	19	;volatile
 19260  1789  0008               	return
 19261  178A                     i1l5035:	
 19262                           
 19263                           ;PWM.c: 105: };PWM.c: 107: if (CCP1CON == 0) {
 19264  178A  0813               	movf	19,w	;volatile
 19265  178B  1D03               	btfss	3,2
 19266  178C  2FA4               	goto	i1l1588
 19267                           
 19268                           ;PWM.c: 108: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x00;
 19269  178D  3055               	movlw	85
 19270  178E  003C               	movlb	28	; select bank28
 19271  178F  008F               	movwf	15	;volsfr
 19272  1790  30AA               	movlw	170
 19273  1791  008F               	movwf	15	;volsfr
 19274  1792  100F               	bcf	15,0	;volsfr
 19275                           
 19276                           ;PWM.c: 109: RC5PPSbits.RC5PPS = 0x0C;
 19277  1793  003D               	movlb	29	; select bank29
 19278  1794  0825               	movf	37,w	;volatile
 19279  1795  39E0               	andlw	-32
 19280  1796  380C               	iorlw	12
 19281  1797  00A5               	movwf	37	;volatile
 19282                           
 19283                           ;PWM.c: 110: PPSLOCK = 0x55; PPSLOCK = 0xAA; PPSLOCKbits.PPSLOCKED = 0x01;
 19284  1798  3055               	movlw	85
 19285  1799  003C               	movlb	28	; select bank28
 19286  179A  008F               	movwf	15	;volsfr
 19287  179B  30AA               	movlw	170
 19288  179C  008F               	movwf	15	;volsfr
 19289  179D  140F               	bsf	15,0	;volsfr
 19290                           
 19291                           ;PWM.c: 111: CCP1CON = 0x8F;
 19292  179E  308F               	movlw	143
 19293  179F  0025               	movlb	5	; select bank5
 19294  17A0  0093               	movwf	19	;volatile
 19295                           
 19296                           ;PWM.c: 112: CCPR1 = 0xFFFF;
 19297  17A1  30FF               	movlw	255
 19298  17A2  0092               	movwf	18	;volatile
 19299  17A3  0091               	movwf	17	;volatile
 19300  17A4                     i1l1588:	
 19301                           
 19302                           ;PWM.c: 113: };PWM.c: 115: if (GAMMAGP3_RLED == 0) {
 19303  17A4  0020               	movlb	0	; select bank0
 19304  17A5  083B               	movf	_GAMMAGP3_RLED,w	;volatile
 19305  17A6  1D03               	btfss	3,2
 19306  17A7  2FB5               	goto	i1l5055
 19307                           
 19308                           ;PWM.c: 117: CCPR1 = (uint16_t) (0xff - duty) << 2;
 19309  17A8  097C               	comf	i1PWM_GP3_RLED@duty,w
 19310  17A9  00F6               	movwf	??i1_PWM_GP3_RLED
 19311  17AA  01F7               	clrf	??i1_PWM_GP3_RLED+1
 19312  17AB  35F6               	lslf	??i1_PWM_GP3_RLED,f
 19313  17AC  0DF7               	rlf	??i1_PWM_GP3_RLED+1,f
 19314  17AD  35F6               	lslf	??i1_PWM_GP3_RLED,f
 19315  17AE  0DF7               	rlf	??i1_PWM_GP3_RLED+1,f
 19316  17AF  0876               	movf	??i1_PWM_GP3_RLED,w
 19317  17B0  0025               	movlb	5	; select bank5
 19318  17B1  0091               	movwf	17	;volatile
 19319  17B2  0877               	movf	??i1_PWM_GP3_RLED+1,w
 19320  17B3  0092               	movwf	18	;volatile
 19321                           
 19322                           ;PWM.c: 119: } else {
 19323  17B4  0008               	return
 19324  17B5                     i1l5055:	
 19325                           
 19326                           ;PWM.c: 120: if (duty > 100)
 19327  17B5  3065               	movlw	101
 19328  17B6  027C               	subwf	i1PWM_GP3_RLED@duty,w
 19329  17B7  1C03               	skipc
 19330  17B8  2FBB               	goto	i1l5059
 19331                           
 19332                           ;PWM.c: 121: duty = 100;
 19333  17B9  3064               	movlw	100
 19334  17BA  00FC               	movwf	i1PWM_GP3_RLED@duty
 19335  17BB                     i1l5059:	
 19336                           
 19337                           ;PWM.c: 123: CCPR1 = gamma_table[GAMMAGP3_RLED - 1U][(duty - 1U)];
 19338  17BB  087C               	movf	i1PWM_GP3_RLED@duty,w
 19339  17BC  00F6               	movwf	??i1_PWM_GP3_RLED
 19340  17BD  01F7               	clrf	??i1_PWM_GP3_RLED+1
 19341  17BE  35F6               	lslf	??i1_PWM_GP3_RLED,f
 19342  17BF  0DF7               	rlf	??i1_PWM_GP3_RLED+1,f
 19343  17C0  083B               	movf	_GAMMAGP3_RLED,w	;volatile
 19344  17C1  00F0               	movwf	i1___wmul@multiplier
 19345  17C2  30C8               	movlw	200
 19346  17C3  01F1               	clrf	i1___wmul@multiplier+1
 19347  17C4  00F2               	movwf	i1___wmul@multiplicand
 19348  17C5  01F3               	clrf	i1___wmul@multiplicand+1
 19349  17C6  2584               	fcall	i1___wmul
 19350  17C7  3018               	movlw	low ((_gamma_table| (0+32768)+65334))
 19351  17C8  00F8               	movwf	??i1_PWM_GP3_RLED+2
 19352  17C9  3086               	movlw	high ((_gamma_table| (0+32768)+65334))
 19353  17CA  00F9               	movwf	??i1_PWM_GP3_RLED+3
 19354  17CB  0870               	movf	?i1___wmul,w
 19355  17CC  0778               	addwf	??i1_PWM_GP3_RLED+2,w
 19356  17CD  00FA               	movwf	??i1_PWM_GP3_RLED+4
 19357  17CE  0871               	movf	?i1___wmul+1,w
 19358  17CF  3D79               	addwfc	??i1_PWM_GP3_RLED+3,w
 19359  17D0  00FB               	movwf	??i1_PWM_GP3_RLED+5
 19360  17D1  087A               	movf	??i1_PWM_GP3_RLED+4,w
 19361  17D2  0776               	addwf	??i1_PWM_GP3_RLED,w
 19362  17D3  0084               	movwf	4
 19363  17D4  087B               	movf	??i1_PWM_GP3_RLED+5,w
 19364  17D5  3D77               	addwfc	??i1_PWM_GP3_RLED+1,w
 19365  17D6  0085               	movwf	5
 19366  17D7  3F00               	moviw [0]fsr0
 19367  17D8  0025               	movlb	5	; select bank5
 19368  17D9  0091               	movwf	17	;volatile
 19369  17DA  3F01               	moviw [1]fsr0
 19370  17DB  0092               	movwf	18	;volatile
 19371  17DC  0008               	return
 19372  17DD                     __end_ofi1_PWM_GP3_RLED:	
 19373  17DD                     __ptext55:	
 19374 ;; *************** function _SecondConfig *****************
 19375 ;; Defined at:
 19376 ;;		line 583 in file "i2c_register.c"
 19377 ;; Parameters:    Size  Location     Type
 19378 ;;		None
 19379 ;; Auto vars:     Size  Location     Type
 19380 ;;		None
 19381 ;; Return value:  Size  Location     Type
 19382 ;;                  1    wreg      void 
 19383 ;; Registers used:
 19384 ;;		wreg, status,2, status,0, pclath, cstack
 19385 ;; Tracked objects:
 19386 ;;		On entry : 1F/0
 19387 ;;		On exit  : 1F/1
 19388 ;;		Unchanged: 0/0
 19389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19394 ;;Total ram usage:        0 bytes
 19395 ;; Hardware stack levels used:    1
 19396 ;; Hardware stack levels required when called:    1
 19397 ;; This function calls:
 19398 ;;		_I2C1_Initialize_ClockStreach
 19399 ;;		i1_I2C1_Initialize
 19400 ;; This function is called by:
 19401 ;;		_RegisterWrite
 19402 ;; This function uses a non-reentrant model
 19403 ;;
 19404                           
 19405                           
 19406                           ;psect for function _SecondConfig
 19407  17DD                     _SecondConfig:	
 19408                           
 19409                           ;i2c_register.c: 586: if (S_CKSRC == 1) {
 19410                           
 19411                           ;incstack = 0
 19412                           ; Regs used in _SecondConfig: [wreg+status,2+status,0+pclath+cstack]
 19413  17DD  0021               	movlb	1	; select bank1
 19414  17DE  0B3C               	decfsz	_S_CKSRC^(0+128),w	;volatile
 19415  17DF  2FE2               	goto	i1l5363
 19416                           
 19417                           ;i2c_register.c: 587: I2C1_Initialize_ClockStreach();
 19418  17E0  3191  29BA         	ljmp	i1l4853
 19419  17E2                     i1l5363:	
 19420                           ;i2c_register.c: 588: } else {
 19421                           
 19422                           
 19423                           ;i2c_register.c: 589: I2C1_Initialize();
 19424  17E2  3191  2198         	fcall	i1_I2C1_Initialize
 19425  17E4  0008               	return
 19426  17E5                     __end_of_SecondConfig:	
 19427  17E5                     __ptext54:	
 19428 ;; *************** function _SecondDataSplit *****************
 19429 ;; Defined at:
 19430 ;;		line 124 in file "DataVariable.c"
 19431 ;; Parameters:    Size  Location     Type
 19432 ;;		None
 19433 ;; Auto vars:     Size  Location     Type
 19434 ;;		None
 19435 ;; Return value:  Size  Location     Type
 19436 ;;                  1    wreg      void 
 19437 ;; Registers used:
 19438 ;;		wreg, status,2, status,0
 19439 ;; Tracked objects:
 19440 ;;		On entry : 1F/1
 19441 ;;		On exit  : 1F/0
 19442 ;;		Unchanged: 0/0
 19443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19448 ;;Total ram usage:        0 bytes
 19449 ;; Hardware stack levels used:    1
 19450 ;; This function calls:
 19451 ;;		Nothing
 19452 ;; This function is called by:
 19453 ;;		_RegisterWrite
 19454 ;; This function uses a non-reentrant model
 19455 ;;
 19456                           
 19457                           
 19458                           ;psect for function _SecondDataSplit
 19459  17E5                     _SecondDataSplit:	
 19460                           
 19461                           ;DataVariable.c: 126: S_CKSRC = GCONF2 & 0x01U;
 19462                           
 19463                           ;incstack = 0
 19464                           ; Regs used in _SecondDataSplit: [wreg+status,2+status,0]
 19465  17E5  0842               	movf	_GCONF2^(0+128),w	;volatile
 19466  17E6  00BC               	movwf	_S_CKSRC^(0+128)	;volatile
 19467  17E7  3001               	movlw	1
 19468  17E8  05BC               	andwf	_S_CKSRC^(0+128),f	;volatile
 19469                           
 19470                           ;DataVariable.c: 127: S_RELATIVE = (bool) (GCONF2 >> 1) & 0x01U;
 19471  17E9  3642               	lsrf	_GCONF2^(0+128),w	;volatile
 19472  17EA  0020               	movlb	0	; select bank0
 19473  17EB  00B6               	movwf	_S_RELATIVE	;volatile
 19474  17EC  3001               	movlw	1
 19475  17ED  05B6               	andwf	_S_RELATIVE,f	;volatile
 19476  17EE  0008               	return
 19477  17EF                     __end_of_SecondDataSplit:	
 19478  17EF                     __ptext53:	
 19479 ;; *************** function _UpdateOut_GP1 *****************
 19480 ;; Defined at:
 19481 ;;		line 345 in file "GPports.c"
 19482 ;; Parameters:    Size  Location     Type
 19483 ;;		None
 19484 ;; Auto vars:     Size  Location     Type
 19485 ;;		None
 19486 ;; Return value:  Size  Location     Type
 19487 ;;                  1    wreg      void 
 19488 ;; Registers used:
 19489 ;;		wreg, status,2, status,0
 19490 ;; Tracked objects:
 19491 ;;		On entry : 1F/0
 19492 ;;		On exit  : 1D/0
 19493 ;;		Unchanged: 0/0
 19494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19498 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19499 ;;Total ram usage:        1 bytes
 19500 ;; Hardware stack levels used:    1
 19501 ;; This function calls:
 19502 ;;		Nothing
 19503 ;; This function is called by:
 19504 ;;		_RegisterWrite
 19505 ;; This function uses a non-reentrant model
 19506 ;;
 19507                           
 19508                           
 19509                           ;psect for function _UpdateOut_GP1
 19510  17EF                     _UpdateOut_GP1:	
 19511                           
 19512                           ;GPports.c: 346: if ((GP1CONF & 0x03) == 0x01) {
 19513                           
 19514                           ;incstack = 0
 19515                           ; Regs used in _UpdateOut_GP1: [wreg+status,2+status,0]
 19516  17EF  3003               	movlw	3
 19517  17F0  0547               	andwf	_GP1CONF,w	;volatile
 19518  17F1  00F0               	movwf	??_UpdateOut_GP1
 19519  17F2  0B70               	decfsz	??_UpdateOut_GP1,w
 19520  17F3  0008               	return
 19521                           
 19522                           ;GPports.c: 347: if (GP1REG == 0) {
 19523  17F4  0841               	movf	_GP1REG,w	;volatile
 19524  17F5  1D03               	btfss	3,2
 19525  17F6  2FFA               	goto	i1l1292
 19526                           
 19527                           ;GPports.c: 348: LATCbits.LATC7 = 0;
 19528  17F7  0022               	movlb	2	; select bank2
 19529  17F8  138E               	bcf	14,7	;volatile
 19530                           
 19531                           ;GPports.c: 349: } else {
 19532  17F9  0008               	return
 19533  17FA                     i1l1292:	
 19534                           
 19535                           ;GPports.c: 350: LATCbits.LATC7 = 1;
 19536  17FA  0022               	movlb	2	; select bank2
 19537  17FB  178E               	bsf	14,7	;volatile
 19538                           
 19539                           ;GPports.c: 351: GP1REG = 1;
 19540  17FC  3001               	movlw	1
 19541  17FD  0020               	movlb	0	; select bank0
 19542  17FE  00C1               	movwf	_GP1REG	;volatile
 19543  17FF  0008               	return
 19544  1800                     __end_of_UpdateOut_GP1:	
 19545                           
 19546                           	psect	swtext10
 19547  1000                     __pswtext10:	
 19548  1000                     i1S8629:	
 19549  1000  3193  2B45         	ljmp	i1l5763
 19550  1002  3193  2B48         	ljmp	i1l5765
 19551  1004  3193  2B4B         	ljmp	i1l5767
 19552  1006  3193  2B4E         	ljmp	i1l5769
 19553  1008  3193  2B56         	ljmp	i1l5775
 19554  100A  3193  2B58         	ljmp	i1l5777
 19555  100C  3193  2B5F         	ljmp	i1l5783
 19556  100E  3193  2B63         	ljmp	i1l5787
 19557  1010  3193  2B65         	ljmp	i1l5789
 19558  1012  3193  2B6B         	ljmp	i1l5795
 19559  1014  3193  2B73         	ljmp	i1l5801
 19560  1016  3193  2B7C         	ljmp	i1l5807
 19561  1018  3193  2B86         	ljmp	i1l5813
 19562  101A  3193  2B89         	ljmp	i1l5815
 19563  101C  3193  2B8C         	ljmp	i1l5817
 19564  101E  3193  2B8F         	ljmp	i1l5819
 19565  1020  3193  2B92         	ljmp	i1l5821
 19566  1022  3193  2B95         	ljmp	i1l5823
 19567  1024  3193  2B98         	ljmp	i1l5825
 19568  1026  3193  2B9B         	ljmp	i1l5827
 19569  1028  3193  2B9E         	ljmp	i1l5829
 19570  102A  3193  2BA1         	ljmp	i1l5831
 19571  102C  3193  2BA4         	ljmp	i1l5833
 19572  102E  3193  2BA7         	ljmp	i1l5835
 19573  1030  3193  2BAA         	ljmp	i1l5837
 19574  1032  3193  2BAD         	ljmp	i1l5839
 19575  1034  3193  2BB0         	ljmp	i1l5841
 19576  1036  3193  2BB3         	ljmp	i1l5843
 19577  1038  3193  2BB6         	ljmp	i1l5845
 19578  103A  3193  2BB9         	ljmp	i1l5847
 19579  103C  3193  2BBF         	ljmp	i1l5853
 19580  103E  3193  2BC1         	ljmp	i1l5855
 19581  1040  3193  2BC3         	ljmp	i1l5857
 19582  1042  3193  2BC5         	ljmp	i1l5859
 19583  1044  3193  2B54         	ljmp	i1l5773
 19584  1046  3193  2B54         	ljmp	i1l5773
 19585  1048  3193  2B54         	ljmp	i1l5773
 19586  104A  3193  2B54         	ljmp	i1l5773
 19587  104C  3193  2B54         	ljmp	i1l5773
 19588  104E  3193  2BC8         	ljmp	i1l5861
 19589  1050  3193  2BCB         	ljmp	i1l5863
 19590  1052  3193  2BCE         	ljmp	i1l5865
 19591  1054  3193  2BD1         	ljmp	i1l5867
 19592  1056  3193  2BD4         	ljmp	i1l5869
 19593  1058  3193  2BC8         	ljmp	i1l5861
 19594  105A  3193  2B54         	ljmp	i1l5773
 19595  105C  3193  2B54         	ljmp	i1l5773
 19596  105E  3193  2B54         	ljmp	i1l5773
 19597  1060  3193  2BD7         	ljmp	i1l5873
 19598  1062  3193  2B54         	ljmp	i1l5773
 19599  1064  3193  2B54         	ljmp	i1l5773
 19600  1066  3193  2B54         	ljmp	i1l5773
 19601  1068  3193  2B54         	ljmp	i1l5773
 19602  106A  3193  2B54         	ljmp	i1l5773
 19603  106C  3193  2B54         	ljmp	i1l5773
 19604  106E  3193  2B54         	ljmp	i1l5773
 19605  1070  3193  2B54         	ljmp	i1l5773
 19606  1072  3193  2B54         	ljmp	i1l5773
 19607  1074  3193  2B54         	ljmp	i1l5773
 19608  1076  3193  2B54         	ljmp	i1l5773
 19609  1078  3193  2B54         	ljmp	i1l5773
 19610  107A  3193  2B54         	ljmp	i1l5773
 19611  107C  3193  2B54         	ljmp	i1l5773
 19612  107E  3193  2B54         	ljmp	i1l5773
 19613  1080  3193  2B54         	ljmp	i1l5773
 19614  1082  3193  2B54         	ljmp	i1l5773
 19615  1084  3193  2B54         	ljmp	i1l5773
 19616  1086  3193  2B54         	ljmp	i1l5773
 19617  1088  3193  2B54         	ljmp	i1l5773
 19618  108A  3193  2B54         	ljmp	i1l5773
 19619  108C  3193  2B54         	ljmp	i1l5773
 19620  108E  3193  2B54         	ljmp	i1l5773
 19621  1090  3193  2B54         	ljmp	i1l5773
 19622  1092  3193  2B54         	ljmp	i1l5773
 19623  1094  3193  2B54         	ljmp	i1l5773
 19624  1096  3193  2B54         	ljmp	i1l5773
 19625  1098  3193  2B54         	ljmp	i1l5773
 19626  109A  3193  2B54         	ljmp	i1l5773
 19627  109C  3193  2B54         	ljmp	i1l5773
 19628  109E  3193  2B54         	ljmp	i1l5773
 19629  10A0  3193  2B54         	ljmp	i1l5773
 19630  10A2  3193  2B54         	ljmp	i1l5773
 19631  10A4  3193  2B54         	ljmp	i1l5773
 19632  10A6  3193  2B54         	ljmp	i1l5773
 19633  10A8  3193  2B54         	ljmp	i1l5773
 19634  10AA  3193  2B54         	ljmp	i1l5773
 19635  10AC  3193  2B54         	ljmp	i1l5773
 19636  10AE  3193  2B54         	ljmp	i1l5773
 19637  10B0  3193  2B54         	ljmp	i1l5773
 19638  10B2  3193  2B54         	ljmp	i1l5773
 19639  10B4  3193  2B54         	ljmp	i1l5773
 19640  10B6  3193  2B54         	ljmp	i1l5773
 19641  10B8  3193  2B54         	ljmp	i1l5773
 19642  10BA  3193  2B54         	ljmp	i1l5773
 19643  10BC  3193  2B54         	ljmp	i1l5773
 19644  10BE  3193  2B54         	ljmp	i1l5773
 19645  10C0  3193  2B54         	ljmp	i1l5773
 19646  10C2  3193  2B54         	ljmp	i1l5773
 19647  10C4  3193  2B54         	ljmp	i1l5773
 19648  10C6  3193  2B54         	ljmp	i1l5773
 19649  10C8  3193  2B54         	ljmp	i1l5773
 19650  10CA  3193  2B54         	ljmp	i1l5773
 19651  10CC  3193  2B54         	ljmp	i1l5773
 19652  10CE  3193  2B54         	ljmp	i1l5773
 19653  10D0  3193  2B54         	ljmp	i1l5773
 19654  10D2  3193  2B54         	ljmp	i1l5773
 19655  10D4  3193  2B54         	ljmp	i1l5773
 19656  10D6  3193  2B54         	ljmp	i1l5773
 19657  10D8  3193  2B54         	ljmp	i1l5773
 19658  10DA  3193  2B54         	ljmp	i1l5773
 19659  10DC  3193  2B54         	ljmp	i1l5773
 19660  10DE  3193  2B54         	ljmp	i1l5773
 19661  10E0  3193  2BD9         	ljmp	i1l5875
 19662  10E2  3193  2BDB         	ljmp	i1l5877
 19663                           
 19664                           	psect	text76
 19665  0D04                     __ptext76:	
 19666 ;; *************** function _CLC2_ISR *****************
 19667 ;; Defined at:
 19668 ;;		line 90 in file "mcc_generated_files/clc2.c"
 19669 ;; Parameters:    Size  Location     Type
 19670 ;;		None
 19671 ;; Auto vars:     Size  Location     Type
 19672 ;;		None
 19673 ;; Return value:  Size  Location     Type
 19674 ;;                  1    wreg      void 
 19675 ;; Registers used:
 19676 ;;		wreg, status,2, status,0, pclath, cstack
 19677 ;; Tracked objects:
 19678 ;;		On entry : 1F/0
 19679 ;;		On exit  : 1F/0
 19680 ;;		Unchanged: 0/0
 19681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19686 ;;Total ram usage:        0 bytes
 19687 ;; Hardware stack levels used:    1
 19688 ;; Hardware stack levels required when called:    3
 19689 ;; This function calls:
 19690 ;;		_CLC_1_Interrupt
 19691 ;;		_CLC_2_Interrupt
 19692 ;; This function is called by:
 19693 ;;		_INTERRUPT_InterruptManager
 19694 ;; This function uses a non-reentrant model
 19695 ;;
 19696                           
 19697                           
 19698                           ;psect for function _CLC2_ISR
 19699  0D04                     _CLC2_ISR:	
 19700                           
 19701                           ;clc2.c: 92: if(C_RMOD == 1){
 19702                           
 19703                           ;incstack = 0
 19704                           ; Regs used in _CLC2_ISR: [wreg+status,2+status,0+pclath+cstack]
 19705  0D04  0B4B               	decfsz	_C_RMOD,w	;volatile
 19706  0D05  2D0C               	goto	i1l6845
 19707                           
 19708                           ;clc2.c: 93: if ((PORTCbits.RC0 == 0) && (PORTCbits.RC1 == 0))
 19709  0D06  1C0E               	btfss	14,0	;volatile
 19710  0D07  188E               	btfsc	14,1	;volatile
 19711  0D08  2D0C               	goto	i1l6845
 19712                           
 19713                           ;clc2.c: 94: CLC_1_Interrupt();
 19714  0D09  251C  318D         	fcall	_CLC_1_Interrupt
 19715  0D0B  2D0D               	goto	i1l6849
 19716  0D0C                     i1l6845:	
 19717                           
 19718                           ;clc2.c: 95: else;clc2.c: 96: CLC_2_Interrupt();
 19719  0D0C  25A1               	fcall	_CLC_2_Interrupt
 19720  0D0D                     i1l6849:	
 19721                           
 19722                           ;clc2.c: 99: };clc2.c: 102: PIR3bits.CLC2IF = 0;
 19723  0D0D  0020               	movlb	0	; select bank0
 19724  0D0E  1093               	bcf	19,1	;volatile
 19725  0D0F  0008               	return
 19726  0D10                     __end_of_CLC2_ISR:	
 19727  0D10                     __ptext77:	
 19728 ;; *************** function _CLC1_ISR *****************
 19729 ;; Defined at:
 19730 ;;		line 91 in file "mcc_generated_files/clc1.c"
 19731 ;; Parameters:    Size  Location     Type
 19732 ;;		None
 19733 ;; Auto vars:     Size  Location     Type
 19734 ;;		None
 19735 ;; Return value:  Size  Location     Type
 19736 ;;                  1    wreg      void 
 19737 ;; Registers used:
 19738 ;;		wreg, status,2, status,0, pclath, cstack
 19739 ;; Tracked objects:
 19740 ;;		On entry : 1F/0
 19741 ;;		On exit  : 1F/0
 19742 ;;		Unchanged: 0/0
 19743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19748 ;;Total ram usage:        0 bytes
 19749 ;; Hardware stack levels used:    1
 19750 ;; Hardware stack levels required when called:    3
 19751 ;; This function calls:
 19752 ;;		_CLC_1_Interrupt
 19753 ;;		_CLC_2_Interrupt
 19754 ;; This function is called by:
 19755 ;;		_INTERRUPT_InterruptManager
 19756 ;; This function uses a non-reentrant model
 19757 ;;
 19758                           
 19759                           
 19760                           ;psect for function _CLC1_ISR
 19761  0D10                     _CLC1_ISR:	
 19762                           
 19763                           ;clc1.c: 93: if(C_RMOD == 1){
 19764                           
 19765                           ;incstack = 0
 19766                           ; Regs used in _CLC1_ISR: [wreg+status,2+status,0+pclath+cstack]
 19767  0D10  0B4B               	decfsz	_C_RMOD,w	;volatile
 19768  0D11  2D18               	goto	i1l6859
 19769                           
 19770                           ;clc1.c: 94: if ((PORTCbits.RC0 == 0) && (PORTCbits.RC1 == 0))
 19771  0D12  1C0E               	btfss	14,0	;volatile
 19772  0D13  188E               	btfsc	14,1	;volatile
 19773  0D14  2D18               	goto	i1l6859
 19774                           
 19775                           ;clc1.c: 95: CLC_2_Interrupt();
 19776  0D15  25A1  318D         	fcall	_CLC_2_Interrupt
 19777  0D17  2D19               	goto	i1l6863
 19778  0D18                     i1l6859:	
 19779                           
 19780                           ;clc1.c: 96: else;clc1.c: 97: CLC_1_Interrupt();
 19781  0D18  251C               	fcall	_CLC_1_Interrupt
 19782  0D19                     i1l6863:	
 19783                           
 19784                           ;clc1.c: 100: };clc1.c: 103: PIR3bits.CLC1IF = 0;
 19785  0D19  0020               	movlb	0	; select bank0
 19786  0D1A  1013               	bcf	19,0	;volatile
 19787  0D1B  0008               	return
 19788  0D1C                     __end_of_CLC1_ISR:	
 19789  0D1C                     __ptext80:	
 19790 ;; *************** function _CLC_1_Interrupt *****************
 19791 ;; Defined at:
 19792 ;;		line 63 in file "Encoder.c"
 19793 ;; Parameters:    Size  Location     Type
 19794 ;;		None
 19795 ;; Auto vars:     Size  Location     Type
 19796 ;;		None
 19797 ;; Return value:  Size  Location     Type
 19798 ;;                  1    wreg      void 
 19799 ;; Registers used:
 19800 ;;		wreg, status,2, status,0, pclath, cstack
 19801 ;; Tracked objects:
 19802 ;;		On entry : 1F/0
 19803 ;;		On exit  : 1C/0
 19804 ;;		Unchanged: 0/0
 19805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19808 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19809 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19810 ;;Total ram usage:        4 bytes
 19811 ;; Hardware stack levels used:    1
 19812 ;; Hardware stack levels required when called:    1
 19813 ;; This function calls:
 19814 ;;		___fladd
 19815 ;;		___flge
 19816 ;;		i1_EncoderStatusUpdate
 19817 ;;		i1_SetInterrupt
 19818 ;; This function is called by:
 19819 ;;		_CLC2_ISR
 19820 ;;		_CLC1_ISR
 19821 ;; This function uses a non-reentrant model
 19822 ;;
 19823                           
 19824                           
 19825                           ;psect for function _CLC_1_Interrupt
 19826  0D1C                     _CLC_1_Interrupt:	
 19827                           
 19828                           ;Encoder.c: 65: if (en_prev == 1)
 19829                           
 19830                           ;incstack = 0
 19831                           ; Regs used in _CLC_1_Interrupt: [wreg+status,2+status,0+pclath+cstack]
 19832  0D1C  0021               	movlb	1	; select bank1
 19833  0D1D  0B2F               	decfsz	_en_prev^(0+128),w
 19834  0D1E  2D27               	goto	i1l6327
 19835                           
 19836                           ;Encoder.c: 66: if (en_deb < DEBOUNCE)
 19837  0D1F  0829               	movf	(_DEBOUNCE+1)^(0+128),w	;volatile
 19838  0D20  0221               	subwf	(_en_deb+1)^(0+128),w
 19839  0D21  1D03               	skipz
 19840  0D22  2D25               	goto	u374_25
 19841  0D23  0828               	movf	_DEBOUNCE^(0+128),w	;volatile
 19842  0D24  0220               	subwf	_en_deb^(0+128),w
 19843  0D25                     u374_25:	
 19844  0D25  1C03               	btfss	3,0
 19845  0D26  0008               	return
 19846  0D27                     i1l6327:	
 19847                           
 19848                           ;Encoder.c: 70: en_deb = 0;
 19849  0D27  01A0               	clrf	_en_deb^(0+128)
 19850  0D28  01A1               	clrf	(_en_deb+1)^(0+128)
 19851                           
 19852                           ;Encoder.c: 71: en_prev = 0;
 19853  0D29  01AF               	clrf	_en_prev^(0+128)
 19854                           
 19855                           ;Encoder.c: 73: if (C_DTYPE == 0) {
 19856  0D2A  083D               	movf	_C_DTYPE^(0+128),w	;volatile
 19857  0D2B  1D03               	btfss	3,2
 19858  0D2C  2D57               	goto	i1l6345
 19859                           
 19860                           ;Encoder.c: 74: CVAL.val = CVAL.val + ISTEP.val;
 19861  0D2D  0020               	movlb	0	; select bank0
 19862  0D2E  082C               	movf	_CVAL,w	;volatile
 19863  0D2F  0720               	addwf	_ISTEP,w	;volatile
 19864  0D30  00D4               	movwf	??_CLC_1_Interrupt
 19865  0D31  082D               	movf	_CVAL+1,w	;volatile
 19866  0D32  3D21               	addwfc	_ISTEP+1,w	;volatile
 19867  0D33  00D5               	movwf	??_CLC_1_Interrupt+1
 19868  0D34  082E               	movf	_CVAL+2,w	;volatile
 19869  0D35  3D22               	addwfc	_ISTEP+2,w	;volatile
 19870  0D36  00D6               	movwf	??_CLC_1_Interrupt+2
 19871  0D37  082F               	movf	_CVAL+3,w	;volatile
 19872  0D38  3D23               	addwfc	_ISTEP+3,w	;volatile
 19873  0D39  00D7               	movwf	??_CLC_1_Interrupt+3
 19874  0D3A  00AF               	movwf	_CVAL+3	;volatile
 19875  0D3B  0856               	movf	??_CLC_1_Interrupt+2,w
 19876  0D3C  00AE               	movwf	_CVAL+2	;volatile
 19877  0D3D  0855               	movf	??_CLC_1_Interrupt+1,w
 19878  0D3E  00AD               	movwf	_CVAL+1	;volatile
 19879  0D3F  0854               	movf	??_CLC_1_Interrupt,w
 19880  0D40  00AC               	movwf	_CVAL	;volatile
 19881                           
 19882                           ;Encoder.c: 75: EncoderStatusUpdate(S_RINC);
 19883  0D41  3008               	movlw	8
 19884  0D42  2627  318D         	fcall	i1_EncoderStatusUpdate
 19885                           
 19886                           ;Encoder.c: 76: if (CVAL.val > CMAX.val) {
 19887  0D44  082B               	movf	_CMAX+3,w	;volatile
 19888  0D45  3A80               	xorlw	128
 19889  0D46  00D4               	movwf	??_CLC_1_Interrupt
 19890  0D47  082F               	movf	_CVAL+3,w	;volatile
 19891  0D48  3A80               	xorlw	128
 19892  0D49  0254               	subwf	??_CLC_1_Interrupt,w
 19893  0D4A  1D03               	skipz
 19894  0D4B  2D88               	goto	L51
 19895  0D4C  082E               	movf	_CVAL+2,w	;volatile
 19896  0D4D  022A               	subwf	_CMAX+2,w	;volatile
 19897  0D4E  1D03               	skipz
 19898  0D4F  2D88               	goto	L51
 19899  0D50  082D               	movf	_CVAL+1,w	;volatile
 19900  0D51  0229               	subwf	_CMAX+1,w	;volatile
 19901  0D52  1D03               	skipz
 19902  0D53  2D88               	goto	L51
 19903  0D54  082C               	movf	_CVAL,w	;volatile
 19904  0D55  0228               	subwf	_CMAX,w	;volatile
 19905  0D56  2D88               	goto	L51
 19906  0D57                     i1l6345:	
 19907                           ;Encoder.c: 81: CVAL.val = CMAX.val;
 19908                           
 19909                           ;Encoder.c: 80: } else {
 19910                           
 19911                           ;Encoder.c: 79: CVAL.val = CMIN.val;
 19912                           
 19913                           ;Encoder.c: 78: if (C_WRAPE == 1) {
 19914                           
 19915                           ;Encoder.c: 77: EncoderStatusUpdate(S_RMAX);
 19916                           
 19917                           
 19918                           ;Encoder.c: 85: CVAL.fval = CVAL.fval + ISTEP.fval;
 19919  0D57  0020               	movlb	0	; select bank0
 19920  0D58  0823               	movf	_ISTEP+3,w	;volatile
 19921  0D59  00F3               	movwf	___fladd@b+3
 19922  0D5A  0822               	movf	_ISTEP+2,w	;volatile
 19923  0D5B  00F2               	movwf	___fladd@b+2
 19924  0D5C  0821               	movf	_ISTEP+1,w	;volatile
 19925  0D5D  00F1               	movwf	___fladd@b+1
 19926  0D5E  0820               	movf	_ISTEP,w	;volatile
 19927  0D5F  00F0               	movwf	___fladd@b
 19928  0D60  082F               	movf	_CVAL+3,w	;volatile
 19929  0D61  00F7               	movwf	___fladd@a+3
 19930  0D62  082E               	movf	_CVAL+2,w	;volatile
 19931  0D63  00F6               	movwf	___fladd@a+2
 19932  0D64  082D               	movf	_CVAL+1,w	;volatile
 19933  0D65  00F5               	movwf	___fladd@a+1
 19934  0D66  082C               	movf	_CVAL,w	;volatile
 19935  0D67  00F4               	movwf	___fladd@a
 19936  0D68  268C  318D         	fcall	___fladd
 19937  0D6A  0873               	movf	?___fladd+3,w
 19938  0D6B  0020               	movlb	0	; select bank0
 19939  0D6C  00AF               	movwf	_CVAL+3	;volatile
 19940  0D6D  0872               	movf	?___fladd+2,w
 19941  0D6E  00AE               	movwf	_CVAL+2	;volatile
 19942  0D6F  0871               	movf	?___fladd+1,w
 19943  0D70  00AD               	movwf	_CVAL+1	;volatile
 19944  0D71  0870               	movf	?___fladd,w
 19945  0D72  00AC               	movwf	_CVAL	;volatile
 19946                           
 19947                           ;Encoder.c: 86: EncoderStatusUpdate(S_RINC);
 19948  0D73  3008               	movlw	8
 19949  0D74  2627  318D         	fcall	i1_EncoderStatusUpdate
 19950                           
 19951                           ;Encoder.c: 87: if (CVAL.fval > CMAX.fval) {
 19952  0D76  082B               	movf	_CMAX+3,w	;volatile
 19953  0D77  00F3               	movwf	___flge@ff1+3
 19954  0D78  082A               	movf	_CMAX+2,w	;volatile
 19955  0D79  00F2               	movwf	___flge@ff1+2
 19956  0D7A  0829               	movf	_CMAX+1,w	;volatile
 19957  0D7B  00F1               	movwf	___flge@ff1+1
 19958  0D7C  0828               	movf	_CMAX,w	;volatile
 19959  0D7D  00F0               	movwf	___flge@ff1
 19960  0D7E  082F               	movf	_CVAL+3,w	;volatile
 19961  0D7F  00F7               	movwf	___flge@ff2+3
 19962  0D80  082E               	movf	_CVAL+2,w	;volatile
 19963  0D81  00F6               	movwf	___flge@ff2+2
 19964  0D82  082D               	movf	_CVAL+1,w	;volatile
 19965  0D83  00F5               	movwf	___flge@ff2+1
 19966  0D84  082C               	movf	_CVAL,w	;volatile
 19967  0D85  00F4               	movwf	___flge@ff2
 19968  0D86  262A  318D         	fcall	___flge
 19969  0D88                     L51:	
 19970  0D88  1803               	btfsc	3,0
 19971  0D89  2D9F               	goto	i1l6355
 19972                           
 19973                           ;Encoder.c: 88: EncoderStatusUpdate(S_RMAX);
 19974  0D8A  3020               	movlw	32
 19975  0D8B  2627  318D         	fcall	i1_EncoderStatusUpdate
 19976                           
 19977                           ;Encoder.c: 89: if (C_WRAPE == 1) {
 19978  0D8D  0B37               	decfsz	_C_WRAPE,w	;volatile
 19979  0D8E  2D97               	goto	i1l6353
 19980                           
 19981                           ;Encoder.c: 90: CVAL.fval = CMIN.fval;
 19982  0D8F  0827               	movf	_CMIN+3,w	;volatile
 19983  0D90  00AF               	movwf	_CVAL+3	;volatile
 19984  0D91  0826               	movf	_CMIN+2,w	;volatile
 19985  0D92  00AE               	movwf	_CVAL+2	;volatile
 19986  0D93  0825               	movf	_CMIN+1,w	;volatile
 19987  0D94  00AD               	movwf	_CVAL+1	;volatile
 19988  0D95  0824               	movf	_CMIN,w	;volatile
 19989  0D96  2D9E               	goto	L50
 19990  0D97                     i1l6353:	
 19991                           ;Encoder.c: 91: } else {
 19992                           
 19993                           
 19994                           ;Encoder.c: 92: CVAL.fval = CMAX.fval;
 19995  0D97  082B               	movf	_CMAX+3,w	;volatile
 19996  0D98  00AF               	movwf	_CVAL+3	;volatile
 19997  0D99  082A               	movf	_CMAX+2,w	;volatile
 19998  0D9A  00AE               	movwf	_CVAL+2	;volatile
 19999  0D9B  0829               	movf	_CMAX+1,w	;volatile
 20000  0D9C  00AD               	movwf	_CVAL+1	;volatile
 20001  0D9D  0828               	movf	_CMAX,w	;volatile
 20002  0D9E                     L50:	
 20003  0D9E  00AC               	movwf	_CVAL	;volatile
 20004  0D9F                     i1l6355:	
 20005                           
 20006                           ;Encoder.c: 93: };Encoder.c: 94: };Encoder.c: 95: };Encoder.c: 98: SetInterrupt();
 20007  0D9F  27DB               	fcall	i1_SetInterrupt
 20008  0DA0  0008               	return
 20009  0DA1                     __end_of_CLC_1_Interrupt:	
 20010  0DA1                     __ptext78:	
 20011 ;; *************** function _CLC_2_Interrupt *****************
 20012 ;; Defined at:
 20013 ;;		line 105 in file "Encoder.c"
 20014 ;; Parameters:    Size  Location     Type
 20015 ;;		None
 20016 ;; Auto vars:     Size  Location     Type
 20017 ;;		None
 20018 ;; Return value:  Size  Location     Type
 20019 ;;                  1    wreg      void 
 20020 ;; Registers used:
 20021 ;;		wreg, status,2, status,0, pclath, cstack
 20022 ;; Tracked objects:
 20023 ;;		On entry : 1F/0
 20024 ;;		On exit  : 1C/0
 20025 ;;		Unchanged: 0/0
 20026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20029 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20030 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20031 ;;Total ram usage:        4 bytes
 20032 ;; Hardware stack levels used:    1
 20033 ;; Hardware stack levels required when called:    2
 20034 ;; This function calls:
 20035 ;;		___flge
 20036 ;;		___flsub
 20037 ;;		i1_EncoderStatusUpdate
 20038 ;;		i1_SetInterrupt
 20039 ;; This function is called by:
 20040 ;;		_CLC2_ISR
 20041 ;;		_CLC1_ISR
 20042 ;; This function uses a non-reentrant model
 20043 ;;
 20044                           
 20045                           
 20046                           ;psect for function _CLC_2_Interrupt
 20047  0DA1                     _CLC_2_Interrupt:	
 20048                           
 20049                           ;Encoder.c: 107: if (en_prev == 0)
 20050                           
 20051                           ;incstack = 0
 20052                           ; Regs used in _CLC_2_Interrupt: [wreg+status,2+status,0+pclath+cstack]
 20053  0DA1  0021               	movlb	1	; select bank1
 20054  0DA2  082F               	movf	_en_prev^(0+128),w
 20055  0DA3  1D03               	btfss	3,2
 20056  0DA4  2DAD               	goto	i1l6363
 20057                           
 20058                           ;Encoder.c: 108: if (en_deb < DEBOUNCE)
 20059  0DA5  0829               	movf	(_DEBOUNCE+1)^(0+128),w	;volatile
 20060  0DA6  0221               	subwf	(_en_deb+1)^(0+128),w
 20061  0DA7  1D03               	skipz
 20062  0DA8  2DAB               	goto	u381_25
 20063  0DA9  0828               	movf	_DEBOUNCE^(0+128),w	;volatile
 20064  0DAA  0220               	subwf	_en_deb^(0+128),w
 20065  0DAB                     u381_25:	
 20066  0DAB  1C03               	btfss	3,0
 20067  0DAC  0008               	return
 20068  0DAD                     i1l6363:	
 20069                           
 20070                           ;Encoder.c: 111: en_deb = 0;
 20071  0DAD  01A0               	clrf	_en_deb^(0+128)
 20072  0DAE  01A1               	clrf	(_en_deb+1)^(0+128)
 20073                           
 20074                           ;Encoder.c: 112: en_prev = 1;
 20075  0DAF  01AF               	clrf	_en_prev^(0+128)
 20076  0DB0  0AAF               	incf	_en_prev^(0+128),f
 20077                           
 20078                           ;Encoder.c: 114: if (C_DTYPE == 0) {
 20079  0DB1  083D               	movf	_C_DTYPE^(0+128),w	;volatile
 20080  0DB2  1D03               	btfss	3,2
 20081  0DB3  2DDE               	goto	i1l6383
 20082                           
 20083                           ;Encoder.c: 116: CVAL.val = CVAL.val - ISTEP.val;
 20084  0DB4  0020               	movlb	0	; select bank0
 20085  0DB5  0820               	movf	_ISTEP,w	;volatile
 20086  0DB6  022C               	subwf	_CVAL,w	;volatile
 20087  0DB7  00DC               	movwf	??_CLC_2_Interrupt
 20088  0DB8  0821               	movf	_ISTEP+1,w	;volatile
 20089  0DB9  3B2D               	subwfb	_CVAL+1,w	;volatile
 20090  0DBA  00DD               	movwf	??_CLC_2_Interrupt+1
 20091  0DBB  0822               	movf	_ISTEP+2,w	;volatile
 20092  0DBC  3B2E               	subwfb	_CVAL+2,w	;volatile
 20093  0DBD  00DE               	movwf	??_CLC_2_Interrupt+2
 20094  0DBE  0823               	movf	_ISTEP+3,w	;volatile
 20095  0DBF  3B2F               	subwfb	_CVAL+3,w	;volatile
 20096  0DC0  00DF               	movwf	??_CLC_2_Interrupt+3
 20097  0DC1  00AF               	movwf	_CVAL+3	;volatile
 20098  0DC2  085E               	movf	??_CLC_2_Interrupt+2,w
 20099  0DC3  00AE               	movwf	_CVAL+2	;volatile
 20100  0DC4  085D               	movf	??_CLC_2_Interrupt+1,w
 20101  0DC5  00AD               	movwf	_CVAL+1	;volatile
 20102  0DC6  085C               	movf	??_CLC_2_Interrupt,w
 20103  0DC7  00AC               	movwf	_CVAL	;volatile
 20104                           
 20105                           ;Encoder.c: 117: EncoderStatusUpdate(S_RDEC);
 20106  0DC8  3010               	movlw	16
 20107  0DC9  2627  318D         	fcall	i1_EncoderStatusUpdate
 20108                           
 20109                           ;Encoder.c: 118: if (CVAL.val < CMIN.val) {
 20110  0DCB  082F               	movf	_CVAL+3,w	;volatile
 20111  0DCC  3A80               	xorlw	128
 20112  0DCD  00DC               	movwf	??_CLC_2_Interrupt
 20113  0DCE  0827               	movf	_CMIN+3,w	;volatile
 20114  0DCF  3A80               	xorlw	128
 20115  0DD0  025C               	subwf	??_CLC_2_Interrupt,w
 20116  0DD1  1D03               	skipz
 20117  0DD2  2E0E               	goto	L49
 20118  0DD3  0826               	movf	_CMIN+2,w	;volatile
 20119  0DD4  022E               	subwf	_CVAL+2,w	;volatile
 20120  0DD5  1D03               	skipz
 20121  0DD6  2E0E               	goto	L49
 20122  0DD7  0825               	movf	_CMIN+1,w	;volatile
 20123  0DD8  022D               	subwf	_CVAL+1,w	;volatile
 20124  0DD9  1D03               	skipz
 20125  0DDA  2E0E               	goto	L49
 20126  0DDB  0824               	movf	_CMIN,w	;volatile
 20127  0DDC  022C               	subwf	_CVAL,w	;volatile
 20128  0DDD  2E0E               	goto	L49
 20129  0DDE                     i1l6383:	
 20130                           ;Encoder.c: 123: CVAL.val = CMIN.val;
 20131                           
 20132                           ;Encoder.c: 122: } else {
 20133                           
 20134                           ;Encoder.c: 121: CVAL.val = CMAX.val;
 20135                           
 20136                           ;Encoder.c: 120: if (C_WRAPE == 1) {
 20137                           
 20138                           ;Encoder.c: 119: EncoderStatusUpdate(S_RMIN);
 20139                           
 20140                           
 20141                           ;Encoder.c: 127: CVAL.fval = CVAL.fval - ISTEP.fval;
 20142  0DDE  0020               	movlb	0	; select bank0
 20143  0DDF  0823               	movf	_ISTEP+3,w	;volatile
 20144  0DE0  00D7               	movwf	___flsub@a+3
 20145  0DE1  0822               	movf	_ISTEP+2,w	;volatile
 20146  0DE2  00D6               	movwf	___flsub@a+2
 20147  0DE3  0821               	movf	_ISTEP+1,w	;volatile
 20148  0DE4  00D5               	movwf	___flsub@a+1
 20149  0DE5  0820               	movf	_ISTEP,w	;volatile
 20150  0DE6  00D4               	movwf	___flsub@a
 20151  0DE7  082F               	movf	_CVAL+3,w	;volatile
 20152  0DE8  00DB               	movwf	___flsub@b+3
 20153  0DE9  082E               	movf	_CVAL+2,w	;volatile
 20154  0DEA  00DA               	movwf	___flsub@b+2
 20155  0DEB  082D               	movf	_CVAL+1,w	;volatile
 20156  0DEC  00D9               	movwf	___flsub@b+1
 20157  0DED  082C               	movf	_CVAL,w	;volatile
 20158  0DEE  00D8               	movwf	___flsub@b
 20159  0DEF  27E3  318D         	fcall	___flsub
 20160  0DF1  0857               	movf	?___flsub+3,w
 20161  0DF2  00AF               	movwf	_CVAL+3	;volatile
 20162  0DF3  0856               	movf	?___flsub+2,w
 20163  0DF4  00AE               	movwf	_CVAL+2	;volatile
 20164  0DF5  0855               	movf	?___flsub+1,w
 20165  0DF6  00AD               	movwf	_CVAL+1	;volatile
 20166  0DF7  0854               	movf	?___flsub,w
 20167  0DF8  00AC               	movwf	_CVAL	;volatile
 20168                           
 20169                           ;Encoder.c: 128: EncoderStatusUpdate(S_RDEC);
 20170  0DF9  3010               	movlw	16
 20171  0DFA  2627  318D         	fcall	i1_EncoderStatusUpdate
 20172                           
 20173                           ;Encoder.c: 129: if (CVAL.fval < CMIN.fval) {
 20174  0DFC  082F               	movf	_CVAL+3,w	;volatile
 20175  0DFD  00F3               	movwf	___flge@ff1+3
 20176  0DFE  082E               	movf	_CVAL+2,w	;volatile
 20177  0DFF  00F2               	movwf	___flge@ff1+2
 20178  0E00  082D               	movf	_CVAL+1,w	;volatile
 20179  0E01  00F1               	movwf	___flge@ff1+1
 20180  0E02  082C               	movf	_CVAL,w	;volatile
 20181  0E03  00F0               	movwf	___flge@ff1
 20182  0E04  0827               	movf	_CMIN+3,w	;volatile
 20183  0E05  00F7               	movwf	___flge@ff2+3
 20184  0E06  0826               	movf	_CMIN+2,w	;volatile
 20185  0E07  00F6               	movwf	___flge@ff2+2
 20186  0E08  0825               	movf	_CMIN+1,w	;volatile
 20187  0E09  00F5               	movwf	___flge@ff2+1
 20188  0E0A  0824               	movf	_CMIN,w	;volatile
 20189  0E0B  00F4               	movwf	___flge@ff2
 20190  0E0C  262A  318D         	fcall	___flge
 20191  0E0E                     L49:	
 20192  0E0E  1803               	btfsc	3,0
 20193  0E0F  2E25               	goto	i1l6393
 20194                           
 20195                           ;Encoder.c: 130: EncoderStatusUpdate(S_RMIN);
 20196  0E10  3040               	movlw	64
 20197  0E11  2627  318D         	fcall	i1_EncoderStatusUpdate
 20198                           
 20199                           ;Encoder.c: 131: if (C_WRAPE == 1) {
 20200  0E13  0B37               	decfsz	_C_WRAPE,w	;volatile
 20201  0E14  2E1D               	goto	i1l6391
 20202                           
 20203                           ;Encoder.c: 132: CVAL.fval = CMAX.fval;
 20204  0E15  082B               	movf	_CMAX+3,w	;volatile
 20205  0E16  00AF               	movwf	_CVAL+3	;volatile
 20206  0E17  082A               	movf	_CMAX+2,w	;volatile
 20207  0E18  00AE               	movwf	_CVAL+2	;volatile
 20208  0E19  0829               	movf	_CMAX+1,w	;volatile
 20209  0E1A  00AD               	movwf	_CVAL+1	;volatile
 20210  0E1B  0828               	movf	_CMAX,w	;volatile
 20211  0E1C  2E24               	goto	L48
 20212  0E1D                     i1l6391:	
 20213                           ;Encoder.c: 133: } else {
 20214                           
 20215                           
 20216                           ;Encoder.c: 135: CVAL.fval = CMIN.fval;
 20217  0E1D  0827               	movf	_CMIN+3,w	;volatile
 20218  0E1E  00AF               	movwf	_CVAL+3	;volatile
 20219  0E1F  0826               	movf	_CMIN+2,w	;volatile
 20220  0E20  00AE               	movwf	_CVAL+2	;volatile
 20221  0E21  0825               	movf	_CMIN+1,w	;volatile
 20222  0E22  00AD               	movwf	_CVAL+1	;volatile
 20223  0E23  0824               	movf	_CMIN,w	;volatile
 20224  0E24                     L48:	
 20225  0E24  00AC               	movwf	_CVAL	;volatile
 20226  0E25                     i1l6393:	
 20227                           
 20228                           ;Encoder.c: 136: };Encoder.c: 137: };Encoder.c: 138: };Encoder.c: 140: SetInterrupt();
 20229  0E25  27DB               	fcall	i1_SetInterrupt
 20230  0E26  0008               	return
 20231  0E27                     __end_of_CLC_2_Interrupt:	
 20232  0E27                     __ptext82:	
 20233 ;; *************** function i1_EncoderStatusUpdate *****************
 20234 ;; Defined at:
 20235 ;;		line 134 in file "DataVariable.c"
 20236 ;; Parameters:    Size  Location     Type
 20237 ;;  stat            1    wreg     enum E77
 20238 ;; Auto vars:     Size  Location     Type
 20239 ;;  stat            1    0[COMMON] enum E77
 20240 ;; Return value:  Size  Location     Type
 20241 ;;                  1    wreg      void 
 20242 ;; Registers used:
 20243 ;;		wreg, status,2, status,0
 20244 ;; Tracked objects:
 20245 ;;		On entry : 1F/0
 20246 ;;		On exit  : 1F/0
 20247 ;;		Unchanged: 0/0
 20248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20252 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20253 ;;Total ram usage:        1 bytes
 20254 ;; Hardware stack levels used:    1
 20255 ;; This function calls:
 20256 ;;		Nothing
 20257 ;; This function is called by:
 20258 ;;		_CLC_1_Interrupt
 20259 ;;		_CLC_2_Interrupt
 20260 ;; This function uses a non-reentrant model
 20261 ;;
 20262                           
 20263                           
 20264                           ;psect for function i1_EncoderStatusUpdate
 20265  0E27                     i1_EncoderStatusUpdate:	
 20266                           
 20267                           ;incstack = 0
 20268                           ; Regs used in i1_EncoderStatusUpdate: [wreg+status,2+status,0]
 20269                           ;i1EncoderStatusUpdate@stat stored from wreg
 20270  0E27  00F0               	movwf	i1EncoderStatusUpdate@stat
 20271                           
 20272                           ;DataVariable.c: 135: ESTATUS |= (uint8_t) stat;
 20273  0E28  04C9               	iorwf	_ESTATUS,f	;volatile
 20274  0E29  0008               	return
 20275  0E2A                     __end_ofi1_EncoderStatusUpdate:	
 20276  0E2A                     __ptext83:	
 20277 ;; *************** function ___flge *****************
 20278 ;; Defined at:
 20279 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
 20280 ;; Parameters:    Size  Location     Type
 20281 ;;  ff1             4    0[COMMON] void 
 20282 ;;  ff2             4    4[COMMON] void 
 20283 ;; Auto vars:     Size  Location     Type
 20284 ;;		None
 20285 ;; Return value:  Size  Location     Type
 20286 ;;		None               void
 20287 ;; Registers used:
 20288 ;;		wreg, status,2, status,0
 20289 ;; Tracked objects:
 20290 ;;		On entry : 1F/0
 20291 ;;		On exit  : 1F/0
 20292 ;;		Unchanged: 1F/0
 20293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20294 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20296 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20297 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20298 ;;Total ram usage:       12 bytes
 20299 ;; Hardware stack levels used:    1
 20300 ;; This function calls:
 20301 ;;		Nothing
 20302 ;; This function is called by:
 20303 ;;		_CLC_1_Interrupt
 20304 ;;		_CLC_2_Interrupt
 20305 ;; This function uses a non-reentrant model
 20306 ;;
 20307                           
 20308                           
 20309                           ;psect for function ___flge
 20310  0E2A                     ___flge:	
 20311                           
 20312                           ;incstack = 0
 20313                           ; Regs used in ___flge: [wreg+status,2+status,0]
 20314  0E2A  3080               	movlw	128
 20315  0E2B  01F8               	clrf	??___flge
 20316  0E2C  01F9               	clrf	??___flge+1
 20317  0E2D  0572               	andwf	___flge@ff1+2,w
 20318  0E2E  00FA               	movwf	??___flge+2
 20319  0E2F  307F               	movlw	127
 20320  0E30  0573               	andwf	___flge@ff1+3,w
 20321  0E31  00FB               	movwf	??___flge+3
 20322  0E32  047A               	iorwf	??___flge+2,w
 20323  0E33  0479               	iorwf	??___flge+1,w
 20324  0E34  0478               	iorwf	??___flge,w
 20325  0E35  1D03               	skipz
 20326  0E36  2E3B               	goto	i1l6141
 20327  0E37  01F0               	clrf	___flge@ff1
 20328  0E38  01F1               	clrf	___flge@ff1+1
 20329  0E39  01F2               	clrf	___flge@ff1+2
 20330  0E3A  01F3               	clrf	___flge@ff1+3
 20331  0E3B                     i1l6141:	
 20332  0E3B  3080               	movlw	128
 20333  0E3C  01F8               	clrf	??___flge
 20334  0E3D  01F9               	clrf	??___flge+1
 20335  0E3E  0576               	andwf	___flge@ff2+2,w
 20336  0E3F  00FA               	movwf	??___flge+2
 20337  0E40  307F               	movlw	127
 20338  0E41  0577               	andwf	___flge@ff2+3,w
 20339  0E42  00FB               	movwf	??___flge+3
 20340  0E43  047A               	iorwf	??___flge+2,w
 20341  0E44  0479               	iorwf	??___flge+1,w
 20342  0E45  0478               	iorwf	??___flge,w
 20343  0E46  1D03               	skipz
 20344  0E47  2E4C               	goto	i1l1985
 20345  0E48  01F4               	clrf	___flge@ff2
 20346  0E49  01F5               	clrf	___flge@ff2+1
 20347  0E4A  01F6               	clrf	___flge@ff2+2
 20348  0E4B  01F7               	clrf	___flge@ff2+3
 20349  0E4C                     i1l1985:	
 20350  0E4C  1FF3               	btfss	___flge@ff1+3,7
 20351  0E4D  2E63               	goto	i1l6147
 20352  0E4E  3080               	movlw	128
 20353  0E4F  01F8               	clrf	??___flge
 20354  0E50  01F9               	clrf	??___flge+1
 20355  0E51  01FA               	clrf	??___flge+2
 20356  0E52  00FB               	movwf	??___flge+3
 20357  0E53  0870               	movf	___flge@ff1,w
 20358  0E54  02F8               	subwf	??___flge,f
 20359  0E55  0871               	movf	___flge@ff1+1,w
 20360  0E56  3BF9               	subwfb	??___flge+1,f
 20361  0E57  0872               	movf	___flge@ff1+2,w
 20362  0E58  3BFA               	subwfb	??___flge+2,f
 20363  0E59  0873               	movf	___flge@ff1+3,w
 20364  0E5A  3BFB               	subwfb	??___flge+3,f
 20365  0E5B  087B               	movf	??___flge+3,w
 20366  0E5C  00F3               	movwf	___flge@ff1+3
 20367  0E5D  087A               	movf	??___flge+2,w
 20368  0E5E  00F2               	movwf	___flge@ff1+2
 20369  0E5F  0879               	movf	??___flge+1,w
 20370  0E60  00F1               	movwf	___flge@ff1+1
 20371  0E61  0878               	movf	??___flge,w
 20372  0E62  00F0               	movwf	___flge@ff1
 20373  0E63                     i1l6147:	
 20374  0E63  1FF7               	btfss	___flge@ff2+3,7
 20375  0E64  2E7A               	goto	i1l1987
 20376  0E65  3080               	movlw	128
 20377  0E66  01F8               	clrf	??___flge
 20378  0E67  01F9               	clrf	??___flge+1
 20379  0E68  01FA               	clrf	??___flge+2
 20380  0E69  00FB               	movwf	??___flge+3
 20381  0E6A  0874               	movf	___flge@ff2,w
 20382  0E6B  02F8               	subwf	??___flge,f
 20383  0E6C  0875               	movf	___flge@ff2+1,w
 20384  0E6D  3BF9               	subwfb	??___flge+1,f
 20385  0E6E  0876               	movf	___flge@ff2+2,w
 20386  0E6F  3BFA               	subwfb	??___flge+2,f
 20387  0E70  0877               	movf	___flge@ff2+3,w
 20388  0E71  3BFB               	subwfb	??___flge+3,f
 20389  0E72  087B               	movf	??___flge+3,w
 20390  0E73  00F7               	movwf	___flge@ff2+3
 20391  0E74  087A               	movf	??___flge+2,w
 20392  0E75  00F6               	movwf	___flge@ff2+2
 20393  0E76  0879               	movf	??___flge+1,w
 20394  0E77  00F5               	movwf	___flge@ff2+1
 20395  0E78  0878               	movf	??___flge,w
 20396  0E79  00F4               	movwf	___flge@ff2
 20397  0E7A                     i1l1987:	
 20398  0E7A  3080               	movlw	128
 20399  0E7B  06F3               	xorwf	___flge@ff1+3,f
 20400  0E7C  06F7               	xorwf	___flge@ff2+3,f
 20401  0E7D  0877               	movf	___flge@ff2+3,w
 20402  0E7E  0273               	subwf	___flge@ff1+3,w
 20403  0E7F  1D03               	skipz
 20404  0E80  0008               	return
 20405  0E81  0876               	movf	___flge@ff2+2,w
 20406  0E82  0272               	subwf	___flge@ff1+2,w
 20407  0E83  1D03               	skipz
 20408  0E84  0008               	return
 20409  0E85  0875               	movf	___flge@ff2+1,w
 20410  0E86  0271               	subwf	___flge@ff1+1,w
 20411  0E87  1D03               	skipz
 20412  0E88  0008               	return
 20413  0E89  0874               	movf	___flge@ff2,w
 20414  0E8A  0270               	subwf	___flge@ff1,w
 20415  0E8B  0008               	return
 20416  0E8C                     __end_of___flge:	
 20417  0E8C                     __ptext84:	
 20418 ;; *************** function ___fladd *****************
 20419 ;; Defined at:
 20420 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
 20421 ;; Parameters:    Size  Location     Type
 20422 ;;  b               4    0[COMMON] void 
 20423 ;;  a               4    4[COMMON] void 
 20424 ;; Auto vars:     Size  Location     Type
 20425 ;;  grs             1   11[COMMON] unsigned char 
 20426 ;;  bexp            1   10[COMMON] unsigned char 
 20427 ;;  aexp            1    9[COMMON] unsigned char 
 20428 ;;  signs           1    8[COMMON] unsigned char 
 20429 ;; Return value:  Size  Location     Type
 20430 ;;                  4    0[COMMON] unsigned char 
 20431 ;; Registers used:
 20432 ;;		wreg, status,2, status,0
 20433 ;; Tracked objects:
 20434 ;;		On entry : 1F/0
 20435 ;;		On exit  : 0/0
 20436 ;;		Unchanged: 0/0
 20437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20438 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20439 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20440 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20441 ;;      Totals:        12       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20442 ;;Total ram usage:       20 bytes
 20443 ;; Hardware stack levels used:    1
 20444 ;; This function calls:
 20445 ;;		Nothing
 20446 ;; This function is called by:
 20447 ;;		_CLC_1_Interrupt
 20448 ;;		___flsub
 20449 ;; This function uses a non-reentrant model
 20450 ;;
 20451                           
 20452                           
 20453                           ;psect for function ___fladd
 20454  0E8C                     ___fladd:	
 20455                           
 20456                           ;incstack = 0
 20457                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 20458  0E8C  0873               	movf	___fladd@b+3,w
 20459  0E8D  00F8               	movwf	___fladd@signs
 20460  0E8E  3080               	movlw	128
 20461  0E8F  05F8               	andwf	___fladd@signs,f
 20462  0E90  3573               	lslf	___fladd@b+3,w
 20463  0E91  00FA               	movwf	___fladd@bexp
 20464  0E92  1BF2               	btfsc	___fladd@b+2,7
 20465  0E93  147A               	bsf	___fladd@bexp,0
 20466  0E94  087A               	movf	___fladd@bexp,w
 20467  0E95  1903               	btfsc	3,2
 20468  0E96  2E9F               	goto	i1l2096
 20469  0E97  0F7A               	incfsz	___fladd@bexp,w
 20470  0E98  2E9D               	goto	i1l2097
 20471  0E99  01F0               	clrf	___fladd@b
 20472  0E9A  01F1               	clrf	___fladd@b+1
 20473  0E9B  01F2               	clrf	___fladd@b+2
 20474  0E9C  01F3               	clrf	___fladd@b+3
 20475  0E9D                     i1l2097:	
 20476  0E9D  17F2               	bsf	___fladd@b+2,7
 20477  0E9E  2EA2               	goto	L53
 20478  0E9F                     i1l2096:	
 20479  0E9F  01F0               	clrf	___fladd@b
 20480  0EA0  01F1               	clrf	___fladd@b+1
 20481  0EA1  01F2               	clrf	___fladd@b+2
 20482  0EA2                     L53:	
 20483  0EA2  01F3               	clrf	___fladd@b+3
 20484  0EA3  0877               	movf	___fladd@a+3,w
 20485  0EA4  00F9               	movwf	___fladd@aexp
 20486  0EA5  3080               	movlw	128
 20487  0EA6  05F9               	andwf	___fladd@aexp,f
 20488  0EA7  0879               	movf	___fladd@aexp,w
 20489  0EA8  0678               	xorwf	___fladd@signs,w
 20490  0EA9  1D03               	btfss	3,2
 20491  0EAA  1778               	bsf	___fladd@signs,6
 20492  0EAB  3577               	lslf	___fladd@a+3,w
 20493  0EAC  00F9               	movwf	___fladd@aexp
 20494  0EAD  1BF6               	btfsc	___fladd@a+2,7
 20495  0EAE  1479               	bsf	___fladd@aexp,0
 20496  0EAF  0879               	movf	___fladd@aexp,w
 20497  0EB0  1903               	btfsc	3,2
 20498  0EB1  2EBA               	goto	i1l2101
 20499  0EB2  0F79               	incfsz	___fladd@aexp,w
 20500  0EB3  2EB8               	goto	i1l2102
 20501  0EB4  01F4               	clrf	___fladd@a
 20502  0EB5  01F5               	clrf	___fladd@a+1
 20503  0EB6  01F6               	clrf	___fladd@a+2
 20504  0EB7  01F7               	clrf	___fladd@a+3
 20505  0EB8                     i1l2102:	
 20506  0EB8  17F6               	bsf	___fladd@a+2,7
 20507  0EB9  2EBD               	goto	L54
 20508  0EBA                     i1l2101:	
 20509  0EBA  01F4               	clrf	___fladd@a
 20510  0EBB  01F5               	clrf	___fladd@a+1
 20511  0EBC  01F6               	clrf	___fladd@a+2
 20512  0EBD                     L54:	
 20513  0EBD  01F7               	clrf	___fladd@a+3
 20514  0EBE  087A               	movf	___fladd@bexp,w
 20515  0EBF  0279               	subwf	___fladd@aexp,w
 20516  0EC0  1803               	skipnc
 20517  0EC1  2EE4               	goto	i1l5491
 20518  0EC2  1F78               	btfss	___fladd@signs,6
 20519  0EC3  2EC6               	goto	i1l5461
 20520  0EC4  3080               	movlw	128
 20521  0EC5  06F8               	xorwf	___fladd@signs,f
 20522  0EC6                     i1l5461:	
 20523  0EC6  087A               	movf	___fladd@bexp,w
 20524  0EC7  00FB               	movwf	___fladd@grs
 20525  0EC8  0879               	movf	___fladd@aexp,w
 20526  0EC9  00FA               	movwf	___fladd@bexp
 20527  0ECA  087B               	movf	___fladd@grs,w
 20528  0ECB  00F9               	movwf	___fladd@aexp
 20529  0ECC  0870               	movf	___fladd@b,w
 20530  0ECD  00FB               	movwf	___fladd@grs
 20531  0ECE  0874               	movf	___fladd@a,w
 20532  0ECF  00F0               	movwf	___fladd@b
 20533  0ED0  087B               	movf	___fladd@grs,w
 20534  0ED1  00F4               	movwf	___fladd@a
 20535  0ED2  0871               	movf	___fladd@b+1,w
 20536  0ED3  00FB               	movwf	___fladd@grs
 20537  0ED4  0875               	movf	___fladd@a+1,w
 20538  0ED5  00F1               	movwf	___fladd@b+1
 20539  0ED6  087B               	movf	___fladd@grs,w
 20540  0ED7  00F5               	movwf	___fladd@a+1
 20541  0ED8  0872               	movf	___fladd@b+2,w
 20542  0ED9  00FB               	movwf	___fladd@grs
 20543  0EDA  0876               	movf	___fladd@a+2,w
 20544  0EDB  00F2               	movwf	___fladd@b+2
 20545  0EDC  087B               	movf	___fladd@grs,w
 20546  0EDD  00F6               	movwf	___fladd@a+2
 20547  0EDE  0873               	movf	___fladd@b+3,w
 20548  0EDF  00FB               	movwf	___fladd@grs
 20549  0EE0  0877               	movf	___fladd@a+3,w
 20550  0EE1  00F3               	movwf	___fladd@b+3
 20551  0EE2  087B               	movf	___fladd@grs,w
 20552  0EE3  00F7               	movwf	___fladd@a+3
 20553  0EE4                     i1l5491:	
 20554  0EE4  01FB               	clrf	___fladd@grs
 20555  0EE5  0879               	movf	___fladd@aexp,w
 20556  0EE6  00CC               	movwf	??___fladd
 20557  0EE7  01CD               	clrf	??___fladd+1
 20558  0EE8  084D               	movf	??___fladd+1,w
 20559  0EE9  00CF               	movwf	??___fladd+3
 20560  0EEA  087A               	movf	___fladd@bexp,w
 20561  0EEB  024C               	subwf	??___fladd,w
 20562  0EEC  00CE               	movwf	??___fladd+2
 20563  0EED  1C03               	skipc
 20564  0EEE  03CF               	decf	??___fladd+3,f
 20565  0EEF  084F               	movf	??___fladd+3,w
 20566  0EF0  3A80               	xorlw	128
 20567  0EF1  00D0               	movwf	??___fladd+4
 20568  0EF2  3080               	movlw	128
 20569  0EF3  0250               	subwf	??___fladd+4,w
 20570  0EF4  1D03               	skipz
 20571  0EF5  2EF8               	goto	u288_25
 20572  0EF6  301A               	movlw	26
 20573  0EF7  024E               	subwf	??___fladd+2,w
 20574  0EF8                     u288_25:	
 20575  0EF8  1C03               	skipc
 20576  0EF9  2F19               	goto	i1l5505
 20577  0EFA  0873               	movf	___fladd@b+3,w
 20578  0EFB  0472               	iorwf	___fladd@b+2,w
 20579  0EFC  0471               	iorwf	___fladd@b+1,w
 20580  0EFD  0470               	iorwf	___fladd@b,w
 20581  0EFE  1903               	btfsc	3,2
 20582  0EFF  2F02               	goto	u289_20
 20583  0F00  3001               	movlw	1
 20584  0F01  2F03               	goto	u290_20
 20585  0F02                     u289_20:	
 20586  0F02  3000               	movlw	0
 20587  0F03                     u290_20:	
 20588  0F03  00FB               	movwf	___fladd@grs
 20589  0F04  01F0               	clrf	___fladd@b
 20590  0F05  01F1               	clrf	___fladd@b+1
 20591  0F06  01F2               	clrf	___fladd@b+2
 20592  0F07  01F3               	clrf	___fladd@b+3
 20593  0F08  0879               	movf	___fladd@aexp,w
 20594  0F09  00FA               	movwf	___fladd@bexp
 20595  0F0A  2F1D               	goto	i1l2107
 20596  0F0B                     i1l2109:	
 20597  0F0B  1C7B               	btfss	___fladd@grs,0
 20598  0F0C  2F11               	goto	i1l2110
 20599  0F0D  367B               	lsrf	___fladd@grs,w
 20600  0F0E  3801               	iorlw	1
 20601  0F0F  00FB               	movwf	___fladd@grs
 20602  0F10  2F12               	goto	i1l2111
 20603  0F11                     i1l2110:	
 20604  0F11  36FB               	lsrf	___fladd@grs,f
 20605  0F12                     i1l2111:	
 20606  0F12  1870               	btfsc	___fladd@b,0
 20607  0F13  17FB               	bsf	___fladd@grs,7
 20608  0F14  37F3               	asrf	___fladd@b+3,f
 20609  0F15  0CF2               	rrf	___fladd@b+2,f
 20610  0F16  0CF1               	rrf	___fladd@b+1,f
 20611  0F17  0CF0               	rrf	___fladd@b,f
 20612  0F18  0AFA               	incf	___fladd@bexp,f
 20613  0F19                     i1l5505:	
 20614  0F19  0879               	movf	___fladd@aexp,w
 20615  0F1A  027A               	subwf	___fladd@bexp,w
 20616  0F1B  1C03               	skipc
 20617  0F1C  2F0B               	goto	i1l2109
 20618  0F1D                     i1l2107:	
 20619  0F1D  1B78               	btfsc	___fladd@signs,6
 20620  0F1E  2F40               	goto	i1l5523
 20621  0F1F  087A               	movf	___fladd@bexp,w
 20622  0F20  1D03               	btfss	3,2
 20623  0F21  2F27               	goto	i1l5511
 20624  0F22  01F0               	clrf	?___fladd
 20625  0F23  01F1               	clrf	?___fladd+1
 20626  0F24  01F2               	clrf	?___fladd+2
 20627  0F25  01F3               	clrf	?___fladd+3
 20628  0F26  0008               	return
 20629  0F27                     i1l5511:	
 20630  0F27  0874               	movf	___fladd@a,w
 20631  0F28  07F0               	addwf	___fladd@b,f
 20632  0F29  0875               	movf	___fladd@a+1,w
 20633  0F2A  3DF1               	addwfc	___fladd@b+1,f
 20634  0F2B  0876               	movf	___fladd@a+2,w
 20635  0F2C  3DF2               	addwfc	___fladd@b+2,f
 20636  0F2D  0877               	movf	___fladd@a+3,w
 20637  0F2E  3DF3               	addwfc	___fladd@b+3,f
 20638  0F2F  1C73               	btfss	___fladd@b+3,0
 20639  0F30  2FA9               	goto	i1l5553
 20640  0F31  1C7B               	btfss	___fladd@grs,0
 20641  0F32  2F37               	goto	i1l2118
 20642  0F33  367B               	lsrf	___fladd@grs,w
 20643  0F34  3801               	iorlw	1
 20644  0F35  00FB               	movwf	___fladd@grs
 20645  0F36  2F38               	goto	i1l2119
 20646  0F37                     i1l2118:	
 20647  0F37  36FB               	lsrf	___fladd@grs,f
 20648  0F38                     i1l2119:	
 20649  0F38  1870               	btfsc	___fladd@b,0
 20650  0F39  17FB               	bsf	___fladd@grs,7
 20651  0F3A  37F3               	asrf	___fladd@b+3,f
 20652  0F3B  0CF2               	rrf	___fladd@b+2,f
 20653  0F3C  0CF1               	rrf	___fladd@b+1,f
 20654  0F3D  0CF0               	rrf	___fladd@b,f
 20655  0F3E  0AFA               	incf	___fladd@bexp,f
 20656  0F3F  2FA9               	goto	i1l5553
 20657  0F40                     i1l5523:	
 20658  0F40  0873               	movf	___fladd@b+3,w
 20659  0F41  3A80               	xorlw	128
 20660  0F42  0020               	movlb	0	; select bank0
 20661  0F43  00CC               	movwf	??___fladd
 20662  0F44  0877               	movf	___fladd@a+3,w
 20663  0F45  3A80               	xorlw	128
 20664  0F46  024C               	subwf	??___fladd,w
 20665  0F47  1D03               	skipz
 20666  0F48  2F53               	goto	u299_23
 20667  0F49  0876               	movf	___fladd@a+2,w
 20668  0F4A  0272               	subwf	___fladd@b+2,w
 20669  0F4B  1D03               	skipz
 20670  0F4C  2F53               	goto	u299_23
 20671  0F4D  0875               	movf	___fladd@a+1,w
 20672  0F4E  0271               	subwf	___fladd@b+1,w
 20673  0F4F  1D03               	skipz
 20674  0F50  2F53               	goto	u299_23
 20675  0F51  0874               	movf	___fladd@a,w
 20676  0F52  0270               	subwf	___fladd@b,w
 20677  0F53                     u299_23:	
 20678  0F53  1803               	skipnc
 20679  0F54  2F82               	goto	i1l5533
 20680  0F55  30FF               	movlw	255
 20681  0F56  00CC               	movwf	??___fladd
 20682  0F57  00CD               	movwf	??___fladd+1
 20683  0F58  00CE               	movwf	??___fladd+2
 20684  0F59  00CF               	movwf	??___fladd+3
 20685  0F5A  0870               	movf	___fladd@b,w
 20686  0F5B  0274               	subwf	___fladd@a,w
 20687  0F5C  00D0               	movwf	??___fladd+4
 20688  0F5D  0871               	movf	___fladd@b+1,w
 20689  0F5E  3B75               	subwfb	___fladd@a+1,w
 20690  0F5F  00D1               	movwf	??___fladd+5
 20691  0F60  0872               	movf	___fladd@b+2,w
 20692  0F61  3B76               	subwfb	___fladd@a+2,w
 20693  0F62  00D2               	movwf	??___fladd+6
 20694  0F63  0873               	movf	___fladd@b+3,w
 20695  0F64  3B77               	subwfb	___fladd@a+3,w
 20696  0F65  00D3               	movwf	??___fladd+7
 20697  0F66  0850               	movf	??___fladd+4,w
 20698  0F67  07CC               	addwf	??___fladd,f
 20699  0F68  0851               	movf	??___fladd+5,w
 20700  0F69  3DCD               	addwfc	??___fladd+1,f
 20701  0F6A  0852               	movf	??___fladd+6,w
 20702  0F6B  3DCE               	addwfc	??___fladd+2,f
 20703  0F6C  0853               	movf	??___fladd+7,w
 20704  0F6D  3DCF               	addwfc	??___fladd+3,f
 20705  0F6E  084F               	movf	??___fladd+3,w
 20706  0F6F  00F3               	movwf	___fladd@b+3
 20707  0F70  084E               	movf	??___fladd+2,w
 20708  0F71  00F2               	movwf	___fladd@b+2
 20709  0F72  084D               	movf	??___fladd+1,w
 20710  0F73  00F1               	movwf	___fladd@b+1
 20711  0F74  084C               	movf	??___fladd,w
 20712  0F75  00F0               	movwf	___fladd@b
 20713  0F76  3080               	movlw	128
 20714  0F77  06F8               	xorwf	___fladd@signs,f
 20715  0F78  09FB               	comf	___fladd@grs,f
 20716  0F79  0FFB               	incfsz	___fladd@grs,f
 20717  0F7A  2F8A               	goto	i1l2124
 20718  0F7B  3001               	movlw	1
 20719  0F7C  07F0               	addwf	___fladd@b,f
 20720  0F7D  3000               	movlw	0
 20721  0F7E  3DF1               	addwfc	___fladd@b+1,f
 20722  0F7F  3DF2               	addwfc	___fladd@b+2,f
 20723  0F80  3DF3               	addwfc	___fladd@b+3,f
 20724  0F81  2F8A               	goto	i1l2124
 20725  0F82                     i1l5533:	
 20726  0F82  0874               	movf	___fladd@a,w
 20727  0F83  02F0               	subwf	___fladd@b,f
 20728  0F84  0875               	movf	___fladd@a+1,w
 20729  0F85  3BF1               	subwfb	___fladd@b+1,f
 20730  0F86  0876               	movf	___fladd@a+2,w
 20731  0F87  3BF2               	subwfb	___fladd@b+2,f
 20732  0F88  0877               	movf	___fladd@a+3,w
 20733  0F89  3BF3               	subwfb	___fladd@b+3,f
 20734  0F8A                     i1l2124:	
 20735  0F8A  0873               	movf	___fladd@b+3,w
 20736  0F8B  0472               	iorwf	___fladd@b+2,w
 20737  0F8C  0471               	iorwf	___fladd@b+1,w
 20738  0F8D  0470               	iorwf	___fladd@b,w
 20739  0F8E  1D03               	skipz
 20740  0F8F  2FA7               	goto	i1l5551
 20741  0F90  087B               	movf	___fladd@grs,w
 20742  0F91  1D03               	btfss	3,2
 20743  0F92  2FA7               	goto	i1l5551
 20744  0F93  01F0               	clrf	?___fladd
 20745  0F94  01F1               	clrf	?___fladd+1
 20746  0F95  01F2               	clrf	?___fladd+2
 20747  0F96  01F3               	clrf	?___fladd+3
 20748  0F97  0008               	return
 20749  0F98                     i1l5539:	
 20750  0F98  35F0               	lslf	___fladd@b,f
 20751  0F99  0DF1               	rlf	___fladd@b+1,f
 20752  0F9A  0DF2               	rlf	___fladd@b+2,f
 20753  0F9B  0DF3               	rlf	___fladd@b+3,f
 20754  0F9C  1BFB               	btfsc	___fladd@grs,7
 20755  0F9D  1470               	bsf	___fladd@b,0
 20756  0F9E  1C7B               	btfss	___fladd@grs,0
 20757  0F9F  2FA3               	goto	i1l2129
 20758  0FA0  1403               	setc
 20759  0FA1  0DFB               	rlf	___fladd@grs,f
 20760  0FA2  2FA4               	goto	i1l5547
 20761  0FA3                     i1l2129:	
 20762  0FA3  35FB               	lslf	___fladd@grs,f
 20763  0FA4                     i1l5547:	
 20764  0FA4  087A               	movf	___fladd@bexp,w
 20765  0FA5  1D03               	btfss	3,2
 20766  0FA6  03FA               	decf	___fladd@bexp,f
 20767  0FA7                     i1l5551:	
 20768  0FA7  1FF2               	btfss	___fladd@b+2,7
 20769  0FA8  2F98               	goto	i1l5539
 20770  0FA9                     i1l5553:	
 20771  0FA9  01F9               	clrf	___fladd@aexp
 20772  0FAA  1FFB               	btfss	___fladd@grs,7
 20773  0FAB  2FB4               	goto	i1l5563
 20774  0FAC  087B               	movf	___fladd@grs,w
 20775  0FAD  397F               	andlw	127
 20776  0FAE  1903               	btfsc	3,2
 20777  0FAF  1870               	btfsc	___fladd@b,0
 20778  0FB0  2FB2               	goto	i1l5559
 20779  0FB1  2FB4               	goto	i1l5563
 20780  0FB2                     i1l5559:	
 20781  0FB2  01F9               	clrf	___fladd@aexp
 20782  0FB3  0AF9               	incf	___fladd@aexp,f
 20783  0FB4                     i1l5563:	
 20784  0FB4  0879               	movf	___fladd@aexp,w
 20785  0FB5  1903               	btfsc	3,2
 20786  0FB6  2FC5               	goto	i1l5575
 20787  0FB7  3001               	movlw	1
 20788  0FB8  07F0               	addwf	___fladd@b,f
 20789  0FB9  3000               	movlw	0
 20790  0FBA  3DF1               	addwfc	___fladd@b+1,f
 20791  0FBB  3DF2               	addwfc	___fladd@b+2,f
 20792  0FBC  3DF3               	addwfc	___fladd@b+3,f
 20793  0FBD  1C73               	btfss	___fladd@b+3,0
 20794  0FBE  2FC5               	goto	i1l5575
 20795  0FBF  37F3               	asrf	___fladd@b+3,f
 20796  0FC0  0CF2               	rrf	___fladd@b+2,f
 20797  0FC1  0CF1               	rrf	___fladd@b+1,f
 20798  0FC2  0CF0               	rrf	___fladd@b,f
 20799  0FC3  0F7A               	incfsz	___fladd@bexp,w
 20800  0FC4  0AFA               	incf	___fladd@bexp,f
 20801  0FC5                     i1l5575:	
 20802  0FC5  0A7A               	incf	___fladd@bexp,w
 20803  0FC6  1D03               	btfss	3,2
 20804  0FC7  087A               	movf	___fladd@bexp,w
 20805  0FC8  1D03               	btfss	3,2
 20806  0FC9  2FD1               	goto	i1l5583
 20807  0FCA  01F0               	clrf	___fladd@b
 20808  0FCB  01F1               	clrf	___fladd@b+1
 20809  0FCC  01F2               	clrf	___fladd@b+2
 20810  0FCD  01F3               	clrf	___fladd@b+3
 20811  0FCE  087A               	movf	___fladd@bexp,w
 20812  0FCF  1903               	btfsc	3,2
 20813  0FD0  01F8               	clrf	___fladd@signs
 20814  0FD1                     i1l5583:	
 20815  0FD1  1C7A               	btfss	___fladd@bexp,0
 20816  0FD2  2FD5               	goto	i1l2144
 20817  0FD3  17F2               	bsf	___fladd@b+2,7
 20818  0FD4  2FD6               	goto	i1l5587
 20819  0FD5                     i1l2144:	
 20820  0FD5  13F2               	bcf	___fladd@b+2,7
 20821  0FD6                     i1l5587:	
 20822  0FD6  367A               	lsrf	___fladd@bexp,w
 20823  0FD7  00F3               	movwf	___fladd@b+3
 20824  0FD8  1BF8               	btfsc	___fladd@signs,7
 20825  0FD9  17F3               	bsf	___fladd@b+3,7
 20826  0FDA  0008               	return
 20827  0FDB                     __end_of___fladd:	
 20828  007E                     btemp	set	126	;btemp
 20829  007E                     int$flags	set	126
 20830  007E                     wtemp0	set	126
 20831  0FDB                     __ptext81:	
 20832 ;; *************** function i1_SetInterrupt *****************
 20833 ;; Defined at:
 20834 ;;		line 56 in file "main.c"
 20835 ;; Parameters:    Size  Location     Type
 20836 ;;		None
 20837 ;; Auto vars:     Size  Location     Type
 20838 ;;		None
 20839 ;; Return value:  Size  Location     Type
 20840 ;;                  1    wreg      void 
 20841 ;; Registers used:
 20842 ;;		wreg, status,2, status,0
 20843 ;; Tracked objects:
 20844 ;;		On entry : 1F/0
 20845 ;;		On exit  : 1C/0
 20846 ;;		Unchanged: 0/0
 20847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20852 ;;Total ram usage:        0 bytes
 20853 ;; Hardware stack levels used:    1
 20854 ;; This function calls:
 20855 ;;		Nothing
 20856 ;; This function is called by:
 20857 ;;		_CLC_1_Interrupt
 20858 ;;		_CLC_2_Interrupt
 20859 ;; This function uses a non-reentrant model
 20860 ;;
 20861                           
 20862                           
 20863                           ;psect for function i1_SetInterrupt
 20864  0FDB                     i1_SetInterrupt:	
 20865                           
 20866                           ;main.c: 58: if ((ESTATUS & INTCONF) != 0) {
 20867                           
 20868                           ;incstack = 0
 20869                           ; Regs used in i1_SetInterrupt: [wreg+status,2+status,0]
 20870  0FDB  0849               	movf	_ESTATUS,w	;volatile
 20871  0FDC  0021               	movlb	1	; select bank1
 20872  0FDD  0549               	andwf	_INTCONF^(0+128),w	;volatile
 20873  0FDE  1903               	btfsc	3,2
 20874  0FDF  0008               	return
 20875                           
 20876                           ;main.c: 59: do { LATBbits.LATB5 = 0; } while(0);
 20877  0FE0  0022               	movlb	2	; select bank2
 20878  0FE1  128D               	bcf	13,5	;volatile
 20879  0FE2  0008               	return
 20880  0FE3                     __end_ofi1_SetInterrupt:	
 20881  0FE3                     __ptext79:	
 20882 ;; *************** function ___flsub *****************
 20883 ;; Defined at:
 20884 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
 20885 ;; Parameters:    Size  Location     Type
 20886 ;;  a               4    8[BANK0 ] void 
 20887 ;;  b               4   12[BANK0 ] void 
 20888 ;; Auto vars:     Size  Location     Type
 20889 ;;		None
 20890 ;; Return value:  Size  Location     Type
 20891 ;;                  4    8[BANK0 ] void 
 20892 ;; Registers used:
 20893 ;;		wreg, status,2, status,0, pclath, cstack
 20894 ;; Tracked objects:
 20895 ;;		On entry : 1F/0
 20896 ;;		On exit  : 1F/0
 20897 ;;		Unchanged: 0/0
 20898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20899 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20902 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20903 ;;Total ram usage:        8 bytes
 20904 ;; Hardware stack levels used:    1
 20905 ;; Hardware stack levels required when called:    1
 20906 ;; This function calls:
 20907 ;;		___fladd
 20908 ;; This function is called by:
 20909 ;;		_CLC_2_Interrupt
 20910 ;; This function uses a non-reentrant model
 20911 ;;
 20912                           
 20913                           
 20914                           ;psect for function ___flsub
 20915  0FE3                     ___flsub:	
 20916                           
 20917                           ;incstack = 0
 20918                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 20919  0FE3  3080               	movlw	128
 20920  0FE4  06D7               	xorwf	___flsub@a+3,f
 20921  0FE5  085B               	movf	___flsub@b+3,w
 20922  0FE6  00F3               	movwf	___fladd@b+3
 20923  0FE7  085A               	movf	___flsub@b+2,w
 20924  0FE8  00F2               	movwf	___fladd@b+2
 20925  0FE9  0859               	movf	___flsub@b+1,w
 20926  0FEA  00F1               	movwf	___fladd@b+1
 20927  0FEB  0858               	movf	___flsub@b,w
 20928  0FEC  00F0               	movwf	___fladd@b
 20929  0FED  0857               	movf	___flsub@a+3,w
 20930  0FEE  00F7               	movwf	___fladd@a+3
 20931  0FEF  0856               	movf	___flsub@a+2,w
 20932  0FF0  00F6               	movwf	___fladd@a+2
 20933  0FF1  0855               	movf	___flsub@a+1,w
 20934  0FF2  00F5               	movwf	___fladd@a+1
 20935  0FF3  0854               	movf	___flsub@a,w
 20936  0FF4  00F4               	movwf	___fladd@a
 20937  0FF5  268C               	fcall	___fladd
 20938  0FF6  0873               	movf	?___fladd+3,w
 20939  0FF7  0020               	movlb	0	; select bank0
 20940  0FF8  00D7               	movwf	?___flsub+3
 20941  0FF9  0872               	movf	?___fladd+2,w
 20942  0FFA  00D6               	movwf	?___flsub+2
 20943  0FFB  0871               	movf	?___fladd+1,w
 20944  0FFC  00D5               	movwf	?___flsub+1
 20945  0FFD  0870               	movf	?___fladd,w
 20946  0FFE  00D4               	movwf	?___flsub
 20947  0FFF  0008               	return
 20948  1000                     __end_of___flsub:	


Data Sizes:
    Strings     0
    Constant    1400
    Data        1
    BSS         86
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      64
    BANK1            80     16      59
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    TMR3_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInt(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TimerInt(), Absolute function(), TMR3_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR3_ISR->_TMR3_WriteTimer
    _Config_GP3->i1_PWM_GP3_RLED
    i1_PWM_GP3_RLED->i1___wmul
    _Config_GP2->i1_PWM_GP2
    i1_PWM_GP2->i1___wmul
    _Config_GP1->i1_PWM_GP1
    i1_PWM_GP1->i1___wmul
    _RegisterRead->_eeprom_read
    _CLC_2_Interrupt->___flge
    ___flsub->___fladd
    _CLC_1_Interrupt->___fladd
    _CLC_1_Interrupt->___flge

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _I2C1_ISR->_I2C1_StatusCallback
    _I2C1_StatusCallback->_RegisterWrite
    _RegisterWrite->_Config_GP1
    _Config_GP1->i1_PWM_GP1
    _CLC2_ISR->_CLC_2_Interrupt
    _CLC1_ISR->_CLC_2_Interrupt
    _CLC_2_Interrupt->___flsub
    ___flsub->___fladd
    _CLC_1_Interrupt->___fladd

Critical Paths under _main in BANK1

    _main->_GP_Ports_FSM
    _TMR3_Initialize->_TMR3_SetInterruptHandler
    _GP3_FSM->_ADC_GetConversion
    _GP2_FSM->_ADC_GetConversion
    _GP1_FSM->_ADC_GetConversion
    _FADE_GP3->_PWM_GP3_RLED
    _FADE_GP2->_PWM_GP2
    _PWM_GP2->___wmul
    _FADE_GP1->_PWM_GP1
    _PWM_GP1->___wmul
    _FADE_LEDS->_PWM_BLED
    _FADE_LEDS->_PWM_GLED
    _FADE_LEDS->_PWM_GP3_RLED
    _PWM_GP3_RLED->___wmul
    _PWM_GLED->___wmul
    _PWM_BLED->___wmul
    _FadeProcessClear->_Int2StatusUpdate
    _Int2StatusUpdate->_EncoderStatusUpdate
    _Encoder_PushButton_FSM->_EncoderStatusUpdate

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   10637
                     _ClearInterrupt
                        _DataInitSet
                        _Encoder_FSM
                       _GP_Ports_FSM
                  _SYSTEM_Initialize
           _TMR3_SetInterruptHandler
                    _TMR3_StartTimer
 ---------------------------------------------------------------------------------
 (1) _TMR3_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
                    _CLC1_Initialize
                    _CLC2_Initialize
                    _I2C1_AddressSet
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0     211
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR3_SetInterruptHandler                             2     0      2     211
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_AddressSet                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _GP_Ports_FSM                                         1     1      0    5371
                                             15 BANK1      1     1      0
                           _FADE_GP1
                           _FADE_GP2
                           _FADE_GP3
                            _GP1_FSM
                            _GP2_FSM
                            _GP3_FSM
 ---------------------------------------------------------------------------------
 (2) _GP3_FSM                                              2     2      0      93
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _GP2_FSM                                              2     2      0      93
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (2) _GP1_FSM                                              2     2      0      93
                                              4 BANK1      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_GetConversion                                    4     2      2      31
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (2) _FADE_GP3                                             0     0      0    1687
                   _FadeProcessClear
                     _FadeProcessSet
                       _PWM_GP3_RLED
 ---------------------------------------------------------------------------------
 (2) _FADE_GP2                                             0     0      0    1687
                   _FadeProcessClear
                     _FadeProcessSet
                            _PWM_GP2
 ---------------------------------------------------------------------------------
 (3) _PWM_GP2                                              7     7      0    1563
                                              6 BANK1      7     7      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _FADE_GP1                                             0     0      0    1718
                   _FadeProcessClear
                     _FadeProcessSet
                            _PWM_GP1
 ---------------------------------------------------------------------------------
 (3) _PWM_GP1                                              9     9      0    1594
                                              6 BANK1      9     9      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _Encoder_FSM                                          0     0      0    4844
             _Encoder_PushButton_FSM
                          _FADE_LEDS
 ---------------------------------------------------------------------------------
 (2) _FADE_LEDS                                            0     0      0    4813
                   _FadeProcessClear
                     _FadeProcessSet
                           _PWM_BLED
                           _PWM_GLED
                       _PWM_GP3_RLED
 ---------------------------------------------------------------------------------
 (3) _PWM_GP3_RLED                                         7     7      0    1563
                                              6 BANK1      7     7      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _PWM_GLED                                             7     7      0    1563
                                              6 BANK1      7     7      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) _PWM_BLED                                             7     7      0    1563
                                              6 BANK1      7     7      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    1436
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _FadeProcessSet                                       1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (3) _FadeProcessClear                                     1     1      0      93
                                              2 BANK1      1     1      0
                   _Int2StatusUpdate
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (3) _Int2StatusUpdate                                     1     1      0      62
                                              1 BANK1      1     1      0
                _EncoderStatusUpdate
 ---------------------------------------------------------------------------------
 (2) _Encoder_PushButton_FSM                               0     0      0      31
                _EncoderStatusUpdate
     _EncoderSwitch_GetValueFiltered
                       _SetInterrupt
 ---------------------------------------------------------------------------------
 (3) _SetInterrupt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EncoderSwitch_GetValueFiltered                       0     0      0       0
             _EncoderSwitch_GetValue
 ---------------------------------------------------------------------------------
 (4) _EncoderSwitch_GetValue                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EncoderStatusUpdate                                  1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DataInitSet                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ClearInterrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0   15099
                           _CLC1_ISR
                           _CLC2_ISR
                           _I2C1_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR3_ISR                                             0     0      0     229
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (8) _TMR3_WriteTimer                                      2     0      2     229
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) _TMR3_CallBack                                        0     0      0       0
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                           _TimerInt *
 ---------------------------------------------------------------------------------
 (9) _TimerInt                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _TMR3_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C1_ISR                                             1     1      0    3372
                                              6 BANK0      1     1      0
                _I2C1_StatusCallback
 ---------------------------------------------------------------------------------
 (8) _I2C1_StatusCallback                                  1     1      0    3348
                                              5 BANK0      1     1      0
                       _RegisterRead
                      _RegisterWrite
 ---------------------------------------------------------------------------------
 (9) _RegisterWrite                                        2     1      1    3145
                                              3 BANK0      2     1      1
                         _Config_GP1
                         _Config_GP2
                         _Config_GP3
                        _FirstConfig
                     _FirstDataSplit
                       _SecondConfig
                    _SecondDataSplit
                      _UpdateOut_GP1
                      _UpdateOut_GP2
                      _UpdateOut_GP3
                       _eeprom_write
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) _eeprom_write                                        2     1      1     196
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP3                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP2                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _UpdateOut_GP1                                       1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _SecondDataSplit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _SecondConfig                                        0     0      0       0
       _I2C1_Initialize_ClockStreach
                  i1_I2C1_Initialize
 ---------------------------------------------------------------------------------
 (11) i1_I2C1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _I2C1_Initialize_ClockStreach                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _FirstDataSplit                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (10) _FirstConfig                                         0     0      0       0
                    _RGB_EncoderMode
                    _STD_EncoderMode
 ---------------------------------------------------------------------------------
 (11) _STD_EncoderMode                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RGB_EncoderMode                                     0     0      0       0
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
 ---------------------------------------------------------------------------------
 (12) _PWM3_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _PWM2_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP3                                          2     2      0     493
                                              0 BANK0      2     2      0
                    _PWM1_Initialize
                     i1_PWM_GP3_RLED
 ---------------------------------------------------------------------------------
 (11) i1_PWM_GP3_RLED                                      7     7      0     493
                                              6 COMMON     7     7      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (12) _PWM1_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP2                                          2     2      0     493
                                              0 BANK0      2     2      0
                    _PWM4_Initialize
                          i1_PWM_GP2
 ---------------------------------------------------------------------------------
 (11) i1_PWM_GP2                                           7     7      0     493
                                              6 COMMON     7     7      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (11) _PWM4_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Config_GP1                                          2     2      0     515
                                              1 BANK0      2     2      0
                    _PWM5_Initialize
                          i1_PWM_GP1
 ---------------------------------------------------------------------------------
 (11) i1_PWM_GP1                                           9     9      0     515
                                              6 COMMON     8     8      0
                                              0 BANK0      1     1      0
                           i1___wmul
 ---------------------------------------------------------------------------------
 (10) i1___wmul                                            6     2      4     404
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (11) _PWM5_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _RegisterRead                                         2     2      0     181
                                              1 COMMON     2     2      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (10) _eeprom_read                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _CLC2_ISR                                             0     0      0    5749
                    _CLC_1_Interrupt
                    _CLC_2_Interrupt
 ---------------------------------------------------------------------------------
 (7) _CLC1_ISR                                             0     0      0    5749
                    _CLC_1_Interrupt
                    _CLC_2_Interrupt
 ---------------------------------------------------------------------------------
 (8) _CLC_2_Interrupt                                      4     4      0    2973
                                             16 BANK0      4     4      0
                             ___flge
                            ___flsub
              i1_EncoderStatusUpdate
                     i1_SetInterrupt
 ---------------------------------------------------------------------------------
 (9) ___flsub                                              8     0      8    2465
                                              8 BANK0      8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (8) _CLC_1_Interrupt                                      4     4      0    2776
                                              8 BANK0      4     4      0
                            ___fladd
                             ___flge
              i1_EncoderStatusUpdate
                     i1_SetInterrupt
 ---------------------------------------------------------------------------------
 (9) i1_SetInterrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i1_EncoderStatusUpdate                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) ___flge                                              12     4      8     486
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (10) ___fladd                                            20    12      8    2268
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearInterrupt
   _DataInitSet
   _Encoder_FSM
     _Encoder_PushButton_FSM
       _EncoderStatusUpdate
       _EncoderSwitch_GetValueFiltered
         _EncoderSwitch_GetValue
       _SetInterrupt
     _FADE_LEDS
       _FadeProcessClear
         _Int2StatusUpdate
           _EncoderStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_BLED
         ___wmul
       _PWM_GLED
         ___wmul
       _PWM_GP3_RLED
         ___wmul
   _GP_Ports_FSM
     _FADE_GP1
       _FadeProcessClear
         _Int2StatusUpdate
           _EncoderStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_GP1
         ___wmul
     _FADE_GP2
       _FadeProcessClear
         _Int2StatusUpdate
           _EncoderStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_GP2
         ___wmul
     _FADE_GP3
       _FadeProcessClear
         _Int2StatusUpdate
           _EncoderStatusUpdate
         _SetInterrupt
       _FadeProcessSet
       _PWM_GP3_RLED
         ___wmul
     _GP1_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _EncoderStatusUpdate
       _SetInterrupt
     _GP2_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _EncoderStatusUpdate
       _SetInterrupt
     _GP3_FSM
       _ADC_GetConversion
       _ADC_Initialize
       _Int2StatusUpdate
         _EncoderStatusUpdate
       _SetInterrupt
   _SYSTEM_Initialize
     _CLC1_Initialize
     _CLC2_Initialize
     _I2C1_AddressSet
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _WDT_Initialize
   _TMR3_SetInterruptHandler
   _TMR3_StartTimer

 _INTERRUPT_InterruptManager (ROOT)
   _CLC1_ISR
     _CLC_1_Interrupt
       ___fladd
       ___flge
       i1_EncoderStatusUpdate
       i1_SetInterrupt
     _CLC_2_Interrupt
       ___flge
       ___flsub
         ___fladd
       i1_EncoderStatusUpdate
       i1_SetInterrupt
   _CLC2_ISR
     _CLC_1_Interrupt
       ___fladd
       ___flge
       i1_EncoderStatusUpdate
       i1_SetInterrupt
     _CLC_2_Interrupt
       ___flge
       ___flsub
         ___fladd
       i1_EncoderStatusUpdate
       i1_SetInterrupt
   _I2C1_ISR
     _I2C1_StatusCallback
       _RegisterRead
         _eeprom_read
       _RegisterWrite
         _Config_GP1
           _PWM5_Initialize
           i1_PWM_GP1
             i1___wmul
         _Config_GP2
           _PWM4_Initialize
           i1_PWM_GP2
             i1___wmul
         _Config_GP3
           _PWM1_Initialize
           i1_PWM_GP3_RLED
             i1___wmul
         _FirstConfig
           _RGB_EncoderMode
             _PWM1_Initialize
             _PWM2_Initialize
             _PWM3_Initialize
           _STD_EncoderMode
         _FirstDataSplit
         _SecondConfig
           _I2C1_Initialize_ClockStreach
           i1_I2C1_Initialize
         _SecondDataSplit
         _UpdateOut_GP1
         _UpdateOut_GP2
         _UpdateOut_GP3
         _eeprom_write
         i1___wmul
   _TMR3_ISR
     _TMR3_CallBack
       Absolute function(Fake) *
       _TMR3_DefaultInterruptHandler *
       _TimerInt *
     _TMR3_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     14      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     10      3B       7       73.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      89      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      89      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Apr 11 12:19:56 2020

                                       pc 0002                        __size_of_FADE_LEDS 0078  
                             __CFG_CP$OFF 0000                       ___wmul@multiplicand 00CC  
                        i1___wmul@product 0074                           ??_UpdateOut_GP1 0070  
                         ??_UpdateOut_GP2 0070                           ??_UpdateOut_GP3 0070  
                                     l396 0259                                       _PR2 001E  
                            __CFG_CPD$OFF 0000                   __size_of_PMD_Initialize 000E  
                           ??_FirstConfig 0070                           _PWM4_Initialize 1681  
                         _TMR2_Initialize 06A3                         ??_CLC2_Initialize 00CA  
                                     wreg 0009                           __end_of_GP1_FSM 019D  
                         __end_of_GP2_FSM 01EA                           __end_of_GP3_FSM 023A  
                RegisterRead@return_value 0072                                      S8601 1100  
                                    S8603 1108                                      S8605 10E4  
                                    S8599 10F2                                _S_RELATIVE 0036  
                            __CFG_LVP$OFF 0000                          __end_of_I2C1_ISR 1310  
                                    l1320 0186                                      l1332 01C3  
                                    l1317 0178                                      l1335 01D2  
                                    l1351 0222                           _timer3ReloadVal 00AC  
                                    l1348 0213                                      l1608 05DE  
                                    l1568 03B0                                      l1578 02C8  
                                    l1588 056B                                      l1598 04F8  
                                    l8005 021E                                      l8111 00AF  
                                    l8131 00D9                                      l8123 00C9  
                                    l8115 00BB                                      l8043 045A  
                                    l8051 0462                                      l7411 0398  
                                    l8019 022E                                      l8141 00E7  
                                    l8117 00BF                                      l8037 0451  
                                    l7343 0312                                      l8127 00D1  
                                    l8063 0472                                      l7431 03BA  
                                    l7329 023F                                      l7353 0625  
                                    l8081 048E                                      l8209 0323  
                                    l8163 0104                                      l8147 00F3  
                                    l8139 00E6                                      l7603 05C3  
                                    l7523 0586                                      l8075 0484  
                                    l7435 03C1                                      l7363 0263  
                                    l7533 012A                                      l8149 00F7  
                                    l7349 061F                                      l8093 04A0  
                                    l8253 0061                                      l8229 0048  
                                    l8167 010B                                      l8175 010E  
                                    l7623 05F2                                      l7519 057F  
                                    l7537 0133                                      l7457 02B0  
                                    l7627 05F9                                      l7475 02DC  
                                    l7901 016A                                      l7583 0513  
                                    l7559 04DD                                      l7479 02E3  
                                    l7831 027A                                      l7911 0182  
                                    l7579 050C                                      l7499 0550  
                                    l7925 0192                                      l7941 01A9  
                                    l7933 019E                                      l7765 06C7  
                                    l7943 01B1                                      l7865 0423  
                                    l7947 01B5                                      l7971 01DE  
                                    l7797 0362                                      l7957 01CE  
                                    l7981 01EE                                      _BLED 0042  
                                    l7895 015E                                      l7887 0153  
                                    l7991 0201                                      l7897 0166  
                                    l7977 01EA                                      l7995 0205  
                                    l7989 01F9                                      _CMAX 0028  
                                    _CMIN 0024                   __end_of_PWM1_Initialize 1772  
                                    _GLED 0043                                      _CVAL 002C  
                                    _LATA 010C                                      _LATB 010D  
                                    _LATC 010E                                      _PMD0 0911  
                                    _PMD1 0912                                      _PMD2 0913  
                                    _PMD3 0914                                      _PMD4 0915  
                                    _PMD5 0916                                      i1l80 0012  
                                    i1l82 001C                                      i1l84 0026  
                                    i1l89 002E                                      u5825 00EF  
                                    u5775 00B6                                      u5855 031E  
                                    _RLED 0044                                      u5897 0254  
                         ?_ClearInterrupt 0070                                      _TMR2 001D  
                                    _WPUA 020C                                      _WPUB 020D  
                                    _WPUC 020E                            ??_eeprom_write 0071  
                          i1_PWM_GP3_RLED 1772                              __CFG_WRT$OFF 0000  
                           __CFG_FCMEN$ON 0000                   __end_of_RGB_EncoderMode 12C5  
                                    _main 0048   EncoderSwitch_GetValueFiltered@pb_status 00AE  
                         __end_of_PWM_GP1 0414                           __end_of_PWM_GP2 0307  
                                    fsr0h 0005                                      indf0 0000  
                                    fsr0l 0004                                      btemp 007E  
                        __end_of_FADE_GP1 037F                          __end_of_FADE_GP2 0297  
                        __end_of_FADE_GP3 0440                          __end_of_CLC1_ISR 0D1C  
                        __end_of_CLC2_ISR 0D10                             __CFG_BOREN$ON 0000  
                           __CFG_BORV$LOW 0000                                      start 0030  
                         _CLC_1_Interrupt 0D1C                           _PWM5_Initialize 1608  
                         _TMR3_Initialize 06C7                       __end_of_Encoder_FSM 0326  
                            PWM_BLED@duty 00D6                             __CFG_CSWEN$ON 0000  
                     _I2C1_StatusCallback 1310                               _DataInitSet 0070  
                           i1PWM_GP1@duty 004C                   __end_of_PWM2_Initialize 12E7  
                           i1PWM_GP2@duty 007C                           _CLC_2_Interrupt 0DA1  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 065F  
                            PWM_GLED@duty 00D6                                     _ADACT 009F  
                         __end_of___fladd 0FDB                                     ?_main 0070  
                                   _CCPR1 0291                                     _CCPR2 0295  
                                   _CCPR3 0311                                     _CCPR4 0315  
                           __CFG_WDTE$OFF 0000                           __end_of___flsub 1000  
                                   _GCONF 0048                                     _T2CON 001F  
                                   _T3CON 0413                        __size_ofi1_PWM_GP1 008F  
                      __size_ofi1_PWM_GP2 0069                            __CFG_DEBUG$OFF 0000  
                                   i1l175 1303                                     i1l850 1342  
                              _Config_GP1 1599                                     i1l839 1313  
                              _Config_GP2 1612                                _Config_GP3 16F7  
                                   i1l981 125C                                     i1l983 1266  
                                   i1l979 125A                                _EncoderReg 00BB  
                                   _ISTEP 0020                                     _OSCEN 091D  
                                   _TMR3H 0412                                     _TMR3L 0411  
                                   _TRISA 008C                                     _TRISB 008D  
                                   _TRISC 008E                        FadeProcessSet@stat 00CA  
       __size_of_TMR3_SetInterruptHandler 0005                 ?_TMR3_SetInterruptHandler 00CA  
                       ??_I2C1_Initialize 00CA                      ?_I2C1_StatusCallback 0070  
                        __end_of_TMR3_ISR 1207                           _STD_EncoderMode 12C5  
          ??_TMR3_DefaultInterruptHandler 0070                            _WDT_Initialize 06AB  
                  __end_ofi1_PWM_GP3_RLED 17DD                          __end_of_PWM_BLED 061D  
                        __end_of_PWM_GLED 0537                  __size_of_SecondDataSplit 000A  
         __size_of_Encoder_PushButton_FSM 006A                         __end_of_FADE_LEDS 04B8  
                 __end_of_PWM3_Initialize 12F4                                     pclath 000A  
                     __end_of_FirstConfig 128C                                _DoublePush 00A6  
                        __end_ofi1___wmul 1599                                     status 0003  
                     i1___wmul@multiplier 0070                                     wtemp0 007E  
                     _EncoderStatusUpdate 0307                __size_ofi1_I2C1_Initialize 0011  
                          __CFG_MCLRE$OFF 0000                           __initialization 0032  
                            __end_of_main 006D                  __end_of_Int2StatusUpdate 023F  
                 __end_of_PWM4_Initialize 168E                   __end_of_TMR2_Initialize 06AB  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 00DA  
                               ??_GP1_FSM 00CE                                 ??_GP2_FSM 00CE  
                               ??_GP3_FSM 00CE                      ?_EncoderStatusUpdate 0070  
                         _TMR3_StartTimer 06AF                     _TMR3_InterruptHandler 00AA  
                __end_of_FadeProcessClear 04C0                          __end_of_TimerInt 1139  
                        ??i1_SetInterrupt 0070                    __end_of_WDT_Initialize 06AF  
                   ??_I2C1_StatusCallback 007E                                    _ADCON0 009D  
                                  _ADCON1 009E                                    _FADEGP 003E  
                                  _ADRESH 009C                                    _ADRESL 009B  
                                  i1S8613 1118                                    i1S8607 1110  
                                  i1S8625 1128                                    i1S8609 0C5A  
                                  _CCPR1H 0292                                    i1S8619 1120  
                                  _CCPR2H 0296                                    i1S8629 1000  
                                  _CCPR3H 0312                                    _CCPR1L 0291  
                               ??_PWM_GP1 00D0                                    _CCPR4H 0316  
                                  _CCPR2L 0295                                 ??_PWM_GP2 00D0  
                                  _CCPR3L 0311                                    _CCPR4L 0315  
                         ?i1_PWM_GP3_RLED 0070                                    _GCONF2 00C2  
                                  _GP1REG 0041                                    _ANSELA 018C  
                                  _ANSELB 018D                                    _ANSELC 018E  
                                  _GP2REG 0040                                    _GP3REG 003F  
                                  _T3GCON 0414           ?_EncoderSwitch_GetValueFiltered 0070  
        ??_EncoderSwitch_GetValueFiltered 00CA                                    i1l1202 15D6  
                                  i1l1212 15F2                                    i1l2101 0EBA  
                                  i1l2110 0F11                                    i1l2102 0EB8  
                                  i1l1214 1607                          ?_PWM1_Initialize 0070  
                                  i1l2111 0F12                                    i1l1208 15EF  
                                  i1l1234 1648                                    i1l1306 11DC  
                                  i1l2107 0F1D                                    i1l1251 1680  
                                  i1l1227 1641                                    i1l1219 1624  
                                  i1l2124 0F8A                                    i1l2109 0F0B  
                                  i1l1245 1668                                    i1l2118 0F37  
                                  i1l1190 15C8                                    i1l1182 15AB  
                                  i1l2119 0F38                                    i1l1239 164F  
                                  i1l1271 172D                                    i1l2144 0FD5  
                 __end_of_CLC_1_Interrupt 0DA1                                    i1l1264 1726  
                                  i1l1256 1709                                    i1l2129 0FA3  
                                  i1l1249 166B                                    _ODCONA 028C  
                                  i1l1282 174D                                    _ODCONB 028D  
                                  _ODCONC 028E                                    i1l1276 1734  
                                  i1l1292 17FA                                    i1l1197 15CF  
                                  i1l1286 1750                                    i1l2096 0E9F  
                                  i1l1288 1765                                    i1l2097 0E9D  
                                  i1l1298 11B4                                    i1l5011 16CF  
                                  i1l5015 16D5                                    i1l5111 1228  
                                  i1l1568 1438                                    i1l5113 122A  
                                  i1l1770 13FB                                    i1l1578 16BE  
                                  i1l5035 178A                   __end_of_PWM5_Initialize 1612  
                                  i1l1588 17A4                   __end_of_TMR3_Initialize 06E2  
                                  i1l5205 15DB                                    i1l5125 1241  
                                  i1l5055 17B5                                    i1l5135 1254  
                                  i1l1792 11E3                                    i1l5209 15F5  
                                  i1l5313 1753                                    i1l5059 17BB  
                                  i1l1796 11F8                                    i1l6141 0E3B  
                                  i1l5261 166E                                    i1l5309 1739  
                                  i1l5165 1280                                    i1l5511 0F27  
                                  i1l5167 1287                                    i1l5351 11D1  
                                  i1l5505 0F19                                    i1l1985 0E4C  
                                  i1l5257 1654                                    i1l5523 0F40  
                                  i1l1987 0E7A                                    i1l6147 0E63  
                                  i1l5363 17E2                                    i1l5533 0F82  
                                  i1l5461 0EC6                                    i1l5701 1505  
                                  i1l6405 1325                                    i1l5551 0FA7  
                                  i1l6327 0D27                                    i1l5711 152B  
                                  i1l6407 132E                                    i1l6415 1338  
                                  i1l6431 121C                                    i1l5553 0FA9  
                                  i1l6353 0D97                                    i1l6345 0D57  
                                  i1l5801 1373                                    i1l4825 12E7  
                                  i1l5721 1540                                    i1l5713 152E  
                                  i1l5705 1516                                    i1l5641 14AC  
                                  i1l5633 14A2                                    i1l6409 1330  
                                  i1l6433 1207                                    i1l5563 0FB4  
                                  i1l5547 0FA4                                    i1l5539 0F98  
                                  i1l5491 0EE4                                    i1l6355 0D9F  
                                  i1l6363 0DAD                                    i1l4843 158C  
                                  i1l5651 14BB                                    i1l5627 1499  
                                  i1l5821 1392                                    i1l5813 1386  
                                  i1l4853 11BA                                    i1l5733 155B  
                                  i1l5725 1549                                    i1l5717 1537  
                                  i1l5709 1527                                    i1l5661 14CA  
                                  i1l5653 14BE                                    i1l5637 14A7  
                                  _C_DIRE 00BE                                    i1l5583 0FD1  
                                  i1l5575 0FC5                                    i1l5559 0FB2  
                                  i1l6391 0E1D                                    i1l6383 0DDE  
                                  i1l5831 13A1                                    i1l5823 1395  
                                  i1l5815 1389                                    i1l5807 137C  
                                  i1l4839 1586                                    i1l5671 14D9  
                                  i1l5663 14CD                                    i1l5655 14C1  
                                  i1l5647 14B4                                    i1l6393 0E25  
                                  i1l5841 13B0                                    i1l5833 13A4  
                                  i1l5825 1398                                    i1l5817 138C  
                                  i1l5753 157E                                    i1l5737 155C  
                                  i1l5729 1552                                    i1l5681 14E8  
                                  i1l5673 14DC                                    i1l5665 14D0  
                                  i1l5657 14C4                                    i1l5649 14B8  
                                  i1l5745 1564                                    i1l5587 0FD6  
                                  i1l5843 13B3                                    i1l5835 13A7  
                                  i1l5827 139B                                    i1l5819 138F  
                                  i1l5763 1345                                    i1l4971 1447  
                                  i1l4947 1420                                    i1l5691 14F6  
                                  i1l5683 14EB                                    i1l5675 14DF  
                                  i1l5667 14D3                                    i1l5659 14C7  
                                  i1l5747 156E                                    i1l5861 13C8  
                                  i1l5853 13BF                                    i1l5845 13B6  
                                  i1l5837 13AA                                    i1l5829 139E  
                                  i1l5773 1354                                    i1l5765 1348  
                                  i1l5685 14EE                                    i1l5677 14E2  
                                  i1l5669 14D6                                    i1l6397 1317  
                                  i1l5863 13CB                                    i1l5855 13C1  
                                  i1l5847 13B9                                    i1l5839 13AD  
                                  i1l5783 135F                                    i1l5775 1356  
                                  i1l5767 134B                                    i1l4967 1441  
                                  i1l5695 14FC                                    i1l5687 14F1  
                                  i1l5679 14E5                                    i1l6399 131A  
                                  i1l5873 13D7                                    i1l5865 13CE  
                                  i1l5857 13C3                                    i1l5777 1358  
                                  i1l5769 134E                                    i1l4993 16A6  
                                  i1l5891 13F3                                    i1l5875 13D9  
                                  i1l5867 13D1                                    i1l5859 13C5  
                                  i1l5795 136B                                    i1l5787 1363  
                                  i1l5883 13DE                                    i1l8611 1743  
                                  i1l6845 0D0C                                    i1l5893 13F6  
                                  i1l5877 13DB                                    i1l5869 13D4  
                                  i1l5789 1365                                    i1l5885 13E8  
                                  i1l8621 1678                                    i1l6863 0D19  
                                  i1l8623 15E5                                    i1l8615 175D  
                                  i1l6849 0D0D                                    i1l8617 165E  
                                  i1l6881 1307                                    i1l6859 0D18  
                                  i1l8627 15FF                                    i1l6877 1301  
                             _Encoder_FSM 0318                                    u254_25 0CE5  
                                  _C_IPUD 00BF                                    u255_25 0CEF  
                                  u256_25 0CFB                                    u290_20 0F03  
                                  u275_21 13FA                                    _C_RMOD 004B  
                                  u381_25 0DAB                                    u374_25 0D25  
                                  u288_25 0EF8                                    u289_20 0F02  
                                  u299_23 0F53                                    _OSCFRQ 091F  
                                  _WDTCON 0097                          ?_RGB_EncoderMode 0070  
                       __end_ofi1_PWM_GP1 1496                         __end_ofi1_PWM_GP2 16F7  
                         _TMR3_WriteTimer 1212                            __CFG_PWRTE$OFF 0000  
                 __end_of_CLC_2_Interrupt 0E27                      __size_of_eeprom_read 000F  
                        ??_FirstDataSplit 0070                                    ___flge 0E2A  
                               ??___fladd 004C                                    ___wmul 061D  
                          __CFG_STVREN$ON 0000                                 ??___flsub 007C  
                  _Encoder_PushButton_FSM 00AF                                    _en_deb 00A0  
                                  _pb_cnt 00B1                                    _pb_fsm 00B2  
                        ?_PWM2_Initialize 0070                                 ?_I2C1_ISR 0070  
                    __end_of_eeprom_write 11FE                     ??_EncoderStatusUpdate 00CA  
                 __end_of_STD_EncoderMode 12DC                             ?_SecondConfig 0070  
                         _I2C1_AddressSet 0632                               ?_Config_GP1 0070  
                             ?_Config_GP2 0070                               ?_Config_GP3 0070  
                          _PMD_Initialize 0695                                 ?_FADE_GP1 0070  
                               ?_FADE_GP2 0070                                 ?_FADE_GP3 0070  
                               ?_CLC1_ISR 0070                                 ?_CLC2_ISR 0070  
                             _FirstConfig 1221                           ?_WDT_Initialize 0070  
                ADC_GetConversion@channel 00CD  TMR3_SetInterruptHandler@InterruptHandler 00CA  
                           ?_RegisterRead 0070                           _CLC1_Initialize 06B2  
    __end_of_I2C1_Initialize_ClockStreach 11CE     __size_of_I2C1_Initialize_ClockStreach 0014  
            _I2C1_Initialize_ClockStreach 11BA                             ?_SetInterrupt 0070  
          __size_ofi1_EncoderStatusUpdate 0003             __end_ofi1_EncoderStatusUpdate 0E2A  
                              ___flge@ff1 0070                                ___flge@ff2 0074  
                        ?_PWM3_Initialize 0070                               _i2c_address 004A  
                       _SYSTEM_Initialize 032B                   __end_of__initialization 0045  
                         eeprom_read@addr 0070                        ?_SYSTEM_Initialize 0070  
                ??_EncoderSwitch_GetValue 00CA                         ??_SecondDataSplit 0070  
                   __end_of_TMR3_CallBack 1212                      FadeProcessClear@stat 00CC  
                          __pcstackCOMMON 0070                              __pidataBANK1 0000  
                     ??_SYSTEM_Initialize 00CC                   __end_of_TMR3_StartTimer 06B2  
                         _CLC2_Initialize 033E                                 ?_TMR3_ISR 0070  
                              ??_I2C1_ISR 007E                          ?_PWM4_Initialize 0070  
                        ?_TMR2_Initialize 0070                                 ?_PWM_BLED 0070  
                               ?_PWM_GLED 0070                    __end_of_PMD_Initialize 06A3  
                 __size_of_FadeProcessSet 0004                            ??_SecondConfig 0070  
                               ?i1___wmul 0070                                ??_FADE_GP1 00D9  
                              ??_FADE_GP2 00D7                                ??_FADE_GP3 00D7  
                              ??_CLC1_ISR 007C                                ??_CLC2_ISR 007C  
                        ??_ClearInterrupt 00CA                         eeprom_write@value 0070  
                          ??_RegisterRead 0071                            ??_SetInterrupt 00CA  
               __end_of_SYSTEM_Initialize 033E                   __end_of_TMR3_WriteTimer 1221  
                              __pbssBANK0 0020                                __pbssBANK1 00A0  
                        ?_CLC_1_Interrupt 0070                          ?_PWM5_Initialize 0070  
                        ?_TMR3_Initialize 0070                    __size_of_RegisterWrite 00EE  
                     __size_of_Config_GP1 006F                       __size_of_Config_GP2 006F  
                     __size_of_Config_GP3 006F                          ?_CLC_2_Interrupt 0070  
                          _SSP1DATPPSbits 0E21                                __pmaintext 0048  
                           _CLCIN0PPSbits 0E28                             ?_GP_Ports_FSM 0070  
                               ?_TimerInt 0070                             _CLCIN1PPSbits 0E29  
                                 ?___flge 0070          __end_of_TMR3_SetInterruptHandler 032B  
                                 ?___wmul 00CA                   __end_of_I2C1_AddressSet 0645  
                              ??_TMR3_ISR 0072                              ?_DataInitSet 0070  
                              __pintentry 0004                           _I2C1_Initialize 0645  
                                 _CCP1CON 0293                                   _CCP2CON 0297  
                                 _CCP3CON 0313                                   _CCP4CON 0317  
                                 _CLC1CON 0F10                                   _CLC2CON 0F1A  
                                 _FADERGB 00C3                                   _CLC1POL 0F11  
                                 _CLC2POL 0F1B                                ??_PWM_BLED 00D0  
                              ??_PWM_GLED 00D0                                   _GP1CONF 0047  
                                 _GP2CONF 0046                            _SSP1CLKPPSbits 0E20  
                                 _GP3CONF 0045                           ?_PMD_Initialize 0070  
                     __CFG_RSTOSC$HFINT32 0000                   __size_of_ADC_Initialize 0008  
                              ??i1___wmul 0074                          ?_STD_EncoderMode 0070  
                                 _GP1_FSM 0152                                   _GP2_FSM 019D  
                                 _GP3_FSM 01EA                   __end_of_CLC1_Initialize 06C7  
                   __end_of_UpdateOut_GP1 1800                     __end_of_UpdateOut_GP2 11BA  
                   __end_of_UpdateOut_GP3 11E2                                   _ESTATUS 0049  
                        PWM_GP3_RLED@duty 00D6                                   _C_MBANK 00C0  
                                 _FSTATUS 00C6                                   _INTCONF 00C9  
       I2C1_StatusCallback@slaveWriteType 00B8                                   _C_DTYPE 00BD  
                                 _C_ETYPE 0038                                   _C_RESET 00C1  
                                 _OSCCON1 0919                                   _OSCCON3 091B  
                                 _C_WRAPE 0037                                   _NVMADRH 0892  
                                 _NVMADRL 0891                                   _NVMDATH 0894  
                                 _OSCTUNE 091E                                   _NVMDATL 0893  
                                 _NVMCON2 0896                                   _PWM5DCH 0618  
                                 _PWM5DCL 0617                                   _PWM5CON 0619  
                                 _SSP1ADD 0212                                   _PPSLOCK 0E0F  
                                 _SSP1BUF 0211                                __pswtext10 1000  
                                 _SSP1MSK 0213                                   _PWM_GP1 037F  
                                 _PWM_GP2 0297                           _double_push_cnt 00A4  
                                 _S_CKSRC 00BC                   __end_of_CLC2_Initialize 0353  
                               _FADE_LEDS 0440           __size_of_EncoderSwitch_GetValue 000D  
                          ??_GP_Ports_FSM 00D9                                 _GAMMABLED 0039  
                               _GAMMAGLED 003A                                ??_TimerInt 0070  
                   __size_of_eeprom_write 001C                           RegisterRead@add 0071  
                         __size_of___flge 0062                                   ___fladd 0E8C  
                        ?_TMR3_StartTimer 0070                                   ___flsub 0FE3  
                         __size_of___wmul 0015                                   _gp1_fsm 00B6  
                                 _gp2_fsm 00B5                                   _gp3_fsm 00B4  
                       ?_Int2StatusUpdate 0070                             _GAMMAGP3_RLED 003B  
                      ??_Int2StatusUpdate 00CB                                   __ptext1 06AF  
                                 __ptext2 032B                                   __ptext3 06AB  
                                 __ptext4 06C7                                   __ptext5 0326  
                                 __ptext6 06A3                                   __ptext7 0695  
                                 __ptext8 065F                                   __ptext9 0656  
                           _RegisterWrite 1496                                   _en_prev 00AF  
                   _OSCILLATOR_Initialize 0656                                   _fsm_tmr 00C8  
                        ??i1_PWM_GP3_RLED 0076                                 _T3CONbits 0413  
                ??_PIN_MANAGER_Initialize 00CA                         ?_FadeProcessClear 0070  
                      ??_FadeProcessClear 00CC                __size_of_SYSTEM_Initialize 0013  
                                 clrloop0 1131                      end_of_initialization 0045  
                        ?_TMR3_WriteTimer 0070                              ?_Encoder_FSM 0070  
                            _eeprom_write 11E2                      __end_of_SecondConfig 17E5  
                              ?_FADE_LEDS 0070                   __end_of_I2C1_Initialize 0656  
                 ?_Encoder_PushButton_FSM 0070                                 i1_PWM_GP1 1407  
                               i1_PWM_GP2 168E                                _temp_green 0031  
                    __end_of_RegisterRead 13F8                          ?_I2C1_AddressSet 0070  
                    __end_of_SetInterrupt 0248                     i1___wmul@multiplicand 0072  
                          _FadeProcessSet 04C0                            ?_RegisterWrite 004F  
             __end_of_I2C1_StatusCallback 1343                          ??_WDT_Initialize 00CA  
                               _PORTAbits 000C                                 _PORTBbits 000D  
                               _PORTCbits 000E                  _TMR3_SetInterruptHandler 0326  
                            ??_Config_GP1 004D                              ??_Config_GP2 004C  
                            ??_Config_GP3 004C                         __size_of_I2C1_ISR 001C  
                        ?_CLC1_Initialize 0070                               ___fladd@grs 007B  
                 EncoderStatusUpdate@stat 00CA                    _EncoderSwitch_GetValue 030B  
                            ?_FirstConfig 0070                                 _TRISCbits 008E  
                       _double_push_delay 00A2                           _SecondDataSplit 17E5  
                       __size_of_FADE_GP1 002C                         __size_of_FADE_GP2 002C  
                       __size_of_FADE_GP3 002C                         __size_of_CLC1_ISR 000C  
                       __size_of_CLC2_ISR 000C                             ?_PWM_GP3_RLED 0070  
                        __CFG_FEXTOSC$OFF 0000                 i1EncoderStatusUpdate@stat 0070  
                           ??_eeprom_read 0070            __end_of_Encoder_PushButton_FSM 0119  
                        ?_CLC2_Initialize 0070                        __end_of_Config_GP1 1608  
                      __end_of_Config_GP2 1681                        __end_of_Config_GP3 1766  
                __size_of_PWM1_Initialize 000C                                ?i1_PWM_GP1 0070  
                              ?i1_PWM_GP2 0070               __end_of_EncoderStatusUpdate 030B  
                    Int2StatusUpdate@stat 00CB                  __size_of_RGB_EncoderMode 0039  
                             PWM_GP1@duty 00D8                               PWM_GP2@duty 00D6  
                  __end_of_FadeProcessSet 04C4                            __end_of___flge 0E8C  
                      i1PWM_GP3_RLED@duty 007C                            __end_of___wmul 0632  
                       __size_of_TMR3_ISR 0009                      __size_of_DataInitSet 003F  
                          _ADC_Initialize 0263                    ?_OSCILLATOR_Initialize 0070  
                       __size_of_PWM_BLED 0073                         __size_of_PWM_GLED 0073  
                     start_initialization 0032                         __size_ofi1___wmul 0015  
                     __end_of_gamma_table 0C5A                  __size_of_PWM2_Initialize 000B  
         __size_of_PIN_MANAGER_Initialize 0036                      __end_of_GP_Ports_FSM 0152  
                          ??_PWM_GP3_RLED 00D0                     i1_EncoderStatusUpdate 0E27  
                 __size_ofi1_SetInterrupt 0008                               ??_FADE_LEDS 00D7  
                        ?_I2C1_Initialize 0070                          __CFG_LPBOREN$OFF 0000  
                __size_of_PWM3_Initialize 000D                                  ??___flge 0078  
                        ??_PMD_Initialize 00CA                          I2C1_ISR@i2c_data 0052  
                                ??___wmul 00CE                       __end_of_eeprom_read 1407  
                             _CCPTMRSbits 029F                           ?_FadeProcessSet 0070  
                         ??_RegisterWrite 007E                    __end_of_ADC_Initialize 026B  
                             __pdataBANK1 00DA                         __size_of_TimerInt 0003  
                                ?_GP1_FSM 0070                                  ?_GP2_FSM 0070  
                                ?_GP3_FSM 0070                   __end_of_SecondDataSplit 17EF  
                               ___fladd@a 0074                                 ___fladd@b 0070  
                 __size_of_FirstDataSplit 0046                                 ___flsub@a 0054  
                               ___flsub@b 0058                                 ___latbits 0002  
                           __pcstackBANK0 004C                             __pcstackBANK1 00CA  
        I2C1_StatusCallback@i2c_bus_state 0051                  __size_of_PWM4_Initialize 000D  
                __size_of_TMR2_Initialize 0008                    __size_of_TMR3_CallBack 000B  
                                ?_PWM_GP1 0070                                  ?_PWM_GP2 0070  
                   __size_of_SecondConfig 0008                          eeprom_write@addr 0071  
                    __size_of_Encoder_FSM 000E                     __size_of_RegisterRead 00B5  
                   __size_of_SetInterrupt 0009                    _PIN_MANAGER_Initialize 065F  
                __size_of_CLC_1_Interrupt 0085                  __size_of_PWM5_Initialize 000A  
                __size_of_TMR3_Initialize 001B                               ??i1_PWM_GP1 0076  
                             ??i1_PWM_GP2 0076                                  ?___fladd 0070  
                                ?___flsub 0054                           ?_ADC_Initialize 0070  
                        __CFG_PPS1WAY$OFF 0000                                  _I2C1_ISR 12F4  
                             _gamma_table 06E2                         ??_PWM1_Initialize 0070  
            ??_INTERRUPT_InterruptManager 007E                                 _int2clear 00B9  
                __size_of_CLC_2_Interrupt 0086                                 __pswtext1 10F2  
                               __pswtext2 1100                                 __pswtext3 1108  
                               __pswtext4 10E4                                 __pswtext5 1110  
                               __pswtext6 0C5A                                 __pswtext7 1118  
                               __pswtext8 1120                                 __pswtext9 1128  
                       ??_RGB_EncoderMode 0070                              _SecondConfig 17DD  
                                _CLC1GLS0 0F16                                  _CLC1GLS1 0F17  
                                _CLC1GLS2 0F18                                  _CLC1GLS3 0F19  
                                _CLC2GLS0 0F20                                  _CLC2GLS1 0F21  
                                _CLC2GLS2 0F22                                  _CLC2GLS3 0F23  
                                _CLC1SEL0 0F12                                  _CLC1SEL1 0F13  
                                _CLC1SEL2 0F14                                  _CLC1SEL3 0F15  
                                _CLC2SEL0 0F1C                                  _CLC2SEL1 0F1D  
                                _CLC2SEL2 0F1E                                  _CLC2SEL3 0F1F  
                                _I2STATUS 00C7                                  _FADE_GP1 0353  
                                _FADE_GP2 026B                                  _FADE_GP3 0414  
                                _CLC1_ISR 0D10                                  _CLC2_ISR 0D04  
                                _DEBOUNCE 00A8                                  _GAMMAGP1 003D  
                                _GAMMAGP2 003C                                  _ANTBOUNC 00C5  
               __size_of_Int2StatusUpdate 0005                      __size_of_FirstConfig 006B  
                __size_of_STD_EncoderMode 0017                               _CPUDOZEbits 0918  
                            _RegisterRead 1343                              _SetInterrupt 023F  
                                _DPPERIOD 00C4                    ?i1_EncoderStatusUpdate 0070  
                       ??_PWM2_Initialize 0070                            ___wmul@product 00CE  
                                _LATBbits 010D                                  _LATCbits 010E  
                 __size_of_ClearInterrupt 0003                                 clear_ram0 1130  
                             _eeprom_read 13F8             ?_I2C1_Initialize_ClockStreach 0070  
                                _PIE1bits 0091                                  _PIE3bits 0093  
               __size_of_FadeProcessClear 0008                                  _PMD2bits 0913  
                  __size_of_UpdateOut_GP1 0011                    __size_of_UpdateOut_GP2 0011  
                  __size_of_UpdateOut_GP3 0014       __size_of_INTERRUPT_InterruptManager 002C  
                                _PIR1bits 0011                                  _PIR3bits 0013  
              ??_TMR3_SetInterruptHandler 00CC                             _TMR3_CallBack 1207  
                             _gp_fade_cnt 00B3                      __end_of_PWM_GP3_RLED 05AA  
                                _SSP1CON1 0215                                  _SSP1CON2 0216  
                                _SSP1CON3 0217                                  _TMR3_ISR 11FE  
                                _SSP1STAT 0214                       _I2C1_slaveWriteData 00DA  
                                _PWM_BLED 05AA                                  _PWM_GLED 04C4  
                 ?_EncoderSwitch_GetValue 0070                         ??_PWM3_Initialize 0070  
                              _ADCON0bits 009D                     __size_of_GP_Ports_FSM 001D  
                       ___wmul@multiplier 00CA                                  i1___wmul 1584  
                        ?_SecondDataSplit 0070                          __size_of_GP1_FSM 004B  
                        __size_of_GP2_FSM 004D                          __size_of_GP3_FSM 0050  
                                _WPUBbits 020D                                  _WPUCbits 020E  
                __size_of_TMR3_StartTimer 0003                         RegisterWrite@data 004F  
                        __size_of_PWM_GP1 0095                          __size_of_PWM_GP2 0070  
                       ??_PWM4_Initialize 0070                         ??_TMR2_Initialize 00CA  
                          i1_SetInterrupt 0FDB                            ?_TMR3_CallBack 0070  
                __size_of_TMR3_WriteTimer 000F                         _ADC_GetConversion 0248  
                                _TimerInt 1136                              _GP_Ports_FSM 0135  
                 ??_OSCILLATOR_Initialize 00CA            __end_of_EncoderSwitch_GetValue 0318  
                      ?_ADC_GetConversion 00CA                          __size_of___fladd 014F  
                        __size_of___flsub 001D                         ??_CLC_1_Interrupt 0054  
                       ??_PWM5_Initialize 0070                         ??_TMR3_Initialize 00CC  
                              _ANSELCbits 018E                            _FirstDataSplit 0CBE  
                     ??_ADC_GetConversion 00CC                                  _fade_cnt 00B0  
                __size_of_I2C1_AddressSet 0013                             _UpdateOut_GP1 17EF  
                           _UpdateOut_GP2 11A9                             _UpdateOut_GP3 11CE  
                       ??_CLC_2_Interrupt 005C              __size_of_I2C1_StatusCallback 0033  
                                __ptext10 0645                                  __ptext11 0632  
                                __ptext20 0414                                  __ptext12 033E  
                                __ptext21 026B                                  __ptext13 06B2  
                                __ptext30 061D                                  __ptext22 0297  
                                __ptext14 0135                                  __ptext31 04C0  
                                __ptext23 0353                                  __ptext15 01EA  
                                __ptext40 006D                                  __ptext32 04B8  
                                __ptext24 037F                                  __ptext16 019D  
                                __ptext33 023A                                  __ptext25 0318  
                                __ptext17 0152                                  __ptext50 11E2  
                                __ptext42 11FE                                  __ptext34 00AF  
                                __ptext26 0440                                  __ptext18 0263  
                                __ptext51 11CE                                  __ptext43 1212  
                                __ptext35 023F                                  __ptext27 0537  
                                __ptext19 0248                                  __ptext60 12C5  
                                __ptext52 11A9                                  __ptext44 1207  
                                __ptext36 0119                                  __ptext28 04C4  
                                __ptext61 128C                                  __ptext53 17EF  
                                __ptext45 0003                                  __ptext37 030B  
                                __ptext29 05AA                                  __ptext70 1599  
                                __ptext62 12E7                                  __ptext54 17E5  
                                __ptext46 1136                                  __ptext38 0307  
                                __ptext71 1407                                  __ptext63 12DC  
                                __ptext55 17DD                                  __ptext47 12F4  
                                __ptext39 0070                                  __ptext80 0D1C  
                                __ptext72 1584                                  __ptext64 16F7  
                                __ptext56 1198                                  __ptext48 1310  
                                __ptext81 0FDB                                  __ptext73 1608  
                                __ptext65 1772                                  __ptext57 11BA  
                                __ptext49 1496                                  __ptext82 0E27  
                                __ptext74 1343                                  __ptext66 1766  
                                __ptext58 0CBE                                  __ptext83 0E2A  
                                __ptext75 13F8                                  __ptext67 1612  
                                __ptext59 1221                                  __ptext84 0E8C  
                                __ptext76 0D04                                  __ptext68 168E  
                                __ptext77 0D10                                  __ptext69 1681  
                                __ptext78 0DA1                                  __ptext79 0FE3  
                            _SSP1CON1bits 0215                              _SSP1CON2bits 0216  
                  __end_ofi1_SetInterrupt 0FE3                  __size_of_CLC1_Initialize 0015  
                 TMR3_WriteTimer@timerVal 0070                                  _gp_timer 00B7  
                 __size_ofi1_PWM_GP3_RLED 006B                             __size_of_main 0025  
                                _intclear 00BA                         ??_STD_EncoderMode 0070  
               __end_of_ADC_GetConversion 0263                          ??_FadeProcessSet 00CA  
                                _temp_gp1 0035                                  _temp_gp2 0034  
                                _temp_gp3 0033                                  _temp_blu 0030  
                                _temp_red 0032                                _RC3PPSbits 0EA3  
                              _RB6PPSbits 0E9E                                _RC4PPSbits 0EA4  
          ??_I2C1_Initialize_ClockStreach 0070                             ??_DataInitSet 00CA  
                                int$flags 007E                                _RB7PPSbits 0E9F  
                              _RC5PPSbits 0EA5                                _RC6PPSbits 0EA6  
                              _ODCONCbits 028E                                _RC7PPSbits 0EA7  
      __end_of_INTERRUPT_InterruptManager 0030                _INTERRUPT_InterruptManager 0004  
                __size_of_CLC2_Initialize 0015                          RegisterWrite@add 0050  
                            _SSP1STATbits 0214      __end_of_TMR3_DefaultInterruptHandler 0004  
   __size_of_TMR3_DefaultInterruptHandler 0001              _TMR3_DefaultInterruptHandler 0003  
                  __end_of_FirstDataSplit 0D04    __end_of_EncoderSwitch_GetValueFiltered 0135  
 __size_of_EncoderSwitch_GetValueFiltered 001C            _EncoderSwitch_GetValueFiltered 0119  
            __size_of_EncoderStatusUpdate 0004                            ?_UpdateOut_GP1 0070  
                          ?_UpdateOut_GP2 0070                            ?_UpdateOut_GP3 0070  
                              _INTCONbits 000B                               _NVMCON1bits 0895  
                        _Int2StatusUpdate 023A                   __size_of_WDT_Initialize 0004  
                       ??_TMR3_StartTimer 00CA                           ?i1_SetInterrupt 0070  
                                intlevel1 0000                   ?_PIN_MANAGER_Initialize 0070  
                          _ClearInterrupt 006D                           ??_TMR3_CallBack 0070  
                       __CFG_CLKOUTEN$OFF 0000                               _PPSLOCKbits 0E0F  
                   __size_of_PWM_GP3_RLED 0073                           _PWM1_Initialize 1766  
                        _FadeProcessClear 04B8                          ??_ADC_Initialize 00CA  
                         _RGB_EncoderMode 128C                         i1_I2C1_Initialize 1198  
                      ?i1_I2C1_Initialize 0070                         ??_TMR3_WriteTimer 0072  
                __size_of_I2C1_Initialize 0011                     __end_of_RegisterWrite 1584  
                         ?_FirstDataSplit 0070                             __pstringtext1 06E2  
           ?_TMR3_DefaultInterruptHandler 0070                       __end_of_DataInitSet 00AF  
                     ??i1_I2C1_Initialize 0070                           _PWM2_Initialize 12DC  
                 ??i1_EncoderStatusUpdate 0070                  ??_Encoder_PushButton_FSM 00CB  
                           ___fladd@signs 0078                              _PWM_GP3_RLED 0537  
                           ??_Encoder_FSM 00D7                    __end_of_ClearInterrupt 0070  
                       ??_I2C1_AddressSet 00CA            __end_of_PIN_MANAGER_Initialize 0695  
                             _PWMTMRSbits 061F                             ?_eeprom_write 0070  
                            ___fladd@aexp 0079                              ___fladd@bexp 007A  
                              _STATUSbits 0003                              ?_eeprom_read 0070  
              __size_of_ADC_GetConversion 001B                 __end_ofi1_I2C1_Initialize 11A9  
                         _PWM3_Initialize 12E7                         ??_CLC1_Initialize 00CA  
